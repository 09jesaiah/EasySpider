db.getCollection("services").insert( {

    _id: ObjectId("6321ac335fe056c0e300cd0c"),

    containJudge: false,

    desc: "https://www.bilibili.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.bilibili.com",

                links: "https://www.bilibili.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[1]/input[1]",

                wait: NumberInt("0"),

                value: "卢本伟"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[2]",

                wait: NumberInt("3"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop click next page",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"i_cecream\"]/div/div[2]/div[2]/div/div/div[3]/div/div/button[10]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[@id=\"i_cecream\"]/div[1]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/button[10]",

                wait: NumberInt("4"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "/html/body/div[3]/div[1]/div[2]/div[2]/div[1]/div[1]/div[2]/div[1]/div/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \n                \n                    \n                        \n                    \n                    \n                    \n                    \n                    \n                        \n                    \n                    \n                        \n                        \n                        \n                    \n                    \n                    \n                        \n                        \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                        \n                            正在缓冲...\n                            \n                        \n                    \n                    \n                        \n                    获取视频参数...\n                    [成功]\n                    \n                \n            \n                \n                    播放器初始化...\n                    [成功]\n                    3.16.0-9b97d64a\n                \n            \n                \n                    获取播放地址...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频信息...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频内容...\n                    \n                    \n                \n            \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                            \n                            \n                                \n                                \n                                \n                            \n                        \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        \n                    \n                \n            \n            \n            \n            \n        604万4.5万18:23"

                            },

                            {

                                num: NumberInt("1"),

                                value: "\n            \n                \n                    \n                        \n                    \n                    全体起立！！！四个字:不要开挂。up主牛，给他订的五年\n                    \n                    \n                    \n                        \n                    \n                    \n                        \n                        \n                        \n                    \n                    \n                    \n                        \n                        \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                        \n                            正在缓冲...\n                            \n                        \n                    \n                    \n                        \n                    获取视频参数...\n                    [成功]\n                    \n                \n            \n                \n                    播放器初始化...\n                    [成功]\n                    3.16.0-9b97d64a\n                \n            \n                \n                    获取播放地址...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频信息...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频内容...\n                    \n                    \n                \n            \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                            \n                            \n                                \n                                \n                                \n                            \n                        \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        \n                    \n                \n            \n            \n            \n            \n        194.5万218605:44"

                            },

                            {

                                num: NumberInt("2"),

                                value: "57.4万70401:41"

                            },

                            {

                                num: NumberInt("3"),

                                value: "3730.7万8.4万01:35"

                            },

                            {

                                num: NumberInt("4"),

                                value: "\n            \n                \n                    \n                        \n                    \n                    \n                    \n                    \n                    \n                        \n                    \n                    \n                        \n                        \n                        \n                    \n                    \n                    \n                        \n                        \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                        \n                            正在缓冲...\n                            \n                        \n                    \n                    \n                        \n                    获取视频参数...\n                    [成功]\n                    \n                \n            \n                \n                    播放器初始化...\n                    [成功]\n                    3.16.0-9b97d64a\n                \n            \n                \n                    获取播放地址...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频信息...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频内容...\n                    \n                    \n                \n            \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                            \n                            \n                                \n                                \n                                \n                            \n                        \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        \n                    \n                \n            \n            \n            \n            \n        23万19304:24"

                            },

                            {

                                num: NumberInt("5"),

                                value: "71.6万199411:40"

                            },

                            {

                                num: NumberInt("6"),

                                value: "1633.3万15.6万02:00"

                            },

                            {

                                num: NumberInt("7"),

                                value: "22.9万19905:36"

                            },

                            {

                                num: NumberInt("8"),

                                value: "稍后再看71万67803:11"

                            },

                            {

                                num: NumberInt("9"),

                                value: "稍后再看611.9万28.6万09:55:55"

                            },

                            {

                                num: NumberInt("10"),

                                value: "972.2万7万09:09"

                            },

                            {

                                num: NumberInt("11"),

                                value: "509.9万3.2万18:41"

                            },

                            {

                                num: NumberInt("12"),

                                value: "463万10.9万32:03"

                            },

                            {

                                num: NumberInt("13"),

                                value: "558.4万551700:46"

                            },

                            {

                                num: NumberInt("14"),

                                value: "17.7万1300:29"

                            },

                            {

                                num: NumberInt("15"),

                                value: "125.1万1.9万04:16"

                            },

                            {

                                num: NumberInt("16"),

                                value: "648.5万70100:32"

                            },

                            {

                                num: NumberInt("17"),

                                value: "46万15804:51"

                            },

                            {

                                num: NumberInt("18"),

                                value: "142.8万453802:07"

                            },

                            {

                                num: NumberInt("19"),

                                value: "675.5万3.8万04:53"

                            },

                            {

                                num: NumberInt("20"),

                                value: "322.6万151700:59"

                            },

                            {

                                num: NumberInt("21"),

                                value: "153.8万37901:23"

                            },

                            {

                                num: NumberInt("22"),

                                value: "53.1万7800:09"

                            },

                            {

                                num: NumberInt("23"),

                                value: "645.8万11.4万01:11:05"

                            },

                            {

                                num: NumberInt("24"),

                                value: "70.2万87601:01"

                            },

                            {

                                num: NumberInt("25"),

                                value: "448.5万1.1万09:58"

                            },

                            {

                                num: NumberInt("26"),

                                value: "322.6万6.1万47:53"

                            },

                            {

                                num: NumberInt("27"),

                                value: "209.4万653703:31"

                            },

                            {

                                num: NumberInt("28"),

                                value: "141.8万71200:49"

                            },

                            {

                                num: NumberInt("29"),

                                value: "63.5万132201:20"

                            },

                            {

                                num: NumberInt("30"),

                                value: "382.9万2万02:11"

                            },

                            {

                                num: NumberInt("31"),

                                value: "91.5万46502:58"

                            },

                            {

                                num: NumberInt("32"),

                                value: "1.1万1900:43"

                            },

                            {

                                num: NumberInt("33"),

                                value: "262万922401:49"

                            },

                            {

                                num: NumberInt("34"),

                                value: "31.7万10801:27"

                            },

                            {

                                num: NumberInt("35"),

                                value: "33.1万258502:46"

                            },

                            {

                                num: NumberInt("36"),

                                value: "1.3万200:17"

                            },

                            {

                                num: NumberInt("37"),

                                value: "60.1万8200:35"

                            },

                            {

                                num: NumberInt("38"),

                                value: "184.3万249005:12"

                            },

                            {

                                num: NumberInt("39"),

                                value: "33.4万266709:21"

                            },

                            {

                                num: NumberInt("40"),

                                value: "365万774201:12"

                            },

                            {

                                num: NumberInt("41"),

                                value: "140.4万915706:29"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.bilibili.com/video/BV1fc41187xA"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.bilibili.com/video/BV1it4y1J7Wn"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.bilibili.com/video/BV1G7411K71U"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.bilibili.com/video/BV1Xx411p74G"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.bilibili.com/video/BV1pe4y1a7rJ"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.bilibili.com/video/BV1uS4y1L77Z"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.bilibili.com/video/BV1nW4118797"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.bilibili.com/video/BV1v34y1k7SM"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.bilibili.com/video/BV1GL41137Cv"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.bilibili.com/video/BV1GJ411p7aq"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.bilibili.com/video/BV1MC4y1p7yf"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.bilibili.com/video/BV1Z4411X7qs"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.bilibili.com/video/BV1ss411P7e1"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.bilibili.com/video/BV1FE411H7L1"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.bilibili.com/video/BV1T44y1p7mz"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.bilibili.com/video/BV1dZ4y1X7Fi"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.bilibili.com/video/BV1c54114764"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.bilibili.com/video/BV1TQ4y1P7bp"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.bilibili.com/video/BV1R4411c7zr"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.bilibili.com/video/BV1xt411G73j"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://www.bilibili.com/video/BV1ui4y1c7Pd"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://www.bilibili.com/video/BV1ta411f7cY"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://www.bilibili.com/video/BV1BE411A777"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://www.bilibili.com/video/BV1NT4y1w776"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://www.bilibili.com/video/BV1yW411N7zc"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://www.bilibili.com/video/BV1TZ4y147ME"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://www.bilibili.com/video/BV1UJ41137aF"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://www.bilibili.com/video/BV1MB4y1c7Cg"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://www.bilibili.com/video/BV1Gt411U78v"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://www.bilibili.com/video/BV1Ds411N7dU"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://www.bilibili.com/video/BV1ip4y1Q7V1"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://www.bilibili.com/video/BV1ry4y1v7Xw"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://www.bilibili.com/video/BV14B4y1V7Uv"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://www.bilibili.com/video/BV11q4y1H76N"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://www.bilibili.com/video/BV1TB4y1W7cz"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://www.bilibili.com/video/BV1T54y167Hs"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://www.bilibili.com/video/BV1Fd4y197d7"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://www.bilibili.com/video/BV1rS4y1U76q"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://www.bilibili.com/video/BV1At411f7bu"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://www.bilibili.com/video/BV1A4411G7Lz"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://www.bilibili.com/video/BV1T7411A7WW"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://www.bilibili.com/video/BV1t7411G7pr"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("4"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数3_图片地址",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/picture[1]/img[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://i2.hdslb.com/bfs/archive/b8d6c6e21212b54a92a36ea03f61b7e334cc24e7.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://i1.hdslb.com/bfs/archive/76edeea7716a3f050782d08ebecea529984aa874.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://i2.hdslb.com/bfs/archive/75886e1dc52230d510b5c843f65ef7e2c5acf4cd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://i1.hdslb.com/bfs/archive/34ed0f1580db36e8c95d4b653f6caaaa1b6fe4cd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://i2.hdslb.com/bfs/archive/0b20c3b9dbd88e8a299fcfb82d756504410da912.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://i2.hdslb.com/bfs/archive/e2b5d191fb2fcce7cd6dc8d2d8df21be755fc04c.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://i2.hdslb.com/bfs/archive/75e33c83b77d0aa11de0eee225737cc123a40f96.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://i2.hdslb.com/bfs/archive/bca7479215b41e9c25e0518d1aaae004e9d35a18.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://i0.hdslb.com/bfs/archive/3579b9a4262c57de3bf1ab4a0f7306fb62d028d8.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://i0.hdslb.com/bfs/archive/9bbef2353cf65fecadfadc20d134aa08c1fae50a.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://i0.hdslb.com/bfs/archive/f238dbec60b54da32ee891db147481f96737777c.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://i0.hdslb.com/bfs/archive/c6091fc208c2565cdb99ed9ddd1dbb36250fef5d.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://i0.hdslb.com/bfs/archive/a6969ff4649d8bb301cd04a0c7d153f4af3bbc6a.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://i0.hdslb.com/bfs/archive/44de9fd295eb91ff60ddcc3fc5cedba169983fe5.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://i0.hdslb.com/bfs/archive/b40e9b7639e71c45246a0b24577e1b1ac325f81b.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://i0.hdslb.com/bfs/archive/5a7c88a8c831e054406994d28b47f43310014a10.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://i2.hdslb.com/bfs/archive/437b6e36cafdc77cf0dc3b3b6d476d0bff64f076.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://i0.hdslb.com/bfs/archive/23013873a2b0c2269e046219f3006c2f53193044.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://i2.hdslb.com/bfs/archive/66563dee5c5c22a0cec50251926cc743dd947817.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://i0.hdslb.com/bfs/archive/f4411a38b88bb1591841dd5e4caf2ae9b0e24f13.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://i1.hdslb.com/bfs/archive/3c98a797f0738c50612590431e12c8b4799d20e3.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://i1.hdslb.com/bfs/archive/80320e8b252443770e157fefcc62941f1ca7f0dd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://i1.hdslb.com/bfs/archive/2751704b052eb8fdc9eb470d03633b2026b018e2.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://i0.hdslb.com/bfs/archive/993e5d4910a8287e238a2c7069c585a77ccceedd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://i1.hdslb.com/bfs/archive/e66075f80e9a65564e7898a6d295294d0231802c.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://i0.hdslb.com/bfs/archive/66c6e52e928a15102dba5606db0948ce4a4b82d8.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://i1.hdslb.com/bfs/archive/8eb797389171a758b639fa1fd93115d7afc2d509.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://i1.hdslb.com/bfs/archive/713b5244044fe41ce3d4615094196c1c7a6edfb5.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://i0.hdslb.com/bfs/archive/0e0f599401ce6e40791088f93a510946cf333d3a.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://i2.hdslb.com/bfs/archive/29578616a75ab38c8dddb5ef09b8acc6e43951aa.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://i1.hdslb.com/bfs/archive/83119681117e5bfb023ed4d22cbda8c930ff51da.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://i0.hdslb.com/bfs/archive/eba4713963d5af9f5462dfb0a2c9dbb302b7b7b1.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://i1.hdslb.com/bfs/archive/27f9ffb23e8d2dda2e21f463c5d1f9dd4b11a14d.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://i0.hdslb.com/bfs/archive/7357ec8850f5c143805897e9e3e5f2c5833dfdeb.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://i0.hdslb.com/bfs/archive/fa3dadf17f447e5d3e2e6de65ccf3de318d4ff5d.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://i1.hdslb.com/bfs/archive/902ce5dea4ecb9d11e6b915b3af2d6b65da789a2.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://i2.hdslb.com/bfs/archive/ce10bd1662b39c6080d82885616635b45dc482df.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://i2.hdslb.com/bfs/archive/0d17d777947d23de70620076b400c40e4a000b29.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://i0.hdslb.com/bfs/archive/908e142e20a7663a10b4bd34d586747499c76dc1.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://i0.hdslb.com/bfs/archive/7af6d58f2a853cd4ac2d6a1b3513895c23ac5f88.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://i2.hdslb.com/bfs/archive/b48f70e304e40a899abba8a50c8a1e6fd77033bf.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://i2.hdslb.com/bfs/archive/c876f7b9a2e94c34e69e7a9b70997de4624a3fe1.jpg@672w_378h_1c"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数4_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[9]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "正在缓冲..."

                            },

                            {

                                num: NumberInt("1"),

                                value: "正在缓冲..."

                            },

                            {

                                num: NumberInt("4"),

                                value: "正在缓冲..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数5_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "获取视频参数..."

                            },

                            {

                                num: NumberInt("1"),

                                value: "获取视频参数..."

                            },

                            {

                                num: NumberInt("4"),

                                value: "获取视频参数..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数6_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[1]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("4"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数7_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "播放器初始化..."

                            },

                            {

                                num: NumberInt("1"),

                                value: "播放器初始化..."

                            },

                            {

                                num: NumberInt("4"),

                                value: "播放器初始化..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数8_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[2]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("4"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数9_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[2]/span[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.16.0-9b97d64a"

                            },

                            {

                                num: NumberInt("1"),

                                value: "3.16.0-9b97d64a"

                            },

                            {

                                num: NumberInt("4"),

                                value: "3.16.0-9b97d64a"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数10_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "获取播放地址..."

                            },

                            {

                                num: NumberInt("1"),

                                value: "获取播放地址..."

                            },

                            {

                                num: NumberInt("4"),

                                value: "获取播放地址..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数11_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[3]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("4"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数12_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[4]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "加载视频信息..."

                            },

                            {

                                num: NumberInt("1"),

                                value: "加载视频信息..."

                            },

                            {

                                num: NumberInt("4"),

                                value: "加载视频信息..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数13_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[4]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("4"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数14_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[5]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "加载视频内容..."

                            },

                            {

                                num: NumberInt("1"),

                                value: "加载视频内容..."

                            },

                            {

                                num: NumberInt("4"),

                                value: "加载视频内容..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数15_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[2]/div[1]/div[1]/span[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "604万"

                            },

                            {

                                num: NumberInt("1"),

                                value: "194.5万"

                            },

                            {

                                num: NumberInt("2"),

                                value: "57.4万"

                            },

                            {

                                num: NumberInt("3"),

                                value: "3730.7万"

                            },

                            {

                                num: NumberInt("4"),

                                value: "23万"

                            },

                            {

                                num: NumberInt("5"),

                                value: "71.6万"

                            },

                            {

                                num: NumberInt("6"),

                                value: "1633.3万"

                            },

                            {

                                num: NumberInt("7"),

                                value: "22.9万"

                            },

                            {

                                num: NumberInt("8"),

                                value: "71万"

                            },

                            {

                                num: NumberInt("9"),

                                value: "611.9万"

                            },

                            {

                                num: NumberInt("10"),

                                value: "972.2万"

                            },

                            {

                                num: NumberInt("11"),

                                value: "509.9万"

                            },

                            {

                                num: NumberInt("12"),

                                value: "463万"

                            },

                            {

                                num: NumberInt("13"),

                                value: "558.4万"

                            },

                            {

                                num: NumberInt("14"),

                                value: "17.7万"

                            },

                            {

                                num: NumberInt("15"),

                                value: "125.1万"

                            },

                            {

                                num: NumberInt("16"),

                                value: "648.5万"

                            },

                            {

                                num: NumberInt("17"),

                                value: "46万"

                            },

                            {

                                num: NumberInt("18"),

                                value: "142.8万"

                            },

                            {

                                num: NumberInt("19"),

                                value: "675.5万"

                            },

                            {

                                num: NumberInt("20"),

                                value: "322.6万"

                            },

                            {

                                num: NumberInt("21"),

                                value: "153.8万"

                            },

                            {

                                num: NumberInt("22"),

                                value: "53.1万"

                            },

                            {

                                num: NumberInt("23"),

                                value: "645.8万"

                            },

                            {

                                num: NumberInt("24"),

                                value: "70.2万"

                            },

                            {

                                num: NumberInt("25"),

                                value: "448.5万"

                            },

                            {

                                num: NumberInt("26"),

                                value: "322.6万"

                            },

                            {

                                num: NumberInt("27"),

                                value: "209.4万"

                            },

                            {

                                num: NumberInt("28"),

                                value: "141.8万"

                            },

                            {

                                num: NumberInt("29"),

                                value: "63.5万"

                            },

                            {

                                num: NumberInt("30"),

                                value: "382.9万"

                            },

                            {

                                num: NumberInt("31"),

                                value: "91.5万"

                            },

                            {

                                num: NumberInt("32"),

                                value: "1.1万"

                            },

                            {

                                num: NumberInt("33"),

                                value: "262万"

                            },

                            {

                                num: NumberInt("34"),

                                value: "31.7万"

                            },

                            {

                                num: NumberInt("35"),

                                value: "33.1万"

                            },

                            {

                                num: NumberInt("36"),

                                value: "1.3万"

                            },

                            {

                                num: NumberInt("37"),

                                value: "60.1万"

                            },

                            {

                                num: NumberInt("38"),

                                value: "184.3万"

                            },

                            {

                                num: NumberInt("39"),

                                value: "33.4万"

                            },

                            {

                                num: NumberInt("40"),

                                value: "365万"

                            },

                            {

                                num: NumberInt("41"),

                                value: "140.4万"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数16_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[2]/div[1]/div[1]/span[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "4.5万"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2186"

                            },

                            {

                                num: NumberInt("2"),

                                value: "704"

                            },

                            {

                                num: NumberInt("3"),

                                value: "8.4万"

                            },

                            {

                                num: NumberInt("4"),

                                value: "193"

                            },

                            {

                                num: NumberInt("5"),

                                value: "1994"

                            },

                            {

                                num: NumberInt("6"),

                                value: "15.6万"

                            },

                            {

                                num: NumberInt("7"),

                                value: "199"

                            },

                            {

                                num: NumberInt("8"),

                                value: "678"

                            },

                            {

                                num: NumberInt("9"),

                                value: "28.6万"

                            },

                            {

                                num: NumberInt("10"),

                                value: "7万"

                            },

                            {

                                num: NumberInt("11"),

                                value: "3.2万"

                            },

                            {

                                num: NumberInt("12"),

                                value: "10.9万"

                            },

                            {

                                num: NumberInt("13"),

                                value: "5517"

                            },

                            {

                                num: NumberInt("14"),

                                value: "13"

                            },

                            {

                                num: NumberInt("15"),

                                value: "1.9万"

                            },

                            {

                                num: NumberInt("16"),

                                value: "701"

                            },

                            {

                                num: NumberInt("17"),

                                value: "158"

                            },

                            {

                                num: NumberInt("18"),

                                value: "4538"

                            },

                            {

                                num: NumberInt("19"),

                                value: "3.8万"

                            },

                            {

                                num: NumberInt("20"),

                                value: "1517"

                            },

                            {

                                num: NumberInt("21"),

                                value: "379"

                            },

                            {

                                num: NumberInt("22"),

                                value: "78"

                            },

                            {

                                num: NumberInt("23"),

                                value: "11.4万"

                            },

                            {

                                num: NumberInt("24"),

                                value: "876"

                            },

                            {

                                num: NumberInt("25"),

                                value: "1.1万"

                            },

                            {

                                num: NumberInt("26"),

                                value: "6.1万"

                            },

                            {

                                num: NumberInt("27"),

                                value: "6537"

                            },

                            {

                                num: NumberInt("28"),

                                value: "712"

                            },

                            {

                                num: NumberInt("29"),

                                value: "1322"

                            },

                            {

                                num: NumberInt("30"),

                                value: "2万"

                            },

                            {

                                num: NumberInt("31"),

                                value: "465"

                            },

                            {

                                num: NumberInt("32"),

                                value: "19"

                            },

                            {

                                num: NumberInt("33"),

                                value: "9224"

                            },

                            {

                                num: NumberInt("34"),

                                value: "108"

                            },

                            {

                                num: NumberInt("35"),

                                value: "2585"

                            },

                            {

                                num: NumberInt("36"),

                                value: "2"

                            },

                            {

                                num: NumberInt("37"),

                                value: "82"

                            },

                            {

                                num: NumberInt("38"),

                                value: "2490"

                            },

                            {

                                num: NumberInt("39"),

                                value: "2667"

                            },

                            {

                                num: NumberInt("40"),

                                value: "7742"

                            },

                            {

                                num: NumberInt("41"),

                                value: "9157"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数17_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[2]/div[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "18:23"

                            },

                            {

                                num: NumberInt("1"),

                                value: "05:44"

                            },

                            {

                                num: NumberInt("2"),

                                value: "01:41"

                            },

                            {

                                num: NumberInt("3"),

                                value: "01:35"

                            },

                            {

                                num: NumberInt("4"),

                                value: "04:24"

                            },

                            {

                                num: NumberInt("5"),

                                value: "11:40"

                            },

                            {

                                num: NumberInt("6"),

                                value: "02:00"

                            },

                            {

                                num: NumberInt("7"),

                                value: "05:36"

                            },

                            {

                                num: NumberInt("8"),

                                value: "03:11"

                            },

                            {

                                num: NumberInt("9"),

                                value: "09:55:55"

                            },

                            {

                                num: NumberInt("10"),

                                value: "09:09"

                            },

                            {

                                num: NumberInt("11"),

                                value: "18:41"

                            },

                            {

                                num: NumberInt("12"),

                                value: "32:03"

                            },

                            {

                                num: NumberInt("13"),

                                value: "00:46"

                            },

                            {

                                num: NumberInt("14"),

                                value: "00:29"

                            },

                            {

                                num: NumberInt("15"),

                                value: "04:16"

                            },

                            {

                                num: NumberInt("16"),

                                value: "00:32"

                            },

                            {

                                num: NumberInt("17"),

                                value: "04:51"

                            },

                            {

                                num: NumberInt("18"),

                                value: "02:07"

                            },

                            {

                                num: NumberInt("19"),

                                value: "04:53"

                            },

                            {

                                num: NumberInt("20"),

                                value: "00:59"

                            },

                            {

                                num: NumberInt("21"),

                                value: "01:23"

                            },

                            {

                                num: NumberInt("22"),

                                value: "00:09"

                            },

                            {

                                num: NumberInt("23"),

                                value: "01:11:05"

                            },

                            {

                                num: NumberInt("24"),

                                value: "01:01"

                            },

                            {

                                num: NumberInt("25"),

                                value: "09:58"

                            },

                            {

                                num: NumberInt("26"),

                                value: "47:53"

                            },

                            {

                                num: NumberInt("27"),

                                value: "03:31"

                            },

                            {

                                num: NumberInt("28"),

                                value: "00:49"

                            },

                            {

                                num: NumberInt("29"),

                                value: "01:20"

                            },

                            {

                                num: NumberInt("30"),

                                value: "02:11"

                            },

                            {

                                num: NumberInt("31"),

                                value: "02:58"

                            },

                            {

                                num: NumberInt("32"),

                                value: "00:43"

                            },

                            {

                                num: NumberInt("33"),

                                value: "01:49"

                            },

                            {

                                num: NumberInt("34"),

                                value: "01:27"

                            },

                            {

                                num: NumberInt("35"),

                                value: "02:46"

                            },

                            {

                                num: NumberInt("36"),

                                value: "00:17"

                            },

                            {

                                num: NumberInt("37"),

                                value: "00:35"

                            },

                            {

                                num: NumberInt("38"),

                                value: "05:12"

                            },

                            {

                                num: NumberInt("39"),

                                value: "09:21"

                            },

                            {

                                num: NumberInt("40"),

                                value: "01:12"

                            },

                            {

                                num: NumberInt("41"),

                                value: "06:29"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数18_链接文本",

                        desc: "",

                        relativeXPath: "/div[2]/div[1]/div[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "卢本伟名场面合集（更新至盖亚）"

                            },

                            {

                                num: NumberInt("1"),

                                value: "卢本伟：从中国骄傲到劣迹主播，封杀五年复出，却被官方4字警告"

                            },

                            {

                                num: NumberInt("2"),

                                value: "一中老师在线怼卢本伟"

                            },

                            {

                                num: NumberInt("3"),

                                value: "17张牌你能秒我？？你能秒杀我？？17张牌你今天能把我卢本伟秒了，我当场就把这个电脑屏幕吃掉！！！"

                            },

                            {

                                num: NumberInt("4"),

                                value: "帝师当年锤卢本伟，狐弟意外爆出李易峰等事情尽然成真"

                            },

                            {

                                num: NumberInt("5"),

                                value: "卢本伟看自己大闹天宫"

                            },

                            {

                                num: NumberInt("6"),

                                value: "【电音单曲】卢本伟牛逼！！！"

                            },

                            {

                                num: NumberInt("7"),

                                value: "【卢本伟】五五开永久关播前的最后5分36秒！"

                            },

                            {

                                num: NumberInt("8"),

                                value: "茄子生日会PDD直播带大家找卢本伟"

                            },

                            {

                                num: NumberInt("9"),

                                value: "卢本伟直播玩掘地求升全过程"

                            },

                            {

                                num: NumberInt("10"),

                                value: "你是谁 卢本伟"

                            },

                            {

                                num: NumberInt("11"),

                                value: "卢本伟之忍住不笑大挑战，你能坚持多久？？？"

                            },

                            {

                                num: NumberInt("12"),

                                value: "卢本伟29杀吃鸡完整视频"

                            },

                            {

                                num: NumberInt("13"),

                                value: "伞兵一号卢本伟是哪个班的？"

                            },

                            {

                                num: NumberInt("14"),

                                value: "都说uu是拜金女  说卢本伟《出事》uu第1个跑  可是陪卢本伟到最后的还是uu"

                            },

                            {

                                num: NumberInt("15"),

                                value: "【卢本伟】孤 勇 者"

                            },

                            {

                                num: NumberInt("16"),

                                value: "卢本伟名场面：上错车了！这段笑得我肚子疼！"

                            },

                            {

                                num: NumberInt("17"),

                                value: "卢本伟怒喷xxs"

                            },

                            {

                                num: NumberInt("18"),

                                value: "【熊出没鬼畜】卢本伟戒网瘾"

                            },

                            {

                                num: NumberInt("19"),

                                value: "卢本伟：把我直播间关了，滚去学习！"

                            },

                            {

                                num: NumberInt("20"),

                                value: "卢本伟和PDD当年参加综艺的演技真的炸裂"

                            },

                            {

                                num: NumberInt("21"),

                                value: "卢本伟给Uzi发语音，现在可以全部坐下了，并且让乌兹也站了起来"

                            },

                            {

                                num: NumberInt("22"),

                                value: "卢本伟牛逼，公交车偶遇卢本伟!!"

                            },

                            {

                                num: NumberInt("23"),

                                value: "【搞笑丧尸片】鲲山行（70分钟完整版） 卢本伟&茄子&周淑怡 等领衔主演"

                            },

                            {

                                num: NumberInt("24"),

                                value: "现在进入卢本伟直播间会发生什么"

                            },

                            {

                                num: NumberInt("25"),

                                value: "卢本伟——日本之行vlog续"

                            },

                            {

                                num: NumberInt("26"),

                                value: "【不要笑挑战卢本伟之心态是如何爆炸】"

                            },

                            {

                                num: NumberInt("27"),

                                value: "【卢本伟】错位时空，全程催泪"

                            },

                            {

                                num: NumberInt("28"),

                                value: "卢本伟看IG夺冠看哭了，心疼"

                            },

                            {

                                num: NumberInt("29"),

                                value: "卢本伟：十七张牌你能秒我？我吃屏幕"

                            },

                            {

                                num: NumberInt("30"),

                                value: "【卢本伟】仙剑开侠传"

                            },

                            {

                                num: NumberInt("31"),

                                value: "PDD谈卢本伟的复出和近况"

                            },

                            {

                                num: NumberInt("32"),

                                value: "现在的卢本伟vs以前的卢本伟"

                            },

                            {

                                num: NumberInt("33"),

                                value: "卢本伟买西瓜"

                            },

                            {

                                num: NumberInt("34"),

                                value: "PDD：很感谢卢本伟当年天天拉着我双排直播 不然我早摆烂了"

                            },

                            {

                                num: NumberInt("35"),

                                value: "【卢本伟】那个广场......起风了"

                            },

                            {

                                num: NumberInt("36"),

                                value: "澳洲教授：你个Doinb又来给卢本伟代课是吧？"

                            },

                            {

                                num: NumberInt("37"),

                                value: "电竞经理 卢本伟语音包"

                            },

                            {

                                num: NumberInt("38"),

                                value: "卢本伟第一次直播的样子，你还记得吗？（录播开始时）"

                            },

                            {

                                num: NumberInt("39"),

                                value: "『进击的全明星/传说的开始/第一集』卢本伟：我的外挂到账了！"

                            },

                            {

                                num: NumberInt("40"),

                                value: "卢本伟惊现某网课现场，数学课老师暴怒"

                            },

                            {

                                num: NumberInt("41"),

                                value: "【掘地求升】卢本伟：玩游戏一定要啸着玩"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数19_链接地址",

                        desc: "",

                        relativeXPath: "/div[2]/div[1]/div[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.bilibili.com/video/BV1fc41187xA?spm_id_from=333.337.search-card.all.click"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.bilibili.com/video/BV1it4y1J7Wn"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.bilibili.com/video/BV1G7411K71U"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.bilibili.com/video/BV1Xx411p74G"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.bilibili.com/video/BV1pe4y1a7rJ"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.bilibili.com/video/BV1uS4y1L77Z"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.bilibili.com/video/BV1nW4118797"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.bilibili.com/video/BV1v34y1k7SM"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.bilibili.com/video/BV1GL41137Cv"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.bilibili.com/video/BV1GJ411p7aq"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.bilibili.com/video/BV1MC4y1p7yf"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.bilibili.com/video/BV1Z4411X7qs"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.bilibili.com/video/BV1ss411P7e1"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.bilibili.com/video/BV1FE411H7L1"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.bilibili.com/video/BV1T44y1p7mz"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.bilibili.com/video/BV1dZ4y1X7Fi"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.bilibili.com/video/BV1c54114764"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.bilibili.com/video/BV1TQ4y1P7bp"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.bilibili.com/video/BV1R4411c7zr"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.bilibili.com/video/BV1xt411G73j"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://www.bilibili.com/video/BV1ui4y1c7Pd"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://www.bilibili.com/video/BV1ta411f7cY"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://www.bilibili.com/video/BV1BE411A777"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://www.bilibili.com/video/BV1NT4y1w776"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://www.bilibili.com/video/BV1yW411N7zc"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://www.bilibili.com/video/BV1TZ4y147ME"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://www.bilibili.com/video/BV1UJ41137aF"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://www.bilibili.com/video/BV1MB4y1c7Cg"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://www.bilibili.com/video/BV1Gt411U78v"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://www.bilibili.com/video/BV1Ds411N7dU"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://www.bilibili.com/video/BV1ip4y1Q7V1"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://www.bilibili.com/video/BV1ry4y1v7Xw"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://www.bilibili.com/video/BV14B4y1V7Uv"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://www.bilibili.com/video/BV11q4y1H76N"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://www.bilibili.com/video/BV1TB4y1W7cz"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://www.bilibili.com/video/BV1T54y167Hs"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://www.bilibili.com/video/BV1Fd4y197d7"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://www.bilibili.com/video/BV1rS4y1U76q"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://www.bilibili.com/video/BV1At411f7bu"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://www.bilibili.com/video/BV1A4411G7Lz"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://www.bilibili.com/video/BV1T7411A7WW"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://www.bilibili.com/video/BV1t7411G7pr"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数20_文本",

                        desc: "",

                        relativeXPath: "/div[2]/div[1]/div[1]/a[1]/h3[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "名场面合集（更新至盖亚）"

                            },

                            {

                                num: NumberInt("1"),

                                value: "：从中国骄傲到劣迹主播，封杀五年复出，却被官方4字警告"

                            },

                            {

                                num: NumberInt("2"),

                                value: "一中老师在线怼"

                            },

                            {

                                num: NumberInt("3"),

                                value: "17张牌你能秒我？？你能秒杀我？？17张牌你今天能把我秒了，我当场就把这个电脑屏幕吃掉！！！"

                            },

                            {

                                num: NumberInt("4"),

                                value: "帝师当年锤，狐弟意外爆出李易峰等事情尽然成真"

                            },

                            {

                                num: NumberInt("5"),

                                value: "看自己大闹天宫"

                            },

                            {

                                num: NumberInt("6"),

                                value: "【电音单曲】牛逼！！！"

                            },

                            {

                                num: NumberInt("7"),

                                value: "【】五五开永久关播前的最后5分36秒！"

                            },

                            {

                                num: NumberInt("8"),

                                value: "茄子生日会PDD直播带大家找"

                            },

                            {

                                num: NumberInt("9"),

                                value: "直播玩掘地求升全过程"

                            },

                            {

                                num: NumberInt("10"),

                                value: "你是谁"

                            },

                            {

                                num: NumberInt("11"),

                                value: "之忍住不笑大挑战，你能坚持多久？？？"

                            },

                            {

                                num: NumberInt("12"),

                                value: "29杀吃鸡完整视频"

                            },

                            {

                                num: NumberInt("13"),

                                value: "伞兵一号是哪个班的？"

                            },

                            {

                                num: NumberInt("14"),

                                value: "都说uu是拜金女说《出事》uu第1个跑可是陪到最后的还是uu"

                            },

                            {

                                num: NumberInt("15"),

                                value: "【】孤勇者"

                            },

                            {

                                num: NumberInt("16"),

                                value: "名场面：上错车了！这段笑得我肚子疼！"

                            },

                            {

                                num: NumberInt("17"),

                                value: "怒喷xxs"

                            },

                            {

                                num: NumberInt("18"),

                                value: "【熊出没鬼畜】戒网瘾"

                            },

                            {

                                num: NumberInt("19"),

                                value: "：把我直播间关了，滚去学习！"

                            },

                            {

                                num: NumberInt("20"),

                                value: "和PDD当年参加综艺的演技真的炸裂"

                            },

                            {

                                num: NumberInt("21"),

                                value: "给Uzi发语音，现在可以全部坐下了，并且让乌兹也站了起来"

                            },

                            {

                                num: NumberInt("22"),

                                value: "牛逼，公交车偶遇!!"

                            },

                            {

                                num: NumberInt("23"),

                                value: "【搞笑丧尸片】鲲山行（70分钟完整版）&茄子&周淑怡等领衔主演"

                            },

                            {

                                num: NumberInt("24"),

                                value: "现在进入直播间会发生什么"

                            },

                            {

                                num: NumberInt("25"),

                                value: "——日本之行vlog续"

                            },

                            {

                                num: NumberInt("26"),

                                value: "【不要笑挑战之心态是如何爆炸】"

                            },

                            {

                                num: NumberInt("27"),

                                value: "【】错位时空，全程催泪"

                            },

                            {

                                num: NumberInt("28"),

                                value: "看IG夺冠看哭了，心疼"

                            },

                            {

                                num: NumberInt("29"),

                                value: "：十七张牌你能秒我？我吃屏幕"

                            },

                            {

                                num: NumberInt("30"),

                                value: "【】仙剑开侠传"

                            },

                            {

                                num: NumberInt("31"),

                                value: "PDD谈的复出和近况"

                            },

                            {

                                num: NumberInt("32"),

                                value: "现在的vs以前的"

                            },

                            {

                                num: NumberInt("33"),

                                value: "买西瓜"

                            },

                            {

                                num: NumberInt("34"),

                                value: "PDD：很感谢当年天天拉着我双排直播不然我早摆烂了"

                            },

                            {

                                num: NumberInt("35"),

                                value: "【】那个广场......起风了"

                            },

                            {

                                num: NumberInt("36"),

                                value: "澳洲教授：你个Doinb又来给代课是吧？"

                            },

                            {

                                num: NumberInt("37"),

                                value: "电竞经理语音包"

                            },

                            {

                                num: NumberInt("38"),

                                value: "第一次直播的样子，你还记得吗？（录播开始时）"

                            },

                            {

                                num: NumberInt("39"),

                                value: "『进击的全明星/传说的开始/第一集』：我的外挂到账了！"

                            },

                            {

                                num: NumberInt("40"),

                                value: "惊现某网课现场，数学课老师暴怒"

                            },

                            {

                                num: NumberInt("41"),

                                value: "【掘地求升】：玩游戏一定要啸着玩"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数21_文本",

                        desc: "",

                        relativeXPath: "/div[2]/div[1]/div[1]/a[1]/h3[1]/em[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("1"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("2"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("3"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("4"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("5"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("6"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("7"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("8"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("9"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("10"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("11"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("12"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("13"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("14"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("15"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("16"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("17"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("18"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("19"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("20"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("21"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("22"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("23"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("24"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("25"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("26"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("27"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("28"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("29"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("30"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("31"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("32"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("33"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("34"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("35"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("36"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("37"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("38"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("39"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("40"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("41"),

                                value: "卢本伟"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数22_链接文本",

                        desc: "",

                        relativeXPath: "/div[2]/div[1]/div[1]/p[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "柠柚Sama · 2020-4-2"

                            },

                            {

                                num: NumberInt("1"),

                                value: "限量版蓝胖纸 · 8-19"

                            },

                            {

                                num: NumberInt("2"),

                                value: "兰兰我老婆_ · 2020-2-26"

                            },

                            {

                                num: NumberInt("3"),

                                value: "风纪委员啊祖 · 2017-7-26"

                            },

                            {

                                num: NumberInt("4"),

                                value: "大风中摇摆的火苗 · 9-12"

                            },

                            {

                                num: NumberInt("5"),

                                value: "卢姥爷留声机 · 1-21"

                            },

                            {

                                num: NumberInt("6"),

                                value: "一咸菊菊 · 2017-12-20"

                            },

                            {

                                num: NumberInt("7"),

                                value: "账号注销9499082 · 3-6"

                            },

                            {

                                num: NumberInt("8"),

                                value: "PDD在B站 · 2021-11-4"

                            },

                            {

                                num: NumberInt("9"),

                                value: "mdtx58 · 2020-1-11"

                            },

                            {

                                num: NumberInt("10"),

                                value: "阿飞vlog记录开哥 · 2020-5-26"

                            },

                            {

                                num: NumberInt("11"),

                                value: "花芝虹 · 2019-8-10"

                            },

                            {

                                num: NumberInt("12"),

                                value: "曙神之光 · 2018-7-23"

                            },

                            {

                                num: NumberInt("13"),

                                value: "找不到拨片的K宝 · 2020-2-28"

                            },

                            {

                                num: NumberInt("14"),

                                value: "55开永远的神 · 2-15"

                            },

                            {

                                num: NumberInt("15"),

                                value: "可乐君Cy · 2021-12-3"

                            },

                            {

                                num: NumberInt("16"),

                                value: "忍野咩咩_ · 2020-4-28"

                            },

                            {

                                num: NumberInt("17"),

                                value: "张三是我大哥 · 2020-5-23"

                            },

                            {

                                num: NumberInt("18"),

                                value: "沫然Fight · 2019-7-6"

                            },

                            {

                                num: NumberInt("19"),

                                value: "不知名肥皂 · 2019-7-16"

                            },

                            {

                                num: NumberInt("20"),

                                value: "happykid17 · 2021-1-4"

                            },

                            {

                                num: NumberInt("21"),

                                value: "电竞山里娃 · 8-6"

                            },

                            {

                                num: NumberInt("22"),

                                value: "坏兔子x · 2020-3-21"

                            },

                            {

                                num: NumberInt("23"),

                                value: "浅澄月 · 2020-10-1"

                            },

                            {

                                num: NumberInt("24"),

                                value: "打破慘案 · 2018-6-4"

                            },

                            {

                                num: NumberInt("25"),

                                value: "阿飞vlog记录开哥 · 2020-4-25"

                            },

                            {

                                num: NumberInt("26"),

                                value: "热情似火的小海 · 2019-9-20"

                            },

                            {

                                num: NumberInt("27"),

                                value: "冷颜菌丶 · 2021-4-19"

                            },

                            {

                                num: NumberInt("28"),

                                value: "陌轩泽 · 2018-11-11"

                            },

                            {

                                num: NumberInt("29"),

                                value: "ttsy天天少爷 · 2018-7-20"

                            },

                            {

                                num: NumberInt("30"),

                                value: "霖言丶 · 2020-5-13"

                            },

                            {

                                num: NumberInt("31"),

                                value: "PDD在B站 · 2020-12-10"

                            },

                            {

                                num: NumberInt("32"),

                                value: "包子放盐 · 8-21"

                            },

                            {

                                num: NumberInt("33"),

                                value: "清澈小老弟 · 2021-7-27"

                            },

                            {

                                num: NumberInt("34"),

                                value: "PDD在B站 · 6-30"

                            },

                            {

                                num: NumberInt("35"),

                                value: "污神ya · 2020-11-28"

                            },

                            {

                                num: NumberInt("36"),

                                value: "大鹅队长 · 9-12"

                            },

                            {

                                num: NumberInt("37"),

                                value: "阴间圣人 · 3-20"

                            },

                            {

                                num: NumberInt("38"),

                                value: "叶下莫亿 · 2018-10-17"

                            },

                            {

                                num: NumberInt("39"),

                                value: "被玩坏的Zom · 2019-6-17"

                            },

                            {

                                num: NumberInt("40"),

                                value: "我的三七没有分 · 2020-2-21"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Q_XON · 2020-2-14"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数23_链接地址",

                        desc: "",

                        relativeXPath: "/div[2]/div[1]/div[1]/p[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://space.bilibili.com/152292466"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://space.bilibili.com/505241381"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://space.bilibili.com/449276953"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://space.bilibili.com/28824825"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://space.bilibili.com/1492647"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://space.bilibili.com/2028911406"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://space.bilibili.com/26311441"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://space.bilibili.com/1977691792"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://space.bilibili.com/36882906"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://space.bilibili.com/493533134"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://space.bilibili.com/551271353"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://space.bilibili.com/9336404"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://space.bilibili.com/226736083"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://space.bilibili.com/12319573"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://space.bilibili.com/548489530"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://space.bilibili.com/436582505"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://space.bilibili.com/18915489"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://space.bilibili.com/340497271"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://space.bilibili.com/381448438"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://space.bilibili.com/13142874"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://space.bilibili.com/333644619"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://space.bilibili.com/328379242"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://space.bilibili.com/39486882"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://space.bilibili.com/8034163"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://space.bilibili.com/258882426"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://space.bilibili.com/551271353"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://space.bilibili.com/389114021"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://space.bilibili.com/29379264"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://space.bilibili.com/112883352"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://space.bilibili.com/155682730"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://space.bilibili.com/17422165"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://space.bilibili.com/36882906"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://space.bilibili.com/630915163"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://space.bilibili.com/338407352"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://space.bilibili.com/36882906"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://space.bilibili.com/413118612"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://space.bilibili.com/297317"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://space.bilibili.com/322325839"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://space.bilibili.com/225512648"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://space.bilibili.com/10380338"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://space.bilibili.com/331804025"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://space.bilibili.com/397092968"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数24_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "全体起立！！！"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数25_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "四个字:不要开挂。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数26_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "up主牛，给他订的五年"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数27_文本",

                        desc: "",

                        relativeXPath: "/div[2]/a[1]/div[1]/div[1]/div[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("8"),

                                value: "稍后再看"

                            },

                            {

                                num: NumberInt("9"),

                                value: "稍后再看"

                            },

                            {

                                num: NumberInt("10"),

                                value: ""

                            },

                            {

                                num: NumberInt("11"),

                                value: ""

                            },

                            {

                                num: NumberInt("12"),

                                value: ""

                            },

                            {

                                num: NumberInt("13"),

                                value: ""

                            },

                            {

                                num: NumberInt("14"),

                                value: ""

                            },

                            {

                                num: NumberInt("15"),

                                value: ""

                            },

                            {

                                num: NumberInt("16"),

                                value: ""

                            },

                            {

                                num: NumberInt("17"),

                                value: ""

                            },

                            {

                                num: NumberInt("18"),

                                value: ""

                            },

                            {

                                num: NumberInt("19"),

                                value: ""

                            },

                            {

                                num: NumberInt("20"),

                                value: ""

                            },

                            {

                                num: NumberInt("21"),

                                value: ""

                            },

                            {

                                num: NumberInt("22"),

                                value: ""

                            },

                            {

                                num: NumberInt("23"),

                                value: ""

                            },

                            {

                                num: NumberInt("24"),

                                value: ""

                            },

                            {

                                num: NumberInt("25"),

                                value: ""

                            },

                            {

                                num: NumberInt("26"),

                                value: ""

                            },

                            {

                                num: NumberInt("27"),

                                value: ""

                            },

                            {

                                num: NumberInt("28"),

                                value: ""

                            },

                            {

                                num: NumberInt("29"),

                                value: ""

                            },

                            {

                                num: NumberInt("30"),

                                value: ""

                            },

                            {

                                num: NumberInt("31"),

                                value: ""

                            },

                            {

                                num: NumberInt("32"),

                                value: ""

                            },

                            {

                                num: NumberInt("33"),

                                value: ""

                            },

                            {

                                num: NumberInt("34"),

                                value: ""

                            },

                            {

                                num: NumberInt("35"),

                                value: ""

                            },

                            {

                                num: NumberInt("36"),

                                value: ""

                            },

                            {

                                num: NumberInt("37"),

                                value: ""

                            },

                            {

                                num: NumberInt("38"),

                                value: ""

                            },

                            {

                                num: NumberInt("39"),

                                value: ""

                            },

                            {

                                num: NumberInt("40"),

                                value: ""

                            },

                            {

                                num: NumberInt("41"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数28_文本",

                        desc: "",

                        relativeXPath: "/div[2]/div[1]/div[1]/a[1]/h3[1]/em[2]",

                        exampleValues: [

                            {

                                num: NumberInt("14"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("22"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("32"),

                                value: "卢本伟"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.bilibili.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jd.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "要输入的文本，如京东搜索框输入：电脑",

            type: "string",

            exampleValue: "卢本伟",

            value: "卢本伟"

        }

    ],

    links: "https://www.bilibili.com",

    name: "bilibili",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "\n            \n                \n                    \n                        \n                    \n                    \n                    \n                    \n                    \n                        \n                    \n                    \n                        \n                        \n                        \n                    \n                    \n                    \n                        \n                        \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                        \n                            正在缓冲...\n                            \n                        \n                    \n                    \n                        \n                    获取视频参数...\n                    [成功]\n                    \n                \n            \n                \n                    播放器初始化...\n                    [成功]\n                    3.16.0-9b97d64a\n                \n            \n                \n                    获取播放地址...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频信息...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频内容...\n                    \n                    \n                \n            \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                            \n                            \n                                \n                                \n                                \n                            \n                        \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        \n                    \n                \n            \n            \n            \n            \n        604万4.5万18:23"

        },

        {

            id: NumberInt("1"),

            name: "参数2_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.bilibili.com/video/BV1fc41187xA"

        },

        {

            id: NumberInt("2"),

            name: "参数3_图片地址",

            desc: "",

            type: "string",

            exampleValue: "https://i2.hdslb.com/bfs/archive/b8d6c6e21212b54a92a36ea03f61b7e334cc24e7.jpg@672w_378h_1c"

        },

        {

            id: NumberInt("3"),

            name: "参数4_文本",

            desc: "",

            type: "string",

            exampleValue: "正在缓冲..."

        },

        {

            id: NumberInt("4"),

            name: "参数5_文本",

            desc: "",

            type: "string",

            exampleValue: "获取视频参数..."

        },

        {

            id: NumberInt("5"),

            name: "参数6_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("6"),

            name: "参数7_文本",

            desc: "",

            type: "string",

            exampleValue: "播放器初始化..."

        },

        {

            id: NumberInt("7"),

            name: "参数8_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("8"),

            name: "参数9_文本",

            desc: "",

            type: "string",

            exampleValue: "3.16.0-9b97d64a"

        },

        {

            id: NumberInt("9"),

            name: "参数10_文本",

            desc: "",

            type: "string",

            exampleValue: "获取播放地址..."

        },

        {

            id: NumberInt("10"),

            name: "参数11_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("11"),

            name: "参数12_文本",

            desc: "",

            type: "string",

            exampleValue: "加载视频信息..."

        },

        {

            id: NumberInt("12"),

            name: "参数13_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("13"),

            name: "参数14_文本",

            desc: "",

            type: "string",

            exampleValue: "加载视频内容..."

        },

        {

            id: NumberInt("14"),

            name: "参数15_文本",

            desc: "",

            type: "string",

            exampleValue: "604万"

        },

        {

            id: NumberInt("15"),

            name: "参数16_文本",

            desc: "",

            type: "string",

            exampleValue: "4.5万"

        },

        {

            id: NumberInt("16"),

            name: "参数17_文本",

            desc: "",

            type: "string",

            exampleValue: "18:23"

        },

        {

            id: NumberInt("17"),

            name: "参数18_链接文本",

            desc: "",

            type: "string",

            exampleValue: "卢本伟名场面合集（更新至盖亚）"

        },

        {

            id: NumberInt("18"),

            name: "参数19_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.bilibili.com/video/BV1fc41187xA?spm_id_from=333.337.search-card.all.click"

        },

        {

            id: NumberInt("19"),

            name: "参数20_文本",

            desc: "",

            type: "string",

            exampleValue: "名场面合集（更新至盖亚）"

        },

        {

            id: NumberInt("20"),

            name: "参数21_文本",

            desc: "",

            type: "string",

            exampleValue: "卢本伟"

        },

        {

            id: NumberInt("21"),

            name: "参数22_链接文本",

            desc: "",

            type: "string",

            exampleValue: "柠柚Sama · 2020-4-2"

        },

        {

            id: NumberInt("22"),

            name: "参数23_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://space.bilibili.com/152292466"

        },

        {

            id: NumberInt("23"),

            name: "参数24_文本",

            desc: "",

            type: "string",

            exampleValue: "全体起立！！！"

        },

        {

            id: NumberInt("24"),

            name: "参数25_文本",

            desc: "",

            type: "string",

            exampleValue: "四个字:不要开挂。"

        },

        {

            id: NumberInt("25"),

            name: "参数26_文本",

            desc: "",

            type: "string",

            exampleValue: "up主牛，给他订的五年"

        },

        {

            id: NumberInt("26"),

            name: "参数27_文本",

            desc: "",

            type: "string",

            exampleValue: "稍后再看"

        },

        {

            id: NumberInt("27"),

            name: "参数28_文本",

            desc: "",

            type: "string",

            exampleValue: "卢本伟"

        }

    ],

    url: "https://www.bilibili.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("6321def45fe056c0e300cd0f"),

    containJudge: false,

    desc: "https://www.jd.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.jd.com",

                links: "https://www.jd.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[1]/div[6]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/ul[1]/li",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "/"

                            },

                            {

                                num: NumberInt("1"),

                                value: "/"

                            },

                            {

                                num: NumberInt("2"),

                                value: "/"

                            },

                            {

                                num: NumberInt("3"),

                                value: "/"

                            },

                            {

                                num: NumberInt("4"),

                                value: "/"

                            },

                            {

                                num: NumberInt("5"),

                                value: "/"

                            },

                            {

                                num: NumberInt("6"),

                                value: "/"

                            },

                            {

                                num: NumberInt("7"),

                                value: "/"

                            },

                            {

                                num: NumberInt("8"),

                                value: "/"

                            },

                            {

                                num: NumberInt("9"),

                                value: "/"

                            },

                            {

                                num: NumberInt("10"),

                                value: "/"

                            },

                            {

                                num: NumberInt("11"),

                                value: "/"

                            },

                            {

                                num: NumberInt("12"),

                                value: "/"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接文本",

                        desc: "",

                        relativeXPath: "/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "手机"

                            },

                            {

                                num: NumberInt("1"),

                                value: "家用电器"

                            },

                            {

                                num: NumberInt("2"),

                                value: "电脑"

                            },

                            {

                                num: NumberInt("3"),

                                value: "家纺"

                            },

                            {

                                num: NumberInt("4"),

                                value: "家具"

                            },

                            {

                                num: NumberInt("5"),

                                value: "内衣"

                            },

                            {

                                num: NumberInt("6"),

                                value: "箱包"

                            },

                            {

                                num: NumberInt("7"),

                                value: "运动"

                            },

                            {

                                num: NumberInt("8"),

                                value: "汽车用品"

                            },

                            {

                                num: NumberInt("9"),

                                value: "母婴"

                            },

                            {

                                num: NumberInt("10"),

                                value: "玩具乐器"

                            },

                            {

                                num: NumberInt("11"),

                                value: "家庭清洁"

                            },

                            {

                                num: NumberInt("12"),

                                value: "图书"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数3_链接地址",

                        desc: "",

                        relativeXPath: "/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://shouji.jd.com/"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://search.jd.com/Search?keyword=%E5%B0%8F%E5%AE%B6%E7%94%B5&enc=utf-8&wq=%E5%B0%8F%E5%AE%B6%E7%94%B5&pvid=261a350161304c979fa0e7ce95c05671"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://diannao.jd.com/"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://channel.jd.com/jf.html"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://channel.jd.com/furniture.html"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://channel.jd.com/underwear.html"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://channel.jd.com/bag.html"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://phat.jd.com/10-109.html"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://che.jd.com/"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://search.jd.com/Search?keyword=%E6%AF%8D%E5%A9%B4&enc=utf-8&qrst=1&rt=1&stop=1&vt=2&wq=%E6%AF%8D%E5%A9%B4&stock=1&gp=2&click=1"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://toy.jd.com/"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://channel.jd.com/beauty.html"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://book.jd.com/"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数4_文本",

                        desc: "",

                        relativeXPath: "/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "/"

                            },

                            {

                                num: NumberInt("2"),

                                value: "/"

                            },

                            {

                                num: NumberInt("3"),

                                value: "/"

                            },

                            {

                                num: NumberInt("4"),

                                value: "/"

                            },

                            {

                                num: NumberInt("5"),

                                value: "/"

                            },

                            {

                                num: NumberInt("6"),

                                value: "/"

                            },

                            {

                                num: NumberInt("7"),

                                value: "/"

                            },

                            {

                                num: NumberInt("8"),

                                value: "/"

                            },

                            {

                                num: NumberInt("9"),

                                value: "/"

                            },

                            {

                                num: NumberInt("10"),

                                value: "/"

                            },

                            {

                                num: NumberInt("11"),

                                value: "/"

                            },

                            {

                                num: NumberInt("12"),

                                value: "/"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数5_链接文本",

                        desc: "",

                        relativeXPath: "/a[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "数码"

                            },

                            {

                                num: NumberInt("2"),

                                value: "办公"

                            },

                            {

                                num: NumberInt("3"),

                                value: "家居"

                            },

                            {

                                num: NumberInt("4"),

                                value: "家装"

                            },

                            {

                                num: NumberInt("5"),

                                value: "男装"

                            },

                            {

                                num: NumberInt("6"),

                                value: "钟表"

                            },

                            {

                                num: NumberInt("7"),

                                value: "户外"

                            },

                            {

                                num: NumberInt("8"),

                                value: "车载电器"

                            },

                            {

                                num: NumberInt("9"),

                                value: "洗护喂养"

                            },

                            {

                                num: NumberInt("10"),

                                value: "宠物生活"

                            },

                            {

                                num: NumberInt("11"),

                                value: "个人护理"

                            },

                            {

                                num: NumberInt("12"),

                                value: "童书"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数6_链接地址",

                        desc: "",

                        relativeXPath: "/a[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://shuma.jd.com/"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://bg.jd.com/"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://channel.jd.com/home.html"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://jzjc.jd.com/"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://channel.jd.com/1315-1342.html"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://channel.jd.com/watch.html"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://channel.jd.com/outdoor.html"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://list.jd.com/list.html?cat=6728,6740&page=1&delivery_glb=1&stock=1&sort=sort_totalsales15_desc&trans=1&JL=4_7_0#J_main"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://channel.jd.com/feed.html"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://channel.jd.com/pet.html"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://lady.jd.com/"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://book.jd.com/children.html"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数7_文本",

                        desc: "",

                        relativeXPath: "/span[3]",

                        exampleValues: [

                            {

                                num: NumberInt("3"),

                                value: "/"

                            },

                            {

                                num: NumberInt("4"),

                                value: "/"

                            },

                            {

                                num: NumberInt("5"),

                                value: "/"

                            },

                            {

                                num: NumberInt("6"),

                                value: "/"

                            },

                            {

                                num: NumberInt("7"),

                                value: "/"

                            },

                            {

                                num: NumberInt("11"),

                                value: "/"

                            },

                            {

                                num: NumberInt("12"),

                                value: "/"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数8_链接文本",

                        desc: "",

                        relativeXPath: "/a[3]",

                        exampleValues: [

                            {

                                num: NumberInt("3"),

                                value: "厨具"

                            },

                            {

                                num: NumberInt("4"),

                                value: "灯具"

                            },

                            {

                                num: NumberInt("5"),

                                value: "女装"

                            },

                            {

                                num: NumberInt("6"),

                                value: "珠宝"

                            },

                            {

                                num: NumberInt("7"),

                                value: "男鞋"

                            },

                            {

                                num: NumberInt("11"),

                                value: "计生情趣"

                            },

                            {

                                num: NumberInt("12"),

                                value: "文学"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数9_链接地址",

                        desc: "",

                        relativeXPath: "/a[3]",

                        exampleValues: [

                            {

                                num: NumberInt("3"),

                                value: "https://channel.jd.com/kitchenware.html"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://channel.jd.com/9855-9856.html"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://channel.jd.com/women.html"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://channel.jd.com/jewellery.html"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://channel.jd.com/mensshoes.html"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://channel.jd.com/9192-9196.html"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://channel.jd.com/p_wenxuezongheguan.html"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数10_文本",

                        desc: "",

                        relativeXPath: "/span[4]",

                        exampleValues: [

                            {

                                num: NumberInt("4"),

                                value: "/"

                            },

                            {

                                num: NumberInt("5"),

                                value: "/"

                            },

                            {

                                num: NumberInt("6"),

                                value: "/"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数11_链接文本",

                        desc: "",

                        relativeXPath: "/a[4]",

                        exampleValues: [

                            {

                                num: NumberInt("4"),

                                value: "工业品"

                            },

                            {

                                num: NumberInt("5"),

                                value: "童装"

                            },

                            {

                                num: NumberInt("6"),

                                value: "女鞋"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数12_链接地址",

                        desc: "",

                        relativeXPath: "/a[4]",

                        exampleValues: [

                            {

                                num: NumberInt("4"),

                                value: "https://pro.jd.com/mall/active/2u2DR1dUiK34csAE3DqmcG8aXvUK/index.html"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://list.jd.com/list.html?cat=1319,11842"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://channel.jd.com/womensshoes.html"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.jd.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jd.com"

        }

    ],

    links: "https://www.jd.com",

    name: "新web服务",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "/"

        },

        {

            id: NumberInt("1"),

            name: "参数2_链接文本",

            desc: "",

            type: "string",

            exampleValue: "手机"

        },

        {

            id: NumberInt("2"),

            name: "参数3_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://shouji.jd.com/"

        },

        {

            id: NumberInt("3"),

            name: "参数4_文本",

            desc: "",

            type: "string",

            exampleValue: "/"

        },

        {

            id: NumberInt("4"),

            name: "参数5_链接文本",

            desc: "",

            type: "string",

            exampleValue: "数码"

        },

        {

            id: NumberInt("5"),

            name: "参数6_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://shuma.jd.com/"

        },

        {

            id: NumberInt("6"),

            name: "参数7_文本",

            desc: "",

            type: "string",

            exampleValue: "/"

        },

        {

            id: NumberInt("7"),

            name: "参数8_链接文本",

            desc: "",

            type: "string",

            exampleValue: "厨具"

        },

        {

            id: NumberInt("8"),

            name: "参数9_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://channel.jd.com/kitchenware.html"

        },

        {

            id: NumberInt("9"),

            name: "参数10_文本",

            desc: "",

            type: "string",

            exampleValue: "/"

        },

        {

            id: NumberInt("10"),

            name: "参数11_链接文本",

            desc: "",

            type: "string",

            exampleValue: "工业品"

        },

        {

            id: NumberInt("11"),

            name: "参数12_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://pro.jd.com/mall/active/2u2DR1dUiK34csAE3DqmcG8aXvUK/index.html"

        }

    ],

    url: "https://www.jd.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("634c5bbeac994513c1407811"),

    containJudge: false,

    desc: "https://so.toutiao.com/search?dvpf=pc&source=pagination&keyword=长期戴耳机听音乐会怎样?或许会造成耳聋，且很难恢复&pd=synthesis&action_type=pagination&page_num=0",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("2"),

                NumberInt("5")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.jd.com",

                links: "https://www.jd.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("5"),

                url: "https://so.toutiao.com/search?dvpf=pc&source=pagination&keyword=长期戴耳机听音乐会怎样?或许会造成耳聋，且很难恢复&pd=synthesis&action_type=pagination&page_num=0",

                links: "https://so.toutiao.com/search?dvpf=pc&source=pagination&keyword=长期戴耳机听音乐会怎样?或许会造成耳聋，且很难恢复&pd=synthesis&action_type=pagination&page_num=0",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[contains(@class, \"cs-source\")]//span[contains(@class, 'text-ellipsis')][1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("4"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "经常戴耳机危害 - 语音科普 - 博禾医生"

                            },

                            {

                                num: NumberInt("1"),

                                value: "经常戴耳机有什么危害 - 博禾微视 - 博禾医生"

                            },

                            {

                                num: NumberInt("2"),

                                value: "经常戴耳机耳朵会不会聋 - 专家文章 - 博禾医生"

                            },

                            {

                                num: NumberInt("3"),

                                value: "长时间戴耳机听歌或致耳聋-名医在线网"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop_Click",

            sequence: [

                NumberInt("3"),

                NumberInt("6")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//span[contains(text(), \"下一页\")]/../..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("5"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("6"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"s-dom-f0607f20\"]/div[1]/div[1]/a[7]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        }

    ],

    id: NumberInt("6"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("2"),

            nodeName: "Open Page",

            value: "https://so.toutiao.com/search?dvpf=pc&source=pagination&keyword=长期戴耳机听音乐会怎样?或许会造成耳聋，且很难恢复&pd=synthesis&action_type=pagination&page_num=0",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://so.toutiao.com/search?dvpf=pc&source=pagination&keyword=长期戴耳机听音乐会怎样?或许会造成耳聋，且很难恢复&pd=synthesis&action_type=pagination&page_num=0"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_Click_1",

            nodeId: NumberInt("5"),

            nodeName: "Loop_Click",

            desc: "循环Loop_Click执行的次数（0代表无限循环）",

            type: "int",

            exampleValue: NumberInt("5"),

            value: NumberInt("5")

        }

    ],

    links: "https://so.toutiao.com/search?dvpf=pc&source=pagination&keyword=长期戴耳机听音乐会怎样?或许会造成耳聋，且很难恢复&pd=synthesis&action_type=pagination&page_num=0",

    name: "toutiao_authors",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "经常戴耳机危害 - 语音科普 - 博禾医生"

        }

    ],

    url: "https://so.toutiao.com/search?dvpf=pc&source=pagination&keyword=长期戴耳机听音乐会怎样?或许会造成耳聋，且很难恢复&pd=synthesis&action_type=pagination&page_num=0"

} );
db.getCollection("services").insert( {

    _id: ObjectId("634e68049dc2355e111bdd09"),

    containJudge: false,

    desc: "https://www.tianyancha.com/search?key=%E6%98%8E%E9%98%B3%E6%99%BA%E6%85%A7%E8%83%BD%E6%BA%90%E9%9B%86%E5%9B%A2%E8%82%A1%E4%BB%BD%E5%85%AC%E5%8F%B8",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.tianyancha.com/search?key=%E6%98%8E%E9%98%B3%E6%99%BA%E6%85%A7%E8%83%BD%E6%BA%90%E9%9B%86%E5%9B%A2%E8%82%A1%E4%BB%BD%E5%85%AC%E5%8F%B8",

                links: "https://www.tianyancha.com/search?key=%E6%98%8E%E9%98%B3%E6%99%BA%E6%85%A7%E8%83%BD%E6%BA%90%E9%9B%86%E5%9B%A2%E8%82%A1%E4%BB%BD%E5%85%AC%E5%8F%B8",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "(//a[1][contains(@class, 'index_alink')])[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "明阳智慧能源集团股份公司"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "(//a[1][contains(@class, 'index_alink')])[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.tianyancha.com/company/3030870614"

                            }

                        ]

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.tianyancha.com/search?key=%E6%98%8E%E9%98%B3%E6%99%BA%E6%85%A7%E8%83%BD%E6%BA%90%E9%9B%86%E5%9B%A2%E8%82%A1%E4%BB%BD%E5%85%AC%E5%8F%B8",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tianyancha.com/search?key=%E6%98%8E%E9%98%B3%E6%99%BA%E6%85%A7%E8%83%BD%E6%BA%90%E9%9B%86%E5%9B%A2%E8%82%A1%E4%BB%BD%E5%85%AC%E5%8F%B8"

        }

    ],

    links: "https://www.tianyancha.com/search?key=%E6%98%8E%E9%98%B3%E6%99%BA%E6%85%A7%E8%83%BD%E6%BA%90%E9%9B%86%E5%9B%A2%E8%82%A1%E4%BB%BD%E5%85%AC%E5%8F%B8",

    name: "tianyancha_company_name",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "明阳智慧能源集团股份公司"

        },

        {

            id: NumberInt("1"),

            name: "参数2_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.tianyancha.com/company/3030870614"

        }

    ],

    url: "https://www.tianyancha.com/search?key=%E6%98%8E%E9%98%B3%E6%99%BA%E6%85%A7%E8%83%BD%E6%BA%90%E9%9B%86%E5%9B%A2%E8%82%A1%E4%BB%BD%E5%85%AC%E5%8F%B8"

} );
db.getCollection("services").insert( {

    _id: ObjectId("634f2de57e45788f5558dd34"),

    containJudge: false,

    desc: "https://www.tianyancha.com/company/3011939024/jingzhuang",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("9"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"suppliesV2\"]//div[@class=\"num\"]//i/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[21]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("5"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop_URLLIST",

            sequence: [

                NumberInt("5"),

                NumberInt("17"),

                NumberInt("7")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://www.tianyancha.com/company/3011939024/jingzhuang\nhttps://www.tianyancha.com/company/3028691107/jingzhuang\nhttps://www.tianyancha.com/company/3329251696/jingzhuang\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("10"),

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//div[@class=\"num\"]//i[contains(@class,'next')]/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[23]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[12]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("9"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//tbody//tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("11"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "供应商名称",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"right-name\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "北京前沿信安科技股份有限公司"

                            },

                            {

                                num: NumberInt("2"),

                                value: "江苏中信博新能源科技股份有限公司"

                            },

                            {

                                num: NumberInt("3"),

                                value: "大连连城数控机器股份有限公司"

                            },

                            {

                                num: NumberInt("4"),

                                value: "索拉特特种玻璃（江苏）股份有限公司"

                            },

                            {

                                num: NumberInt("5"),

                                value: "正泰集团股份有限公司"

                            },

                            {

                                num: NumberInt("6"),

                                value: "江苏科强新材料股份有限公司"

                            },

                            {

                                num: NumberInt("7"),

                                value: "湖南华菱线缆股份有限公司"

                            },

                            {

                                num: NumberInt("8"),

                                value: "明冠新材料股份有限公司"

                            },

                            {

                                num: NumberInt("9"),

                                value: "浙江中晶科技股份有限公司"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "供应商日期",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2022-04-27"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2022-04-08"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2022-03-08"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2022-01-18"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2021-02-02"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2020-12-04"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2020-12-01"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "供应商条数",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]/div[2]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("3"),

                                value: "查看全部5条采购数据"

                            },

                            {

                                num: NumberInt("8"),

                                value: "查看全部5条采购数据"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("14"),

                NumberInt("13")

            ],

            isInLoop: true,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//div[@class=\"num\"]//i[contains(@class,'next')]/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[22]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[4]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("14"),

            parentId: NumberInt("6"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("15"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "客户名称",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"right-name\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "华电新能源集团股份有限公司"

                            },

                            {

                                num: NumberInt("2"),

                                value: "中国华电集团物资有限公司"

                            },

                            {

                                num: NumberInt("3"),

                                value: "中广核楚雄大姚风力发电有限公司"

                            },

                            {

                                num: NumberInt("4"),

                                value: "悦达资本股份有限公司"

                            },

                            {

                                num: NumberInt("5"),

                                value: "阳光中科（福建）能源股份有限公司"

                            },

                            {

                                num: NumberInt("6"),

                                value: "河北华电混合蓄能水电有限公司"

                            },

                            {

                                num: NumberInt("7"),

                                value: "中广核（北京）新能源科技有限公司"

                            },

                            {

                                num: NumberInt("8"),

                                value: "天合光能股份有限公司"

                            },

                            {

                                num: NumberInt("9"),

                                value: "中广核乌海新能源有限公司"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "客户日期",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2022-07-01"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2022-03-16"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2021-10-15"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2021-04-30"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2021-04-29"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2021-03-26"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2020-07-09"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2020-05-21"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2017-11-01"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "客户条数",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]/div[2]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("2"),

                                value: "https://www.tianyancha.com/bid/e2754d21e3f8474b80bea3e02fa1fea4"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.tianyancha.com/bid/28f255e62df04a8688fb79553e7dc2f7"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.tianyancha.com/bid/206ba6728ded11ebb7630c42a1b79396"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.tianyancha.com/bid/f406750dc5f311ea85737cd30aeb144c"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.tianyancha.com/bid/ec067ad3cb9a11e985737cd30aeb144c"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("16"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("17"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "//h1[contains(@class,\"company\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "隆基绿能科技股份有限公司"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "loopText_0",

            nodeId: NumberInt("6"),

            nodeName: "Loop_URLLIST",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tianyancha.com/company/3011939024/jingzhuang\nhttps://www.tianyancha.com/company/3028691107/jingzhuang\nhttps://www.tianyancha.com/company/3329251696/jingzhuang\n",

            value: "https://www.tianyancha.com/company/3011939024/jingzhuang\nhttps://www.tianyancha.com/company/3028691107/jingzhuang\nhttps://www.tianyancha.com/company/3329251696/jingzhuang\n"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("7"),

            nodeName: "Loop",

            desc: "循环Loop执行的次数（0代表无限循环）",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        },

        {

            id: NumberInt("2"),

            name: "urlList_2",

            nodeId: NumberInt("9"),

            nodeName: "Open Page",

            value: "https://www.tianyancha.com/company/3011939024/jingzhuang",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tianyancha.com/company/3011939024/jingzhuang"

        }

    ],

    links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

    name: "tianyancha_detail_2",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "供应商名称",

            desc: "",

            type: "string",

            exampleValue: "北京前沿信安科技股份有限公司"

        },

        {

            id: NumberInt("1"),

            name: "供应商日期",

            desc: "",

            type: "string",

            exampleValue: "2022-04-28"

        },

        {

            id: NumberInt("2"),

            name: "供应商条数",

            desc: "",

            type: "string",

            exampleValue: "查看全部5条采购数据"

        },

        {

            id: NumberInt("3"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "隆基绿能科技股份有限公司"

        }

    ],

    url: "https://www.tianyancha.com/company/3011939024/jingzhuang"

} );
db.getCollection("services").insert( {

    _id: ObjectId("634f2fa09dc2355e111bdd1c"),

    containJudge: false,

    desc: "https://www.tianyancha.com/company/3011939024/jingzhuang",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("9"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"suppliesV2\"]//div[@class=\"num\"]//i/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[21]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("5"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5"),

                NumberInt("17"),

                NumberInt("12")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("10"),

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"suppliesV2\"]//div[@class=\"num\"]//i[contains(@class,'next')]/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[23]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[12]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("9"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"suppliesV2\"]//tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "供应商名称",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"right-name\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "北京前沿信安科技股份有限公司"

                            },

                            {

                                num: NumberInt("2"),

                                value: "江苏中信博新能源科技股份有限公司"

                            },

                            {

                                num: NumberInt("3"),

                                value: "大连连城数控机器股份有限公司"

                            },

                            {

                                num: NumberInt("4"),

                                value: "索拉特特种玻璃（江苏）股份有限公司"

                            },

                            {

                                num: NumberInt("5"),

                                value: "正泰集团股份有限公司"

                            },

                            {

                                num: NumberInt("6"),

                                value: "江苏科强新材料股份有限公司"

                            },

                            {

                                num: NumberInt("7"),

                                value: "湖南华菱线缆股份有限公司"

                            },

                            {

                                num: NumberInt("8"),

                                value: "明冠新材料股份有限公司"

                            },

                            {

                                num: NumberInt("9"),

                                value: "浙江中晶科技股份有限公司"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "供应商日期",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2022-04-27"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2022-04-08"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2022-03-08"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2022-01-18"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2021-02-02"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2020-12-04"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2020-12-01"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "供应商条数",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]/div[2]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("3"),

                                value: "查看全部5条采购数据"

                            },

                            {

                                num: NumberInt("8"),

                                value: "查看全部5条采购数据"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("12"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("14"),

                NumberInt("13")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//div[@class=\"num\"]//i[contains(@class,'next')]/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("13"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[22]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[4]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("14"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("15"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "客户名称",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"right-name\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "华电新能源集团股份有限公司"

                            },

                            {

                                num: NumberInt("2"),

                                value: "中国华电集团物资有限公司"

                            },

                            {

                                num: NumberInt("3"),

                                value: "中广核楚雄大姚风力发电有限公司"

                            },

                            {

                                num: NumberInt("4"),

                                value: "悦达资本股份有限公司"

                            },

                            {

                                num: NumberInt("5"),

                                value: "阳光中科（福建）能源股份有限公司"

                            },

                            {

                                num: NumberInt("6"),

                                value: "河北华电混合蓄能水电有限公司"

                            },

                            {

                                num: NumberInt("7"),

                                value: "中广核（北京）新能源科技有限公司"

                            },

                            {

                                num: NumberInt("8"),

                                value: "天合光能股份有限公司"

                            },

                            {

                                num: NumberInt("9"),

                                value: "中广核乌海新能源有限公司"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "客户日期",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2022-07-01"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2022-03-16"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2021-10-15"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2021-04-30"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2021-04-29"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2021-03-26"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2020-07-09"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2020-05-21"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2017-11-01"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "客户条数",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]/div[2]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("2"),

                                value: "https://www.tianyancha.com/bid/e2754d21e3f8474b80bea3e02fa1fea4"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.tianyancha.com/bid/28f255e62df04a8688fb79553e7dc2f7"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.tianyancha.com/bid/206ba6728ded11ebb7630c42a1b79396"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.tianyancha.com/bid/f406750dc5f311ea85737cd30aeb144c"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.tianyancha.com/bid/ec067ad3cb9a11e985737cd30aeb144c"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("16"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("17"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "//h1[contains(@class,\"company\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "隆基绿能科技股份有限公司"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "loopText_0",

            nodeId: NumberInt("6"),

            nodeName: "Loop",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tianyancha.com/company/3011939024/jingzhuang",

            value: "https://www.tianyancha.com/company/3011939024/jingzhuang"

        },

        {

            id: NumberInt("1"),

            name: "urlList_1",

            nodeId: NumberInt("9"),

            nodeName: "Open Page",

            value: "https://www.tianyancha.com/company/3011939024/jingzhuang",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tianyancha.com/company/3011939024/jingzhuang"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("12"),

            nodeName: "Loop",

            desc: "循环Loop执行的次数（0代表无限循环）",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

    name: "tianyancha_detail_2",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "客户名称",

            desc: "",

            type: "string",

            exampleValue: "华电新能源集团股份有限公司"

        },

        {

            id: NumberInt("1"),

            name: "客户日期",

            desc: "",

            type: "string",

            exampleValue: "2022-07-01"

        },

        {

            id: NumberInt("2"),

            name: "客户条数",

            desc: "",

            type: "string",

            exampleValue: "https://www.tianyancha.com/bid/e2754d21e3f8474b80bea3e02fa1fea4"

        },

        {

            id: NumberInt("3"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "隆基绿能科技股份有限公司"

        }

    ],

    url: "https://www.tianyancha.com/company/3011939024/jingzhuang"

} );
db.getCollection("services").insert( {

    _id: ObjectId("634fb5ef7e45788f5558dd3b"),

    containJudge: false,

    desc: "https://www.tianyancha.com/company/3011939024/jingzhuang",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("9"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"suppliesV2\"]//div[@class=\"num\"]//i/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[21]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("5"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop_URLLIST",

            sequence: [

                NumberInt("5"),

                NumberInt("17"),

                NumberInt("7")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://www.tianyancha.com/company/3011939024/jingzhuang\nhttps://www.tianyancha.com/company/3028691107/jingzhuang\nhttps://www.tianyancha.com/company/3329251696/jingzhuang\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("10"),

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"suppliesV2\"]//div[@class=\"num\"]//i[contains(@class,'next')]/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[23]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[12]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("9"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"suppliesV2\"]//tbody//tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("11"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "供应商名称",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"right-name\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "北京前沿信安科技股份有限公司"

                            },

                            {

                                num: NumberInt("2"),

                                value: "江苏中信博新能源科技股份有限公司"

                            },

                            {

                                num: NumberInt("3"),

                                value: "大连连城数控机器股份有限公司"

                            },

                            {

                                num: NumberInt("4"),

                                value: "索拉特特种玻璃（江苏）股份有限公司"

                            },

                            {

                                num: NumberInt("5"),

                                value: "正泰集团股份有限公司"

                            },

                            {

                                num: NumberInt("6"),

                                value: "江苏科强新材料股份有限公司"

                            },

                            {

                                num: NumberInt("7"),

                                value: "湖南华菱线缆股份有限公司"

                            },

                            {

                                num: NumberInt("8"),

                                value: "明冠新材料股份有限公司"

                            },

                            {

                                num: NumberInt("9"),

                                value: "浙江中晶科技股份有限公司"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "供应商日期",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2022-04-27"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2022-04-08"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2022-03-08"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2022-01-18"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2021-02-02"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2020-12-04"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2020-12-01"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "供应商条数",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]/div[2]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("3"),

                                value: "查看全部5条采购数据"

                            },

                            {

                                num: NumberInt("8"),

                                value: "查看全部5条采购数据"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("14"),

                NumberInt("13")

            ],

            isInLoop: true,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//div[@class=\"num\"]//i[contains(@class,'next')]/..",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-root\"]/div[3]/div[1]/div[3]/div[1]/div[2]/div[2]/div[1]/div[22]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[4]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("14"),

            parentId: NumberInt("6"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//div[@data-dim=\"clientsV2\"]//tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("15"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "客户名称",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"right-name\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "华电新能源集团股份有限公司"

                            },

                            {

                                num: NumberInt("2"),

                                value: "中国华电集团物资有限公司"

                            },

                            {

                                num: NumberInt("3"),

                                value: "中广核楚雄大姚风力发电有限公司"

                            },

                            {

                                num: NumberInt("4"),

                                value: "悦达资本股份有限公司"

                            },

                            {

                                num: NumberInt("5"),

                                value: "阳光中科（福建）能源股份有限公司"

                            },

                            {

                                num: NumberInt("6"),

                                value: "河北华电混合蓄能水电有限公司"

                            },

                            {

                                num: NumberInt("7"),

                                value: "中广核（北京）新能源科技有限公司"

                            },

                            {

                                num: NumberInt("8"),

                                value: "天合光能股份有限公司"

                            },

                            {

                                num: NumberInt("9"),

                                value: "中广核乌海新能源有限公司"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "客户日期",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2022-07-01"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2022-04-28"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2022-03-16"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2021-10-15"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2021-04-30"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2021-04-29"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2021-03-26"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2020-07-09"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2020-05-21"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2017-11-01"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "客户条数",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]/div[2]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("2"),

                                value: "https://www.tianyancha.com/bid/e2754d21e3f8474b80bea3e02fa1fea4"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.tianyancha.com/bid/28f255e62df04a8688fb79553e7dc2f7"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.tianyancha.com/bid/206ba6728ded11ebb7630c42a1b79396"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.tianyancha.com/bid/f406750dc5f311ea85737cd30aeb144c"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.tianyancha.com/bid/ec067ad3cb9a11e985737cd30aeb144c"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("16"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("17"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "//h1[contains(@class,\"company\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "隆基绿能科技股份有限公司"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("11"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "loopText_0",

            nodeId: NumberInt("6"),

            nodeName: "Loop_URLLIST",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tianyancha.com/company/3011939024/jingzhuang\nhttps://www.tianyancha.com/company/3028691107/jingzhuang\nhttps://www.tianyancha.com/company/3329251696/jingzhuang\n",

            value: "https://www.tianyancha.com/company/3011939024/jingzhuang\nhttps://www.tianyancha.com/company/3028691107/jingzhuang\nhttps://www.tianyancha.com/company/3329251696/jingzhuang\n"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("7"),

            nodeName: "Loop",

            desc: "循环Loop执行的次数（0代表无限循环）",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        },

        {

            id: NumberInt("2"),

            name: "urlList_2",

            nodeId: NumberInt("9"),

            nodeName: "Open Page",

            value: "https://www.tianyancha.com/company/3011939024/jingzhuang",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tianyancha.com/company/3011939024/jingzhuang"

        }

    ],

    links: "https://www.tianyancha.com/company/3011939024/jingzhuang",

    name: "tianyancha_detail_1",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "供应商名称",

            desc: "",

            type: "string",

            exampleValue: "北京前沿信安科技股份有限公司"

        },

        {

            id: NumberInt("1"),

            name: "供应商日期",

            desc: "",

            type: "string",

            exampleValue: "2022-04-28"

        },

        {

            id: NumberInt("2"),

            name: "供应商条数",

            desc: "",

            type: "string",

            exampleValue: "查看全部5条采购数据"

        },

        {

            id: NumberInt("3"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "隆基绿能科技股份有限公司"

        }

    ],

    url: "https://www.tianyancha.com/company/3011939024/jingzhuang"

} );
db.getCollection("services").insert( {

    _id: ObjectId("6350e4b89dc2355e111bdd1e"),

    containJudge: false,

    desc: "https://so.toutiao.com/search?dvpf=pc&source=input&keyword=小荷医典&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("5")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("3"),

                url: "https://so.toutiao.com/search?dvpf=pc&source=input&keyword=小荷医典&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media",

                links: "https://so.toutiao.com/search?dvpf=pc&source=input&keyword=小荷医典&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=国家反诈中心&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=光明网&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//a[contains(@class, 'flex-row')][1]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/button",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "63.3万获赞"

                            },

                            {

                                num: NumberInt("1"),

                                value: "10.3万粉丝"

                            },

                            {

                                num: NumberInt("2"),

                                value: "5关注"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数2_文本",

                        desc: "",

                        relativeXPath: "//p[contains(@class, 'user-desc')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "简介：关注小荷医典，获取“权威、科学、实用、易懂”的医学信息"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数3_文本",

                        desc: "",

                        relativeXPath: "//div[contains(@class, 'relation-stat')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "63.3万获赞"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "//div[contains(@class, 'detail')]//span[contains(@class, 'name')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "小荷医典"

                            }

                        ]

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_链接地址",

                        desc: "",

                        relativeXPath: "//a[@class=\"avatar\"]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.toutiao.com/c/user/token/MS4wLjABAAAAMpLV_1BmiyKp0yLcLZb1xJjVxmOnwObqydIzTC2ngoQ/?source=profile"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数6_链接地址",

                        desc: "",

                        relativeXPath: "//a[contains(@class, 'flex-row')][1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://so.toutiao.com/search/jump?url=https%3A%2F%2Fwww.toutiao.com%2Fc%2Fuser%2F95347840570%2F&aid=4916&jtoken=804fb410ca0c16fb0980b0a082d0c707d7ae7fb539575218f9e98534f7a9a598c00b8d749a4eb8859d5df7b1b0a122356b0b56810577c9f74a5faf9d6c18f340"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("7"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://so.toutiao.com/search?dvpf=pc&source=input&keyword=小荷医典&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=国家反诈中心&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=光明网&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://so.toutiao.com/search?dvpf=pc&source=input&keyword=小荷医典&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=国家反诈中心&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=光明网&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media"

        }

    ],

    links: "https://so.toutiao.com/search?dvpf=pc&source=input&keyword=小荷医典&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=国家反诈中心&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media\r\nhttps://so.toutiao.com/search?dvpf=pc&source=input&keyword=光明网&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media",

    name: "toutiao_author_desc",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数2_文本",

            desc: "",

            type: "string",

            exampleValue: "简介：关注小荷医典，获取“权威、科学、实用、易懂”的医学信息"

        },

        {

            id: NumberInt("1"),

            name: "参数3_文本",

            desc: "",

            type: "string",

            exampleValue: "63.3万获赞"

        },

        {

            id: NumberInt("2"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "小荷医典"

        },

        {

            id: NumberInt("3"),

            name: "参数1_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.toutiao.com/c/user/token/MS4wLjABAAAAMpLV_1BmiyKp0yLcLZb1xJjVxmOnwObqydIzTC2ngoQ/?source=profile"

        }

    ],

    url: "https://so.toutiao.com/search?dvpf=pc&source=input&keyword=小荷医典&pd=user&action_type=search_subtab_switch&page_num=0&from=media&cur_tab_title=media"

} );
db.getCollection("services").insert( {

    _id: ObjectId("6350e9217e45788f5558dd3f"),

    containJudge: false,

    desc: "https://suzhoutaohuawu.com/",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("3"),

                url: "https://suzhoutaohuawu.com/",

                links: "https://suzhoutaohuawu.com/",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[1]/input[1]",

                wait: NumberInt("0"),

                value: "ii"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[2]/svg[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "/html/body/div[3]/div[1]/div[2]/div[2]/div[1]/div[1]/div[2]/div[1]/div/div[1]/div[2]/div[1]/div[1]/a[1]/h3[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "DJSODA性感土嗨😍😘💕❤️🧡💛💚💙💜💗"

                            },

                            {

                                num: NumberInt("1"),

                                value: "关于现视研正确打开姿势的另一可能性"

                            },

                            {

                                num: NumberInt("2"),

                                value: "DEMO-周杰伦"

                            },

                            {

                                num: NumberInt("3"),

                                value: "【4K】手机和相机如何高音质直播RØDECasterPro直播案例【赵君日记Vlog154】"

                            },

                            {

                                num: NumberInt("4"),

                                value: "用古董Apple上网、刷贴吧！"

                            },

                            {

                                num: NumberInt("5"),

                                value: "隔屏疼！2岁娃被1碗泡面致深度烫伤，家人处理方式令医生叹息"

                            },

                            {

                                num: NumberInt("6"),

                                value: "【4K治愈】真实存在的动漫场景，在新疆！《伊犁的童话：鹰的国》"

                            },

                            {

                                num: NumberInt("7"),

                                value: "【高中物理】（老教材）电学篇（50小时学完高中物理系列）"

                            },

                            {

                                num: NumberInt("8"),

                                value: "你一定听过的《Jade》主打歌丨你有心"

                            },

                            {

                                num: NumberInt("9"),

                                value: "他的每个眼神都写满了爱你，你又怎么舍得让他难过！！！穆川眼神合集"

                            },

                            {

                                num: NumberInt("10"),

                                value: "防暴利器—世界警用防暴装甲车大盘点#防暴车#SWAT#剑齿虎"

                            },

                            {

                                num: NumberInt("11"),

                                value: "地表最强“物理黑客”在线超度!!！【WATCHDOGS-最骚黑客】"

                            },

                            {

                                num: NumberInt("12"),

                                value: "【熟肉】6分钟听完31位音乐家的52首古典音乐_第二季古典音乐混搭_ClassicalMusicMashup"

                            },

                            {

                                num: NumberInt("13"),

                                value: "⚡️坤坤奥特曼⚡️"

                            },

                            {

                                num: NumberInt("14"),

                                value: "◈黑执事▪︎𝕮𝖍𝖎𝖑𝖉𝖗𝖊𝖓𝕺𝖋𝕿𝖍𝖊𝕮𝖔𝖗𝖓◈"

                            },

                            {

                                num: NumberInt("15"),

                                value: "当一名金属鼓手迫于生计不得不给儿歌伴奏时"

                            },

                            {

                                num: NumberInt("16"),

                                value: "街头霸王～跳绳"

                            },

                            {

                                num: NumberInt("17"),

                                value: "嘎狼"

                            },

                            {

                                num: NumberInt("18"),

                                value: "【试试就逝世】极度舒适老鼠去世合集（）"

                            },

                            {

                                num: NumberInt("19"),

                                value: "【影视解说】大幻术师：2022年钱小豪新作，幻术升级谜案重重，神秘凶手竟用法术杀人"

                            },

                            {

                                num: NumberInt("20"),

                                value: "【要不要来条尾巴？】-Furtail电动体感尾巴"

                            },

                            {

                                num: NumberInt("21"),

                                value: "徐乐同《回家之路(《独行月球》电影插曲)》"

                            },

                            {

                                num: NumberInt("22"),

                                value: "[实教]喜欢一个人的眼神是藏不住的！轻井泽的眼神变化合集"

                            },

                            {

                                num: NumberInt("23"),

                                value: "【请回答1988】一笑懸命每天一遍防止抑郁"

                            },

                            {

                                num: NumberInt("24"),

                                value: "纽约｜因为梦想和自由"

                            },

                            {

                                num: NumberInt("25"),

                                value: "【在下萝莉控】labo拆箱＆试玩"

                            },

                            {

                                num: NumberInt("26"),

                                value: "第94集TED原声跟读笔记人的一生，其实只有9年（视频笔记版）"

                            },

                            {

                                num: NumberInt("27"),

                                value: "【国产】在勾引中学会爱2017【第一至四集】"

                            },

                            {

                                num: NumberInt("28"),

                                value: "《DEEMO》概念前导片"

                            },

                            {

                                num: NumberInt("29"),

                                value: "军迷圈那些趣图-汉斯篇"

                            },

                            {

                                num: NumberInt("30"),

                                value: "张叔平：不让梳平，就梳炸。丑不到你算我输！黄奕/何润东/秦岚/陈冠霖/杨蕊/郑国霖/陈怡蓉/冯绍峰《风云2》"

                            },

                            {

                                num: NumberInt("31"),

                                value: "新人快速进阶！素组高达玩旧化！迪叔成型色马克笔拟真旧化大挑战之SDBBZAKU夏亚红扎古大神小课堂"

                            },

                            {

                                num: NumberInt("32"),

                                value: "【意境向】Dreamspt."

                            },

                            {

                                num: NumberInt("33"),

                                value: "小学生：??"

                            },

                            {

                                num: NumberInt("34"),

                                value: "十年前那些不用氪金的手游，到底有多么上头？【找游工具人01】"

                            },

                            {

                                num: NumberInt("35"),

                                value: "【霆峰·友谊向】不怕胖里就戳进来不甜不要钱"

                            },

                            {

                                num: NumberInt("36"),

                                value: "1991年伊丽莎白二世在美国会演讲QueenElizabethAddresstoCongress(1991)"

                            },

                            {

                                num: NumberInt("37"),

                                value: "【4K60帧】森高千里-見て(LOOK)[見てスペシャル～ライヴin汐留PIT4.15.’89]AI修复"

                            },

                            {

                                num: NumberInt("38"),

                                value: "古川雄辉丨他说英文时真的好迷人听古川男神的流利英文"

                            },

                            {

                                num: NumberInt("39"),

                                value: "第87集油管3000万播放量演讲做人一定要坚持！(视频笔记版)"

                            },

                            {

                                num: NumberInt("40"),

                                value: "居然真有人把虚假宣传广告做成游戏了？？？【找游工具人16】"

                            },

                            {

                                num: NumberInt("41"),

                                value: "【一镜到底】赶上兔兔首发车！全网最快最美TWICE-TalkthatTalk全曲翻跳|Kpop翻跳|byChannel"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数2_文本",

                        desc: "",

                        relativeXPath: "/em[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "II"

                            },

                            {

                                num: NumberInt("1"),

                                value: "II"

                            },

                            {

                                num: NumberInt("2"),

                                value: "II"

                            },

                            {

                                num: NumberInt("3"),

                                value: "II"

                            },

                            {

                                num: NumberInt("4"),

                                value: "II"

                            },

                            {

                                num: NumberInt("5"),

                                value: "II"

                            },

                            {

                                num: NumberInt("6"),

                                value: "II"

                            },

                            {

                                num: NumberInt("7"),

                                value: "II"

                            },

                            {

                                num: NumberInt("8"),

                                value: "II"

                            },

                            {

                                num: NumberInt("9"),

                                value: "II"

                            },

                            {

                                num: NumberInt("10"),

                                value: "II"

                            },

                            {

                                num: NumberInt("11"),

                                value: "II"

                            },

                            {

                                num: NumberInt("12"),

                                value: "II"

                            },

                            {

                                num: NumberInt("13"),

                                value: "II"

                            },

                            {

                                num: NumberInt("14"),

                                value: "II"

                            },

                            {

                                num: NumberInt("15"),

                                value: "II"

                            },

                            {

                                num: NumberInt("16"),

                                value: "II"

                            },

                            {

                                num: NumberInt("17"),

                                value: "II"

                            },

                            {

                                num: NumberInt("18"),

                                value: "II"

                            },

                            {

                                num: NumberInt("19"),

                                value: "II"

                            },

                            {

                                num: NumberInt("20"),

                                value: "II"

                            },

                            {

                                num: NumberInt("21"),

                                value: "II"

                            },

                            {

                                num: NumberInt("22"),

                                value: "II"

                            },

                            {

                                num: NumberInt("23"),

                                value: "II"

                            },

                            {

                                num: NumberInt("24"),

                                value: "II"

                            },

                            {

                                num: NumberInt("25"),

                                value: "ii"

                            },

                            {

                                num: NumberInt("26"),

                                value: "II"

                            },

                            {

                                num: NumberInt("27"),

                                value: "II"

                            },

                            {

                                num: NumberInt("28"),

                                value: "II"

                            },

                            {

                                num: NumberInt("29"),

                                value: "II"

                            },

                            {

                                num: NumberInt("30"),

                                value: "II"

                            },

                            {

                                num: NumberInt("31"),

                                value: "II"

                            },

                            {

                                num: NumberInt("32"),

                                value: "II"

                            },

                            {

                                num: NumberInt("33"),

                                value: "ii"

                            },

                            {

                                num: NumberInt("34"),

                                value: "II"

                            },

                            {

                                num: NumberInt("35"),

                                value: "II"

                            },

                            {

                                num: NumberInt("36"),

                                value: "II"

                            },

                            {

                                num: NumberInt("37"),

                                value: "II"

                            },

                            {

                                num: NumberInt("38"),

                                value: "II"

                            },

                            {

                                num: NumberInt("39"),

                                value: "II"

                            },

                            {

                                num: NumberInt("40"),

                                value: "II"

                            },

                            {

                                num: NumberInt("41"),

                                value: "II"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("4"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://suzhoutaohuawu.com/",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://suzhoutaohuawu.com/"

        }

    ],

    links: "https://suzhoutaohuawu.com/",

    name: "刷点击量",

    outputParameters: [ ],

    url: "https://www.bilibili.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("635194957e45788f5558dd46"),

    containJudge: false,

    desc: "https://suzhoutaohuawu.com/",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("2"),

            index: NumberInt("1"),

            parentId: NumberInt("1"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://suzhoutaohuawu.com/",

                links: "https://suzhoutaohuawu.com/",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("1"),

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "3",

                pathList: "",

                textList: "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("1"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("2"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/main[1]/div[1]/div[1]/div[1]/div[1]/h2[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "              Suzhou Taohuawu Woodcut New Year Pictures 苏州桃花坞木刻年画"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://suzhoutaohuawu.com/",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://suzhoutaohuawu.com/"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("2"),

            nodeName: "Loop",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n",

            value: "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n"

        }

    ],

    links: "https://suzhoutaohuawu.com/",

    name: "clickrate",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "              Suzhou Taohuawu Woodcut New Year Pictures 苏州桃花坞木刻年画"

        }

    ],

    url: "https://suzhoutaohuawu.com/"

} );
db.getCollection("services").insert( {

    _id: ObjectId("635949de7e45788f5558dd52"),

    containJudge: true,

    desc: "http://www.cdfgsanya.com/product-list.html?sw=%E5%B1%B1%E5%B4%8E12%E5%B9%B4%E5%A8%81%E5%A3%AB%E5%BF%8C%20700ml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("7")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("5"),

                url: "http://www.cdfgsanya.com/product-list.html?sw=%E5%B1%B1%E5%B4%8E12%E5%B9%B4%E5%A8%81%E5%A3%AB%E5%BF%8C%20700ml",

                links: "http://www.cdfgsanya.com/product-list.html?sw=山崎12年威士忌 700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑VSOP\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑名仕  1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=卡慕干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=百龄坛17年威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪23年单一麦芽威士忌700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪珍藏桶单一纯麦威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=帝王苏格兰调和威士忌15年\nhttp://www.cdfgsanya.com/product-list.html?sw=艾柏迪12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑特醇1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=大摩12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=高原骑士雄鹰之翼16年\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰花格10年单一麦芽苏格兰威士忌\n",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("2"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4"),

                NumberInt("3"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[4]/div[1]/div[1]/div/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("3"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[4]/div[1]/div[1]/div/a[1]",

                wait: NumberInt("3"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("4"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[4]/div[1]/div[1]/div[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "MARTELL 马爹利马爹利蓝带干邑公升装 1000ml"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[4]/div[1]/div[1]/div[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ]

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[1]/span[2]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "马爹利干邑VSOP"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("5"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数3_文本",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[2]/div[2]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "￥1710.00"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数4_文本",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[2]/div[2]/div[1]/div[1]/div[5]/ul[1]/li[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "促销此商品专享9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("7"),

            parentId: NumberInt("0"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("8"),

                NumberInt("9")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            parentId: NumberInt("2"),

            index: NumberInt("8"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition——无商品",

            sequence: [

                NumberInt("10")

            ],

            isInLoop: false,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "1",

                value: "没有符合条件的商品"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("4"),

            parentId: NumberInt("2"),

            index: NumberInt("9"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("2")

            ],

            isInLoop: false,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        },

        {

            id: NumberInt("5"),

            index: NumberInt("10"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[1]/span[2]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰花格10年单一麦芽苏格兰威士忌"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "http://www.cdfgsanya.com/product-list.html?sw=山崎12年威士忌 700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑VSOP\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑名仕  1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=卡慕干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=百龄坛17年威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪23年单一麦芽威士忌700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪珍藏桶单一纯麦威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=帝王苏格兰调和威士忌15年\nhttp://www.cdfgsanya.com/product-list.html?sw=艾柏迪12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑特醇1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=大摩12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=高原骑士雄鹰之翼16年\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰花格10年单一麦芽苏格兰威士忌\n",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "http://www.cdfgsanya.com/product-list.html?sw=山崎12年威士忌 700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑VSOP\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑名仕  1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=卡慕干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=百龄坛17年威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪23年单一麦芽威士忌700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪珍藏桶单一纯麦威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=帝王苏格兰调和威士忌15年\nhttp://www.cdfgsanya.com/product-list.html?sw=艾柏迪12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑特醇1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=大摩12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=高原骑士雄鹰之翼16年\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰花格10年单一麦芽苏格兰威士忌\n"

        }

    ],

    links: "http://www.cdfgsanya.com/product-list.html?sw=山崎12年威士忌 700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑VSOP\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利干邑名仕  1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=卡慕干邑XO 1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=百龄坛17年威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪23年单一麦芽威士忌700ml\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰菲迪珍藏桶单一纯麦威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=帝王苏格兰调和威士忌15年\nhttp://www.cdfgsanya.com/product-list.html?sw=艾柏迪12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=马爹利蓝带干邑特醇1000ml\nhttp://www.cdfgsanya.com/product-list.html?sw=大摩12年单一麦芽威士忌\nhttp://www.cdfgsanya.com/product-list.html?sw=高原骑士雄鹰之翼16年\nhttp://www.cdfgsanya.com/product-list.html?sw=格兰花格10年单一麦芽苏格兰威士忌\n",

    name: "cdf商品数据",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "MARTELL 马爹利马爹利蓝带干邑公升装 1000ml"

        },

        {

            id: NumberInt("1"),

            name: "参数2_链接地址",

            desc: "",

            type: "string",

            exampleValue: ""

        },

        {

            id: NumberInt("2"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "马爹利干邑VSOP"

        },

        {

            id: NumberInt("3"),

            name: "参数3_文本",

            desc: "",

            type: "string",

            exampleValue: "￥1710.00"

        },

        {

            id: NumberInt("4"),

            name: "参数4_文本",

            desc: "",

            type: "string",

            exampleValue: "促销此商品专享9折"

        }

    ],

    url: "http://www.cdfgsanya.com/product-list.html?sw=%E5%B1%B1%E5%B4%8E12%E5%B9%B4%E5%A8%81%E5%A3%AB%E5%BF%8C%20700ml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63595d8b7e45788f5558dd5c"),

    containJudge: true,

    desc: "https://search.jd.hk/search?keyword=%E5%B1%B1%E5%B4%8E12%E5%B9%B4%E5%A8%81%E5%A3%AB%E5%BF%8C%20700ml&enc=utf-8&stock=1&sort=sort_totalsales15_desc",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("14"),

                NumberInt("15")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("3"),

            index: NumberInt("1"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("5"),

                url: "https://search.jd.hk/search?keyword=%E5%B1%B1%E5%B4%8E12%E5%B9%B4%E5%A8%81%E5%A3%AB%E5%BF%8C%20700ml&enc=utf-8&stock=1&sort=sort_totalsales15_desc",

                links: "https://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=山崎12年威士忌 700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑VSOP\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑名仕  1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=卡慕干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=百龄坛17年威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪23年单一麦芽威士忌700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=帝王苏格兰调和威士忌15年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=艾柏迪12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑特醇1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=大摩12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=高原骑士雄鹰之翼16年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰花格10年单一麦芽苏格兰威士忌\n",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("2"),

            parentId: NumberInt("6"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4"),

                NumberInt("3"),

                NumberInt("6")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "(//*[@id=\"plist\"]/ul/li/div[2]/div/div[3]/a)[position()<11]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("10"),

            index: NumberInt("3"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[5]/div[1]/div[2]/div[2]/div[1]/div[1]/div[3]/ul[1]/li/div[2]/div[1]/div[3]/a[1]/em[1]",

                wait: NumberInt("3"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("4"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "京东商品名",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "京东国际山崎（Yamazaki）12年（有盒）日本单一麦芽威士忌 700ml 三得利 进口洋酒 【跨境洋酒】纵享极致优惠，直击底价。\n【酒是宠你】瓶瓶醇香酒不同，杯杯佳酿品质高。\n【0元入会】花漾省“薪”，享更多福利权益。戳"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "京东商品链接地址",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://npcitem.jd.hk/100021316412.html"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("15"),

            index: NumberInt("5"),

            parentId: NumberInt("13"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "京东价格",

                        desc: "",

                        relativeXPath: "//span[contains(@class,\"p-price\")]//span[contains(@class,\"price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "1851.00"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "活动内容",

                        desc: "",

                        relativeXPath: "//*[@id=\"summary-promotion\"]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n                                    \n                                    \n                                    \n                                    \n                                                                                        跨自营/店铺满减 每满1000元，可减60元现金，最多可减300元     详情>>                满减满额返券                                        满减 满700元减170元                                                           满额返券 购医药母婴保健清洁个护酒水国际等部分自营商品满1元即返券包     详情>>                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                        展开促销\n                                        \n                                    \n                                \"跨自营/店铺满减\"\"满减\"仅可任选其一，可在购物车更改"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "优惠券信息",

                        desc: "",

                        relativeXPath: "//*[@id=\"summary-quan\"]/div[2]/dl/dd",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "                                                                                                                                  满399减50                                                                                                                                          满399减50                                                                              "

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("6"),

            parentId: NumberInt("8"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("7"),

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("12"),

            parentId: NumberInt("11"),

            index: NumberInt("7"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("9")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "1",

                value: "定　　金"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("13"),

            parentId: NumberInt("11"),

            index: NumberInt("8"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        },

        {

            id: NumberInt("14"),

            index: NumberInt("9"),

            parentId: NumberInt("12"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "京东价格",

                        desc: "",

                        relativeXPath: "(//span[contains(@class,\"p-price\")]//span[contains(@class,\"price\")])[last()]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "1851.00"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "活动内容",

                        desc: "",

                        relativeXPath: "//*[@id=\"summary-promotion\"]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n                                    \n                                    \n                                    \n                                    \n                                                                                        跨自营/店铺满减 每满1000元，可减60元现金，最多可减300元     详情>>                满减满额返券                                        满减 满700元减170元                                                           满额返券 购医药母婴保健清洁个护酒水国际等部分自营商品满1元即返券包     详情>>                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                        展开促销\n                                        \n                                    \n                                \"跨自营/店铺满减\"\"满减\"仅可任选其一，可在购物车更改"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "优惠券信息",

                        desc: "",

                        relativeXPath: "//*[@id=\"summary-quan\"]/div[2]/dl/dd",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "                                                                                                                                  满399减50                                                                                                                                          满399减50                                                                              "

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("10"),

            parentId: NumberInt("2"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("11"),

                NumberInt("12")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            parentId: NumberInt("4"),

            index: NumberInt("11"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("13")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "1",

                value: "抱歉"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("6"),

            parentId: NumberInt("4"),

            index: NumberInt("12"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("2")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        },

        {

            id: NumberInt("7"),

            index: NumberInt("13"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "京东商品名",

                        desc: "",

                        relativeXPath: "/html/body/div[4]/div[1]/div[1]/div[2]/b[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\"山崎12年威士忌 700ml\""

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("14"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("30"),

                url: "https://passport.jd.com/new/login.aspx?sso=1&ReturnUrl=https://sso.jd.hk/sso/redirect",

                links: "https://passport.jd.com/new/login.aspx?sso=1&ReturnUrl=https://sso.jd.hk/sso/redirect",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("15"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("1"),

                NumberInt("10")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=山崎12年威士忌 700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑VSOP\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑名仕  1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=卡慕干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=百龄坛17年威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪23年单一麦芽威士忌700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=帝王苏格兰调和威士忌15年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=艾柏迪12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑特醇1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=大摩12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=高原骑士雄鹰之翼16年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰花格10年单一麦芽苏格兰威士忌\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("14"),

            nodeName: "Open Page",

            value: "https://passport.jd.com/new/login.aspx?sso=1&ReturnUrl=https://sso.jd.hk/sso/redirect",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://passport.jd.com/new/login.aspx?sso=1&ReturnUrl=https://sso.jd.hk/sso/redirect"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("15"),

            nodeName: "Loop",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=山崎12年威士忌 700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑VSOP\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑名仕  1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=卡慕干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=百龄坛17年威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪23年单一麦芽威士忌700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=帝王苏格兰调和威士忌15年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=艾柏迪12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑特醇1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=大摩12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=高原骑士雄鹰之翼16年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰花格10年单一麦芽苏格兰威士忌\n",

            value: "https://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=山崎12年威士忌 700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑VSOP\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利干邑名仕  1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=卡慕干邑XO 1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=百龄坛17年威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪23年单一麦芽威士忌700ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=帝王苏格兰调和威士忌15年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=艾柏迪12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=马爹利蓝带干邑特醇1000ml\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=大摩12年单一麦芽威士忌\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=高原骑士雄鹰之翼16年\nhttps://search.jd.hk/search?stock=1&sort=sort_totalsales15_desc&enc=utf-8&stock=0&keyword=格兰花格10年单一麦芽苏格兰威士忌\n"

        }

    ],

    links: "https://passport.jd.com/new/login.aspx?sso=1&ReturnUrl=https://sso.jd.hk/sso/redirect",

    name: "JD国际",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "京东商品名",

            desc: "",

            type: "string",

            exampleValue: "京东国际山崎（Yamazaki）12年（有盒）日本单一麦芽威士忌 700ml 三得利 进口洋酒 【跨境洋酒】纵享极致优惠，直击底价。\n【酒是宠你】瓶瓶醇香酒不同，杯杯佳酿品质高。\n【0元入会】花漾省“薪”，享更多福利权益。戳"

        },

        {

            id: NumberInt("1"),

            name: "京东商品链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://npcitem.jd.hk/100021316412.html"

        },

        {

            id: NumberInt("2"),

            name: "京东价格",

            desc: "",

            type: "string",

            exampleValue: "1851.00"

        },

        {

            id: NumberInt("3"),

            name: "活动内容",

            desc: "",

            type: "string",

            exampleValue: "\n                                    \n                                    \n                                    \n                                    \n                                                                                        跨自营/店铺满减 每满1000元，可减60元现金，最多可减300元     详情>>                满减满额返券                                        满减 满700元减170元                                                           满额返券 购医药母婴保健清洁个护酒水国际等部分自营商品满1元即返券包     详情>>                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                        展开促销\n                                        \n                                    \n                                \"跨自营/店铺满减\"\"满减\"仅可任选其一，可在购物车更改"

        },

        {

            id: NumberInt("4"),

            name: "优惠券信息",

            desc: "",

            type: "string",

            exampleValue: "                                                                                                                                  满399减50                                                                                                                                          满399减50                                                                              "

        }

    ],

    url: "https://search.jd.hk/search?keyword=%E5%B1%B1%E5%B4%8E12%E5%B9%B4%E5%A8%81%E5%A3%AB%E5%BF%8C%20700ml&enc=utf-8&stock=1&sort=sort_totalsales15_desc"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63597be09dc2355e111bdd33"),

    containJudge: true,

    desc: "TMALL",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("2"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tmall.hk/wow/member-club/act/login",

                links: "https://www.tmall.hk/wow/member-club/act/login",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"first\"]/div[2]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"fm-login-id\"]",

                wait: NumberInt("60"),

                value: "15300412144"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"captcha-btn\"]",

                wait: NumberInt("60"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("8"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11"),

                NumberInt("9"),

                NumberInt("13")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "(//*[@id=\"J_ItemList\"]/div/div/p[2]/a)[position()<11]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("9"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div/div[1]/div[1]/div[2]/div[1]",

                wait: NumberInt("30"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("10"),

            index: NumberInt("10"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"tm-promo-price\")]//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//ul[contains(@class,'bd')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("11"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("13"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n【自营】Yamazaki山崎日本 山崎12年单一麦芽威士忌700ml无盒*2\n"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3486055966f7d03fae5b51df9e812215"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("12"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//ul[contains(@class,'bd')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("13"),

            parentId: NumberInt("4"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("14"),

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("8"),

            parentId: NumberInt("7"),

            index: NumberInt("14"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("10")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "1",

                value: "促销价"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("9"),

            parentId: NumberInt("7"),

            index: NumberInt("15"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("12")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        }

    ],

    id: NumberInt("16"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("2"),

            nodeName: "Open Page",

            value: "https://www.tmall.hk/wow/member-club/act/login",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tmall.hk/wow/member-club/act/login"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("6"),

            nodeName: "Loop",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n",

            value: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n"

        }

    ],

    links: "https://www.tmall.hk/wow/member-club/act/login",

    name: "天猫国际",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "Tmall商品名称",

            desc: "",

            type: "string",

            exampleValue: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

        },

        {

            id: NumberInt("1"),

            name: "Tmall销量",

            desc: "",

            type: "string",

            exampleValue: "已拼1108件"

        },

        {

            id: NumberInt("2"),

            name: "Tmall价格",

            desc: "",

            type: "string",

            exampleValue: "200"

        },

        {

            id: NumberInt("3"),

            name: "Tmall活动",

            desc: "",

            type: "string",

            exampleValue: "满20减12件9.9折"

        },

        {

            id: NumberInt("4"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "\n【自营】Yamazaki山崎日本 山崎12年单一麦芽威士忌700ml无盒*2\n"

        },

        {

            id: NumberInt("5"),

            name: "参数2_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3486055966f7d03fae5b51df9e812215"

        }

    ],

    url: "https://mobile.yangkeduo.com/login.html"

} );
db.getCollection("services").insert( {

    _id: ObjectId("6359a66d9dc2355e111bdd35"),

    containJudge: false,

    desc: "TMALL",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("2"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("30"),

                url: "https://www.tmall.hk/wow/member-club/act/login",

                links: "https://www.tmall.hk/wow/member-club/act/login",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"first\"]/div[2]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"fm-login-id\"]",

                wait: NumberInt("60"),

                value: "15300412144"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"captcha-btn\"]",

                wait: NumberInt("60"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("8"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "(//*[@id=\"J_ItemList\"]/div/div/p[2]/a)[position()<11]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div/div[1]/div[1]/div[2]/div[1]",

                wait: NumberInt("30"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"tm-promo-price\")]//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//ul[contains(@class,'bd')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("11"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("13"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n【自营】Yamazaki山崎日本 山崎12年单一麦芽威士忌700ml无盒*2\n"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3486055966f7d03fae5b51df9e812215"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//ul[contains(@class,'bd')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("4"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("14"),

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            parentId: NumberInt("7"),

            index: NumberInt("14"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("10")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "1",

                value: "促销价"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("-1"),

            parentId: NumberInt("7"),

            index: NumberInt("15"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("12")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        }

    ],

    id: NumberInt("17"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("2"),

            nodeName: "Open Page",

            value: "https://www.tmall.hk/wow/member-club/act/login",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tmall.hk/wow/member-club/act/login"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("6"),

            nodeName: "Loop",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n",

            value: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n"

        }

    ],

    links: "https://www.tmall.hk/wow/member-club/act/login",

    name: "天猫国际标题及链接",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "\n【自营】Yamazaki山崎日本 山崎12年单一麦芽威士忌700ml无盒*2\n"

        },

        {

            id: NumberInt("1"),

            name: "参数2_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3486055966f7d03fae5b51df9e812215"

        }

    ],

    url: "https://mobile.yangkeduo.com/login.html"

} );
db.getCollection("services").insert( {

    _id: ObjectId("6359a7ff9dc2355e111bdd37"),

    containJudge: false,

    desc: "TMALL",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("2"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("30"),

                url: "https://www.tmall.hk/wow/member-club/act/login",

                links: "https://www.tmall.hk/wow/member-club/act/login",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"first\"]/div[2]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"fm-login-id\"]",

                wait: NumberInt("60"),

                value: "15300412144"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"captcha-btn\"]",

                wait: NumberInt("60"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("8"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "(//*[@id=\"J_ItemList\"]/div/div/p[2]/a)[position()<11]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div/div[1]/div[1]/div[2]/div[1]",

                wait: NumberInt("30"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"tm-promo-price\")]//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//ul[contains(@class,'bd')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("11"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("13"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n【自营】Yamazaki山崎日本 山崎12年单一麦芽威士忌700ml无盒*2\n"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3486055966f7d03fae5b51df9e812215"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//ul[contains(@class,'bd')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("4"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("14"),

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            parentId: NumberInt("7"),

            index: NumberInt("14"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("10")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "1",

                value: "促销价"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("-1"),

            parentId: NumberInt("7"),

            index: NumberInt("15"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("12")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("2"),

            nodeName: "Open Page",

            value: "https://www.tmall.hk/wow/member-club/act/login",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tmall.hk/wow/member-club/act/login"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("6"),

            nodeName: "Loop",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n",

            value: "https://list.tmall.hk/search_product.htm?sort=d&q=山崎12年威士忌 700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑VSOP\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利干邑名仕  1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=卡慕干邑XO 1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=百龄坛17年威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪23年单一麦芽威士忌700ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=帝王苏格兰调和威士忌15年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=艾柏迪12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=马爹利蓝带干邑特醇1000ml\nhttps://list.tmall.hk/search_product.htm?sort=d&q=大摩12年单一麦芽威士忌\nhttps://list.tmall.hk/search_product.htm?sort=d&q=高原骑士雄鹰之翼16年\nhttps://list.tmall.hk/search_product.htm?sort=d&q=格兰花格10年单一麦芽苏格兰威士忌\n"

        }

    ],

    links: "https://www.tmall.hk/wow/member-club/act/login",

    name: "天猫国际细节",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "\n【自营】Yamazaki山崎日本 山崎12年单一麦芽威士忌700ml无盒*2\n"

        },

        {

            id: NumberInt("1"),

            name: "参数2_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3486055966f7d03fae5b51df9e812215"

        }

    ],

    url: "https://mobile.yangkeduo.com/login.html"

} );
db.getCollection("services").insert( {

    _id: ObjectId("635a5e037e45788f5558dd77"),

    containJudge: true,

    desc: "TMALL",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("2"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("60"),

                url: "https://www.tmall.hk/wow/member-club/act/login",

                links: "https://www.tmall.hk/wow/member-club/act/login",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"first\"]/div[2]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"fm-login-id\"]",

                wait: NumberInt("60"),

                value: "15300412144"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"captcha-btn\"]",

                wait: NumberInt("60"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7"),

                NumberInt("13")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://detail.tmall.hk/item.htm?id=658641278118&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=661890189422&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=655093526731&skuId=4722646792697&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=627569178411&skuId=4862853365173&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=636055777039&skuId=4645617529132&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=688858127211&skuId=4902371768889&user_id=2200657974488&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=688217639958&skuId=5072411486570&user_id=2211620739106&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=673752006327&skuId=4850085397621&user_id=2201196294013&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=644176111194&skuId=4803927442138&user_id=4066234693&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=666388233142&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=665782599546&skuId=4964481990530&user_id=2208809643523&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=676864927096&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=628465335701&skuId=4631419227811&user_id=2208809643523&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=679778539067&skuId=4869780972851&user_id=2208001160576&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=676216525152&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=687644929281&skuId=4899422700228&user_id=2213203431581&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=665782599546&skuId=4964481990530&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=679186327100&skuId=5040379050593&user_id=2208001160576&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=625756943270&skuId=4599437546828&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=628465335701&skuId=4631419227811&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=687644929281&skuId=4899422700228&user_id=2213203431581&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=665799173163&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=665799009405&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=674085737113&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=674364570689&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=632368285229&skuId=4747111192712&user_id=2208809643523&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=642010267399&skuId=4608264276629&user_id=2208001160576&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=669653355013&skuId=4990436987771&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=640840112439&skuId=4780229330767&user_id=2208001160576&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=671922578171&skuId=4836777085975&user_id=2213203431581&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=688213231080&skuId=5072374346970&user_id=2213203431581&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=688213231080&skuId=5072374346970&user_id=2213203431581&cat_id=52792006&is_b=1&rn=692b142c738cf29311d58032028b5ee5\nhttps://detail.tmall.hk/item.htm?id=662246212268&skuId=4781521713999&user_id=2208001160576&cat_id=52792006&is_b=1&rn=280c6ed560288255613d7fd884ca672f\nhttps://detail.tmall.hk/item.htm?id=660952952930&skuId=4945939147795&user_id=2208809643523&cat_id=52792006&is_b=1&rn=3fb4b682f2c17ce9a67a1c8c04d64bf7\nhttps://detail.tmall.hk/item.htm?id=653126328863&skuId=4888055566418&user_id=2208001160576&cat_id=52792006&is_b=1&rn=3fb4b682f2c17ce9a67a1c8c04d64bf7\nhttps://detail.tmall.hk/item.htm?id=670816473575&skuId=4830266013281&user_id=2208809643523&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=654434969099&skuId=4858416885345&user_id=2201196294013&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=669417310088&skuId=4986645854954&user_id=2208809643523&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=680953941680&skuId=5054883923880&user_id=2214429028194&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=680604268050&skuId=5050667130353&user_id=2214429028194&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=674365879369&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=674026710487&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=679313732616&skuId=5049630735381&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=673634362925&skuId=5023210607767&user_id=2208001160576&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=639014326267&skuId=4757438187841&user_id=2208809643523&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=673321104180&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=675361115314&skuId=4851676748871&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=643031144961&skuId=4803543378059&user_id=2208809643523&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=674026766248&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=684308217535&skuId=5066788751831&user_id=2201196294013&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=670428964115&skuId=4825379424909&user_id=2208809643523&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=684182456625&skuId=5067650531005&user_id=2213203431581&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=679691842863&skuId=5044128386586&user_id=4066234693&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=679686430991&skuId=4870952348853&user_id=2201168176213&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("40"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("9")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "(//*[@id=\"J_ItemList\"]/div/div/p[2]/a)[position()<11]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div/div[1]/div[1]/div[2]/div[1]",

                wait: NumberInt("30"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1[not(@id=\"mallLogo\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//div[contains(@class,\"tm-promo-price\")]//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//dl[contains(@class,\"tm-shopPromo-panel\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("13"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n【自营】Yamazaki山崎日本 山崎12年单一麦芽威士忌700ml无盒*2\n"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3486055966f7d03fae5b51df9e812215"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("12"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall商品名称",

                        desc: "",

                        relativeXPath: "//h1[not(@id=\"mallLogo\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall销量",

                        desc: "",

                        relativeXPath: "//span[contains(text(),\"销量\")]/..",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall价格",

                        desc: "",

                        relativeXPath: "//span[contains(@class,\"tm-price\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "Tmall活动",

                        desc: "",

                        relativeXPath: "//dl[contains(@class,\"tm-shopPromo-panel\")]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("13"),

            parentId: NumberInt("2"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("14"),

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            parentId: NumberInt("4"),

            index: NumberInt("14"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("10")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "1",

                value: "促销价"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("6"),

            parentId: NumberInt("4"),

            index: NumberInt("15"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("12")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        },

        {

            index: NumberInt("16"),

            id: NumberInt("-1"),

            parentId: NumberInt("4"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [ ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("0")

        }

    ],

    id: NumberInt("19"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("2"),

            nodeName: "Open Page",

            value: "https://www.tmall.hk/wow/member-club/act/login",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.tmall.hk/wow/member-club/act/login"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("6"),

            nodeName: "Loop",

            desc: "要输入的文本/网址,多行以\\n分开",

            type: "string",

            exampleValue: "https://detail.tmall.hk/item.htm?id=658641278118&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=661890189422&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=655093526731&skuId=4722646792697&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=627569178411&skuId=4862853365173&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=636055777039&skuId=4645617529132&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=688858127211&skuId=4902371768889&user_id=2200657974488&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=688217639958&skuId=5072411486570&user_id=2211620739106&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=673752006327&skuId=4850085397621&user_id=2201196294013&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=644176111194&skuId=4803927442138&user_id=4066234693&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=666388233142&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=665782599546&skuId=4964481990530&user_id=2208809643523&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=676864927096&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=628465335701&skuId=4631419227811&user_id=2208809643523&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=679778539067&skuId=4869780972851&user_id=2208001160576&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=676216525152&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=687644929281&skuId=4899422700228&user_id=2213203431581&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=665782599546&skuId=4964481990530&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=679186327100&skuId=5040379050593&user_id=2208001160576&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=625756943270&skuId=4599437546828&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=628465335701&skuId=4631419227811&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=687644929281&skuId=4899422700228&user_id=2213203431581&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=665799173163&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=665799009405&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=674085737113&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=674364570689&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=632368285229&skuId=4747111192712&user_id=2208809643523&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=642010267399&skuId=4608264276629&user_id=2208001160576&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=669653355013&skuId=4990436987771&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=640840112439&skuId=4780229330767&user_id=2208001160576&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=671922578171&skuId=4836777085975&user_id=2213203431581&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=688213231080&skuId=5072374346970&user_id=2213203431581&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=688213231080&skuId=5072374346970&user_id=2213203431581&cat_id=52792006&is_b=1&rn=692b142c738cf29311d58032028b5ee5\nhttps://detail.tmall.hk/item.htm?id=662246212268&skuId=4781521713999&user_id=2208001160576&cat_id=52792006&is_b=1&rn=280c6ed560288255613d7fd884ca672f\nhttps://detail.tmall.hk/item.htm?id=660952952930&skuId=4945939147795&user_id=2208809643523&cat_id=52792006&is_b=1&rn=3fb4b682f2c17ce9a67a1c8c04d64bf7\nhttps://detail.tmall.hk/item.htm?id=653126328863&skuId=4888055566418&user_id=2208001160576&cat_id=52792006&is_b=1&rn=3fb4b682f2c17ce9a67a1c8c04d64bf7\nhttps://detail.tmall.hk/item.htm?id=670816473575&skuId=4830266013281&user_id=2208809643523&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=654434969099&skuId=4858416885345&user_id=2201196294013&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=669417310088&skuId=4986645854954&user_id=2208809643523&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=680953941680&skuId=5054883923880&user_id=2214429028194&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=680604268050&skuId=5050667130353&user_id=2214429028194&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=674365879369&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=674026710487&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=679313732616&skuId=5049630735381&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=673634362925&skuId=5023210607767&user_id=2208001160576&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=639014326267&skuId=4757438187841&user_id=2208809643523&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=673321104180&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=675361115314&skuId=4851676748871&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=643031144961&skuId=4803543378059&user_id=2208809643523&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=674026766248&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=684308217535&skuId=5066788751831&user_id=2201196294013&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=670428964115&skuId=4825379424909&user_id=2208809643523&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=684182456625&skuId=5067650531005&user_id=2213203431581&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=679691842863&skuId=5044128386586&user_id=4066234693&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=679686430991&skuId=4870952348853&user_id=2201168176213&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\n",

            value: "https://detail.tmall.hk/item.htm?id=658641278118&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=675381315087&skuId=5025037362931&user_id=2549841410&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=661890189422&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=655093526731&skuId=4722646792697&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=627569178411&skuId=4862853365173&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=636055777039&skuId=4645617529132&user_id=2201168176213&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=688858127211&skuId=4902371768889&user_id=2200657974488&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=688217639958&skuId=5072411486570&user_id=2211620739106&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=673752006327&skuId=4850085397621&user_id=2201196294013&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=644176111194&skuId=4803927442138&user_id=4066234693&cat_id=52792006&is_b=1&rn=3e61f2a1adb140059d3a445385b0340e\nhttps://detail.tmall.hk/item.htm?id=666388233142&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=665782599546&skuId=4964481990530&user_id=2208809643523&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=676864927096&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=628465335701&skuId=4631419227811&user_id=2208809643523&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=679778539067&skuId=4869780972851&user_id=2208001160576&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=676216525152&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=687644929281&skuId=4899422700228&user_id=2213203431581&cat_id=52792006&is_b=1&rn=6cac3335e21ad6d58c6eb65acba0457b\nhttps://detail.tmall.hk/item.htm?id=665782599546&skuId=4964481990530&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=679186327100&skuId=5040379050593&user_id=2208001160576&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=625756943270&skuId=4599437546828&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=628465335701&skuId=4631419227811&user_id=2208809643523&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=687644929281&skuId=4899422700228&user_id=2213203431581&cat_id=52792006&is_b=1&rn=823958e185c89f6746f2b972c590b841\nhttps://detail.tmall.hk/item.htm?id=665799173163&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=665799009405&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=674085737113&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=674364570689&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=632368285229&skuId=4747111192712&user_id=2208809643523&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=642010267399&skuId=4608264276629&user_id=2208001160576&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=669653355013&skuId=4990436987771&user_id=2549841410&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=640840112439&skuId=4780229330767&user_id=2208001160576&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=671922578171&skuId=4836777085975&user_id=2213203431581&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=688213231080&skuId=5072374346970&user_id=2213203431581&cat_id=52792006&is_b=1&rn=4517aa8d03ee4babd04e2ebce23e2d3f\nhttps://detail.tmall.hk/item.htm?id=688213231080&skuId=5072374346970&user_id=2213203431581&cat_id=52792006&is_b=1&rn=692b142c738cf29311d58032028b5ee5\nhttps://detail.tmall.hk/item.htm?id=662246212268&skuId=4781521713999&user_id=2208001160576&cat_id=52792006&is_b=1&rn=280c6ed560288255613d7fd884ca672f\nhttps://detail.tmall.hk/item.htm?id=660952952930&skuId=4945939147795&user_id=2208809643523&cat_id=52792006&is_b=1&rn=3fb4b682f2c17ce9a67a1c8c04d64bf7\nhttps://detail.tmall.hk/item.htm?id=653126328863&skuId=4888055566418&user_id=2208001160576&cat_id=52792006&is_b=1&rn=3fb4b682f2c17ce9a67a1c8c04d64bf7\nhttps://detail.tmall.hk/item.htm?id=670816473575&skuId=4830266013281&user_id=2208809643523&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=654434969099&skuId=4858416885345&user_id=2201196294013&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=669417310088&skuId=4986645854954&user_id=2208809643523&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=680953941680&skuId=5054883923880&user_id=2214429028194&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=680604268050&skuId=5050667130353&user_id=2214429028194&cat_id=52792006&is_b=1&rn=deb04cd6da99fb00e75abc18579d4ec2\nhttps://detail.tmall.hk/item.htm?id=674365879369&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=674026710487&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=679313732616&skuId=5049630735381&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=673634362925&skuId=5023210607767&user_id=2208001160576&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=639014326267&skuId=4757438187841&user_id=2208809643523&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=673321104180&skuId=null&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=675361115314&skuId=4851676748871&user_id=2549841410&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=643031144961&skuId=4803543378059&user_id=2208809643523&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=674026766248&skuId=null&user_id=2200657974488&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=684308217535&skuId=5066788751831&user_id=2201196294013&cat_id=52792006&is_b=1&rn=353182a7e4a52ec421d2af79c02547f3\nhttps://detail.tmall.hk/item.htm?id=670428964115&skuId=4825379424909&user_id=2208809643523&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=684182456625&skuId=5067650531005&user_id=2213203431581&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=679691842863&skuId=5044128386586&user_id=4066234693&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\nhttps://detail.tmall.hk/item.htm?id=679686430991&skuId=4870952348853&user_id=2201168176213&cat_id=52792006&is_b=1&rn=1c2c99c3c0f9d1054f41f905c0d4762d\n"

        }

    ],

    links: "https://www.tmall.hk/wow/member-club/act/login",

    name: "天猫国际细节",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "Tmall商品名称",

            desc: "",

            type: "string",

            exampleValue: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

        },

        {

            id: NumberInt("1"),

            name: "Tmall销量",

            desc: "",

            type: "string",

            exampleValue: "已拼1108件"

        },

        {

            id: NumberInt("2"),

            name: "Tmall价格",

            desc: "",

            type: "string",

            exampleValue: "200"

        },

        {

            id: NumberInt("3"),

            name: "Tmall活动",

            desc: "",

            type: "string",

            exampleValue: "满20减12件9.9折"

        }

    ],

    url: "https://mobile.yangkeduo.com/login.html"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63c41dd8869cb52a8a8f6e8c"),

    containJudge: false,

    desc: "https://www.jd.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.jd.com",

                links: "https://www.jd.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[4]/div[1]/div[4]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[1]/div[4]/div[1]/div[4]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.jd.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jd.com"

        }

    ],

    links: "https://www.jd.com",

    name: "JD_TEST",

    outputParameters: [ ],

    url: "https://www.jd.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63c7736edcb6508b71d51af2"),

    containJudge: false,

    desc: "https://www.jd.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.jd.com",

                links: "https://www.jd.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.jd.com",

                links: "https://www.jd.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.jd.com",

                links: "https://www.jd.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[4]/div[1]/div[4]/ul[3]/li[2]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "京东五金城                                                            "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.jd.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jd.com"

        },

        {

            id: NumberInt("1"),

            name: "urlList_1",

            nodeId: NumberInt("2"),

            nodeName: "Open Page",

            value: "https://www.jd.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jd.com"

        },

        {

            id: NumberInt("2"),

            name: "urlList_2",

            nodeId: NumberInt("3"),

            nodeName: "Open Page",

            value: "https://www.jd.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jd.com"

        }

    ],

    links: "https://www.jd.com",

    name: "TEST Service",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "京东五金城                                                            "

        }

    ],

    url: "https://www.jd.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63cd3b94869cb52a8a8f6e90"),

    containJudge: false,

    desc: "https://www.jjwxc.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.jjwxc.com",

                links: "https://www.jjwxc.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[4]/div[2]/div[1]/div[3]/div[1]/ul[1]/li",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[4]/div[2]/div[1]/div[3]/div[1]/ul[1]/li",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("5"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接文本",

                        desc: "",

                        relativeXPath: "/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "《乱尘之风》 "

                            },

                            {

                                num: NumberInt("1"),

                                value: "《好山好水好花儿（新篇》 "

                            },

                            {

                                num: NumberInt("2"),

                                value: "《烈火如歌I》 "

                            },

                            {

                                num: NumberInt("3"),

                                value: "《大唐晋阳公主》 "

                            },

                            {

                                num: NumberInt("4"),

                                value: "《魔鬼的体温》 "

                            },

                            {

                                num: NumberInt("5"),

                                value: "《不断作死后我成了白月》 "

                            },

                            {

                                num: NumberInt("6"),

                                value: "《何处暖阳不倾城》 "

                            },

                            {

                                num: NumberInt("7"),

                                value: "《有匪》 "

                            },

                            {

                                num: NumberInt("8"),

                                value: "《猎人同人-无处不在》 "

                            },

                            {

                                num: NumberInt("9"),

                                value: "《人不可貌相》 "

                            },

                            {

                                num: NumberInt("10"),

                                value: "《每日一表白》 "

                            },

                            {

                                num: NumberInt("11"),

                                value: "《[综英美]App不能》 "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数3_链接地址",

                        desc: "",

                        relativeXPath: "/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=90001"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=42195"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=487"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=2419670"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=3945423"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=4682400"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=2089609"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=2595385"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=439197"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=3109031"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=1639058"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.jjwxc.net/onebook.php?novelid=2820411"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数4_链接文本",

                        desc: "",

                        relativeXPath: "/a[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "悦乙"

                            },

                            {

                                num: NumberInt("1"),

                                value: "ane"

                            },

                            {

                                num: NumberInt("2"),

                                value: "明晓溪"

                            },

                            {

                                num: NumberInt("3"),

                                value: "鱼七彩"

                            },

                            {

                                num: NumberInt("4"),

                                value: "藤萝为枝"

                            },

                            {

                                num: NumberInt("5"),

                                value: "纪婴"

                            },

                            {

                                num: NumberInt("6"),

                                value: "北倾"

                            },

                            {

                                num: NumberInt("7"),

                                value: "priest"

                            },

                            {

                                num: NumberInt("8"),

                                value: "花命罗"

                            },

                            {

                                num: NumberInt("9"),

                                value: "月下蝶影"

                            },

                            {

                                num: NumberInt("10"),

                                value: "栖见"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Ventisca"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数5_链接地址",

                        desc: "",

                        relativeXPath: "/a[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=46931"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=10396"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=32"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=711837"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=2071925"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=2222864"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=719966"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=145956"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=319139"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=321503"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=585107"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.jjwxc.net/oneauthor.php?authorid=898115"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("5"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.jjwxc.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jjwxc.com"

        }

    ],

    links: "https://www.jjwxc.com",

    name: "jjwxc",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数2_链接文本",

            desc: "",

            type: "string",

            exampleValue: "《乱尘之风》 "

        },

        {

            id: NumberInt("1"),

            name: "参数3_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.jjwxc.net/onebook.php?novelid=90001"

        },

        {

            id: NumberInt("2"),

            name: "参数4_链接文本",

            desc: "",

            type: "string",

            exampleValue: "悦乙"

        },

        {

            id: NumberInt("3"),

            name: "参数5_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.jjwxc.net/oneauthor.php?authorid=46931"

        }

    ],

    url: "https://www.jjwxc.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63da7677c85da553b7a9d4b2"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "1"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "1",

            value: "1"

        }

    ],

    links: "https://www.ebay.com",

    name: "New Crawler Task",

    outputParameters: [ ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dbdbc7c85da553b7a9d4bc"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("5")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPhone"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Search",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"s0-52-12-5-4[0]-42\"]/form[1]/fieldset[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Click Next Page",

            sequence: [

                NumberInt("7"),

                NumberInt("6")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//a[contains(@class,'pagination__next')] ",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("10"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Next",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"srp-river-results\"]/ul[1]/li[61]/div[2]/span[1]/span[1]/nav[1]/a[1]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("7"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Collection",

            sequence: [

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "Title",

                        desc: "",

                        relativeXPath: "//div[contains(@class,'s-item__title')] ",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPhone 11 - 64GB - Black - Carrier Unlocked - NO FACE ID"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPhone 12 Pro Max - Factory Unlocked - 128GB - Very Good"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPhone SE 2nd Gen 64GB Unlocked AT&T T-Mobile Verizon Good Condition"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPhone 6 16GB 64GB 128GB Factory Unlocked SmartPhone AT&T T-mobile Verizon"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPhone 12 A2172 64/128/256GB AT&T T-Mobile Verizon Unlocked GREAT"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPhone 11 - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good Condition"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPhone 13 PRO MAX 128GB 256GB 512GB 1TB (UNLOCKED) ✅APPLE WARNTY⚫🔴🔵✤O/B✤"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPhone 12 Pro 128GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPhone XR - 64GB - Fully Unlocked (CDMA+GSM) - Good Condition"

                            },

                            {

                                num: NumberInt("9"),

                                value: "APPLE IPHONE 7 *ALL COLORS* FACTORY UNLOCKED 32GB (VERY GOOD CONDITION)"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPhone 11 64GB Unlocked Smartphone - Very Good"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPhone XR - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good Condition"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPhone 12 Mini 64GB Unlocked Smartphone - Very Good"

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPhone SE 2nd Gen 64|128|256GB 4G LTE 4.7 Verizon Unlocked T-Mobile AT&T"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPhone SE 2nd Gen. 2020 64GB Unlocked A2275 GSM + CDMA -BEST BUDGET DEAL-"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPhone 7 Plus - 128GB - Factory Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPhone 12 - 64GB - All Colors - Unlocked Smartphone - Good Condition "

                            },

                            {

                                num: NumberInt("17"),

                                value: "Apple iPhone 13 A2482 128GB Midnight Unlocked Excellent Condition"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPhone 11 64GB/128GB/256GB - ALL COLOURS - UNLOCKED - VERY GOOD CONDITION"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple iPhone 12 Pro Max A2342 256GB Unlocked Good Condition"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple  iPhone 12 Pro Max 5G 128GB Factory Unlocked CDMA + GSM EXCELLENT"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Apple iPhone 12 Pro A2341 128GB Unlocked Very Good Condition (Free Shipping)"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Apple iPhone 11 A2111 64/128/256 - All Colors - (Factory Unlocked) - Excellent -"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Apple iPhone 11 Pro Max - 256GB - All Colors (Unlocked) - Very Good Condition "

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPhone 12 Pro Max (A2342) - All Colors -  (Unlocked) - 10/10 Open Box -"

                            },

                            {

                                num: NumberInt("25"),

                                value: "Apple iPhone 11 Pro 64GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Apple iPhone 13 (Unlocked) Pre-Order-New Open Box, Free Shipping!"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Apple iPhone 12 - 5G - 128GB Factory Unlocked GSM + CDMA - OPEN BOX"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Apple iPhone 8 64GB Factory Unlocked Verizon AT&T T-Mobile Sprint Good"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Apple iPhone 12 (A2172) 64GB Blue Unlocked GSM/CDMA -Fair Condition"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPhone 11 64GB/128GB/256GB - ALL COLOURS - UNLOCKED - GOOD CONDITION"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPhone X 64GB 256GB 4G LTE 5.8 Verizon Unlocked T-Mobile AT&T Ultra"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPhone 11 64GB Factory Unlocked 4G LTE Smartphone - Good"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPhone XR 64GB 128GB Fully Unlocked Smartphone A1984 - Good"

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPhone XR 64GB Factory Unlocked Smartphone - Very Good"

                            },

                            {

                                num: NumberInt("35"),

                                value: "Apple iPhone 11 - 128GB - All Colors - Fully Unlocked (CDMA+GSM)- Good Condition"

                            },

                            {

                                num: NumberInt("36"),

                                value: "NEW Apple iPhone 11 A2111 (FACTORY UNLOCKED) - ALL COLORS & CAPACITY"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPhone 12 64GB/128GB/256GB - ALL COLOURS - UNLOCKED- VERY GOOD CONDITION"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Open Box Apple iPhone 8 Plus 64GB Factory Unlocked Verizon T-Mobile- Gray/Silver"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Apple iPhone 6s  16/32/64 GB - All Colors - Fully Unlocked - Very Good Condition"

                            },

                            {

                                num: NumberInt("40"),

                                value: "Apple iPhone 8 64GB GSM Factory Unlocked Smartphone- Excellent condition"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPhone 8 | 8 Plus 64GB 128GB 256GB GSM Unlocked ATT T-Mobile Metro Cricket"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPhone 8 64GB Verizon T-Mobile AT&T Unlocked Smartphone PRISTINE Condition"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPhone 12 128GB Unlocked Smartphone - Very Good"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPhone 12 Mini 64GB 128GB 256GB Unlocked AT&T T-Mobile Verizon Very Good"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Apple iPhone 14 Pro Max Unlocked eSim, Pre-Order.. FREE UPGRADE TO 1TB MODEL!"

                            },

                            {

                                num: NumberInt("46"),

                                value: "Apple iPhone SE 2nd Gen 2020 Fully Unlocked GSM/CDMA 64GB 128GB 256GB"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPhone 6 16GB Space Gray A1549 Unlocked GSM 4G LTE New In Box SEALED"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPhone 14 128GB ( Unlocked)  Excellent"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPhone 12 Mini 5.4\" 64GB 128GB Factory Unlocked (Any Carrier) Very Good"

                            },

                            {

                                num: NumberInt("50"),

                                value: "Apple iPhone 13 Pro 128/256/512GB A2483 Unlocked Open Box"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Apple iPhone 8 64GB 256GB Unlocked Open Box New Other"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPhone 12 mini (5G) Factory Unlocked GSM+CDMA 256GB 128GB |64GB Excellent"

                            },

                            {

                                num: NumberInt("53"),

                                value: "Apple iPhone 12 64GB 128GB 256GB Unlocked AT&T T-Mobile Verizon Sprint Very Good"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPhone XR 64GB Black Unlocked Fair Condition"

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPhone 11 Pro -64GB-Space Gray Unlocked A2160 CDMA + GSM Smartphone GOOD "

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPhone 12 Mini (5G) GSM/CDMA Factory Unlocked  256GB |128GB | 64GB"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - All Colors - Excellent Condition"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPhone 11 - 64GB / 128GB / 256GB - Factory Unlocked - Smartphone"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPhone 6 A1549 32GB Space Gray Unlocked GSM/CDMA Fair "

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("23"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPhone",

            value: "iPhone"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop Click Next Page_2",

            nodeId: NumberInt("5"),

            nodeName: "Loop Click Next Page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("10"),

            value: NumberInt("10")

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay Titles - Simple Demo",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "Title",

            desc: "",

            type: "string",

            exampleValue: "Apple iPhone 11 - 64GB - Black - Carrier Unlocked - NO FACE ID"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dbdd8ec85da553b7a9d4bd"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("8")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPhone"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5"),

                NumberInt("6")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPhone 11 - 128GB 64GB - GSM+CDMA Factory Unlocked \"Excellent' "

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPhone X A1901 - 64GB | 256GB - GSM Unlocked AT&T T-Mobile Metro Cricket"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked Smartphone Good Condition Warranty"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPhone 8 | 8 Plus 64GB 128GB 256GB GSM Unlocked ATT T-Mobile Metro Cricket"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPhone 11 - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good Condition"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPhone XS Max - 64GB Used T-Mobile"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Excellent A+ Condition - UK"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPhone 11 128GB Black Green Red Verizon Unlocked Mint Condition"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPhone XR - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good Condition"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPhone 11 Pro, Pro Max Unlocked 64GB 256GB 512GBSmartphone Used"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPhone 12 Pro 128GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPhone XR Unlocked Various Colors 64GB 128GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPhone SE (2020) A2275 - 128 GB - Space Gray Color - AT&T only- Beautiful!"

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPhone SE 2nd Gen 64|128|256GB 4G LTE 4.7 Verizon Unlocked T-Mobile AT&T"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPhone X - 64GB 256GB - Unlocked -  Very Good Condition - All Colours"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Very Good Condition - UK Stock"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPhone 8 - 64GB/256GB - Gold/Grey/ Silver - UNLOCKED - Excellent Grade A"

                            },

                            {

                                num: NumberInt("17"),

                                value: "Apple iPhone SE 2nd Gen. - 256GB - Midnight (Unlocked)"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPhone 11 Pro - 64GB 256GB 512GB - Unlocked - Excellent A+ Condition - UK"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple iPhone 11 64GB 128GB Verizon T-Mobile AT&T Unlocked Good Condition"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPhone 11 Pro 64GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Apple iPhone XS Max 64GB Black AT&T"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Apple iPhone 8 | 8 Plus 64GB 128GB 256GB GSM Unlocked ATT T-Mobile Metro Cricket"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Apple iPhone 11 - 128GB - Factory Unlocked - Good Condition"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPhone 11 Pro Max 64GB 256GB 512GB Unlocked Smartphone Good Condition"

                            },

                            {

                                num: NumberInt("25"),

                                value: "Apple iPhone 11 Pro - 256GB - Gold (Unlocked)"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Apple iPhone 13 - 128GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("27"),

                                value: "original Apple iPhone 1st Generation 8GB unlocked 2G GSM network work good"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Apple iPhone 7 - 32GB - Silver (Unlocked) A1660 (CDMA + GSM) Very Good!"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Good Condition UK Stock"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPhone 11 64GB 128GB 256GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPhone XR 64GB 128GB 256GB - Unlocked Smartphone - Good Condition - UK"

                            },

                            {

                                num: NumberInt("32"),

                                value: "New ListingApple iPhone 11 - 64GB - Purple (Unlocked) A2111 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPhone 7 - 32GB - All Colors - Unlocked - Good Condition "

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPhone 11 Pro Max - 64GB 256GB 512GB - Unlocked - Excellent A+ Condition"

                            },

                            {

                                num: NumberInt("35"),

                                value: "Apple iPhone 8 Plus 64GB Factory Unlocked Smartphone - Excellent"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Apple iPhone 11 - 64GB / 128GB - Unlocked Smartphone - Very Good Condition"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPhone XS - 256GB - Silver (Unlocked) A1920 (CDMA + GSM)  "

                            },

                            {

                                num: NumberInt("38"),

                                value: "iPhone 12 Pro Max 128GB Graphite"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Apple iPhone SE 1st Generation 16GB /32GB /64Gb /128GB Smartphone Unlocked #1B1 "

                            },

                            {

                                num: NumberInt("40"),

                                value: "Apple iPhone XS ,XS Max Unlocked Various Colors 64GB 256GB 512GB Smartphone Used"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPhone 11 Pro Max - 64GB - Midnight Green (Unlocked) A2218 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPhone 11 64GB 128GB AT&T Sprint T-Mobile Unlocked Verizon Good"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPhone 11 Unlocked Various Colors 64GB 128GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPhone 8 64GB Unlocked A1905 GSM - Space Gray"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Apple iPhone X Unlocked Various Colors 64GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("46"),

                                value: "Apple iPhone 11 - 64GB - Black (Unlocked) A2111 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPhone 12 - 64GB 128GB 256GB - Unlocked - 12 Months Warranty - Grade A+"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPhone 12 - 256GB - Blue (Unlocked)"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPhone 6s Plus Unlocked Various Colors 16GB 64GB 128GB Smartphone Used"

                            },

                            {

                                num: NumberInt("50"),

                                value: "Apple iPhone 11 - 64GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("51"),

                                value: "iphone 11"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPhone XR - 64GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("53"),

                                value: "Apple iPhone XR 64/128/256GB Fully Unlocked (GSM+CDMA) AT&T T-Mobile Verizon"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPhone X - 64GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPhone XS Max 64GB 256GB 512GB Unlocked Smartphone Good Refurbished"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPhone 13 Pro Max A2484 256GB Graphite LOCKED (READ)"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPhone 11 Pro Max 256GB Midnight Green Unlocked Excellent"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPhone X 64GB 256GB 4G LTE 5.8 Verizon Unlocked T-Mobile AT&T Ultra"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPhone XS - 256GB - Space Gray (Unlocked) (CDMA + GSM)"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/div/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "HKD 1,756.28 to HKD 2,987.25"

                            },

                            {

                                num: NumberInt("1"),

                                value: "HKD 1,646.12 to HKD 2,038.15"

                            },

                            {

                                num: NumberInt("2"),

                                value: "HKD 2,289.86 to HKD 3,256.24"

                            },

                            {

                                num: NumberInt("3"),

                                value: "HKD 862.07 to HKD 1,881.34"

                            },

                            {

                                num: NumberInt("4"),

                                value: "HKD 2,046.31 to HKD 2,258.00"

                            },

                            {

                                num: NumberInt("5"),

                                value: "HKD 1,352.50"

                            },

                            {

                                num: NumberInt("6"),

                                value: "HKD 2,802.43 to HKD 3,188.98"

                            },

                            {

                                num: NumberInt("7"),

                                value: "HKD 1,764.12 to HKD 3,002.93"

                            },

                            {

                                num: NumberInt("8"),

                                value: "HKD 1,622.92"

                            },

                            {

                                num: NumberInt("9"),

                                value: "HKD 3,410.56 to HKD 5,605.92"

                            },

                            {

                                num: NumberInt("10"),

                                value: "HKD 4,252.01 to HKD 4,541.92"

                            },

                            {

                                num: NumberInt("11"),

                                value: "HKD 1,764.05 to HKD 2,352.09"

                            },

                            {

                                num: NumberInt("12"),

                                value: "HKD 1,058.08"

                            },

                            {

                                num: NumberInt("13"),

                                value: "HKD 783.98 to HKD 1,568.03"

                            },

                            {

                                num: NumberInt("14"),

                                value: "HKD 1,836.04"

                            },

                            {

                                num: NumberInt("15"),

                                value: "HKD 2,512.51 to HKD 3,285.62"

                            },

                            {

                                num: NumberInt("16"),

                                value: "HKD 1,212.91 to HKD 1,492.68"

                            },

                            {

                                num: NumberInt("17"),

                                value: "HKD 492.86"

                            },

                            {

                                num: NumberInt("18"),

                                value: "HKD 3,382.26 to HKD 3,865.45"

                            },

                            {

                                num: NumberInt("19"),

                                value: "HKD 1,701.40 to HKD 2,916.69"

                            },

                            {

                                num: NumberInt("20"),

                                value: "HKD 2,899.07 to HKD 3,478.90"

                            },

                            {

                                num: NumberInt("21"),

                                value: "HKD 1,136.88"

                            },

                            {

                                num: NumberInt("22"),

                                value: "HKD 862.07 to HKD 1,881.34"

                            },

                            {

                                num: NumberInt("23"),

                                value: "HKD 1,732.76 to HKD 2,979.41"

                            },

                            {

                                num: NumberInt("24"),

                                value: "HKD 3,285.23 to HKD 4,251.62"

                            },

                            {

                                num: NumberInt("25"),

                                value: "HKD 2,213.03"

                            },

                            {

                                num: NumberInt("26"),

                                value: "HKD 5,121.76"

                            },

                            {

                                num: NumberInt("27"),

                                value: "HKD 689.97"

                            },

                            {

                                num: NumberInt("28"),

                                value: "HKD 783.66"

                            },

                            {

                                num: NumberInt("29"),

                                value: "HKD 2,222.59"

                            },

                            {

                                num: NumberInt("30"),

                                value: "HKD 2,512.51 to HKD 3,092.34"

                            },

                            {

                                num: NumberInt("31"),

                                value: "HKD 1,739.40 to HKD 2,029.32"

                            },

                            {

                                num: NumberInt("32"),

                                value: "HKD 1,191.76"

                            },

                            {

                                num: NumberInt("33"),

                                value: "HKD 670.29"

                            },

                            {

                                num: NumberInt("34"),

                                value: "HKD 3,672.18 to HKD 4,058.73"

                            },

                            {

                                num: NumberInt("35"),

                                value: "HKD 1,160.40 to HKD 1,497.55"

                            },

                            {

                                num: NumberInt("36"),

                                value: "HKD 2,415.49 to HKD 2,831.03"

                            },

                            {

                                num: NumberInt("37"),

                                value: "HKD 1,403.46 to HKD 2,258.08"

                            },

                            {

                                num: NumberInt("38"),

                                value: "HKD 5,063.87"

                            },

                            {

                                num: NumberInt("39"),

                                value: "HKD 470.35 to HKD 940.79"

                            },

                            {

                                num: NumberInt("40"),

                                value: "HKD 1,842.45 to HKD 3,528.17"

                            },

                            {

                                num: NumberInt("41"),

                                value: "HKD 1,981.09"

                            },

                            {

                                num: NumberInt("42"),

                                value: "HKD 1,685.72 to HKD 2,893.16"

                            },

                            {

                                num: NumberInt("43"),

                                value: "HKD 2,704.91 to HKD 3,488.97"

                            },

                            {

                                num: NumberInt("44"),

                                value: "HKD 1,215.29"

                            },

                            {

                                num: NumberInt("45"),

                                value: "HKD 1,724.84 to HKD 1,960.06"

                            },

                            {

                                num: NumberInt("46"),

                                value: "HKD 1,403.46"

                            },

                            {

                                num: NumberInt("47"),

                                value: "HKD 3,377.43"

                            },

                            {

                                num: NumberInt("48"),

                                value: "HKD 3,097.02"

                            },

                            {

                                num: NumberInt("49"),

                                value: "HKD 862.38 to HKD 1,176.00"

                            },

                            {

                                num: NumberInt("50"),

                                value: "HKD 2,258.00 to HKD 2,469.70"

                            },

                            {

                                num: NumberInt("51"),

                                value: "HKD 1,414.63"

                            },

                            {

                                num: NumberInt("52"),

                                value: "HKD 1,764.05 to HKD 1,905.18"

                            },

                            {

                                num: NumberInt("53"),

                                value: "HKD 1,803.33 to HKD 2,273.76"

                            },

                            {

                                num: NumberInt("54"),

                                value: "HKD 1,658.20"

                            },

                            {

                                num: NumberInt("55"),

                                value: "HKD 2,270.53 to HKD 2,753.72"

                            },

                            {

                                num: NumberInt("56"),

                                value: "HKD 2,352.17"

                            },

                            {

                                num: NumberInt("57"),

                                value: "HKD 4,831.94"

                            },

                            {

                                num: NumberInt("58"),

                                value: "HKD 1,411.22 to HKD 1,881.65"

                            },

                            {

                                num: NumberInt("59"),

                                value: "HKD 1,419.14 to HKD 2,297.28"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("8"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("9")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("9"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "Title",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPhone 11 - 128GB 64GB - GSM+CDMA Factory Unlocked \"Excellent' "

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPhone X A1901 - 64GB | 256GB - GSM Unlocked AT&T T-Mobile Metro Cricket"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked Smartphone Good Condition Warranty"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPhone 8 | 8 Plus 64GB 128GB 256GB GSM Unlocked ATT T-Mobile Metro Cricket"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPhone 11 - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good Condition"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPhone XS Max - 64GB Used T-Mobile"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Excellent A+ Condition - UK"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPhone 11 128GB Black Green Red Verizon Unlocked Mint Condition"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPhone XR - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good Condition"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPhone 11 Pro, Pro Max Unlocked 64GB 256GB 512GBSmartphone Used"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPhone 12 Pro 128GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPhone XR Unlocked Various Colors 64GB 128GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPhone SE (2020) A2275 - 128 GB - Space Gray Color - AT&T only- Beautiful!"

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPhone SE 2nd Gen 64|128|256GB 4G LTE 4.7 Verizon Unlocked T-Mobile AT&T"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPhone X - 64GB 256GB - Unlocked -  Very Good Condition - All Colours"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Very Good Condition - UK Stock"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPhone 8 - 64GB/256GB - Gold/Grey/ Silver - UNLOCKED - Excellent Grade A"

                            },

                            {

                                num: NumberInt("17"),

                                value: "Apple iPhone SE 2nd Gen. - 256GB - Midnight (Unlocked)"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPhone 11 Pro - 64GB 256GB 512GB - Unlocked - Excellent A+ Condition - UK"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple iPhone 11 64GB 128GB Verizon T-Mobile AT&T Unlocked Good Condition"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPhone 11 Pro 64GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Apple iPhone XS Max 64GB Black AT&T"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Apple iPhone 8 | 8 Plus 64GB 128GB 256GB GSM Unlocked ATT T-Mobile Metro Cricket"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Apple iPhone 11 - 128GB - Factory Unlocked - Good Condition"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPhone 11 Pro Max 64GB 256GB 512GB Unlocked Smartphone Good Condition"

                            },

                            {

                                num: NumberInt("25"),

                                value: "Apple iPhone 11 Pro - 256GB - Gold (Unlocked)"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Apple iPhone 13 - 128GB 256GB 512GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("27"),

                                value: "original Apple iPhone 1st Generation 8GB unlocked 2G GSM network work good"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Apple iPhone 7 - 32GB - Silver (Unlocked) A1660 (CDMA + GSM) Very Good!"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Good Condition UK Stock"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPhone 11 64GB 128GB 256GB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPhone XR 64GB 128GB 256GB - Unlocked Smartphone - Good Condition - UK"

                            },

                            {

                                num: NumberInt("32"),

                                value: "New ListingApple iPhone 11 - 64GB - Purple (Unlocked) A2111 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPhone 7 - 32GB - All Colors - Unlocked - Good Condition "

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPhone 11 Pro Max - 64GB 256GB 512GB - Unlocked - Excellent A+ Condition"

                            },

                            {

                                num: NumberInt("35"),

                                value: "Apple iPhone 8 Plus 64GB Factory Unlocked Smartphone - Excellent"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Apple iPhone 11 - 64GB / 128GB - Unlocked Smartphone - Very Good Condition"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPhone XS - 256GB - Silver (Unlocked) A1920 (CDMA + GSM)  "

                            },

                            {

                                num: NumberInt("38"),

                                value: "iPhone 12 Pro Max 128GB Graphite"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Apple iPhone SE 1st Generation 16GB /32GB /64Gb /128GB Smartphone Unlocked #1B1 "

                            },

                            {

                                num: NumberInt("40"),

                                value: "Apple iPhone XS ,XS Max Unlocked Various Colors 64GB 256GB 512GB Smartphone Used"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPhone 11 Pro Max - 64GB - Midnight Green (Unlocked) A2218 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPhone 11 64GB 128GB AT&T Sprint T-Mobile Unlocked Verizon Good"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPhone 11 Unlocked Various Colors 64GB 128GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPhone 8 64GB Unlocked A1905 GSM - Space Gray"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Apple iPhone X Unlocked Various Colors 64GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("46"),

                                value: "Apple iPhone 11 - 64GB - Black (Unlocked) A2111 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPhone 12 - 64GB 128GB 256GB - Unlocked - 12 Months Warranty - Grade A+"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPhone 12 - 256GB - Blue (Unlocked)"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPhone 6s Plus Unlocked Various Colors 16GB 64GB 128GB Smartphone Used"

                            },

                            {

                                num: NumberInt("50"),

                                value: "Apple iPhone 11 - 64GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("51"),

                                value: "iphone 11"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPhone XR - 64GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("53"),

                                value: "Apple iPhone XR 64/128/256GB Fully Unlocked (GSM+CDMA) AT&T T-Mobile Verizon"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPhone X - 64GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPhone XS Max 64GB 256GB 512GB Unlocked Smartphone Good Refurbished"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPhone 13 Pro Max A2484 256GB Graphite LOCKED (READ)"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPhone 11 Pro Max 256GB Midnight Green Unlocked Excellent"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPhone X 64GB 256GB 4G LTE 5.8 Verizon Unlocked T-Mobile AT&T Ultra"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPhone XS - 256GB - Space Gray (Unlocked) (CDMA + GSM)"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("25"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPhone",

            value: "iPhone"

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay Titles",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "Title",

            desc: "",

            type: "string",

            exampleValue: "Apple iPhone 11 - 128GB 64GB - GSM+CDMA Factory Unlocked \"Excellent' "

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dbe8fec85da553b7a9d4bf"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPhone"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "Name",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "New ListingRead* Apple iPhone 12 mini - 256GB - Blue (Unlocked) A2176 ~52851"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPhone 7 32GB 64GB 128GB 256GB 4G LTE 4.7 Verizon Unlocked T-Mobile AT&T"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPhone XS - 256GB - Space Gray (Unlocked) (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPhone 11 64GB 128GB 256GB Unlocked - Good Condition - TWO YEAR WARRANTY"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPhone 13 Pro Max A2484 256GB Graphite LOCKED (READ)"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPhone 11 64GB 128GB 256GB - Unlocked Smartphone - Excellent - Grade A"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPhone 5S 16GB 32GB 64GB Unlocked Smartphone - Very Good Condition + CHRGR"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPhone X 64GB 256GB - Grey Silver - UNLOCKED - Excellent Grade A Condition"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPhone 11 Pro 64GB 256GB 512GB - Unlocked - Excellent Condition - Grade A+"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPhone 13 - 128GB - Midnight (Unlocked) **NEW SEALED**"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPhone 11 Pro 64GB 256GB - Unlocked - 12 Months Warranty - Very Good"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPhone 12 Pro Max  256GB  Unlocked Gold"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPhone XR - 128GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPhone 6s Plus 64GB GSM Unlocked AT&T T-Mobile Very Good Condition "

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPhone 12 Pro 128GB 256GB 512GB Unlocked All Colours - Excellent"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPhone XS - 256GB Space Gray (Factory Unlocked) CDMA+GSM"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPhone 7 - 32GB - All Colors - Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("17"),

                                value: "Apple iPhone 11 - 64GB - Purple"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPhone 11 Pro - 64GB - Space Grey (Unlocked) A2215 (GSM)"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple iPhone 13 Pro - 256GB - Graphite (Unlocked)"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPhone 11 64GB 128GB 256GB - Smartphone All Colours - VERY Good Condition"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Apple iPhone 14 Pro - 256GB - Space Black (Unlocked)"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Apple iPhone XS 256GB - Excellent Condition - Gold -  Unlocked + Box!"

                            },

                            {

                                num: NumberInt("23"),

                                value: "🔥Apple iPhone X - 64/256GB - Space Grey/ Silver - UNLOCKED -  GOOD CONDITION 🔥"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPhone 14 Pro Unlocked eSim 256GB"

                            },

                            {

                                num: NumberInt("25"),

                                value: "UNLOCKED Red Iphone XR 64GB - CDMA + GSM - Works Great!"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Apple iPhone X (iPhone 10) 64GB 256GB All Colours Unlocked- Excellent Grade A"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Apple iPhone SE 64/128/256GB Fully Unlocked (GSM+CDMA) AT&T T-Mobile Verizon"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Refurbished Apple iPhone 8 - 64GB 128GB 256GB - Unlocked - Good Condition - UK"

                            },

                            {

                                num: NumberInt("29"),

                                value: "New ListingRead* Apple iPhone 12 mini - 64GB - Black (TracFone) A2176 ~52845"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPhone XR 64GB 128GB 256GB - Unlocked Smartphone - Very Good Condition"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPhone XS 64GB 256GB 512GB Unlocked Space Grey,Silver,Gold Good Condition"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPhone XS Max 64GB 256GB 512GB  Unlocked  All Colours -Excellent Condition"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPhone 13 Pro Max 128/256/512/1TB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("34"),

                                value: "New ListingApple iPhone 12 PRO MAX 256gb silver factory unlocked MGCL3LL/A  model A2342"

                            },

                            {

                                num: NumberInt("35"),

                                value: "New ListingApple iPhone X - 64GB - White (Unlocked) A1901 (GSM) (CA)"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Apple iPhone 7 Plus Unlocked Various Colors 32GB 128GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPhone XS 64GB - Good Condition - BH 82% - Silver -  Unlocked!"

                            },

                            {

                                num: NumberInt("38"),

                                value: "New ListingRead* Apple iPhone 12 mini - 64GB - Black (T-Mobile Unlocked) A2176 ~52844"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Apple iPhone X (iPhone 10) 64GB 256GB Unlocked Grey/Silver Very Good Condition"

                            },

                            {

                                num: NumberInt("40"),

                                value: "Apple iPhone 11 - 64gb/128gb/256gb - Unlocked - Next Day Delivery - Grade A+"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPhone 11- 64GB - Midnight Green (Unlocked) A2215 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPhone 11 - 256GB - Black (Unlocked) A2111 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPhone XR - 64GB - Black (Unlocked) A1984 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("44"),

                                value: "iphone xr 128gb unlocked black model MRY92 B/A"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Apple iPhone 11 Pro - 256GB - Space Grey (Unlocked) A2215 (GSM)"

                            },

                            {

                                num: NumberInt("46"),

                                value: "New ListingApple iPhone 14 Pro - 256GB - Space black (Unlocked) Brand New ,sealed,"

                            },

                            {

                                num: NumberInt("47"),

                                value: "iPhone XR Black 64gb Unlocked"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPhone 8 - 64GB - All Colors - Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPhone 11 Pro Max - 64GB - Space Grey (Unlocked) *FAULTY*"

                            },

                            {

                                num: NumberInt("50"),

                                value: "🔥Apple iPhone XR - 64GB - Black (Verizon) A1984 (CDMA + GSM)🔥"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Apple iPhone 8 - 256GB - A1863 - Rose Gold (Unlocked) Excellent Condition"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPhone X - 64GB - Space Gray (AT&T)"

                            },

                            {

                                num: NumberInt("53"),

                                value: "Apple iPhone XS - 64GB - All Colors - Unlocked (CDMA+GSM) - Very Good Condition "

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPhone 7 Unlocked Various Colors 32GB 128GB 256GB Smartphone Used "

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPhone XR - 64GB - All Colors - (AT&T) - Smartphone - Good Condition "

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPhone 12 - 64GB 128GB 256GB - Unlocked - 12 Months Warranty - Very Good"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPhone 8+ Plus 64GB/128GB/256GB Smartphone Verizon Unlocked T-Mobile AT&T"

                            },

                            {

                                num: NumberInt("58"),

                                value: "New ListingRead* Apple iPhone 12 mini - 64GB - Blue (Unlocked) A2176 ~52843"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPhone 12 Pro Max 128GB 256GB 512GB Unlocked All Colours - Excellent"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPhone",

            value: "iPhone"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "Ebay product names",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "Name",

            desc: "",

            type: "string",

            exampleValue: "New ListingRead* Apple iPhone 12 mini - 256GB - Blue (Unlocked) A2176 ~52851"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dbe9abc85da553b7a9d4c0"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPhone"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "names",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "New ListingRead* Apple iPhone 12 mini - 256GB - Blue (Unlocked) A2176 ~52851"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPhone 7 32GB 64GB 128GB 256GB 4G LTE 4.7 Verizon Unlocked T-Mobile AT&T"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPhone XS - 256GB - Space Gray (Unlocked) (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPhone 11 64GB 128GB 256GB Unlocked - Good Condition - TWO YEAR WARRANTY"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPhone 5S 16GB 32GB 64GB Unlocked Smartphone - Very Good Condition + CHRGR"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPhone X 64GB 256GB - Grey Silver - UNLOCKED - Excellent Grade A Condition"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPhone 11 Pro 64GB 256GB 512GB - Unlocked - Excellent Condition - Grade A+"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPhone 13 - 128GB - Midnight (Unlocked) **NEW SEALED**"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPhone 6 - 16/32/64GB Unlocked All Colours Grade A Condition + CHARGR"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPhone 11 Pro 64GB 256GB - Unlocked - 12 Months Warranty - Very Good"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPhone 12 Pro Max  256GB  Unlocked Gold"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPhone XR - 128GB - All Colors - Fully Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPhone 7 - 32GB - All Colors - Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPhone 6s Plus 64GB GSM Unlocked AT&T T-Mobile Very Good Condition "

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPhone 12 Pro 128GB 256GB 512GB Unlocked All Colours - Excellent"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPhone XS - 256GB Space Gray (Factory Unlocked) CDMA+GSM"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPhone 11 - 64GB - Purple"

                            },

                            {

                                num: NumberInt("17"),

                                value: "Apple iPhone 11 Pro - 64GB - Space Grey (Unlocked) A2215 (GSM)"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPhone 13 Pro - 256GB - Graphite (Unlocked)"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple iPhone 11 64GB 128GB 256GB - Smartphone All Colours - VERY Good Condition"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPhone 14 Pro - 256GB - Space Black (Unlocked)"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Apple iPhone XS 256GB - Excellent Condition - Gold -  Unlocked + Box!"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Iphone 11 64GB Unlocked Green Scratched Screen"

                            },

                            {

                                num: NumberInt("23"),

                                value: "🔥Apple iPhone X - 64/256GB - Space Grey/ Silver - UNLOCKED -  GOOD CONDITION 🔥"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPhone 14 Pro Unlocked eSim 256GB"

                            },

                            {

                                num: NumberInt("25"),

                                value: "UNLOCKED Red Iphone XR 64GB - CDMA + GSM - Works Great!"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Apple iPhone X (iPhone 10) 64GB 256GB All Colours Unlocked- Excellent Grade A"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Apple iPhone SE 64/128/256GB Fully Unlocked (GSM+CDMA) AT&T T-Mobile Verizon"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Refurbished Apple iPhone 8 - 64GB 128GB 256GB - Unlocked - Good Condition - UK"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Apple iPhone XR 64GB 128GB 256GB - Unlocked Smartphone - Very Good Condition"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPhone XS 64GB 256GB 512GB Unlocked Space Grey,Silver,Gold Good Condition"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPhone X (iPhone 10) 64GB 256GB Unlocked Grey/Silver Very Good Condition"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPhone XS Max 64GB 256GB 512GB  Unlocked  All Colours -Excellent Condition"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPhone 13 Pro Max 128/256/512/1TB Unlocked All Colours Good Condition"

                            },

                            {

                                num: NumberInt("34"),

                                value: "New ListingApple iPhone 12 PRO MAX 256gb silver factory unlocked MGCL3LL/A  model A2342"

                            },

                            {

                                num: NumberInt("35"),

                                value: "New ListingApple iPhone X - 64GB - White (Unlocked) A1901 (GSM) (CA)"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Apple iPhone 7 Plus Unlocked Various Colors 32GB 128GB 256GB Smartphone Used"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPhone XS 64GB - Good Condition - BH 82% - Silver -  Unlocked!"

                            },

                            {

                                num: NumberInt("38"),

                                value: "New ListingRead* Apple iPhone 12 mini - 64GB - Blue (Unlocked) A2176 ~52843"

                            },

                            {

                                num: NumberInt("39"),

                                value: "New ListingRead* Apple iPhone 12 mini - 64GB - Black (TracFone) A2176 ~52845"

                            },

                            {

                                num: NumberInt("40"),

                                value: "Apple iPhone 11 - 64gb/128gb/256gb - Unlocked - Next Day Delivery - Grade A+"

                            },

                            {

                                num: NumberInt("41"),

                                value: "iPhone XR Black 64gb Unlocked"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPhone 11- 64GB - Midnight Green (Unlocked) A2215 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPhone 11 - 256GB - Black (Unlocked) A2111 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPhone XR - 64GB - Black (Unlocked) A1984 (CDMA + GSM)"

                            },

                            {

                                num: NumberInt("45"),

                                value: "iphone xr 128gb unlocked black model MRY92 B/A"

                            },

                            {

                                num: NumberInt("46"),

                                value: "Apple iPhone 11 Pro - 256GB - Space Grey (Unlocked) A2215 (GSM)"

                            },

                            {

                                num: NumberInt("47"),

                                value: "New ListingApple iPhone 14 Pro - 256GB - Space black (Unlocked) Brand New ,sealed,"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPhone 8 - 64GB - All Colors - Unlocked - Very Good Condition "

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPhone 11 Pro Max - 64GB - Space Grey (Unlocked) *FAULTY*"

                            },

                            {

                                num: NumberInt("50"),

                                value: "🔥Apple iPhone XR - 64GB - Black (Verizon) A1984 (CDMA + GSM)🔥"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Apple iPhone 8 - 256GB - A1863 - Rose Gold (Unlocked) Excellent Condition"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPhone X - 64GB - Space Gray (AT&T)"

                            },

                            {

                                num: NumberInt("53"),

                                value: "Apple iPhone XS - 64GB - All Colors - Unlocked (CDMA+GSM) - Very Good Condition "

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPhone 7 Unlocked Various Colors 32GB 128GB 256GB Smartphone Used "

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPhone XR - 64GB - All Colors - (AT&T) - Smartphone - Good Condition "

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPhone 12 - 64GB 128GB 256GB - Unlocked - 12 Months Warranty - Very Good"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPhone 8+ Plus 64GB/128GB/256GB Smartphone Verizon Unlocked T-Mobile AT&T"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPhone 12 Pro Max 128GB 256GB 512GB Unlocked All Colours - Excellent"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPhone 12 Pro 128GB 256GB 512GB Unlocked All Colours - Very Good"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("27"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPhone",

            value: "iPhone"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay Names",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "names",

            desc: "",

            type: "string",

            exampleValue: "New ListingRead* Apple iPhone 12 mini - 256GB - Blue (Unlocked) A2176 ~52851"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dbf46a869cb52a8a8f6e9d"),

    containJudge: false,

    desc: "https://www.ebay.com\neBay Names and Link Addresses - demo",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPhone"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Click Next Page",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Next",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Collection",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "Name",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPhone 11 - 128GB 64GB - GSM+CDMA Factory Unlocked \"Excellent' Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPhone X A1901 - 64GB | 256GB - GSM Unlocked AT&T T-Mobile Metro CricketOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked Smartphone Good Condition WarrantyOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPhone 8 | 8 Plus 64GB 128GB 256GB GSM Unlocked ATT T-Mobile Metro CricketOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPhone 11 - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPhone XS Max - 64GB Used T-MobileOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Excellent A+ Condition - UKOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPhone 11 128GB Black Green Red Verizon Unlocked Mint ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPhone XR - 64GB - All Colors - Fully Unlocked (CDMA+GSM) - Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPhone 11 Pro, Pro Max Unlocked 64GB 256GB 512GBSmartphone UsedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPhone 12 Pro 128GB 256GB 512GB Unlocked All Colours Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPhone SE (2020) A2275 - 128 GB - Space Gray Color - AT&T only- Beautiful!Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPhone XR Unlocked Various Colors 64GB 128GB 256GB Smartphone UsedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPhone SE 2nd Gen 64|128|256GB 4G LTE 4.7 Verizon Unlocked T-Mobile AT&TOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Very Good Condition - UK StockOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPhone X - 64GB 256GB - Unlocked -  Very Good Condition - All ColoursOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPhone 8 - 64GB/256GB - Gold/Grey/ Silver - UNLOCKED - Excellent Grade AOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("17"),

                                value: "iPhone 11 ProMax 256GB Unlocked Grey - Great Condition w/ ExtrasOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPhone 11 Pro - 64GB 256GB 512GB - Unlocked - Excellent A+ Condition - UKOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple iPhone 11 64GB 128GB Verizon T-Mobile AT&T Unlocked Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPhone 11 Pro 64GB 256GB 512GB Unlocked All Colours Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("21"),

                                value: "New ListingApple iPhone 11 - 64GB - Purple (Unlocked) A2111 (CDMA + GSM)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Apple iPhone 8 | 8 Plus 64GB 128GB 256GB GSM Unlocked ATT T-Mobile Metro CricketOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Apple iPhone 11 Pro - 256GB - Gold (Unlocked)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPhone 11 Pro Max 64GB 256GB 512GB Unlocked Smartphone Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("25"),

                                value: "Apple iPhone 11 - 128GB - Factory Unlocked - Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Apple iPhone 7 - 32GB - All Colors - Unlocked - Good Condition Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("27"),

                                value: "original Apple iPhone 1st Generation 8GB unlocked 2G GSM network work goodOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Apple iPhone 11 - 64GB 128GB 256GB - Unlocked - Good Condition UK StockOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Apple iPhone 7 - 32GB - Silver (Unlocked) A1660 (CDMA + GSM) Very Good!Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPhone 11 64GB 128GB 256GB Unlocked All Colours Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPhone XR 64GB 128GB 256GB - Unlocked Smartphone - Good Condition - UKOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPhone 11 Pro Max - 64GB - Midnight Green (Unlocked) A2218 (CDMA + GSM)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPhone 11 Pro Max - 64GB 256GB 512GB - Unlocked - Excellent A+ ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPhone 11 - 64GB / 128GB - Unlocked Smartphone - Very Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("35"),

                                value: "Apple iPhone XS - 256GB - Silver (Unlocked) A1920 (CDMA + GSM)  Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Apple iPhone 13 - 128GB 256GB 512GB Unlocked All Colours Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPhone 8 Plus 64GB Factory Unlocked Smartphone - ExcellentOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("38"),

                                value: "iPhone 12 Pro Max 128GB GraphiteOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Apple iPhone SE 1st Generation 16GB /32GB /64Gb /128GB Smartphone Unlocked #1B1 Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("40"),

                                value: "New ListingApple iPhone 8 Plus - 64GB - Silver (UNLOCKED) USEDOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPhone XS ,XS Max Unlocked Various Colors 64GB 256GB 512GB Smartphone UsedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPhone 11 64GB 128GB AT&T Sprint T-Mobile Unlocked Verizon GoodOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPhone 11 Pro Max 256GB Midnight Green Unlocked ExcellentOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPhone 11 Unlocked Various Colors 64GB 128GB 256GB Smartphone UsedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Apple iPhone XS - 256GB - All Colors - Unlocked (CDMA+GSM) - Very Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("46"),

                                value: "Apple iPhone 11 - 64GB - Black (Unlocked) A2111 (CDMA + GSM)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPhone X Unlocked Various Colors 64GB 256GB Smartphone UsedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPhone 12 - 256GB - Blue (Unlocked)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPhone 12 - 64GB 128GB 256GB - Unlocked - 12 Months Warranty - Grade A+Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("50"),

                                value: "Apple iPhone 12 64GB Factory Unlocked AT&T T-Mobile Verizon Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Apple iPhone X - 64GB - All Colors - Fully Unlocked - Very Good Condition Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPhone 6s Plus Unlocked Various Colors 16GB 64GB 128GB Smartphone UsedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("53"),

                                value: "Apple iPhone 11 - 64GB - All Colors - Fully Unlocked - Very Good Condition Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPhone XR 64/128/256GB Fully Unlocked (GSM+CDMA) AT&T T-Mobile VerizonOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPhone XR - 64GB - All Colors - Fully Unlocked - Very Good Condition Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPhone XS Max 64GB 256GB 512GB Unlocked Smartphone Good RefurbishedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPhone 12 Pro Max  256GB  Unlocked GoldOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPhone X 64GB 256GB 4G LTE 5.8 Verizon Unlocked T-Mobile AT&T UltraOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("59"),

                                value: "New ListingRead* Apple iPhone 12 mini - 128GB - Blue (Unlocked) A2176 ~52847Opens in a new window or tab"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "Link Address",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.ebay.com/itm/115398776875?epid=18045314698&hash=item1ade4d982b:g:BI4AAOSwo5Rij4S0&amdata=enc%3AAQAHAAAA4ELrFOtK9Q4ol28SIBCj8AlEyuoOswMlad9UdATAXLLXzCrNiXBXqGjK834mUeluTYl2fG4nLibLzPUvOxpTWXkmIyoL%2B14iExY93etuVl%2FBk3C5nIg00wVu4dhYbRF07x6Bsjvf78UyZkC23ZQNHj%2BdfhMp16XqtHjP4m%2Fu2AYs%2F6lcEVMwWKCOW8mLSUEznmhE3xbgOTKZY7vTkB%2BNqszgjnI%2Bj9FduDUmPyH%2ByboyhCEDQHEOnS6boubjzpbJ4gvRsNrBGqR3qcdh%2F1qqEGxETnzj8k%2FFaggVj5uyGRqf%7Ctkp%3ABFBMuoeqssJh"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.ebay.com/itm/275621347165?epid=4009565593&hash=item402c4fff5d:g:GksAAOSwon9jwKs4&amdata=enc%3AAQAHAAAA0LKRmqqWx5OPEZfa7A3aRP3L2DiuB9svO4VztlFXtjLC%2FP4%2BcWNWwEBZXnVqjo0shvJyPl%2FJU5%2B9QVJYor7ihcRRv22KXkWTYeocyxjU7G9txYQ3YcqpV7BlHspMpCuPCFkegCIs6dY3M4SAadrnjV2T7ucznx%2BG9VXBG1Qx6lb1x5eV1t8aITS%2FZazBVA%2BnyTH00%2BsKKPwXJucpAqS80gDlsCFzJCP7QvlAGXYdQBjx70MA2l3mFTH2T91oWWIpK%2BPp%2FckUDVlbJaGtWgfYmTU%3D%7Ctkp%3ABFBMuoeqssJh"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.ebay.com/itm/284427971922?epid=17034215590&hash=item42393a6d52:g:5N8AAOSwxGthKe4R&amdata=enc%3AAQAHAAAA4M5eT2AiRrAwtbgqXGRm%2BXVy9n0qktk3rHUZXzG%2BsgpRmUzbUxNNGUCUGnjlmnMIqF9Gtfn4J4BrEt1ZYchG5eJ3%2BXWGMigw9DEj%2F%2B0x5chQL7jz08VUYtYdHyNZg507EFXYv0gttSfRfOKh5fwV%2BaxFJop0nZCz8pFlB%2FRjCg3nYkpV2u%2F0LCJHDFeGbj2KdJDH6nAp%2BPkhAz2DBUKkwc3KRl6KgJHK8Mqrqp%2BQdbgJo02%2F%2B8Ozv2QrIANfw9JTaFALDtmNoT0Gst5u2UKbfzgMjAwYzuHKXoAAwgiZlDn7%7Ctkp%3ABFBMuoeqssJh"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.ebay.com/itm/185551229219?epid=239099177&hash=item2b33b71123:g:L~MAAOSwIc1jW-Oh&amdata=enc%3AAQAHAAAA0Ei%2FHaIfrdC9r1CGwS%2Fqaga1yJsD4RumFxrkhALy8UKnx6Wn%2FYmjNEsa1wy0CakU0g0XDQwOLFT85ni4Fx5MjwhmvBGhs0nVvKvpjYpFk4ab%2Bz1PirrDSr4xh88%2Bz5JpK07JF98td7vdVQug8%2B5eU6h8o%2FqNYeNPI%2FEF%2FJeqZGtApJzCapqd9xVOI%2FJMSRmt9MAP8NF0xAErePpmFmFmYhJFW4oq9WXwktqG%2B2pSttoihrFYkvfnK%2BNyUCJb0ew%2FGubnZUetPdHpdPz9NZipYqM%3D%7Ctkp%3ABFBMvIeqssJh"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.ebay.com/itm/384354658993?epid=14034212858&hash=item597d52aab1:g:dJEAAOSwJfthDS3V&amdata=enc%3AAQAHAAAA4GfEUTxow6USl6bAFapoHtI5u26z2JPHH7%2F%2FBfoRYkNfHjJ4%2FU8mMv3gwzCE03%2FDTyA668sZ0kXIXh4lN7qaGNd3GDBFA6ZD%2ByLOyJ2QuiJByfX155qZpLLypkWeF1ObvUmpKwF%2FvBGDcpMhN8j%2Fodhx%2FiHRfTm2ry3gQzTp6vi2FcUBdAXCQWnh6A73D1wlMjJhBNvMxBVGIS8R%2B3m3%2BT2LNRdF%2F1eAr%2BwcH2T%2FJ84m91EIg95wDWdYtS59V0OLeM7FXBj55M%2FE4HuVlAE5iEjAOs8S9iC20wQr5ABcR%2Fx0%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.ebay.com/itm/266104461656?hash=item3df50fd958:g:FVMAAOSwcHZjyK3N&amdata=enc%3AAQAHAAAAkMnZsbas35KCk%2FKW5FkWhd9YihRBIQZfKwBOUop1G7cd77yagTIsL9UtXOTcgsbNdygZ05GjK%2F8NRy74JnHF%2FkA7bblIQfCOV2TnKQeKdpiRPnB2qm7%2FzSKYAK9hAdCyaOV3tPLb9r2wG2kfo2CIZ1P4n5oUsHHw3MWK5eF%2FhtI9FWRnyMxbrLAE%2FNWxGM9SsA%3D%3D%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.ebay.com/itm/284837173732?epid=27034209608&hash=item42519e59e4:g:oPQAAOSwpDpio8kq&amdata=enc%3AAQAHAAAA4LedSPm1pfKlFdImyMXI6LDoSNlT1syYE9y7VcRh083cVmqlijjzeITpNmgp9lL%2BUSm7OftDmaEqajMCy1hH1B7fKCmeoFclRZRUfFCxOKnlWIy4DLJBr8KqY5%2Bvfjfo2IesZ5ZWrphX2Wu%2F2j5IzSNwIwW4NhlDoQUZgRAAbO5rE1ZeEHaWqvZb54aELniR2P2e2OClozO4A9LbM6E33oyMSgXQX1aeZnjhJ4pA3z2YcDf992bsShgltr5x1IOAp2zuQRTl%2F1D%2FIuIe%2FJnJiwtkWhfJ7P6yNR3i0P3Comwl%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.ebay.com/itm/115382465390?epid=17035818063&hash=item1add54b36e:g:dKoAAOSwRLRifmnG&amdata=enc%3AAQAHAAAA0Mr1qoKp%2BHTjRd0HFCKFhepWD3r7S6zyQM6qnMPPNSsq1muHd7bRA7gpvh9%2BR16xSBV5sFZyGIciRZuCRI9wQMQiTE0HhmZgGuaCFPhjiFpLStA7D7xWWSYYEMDXYPI1hvY2PdmeWcFdkBv8o7PKKBWGMsNfrrp4ybtcElhGONVBIZgIOsdWqyCr%2BDHvzg9s5TetZPXRi%2BQysbpb9CdVVlCHKXXAUBxQgIdXqsE2%2BlTxRvhziCSGWoDYfsFRMbZ0fbLLenzO5oXRtwRLdMf8W9w%3D%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.ebay.com/itm/174911368932?epid=13023706562&hash=item28b987aee4:g:H2YAAOSw8KthE6N8&amdata=enc%3AAQAHAAAA4BYzR%2BW70yaCb7fiAGMUiwHpKVhjj9Yrs0mALp6Yj5K4ZV5lNkgjjSx3WwTfWXERRXZwY9qrhiIq%2BusfV2p8WFmH1wTX6%2FxZwX8MF9FW89zptnptJy4bZd8GEcZgJoGP6rwOs3cXlZvOaU8GPMhRwjvjvqfcrcZ71MZbzzw26dOFVUxWye495h8mq575ILei%2FGs9hGx%2FGtfTnbkMqt%2FJcoj1tHP7ASU4pqUYKf0GZl061iypnLgSm5x3HCnd3ZYtCPPl3P0gbqCTMFSk57lgkz4arVRPFgzInnCqTQcjHaBZ%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.ebay.com/itm/134304284556?epid=11037566785&hash=item1f4528bf8c:g:BtMAAOSwY9ZjW8s9&amdata=enc%3AAQAHAAAA0A7ZwCdas9HwReYsPxksq35ZC3yg0bq9QrjBH5g55Rk%2F3mEFdM%2Bbni7bXBrEjf89aNEfpYUrwxjn6XTL%2BHebYVfdcXS2JEBvUFMhu7ybb4mxdkDpn4DwLjf44iJsx6GGNDOlJZtQkn%2Bb3M5OpdcyJ4cAVxYv84YzmREetNOF1dv2VawtWi4OgpWcCBrCMux51TMBqGDp%2FD4fJpcuuURNMhd%2FYeSQOaNg%2FwRoUolLR8L%2F6E9%2FzCmhObilajteLbuAPhpkpOLCNF5AxxT%2Fnx33Oh0%3D%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.ebay.com/itm/265427542241?epid=25041703738&hash=item3dccb6e0e1:g:Bx0AAOSw2w1hpKF3&amdata=enc%3AAQAHAAAA4MvC6Na2jkJUpYaYWpqMcESD9zwQLxHpstfeDKh0fkBKan2fH4XzHGovpbaEyyAcN6HFaAjupDxp9LNNylRfcKWJ6QpnYobpMeBsOw0dShsTt2QKxnhNHYOdh4JBTO8OgpuXKvpjmSrvGyseLMjn2QudSCqOnBSgnm4d5Ci%2FpwE3eoKo27gXum%2FnPwV%2BVngyn6bhJHAf%2BX4jOop0kgsOWv9wwyN2DAgy4kcBxlk21aKvsSfdupdb6iogfnmBjlTMXFFpgv22LcSyl3pn8UZEUw%2FcPzThaLMR3%2FK1wjdwePTo%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.ebay.com/itm/115691162547?epid=4051364949&hash=item1aefbb0bb3:g:II8AAOSwlO9jeBJ8&amdata=enc%3AAQAHAAAA4NZ%2FpQYQVCVzZPkiXgQt5%2Bsh8xpsB26BdrW8A9nj1Z2Bejf4mdE0nC3FLqpdlYyDDNYsUXrleFpH9xFutW0d7illZC5J4Qupf%2FKwSHpCrSitUJDnxycgqbdU9sMBG8IQiF%2BzGq9kJdt9%2BCuyNJKjjyEaBccfhl4WuKoqso5bwGbJxH2M38Z6K2BGRGgifKr5THOSczWAQPDpHxbgrY0Jf02%2FrIkn4CE4TBnaVl7WiDOPtuCUUPRx0JpgwvdfGjW8DbfemJzaoyylO6q8ojLjm%2BM0on0O3OPsmOEApTtSG7n0%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.ebay.com/itm/134289912060?epid=22034747823&hash=item1f444d70fc:g:IzYAAOSw6tdjUN3W&amdata=enc%3AAQAHAAAA0NH4iRsvvaEBqYiBaAmyTvhN72tTqAPA2CfJ9VNAfqzEwplsjc2KYde8MV7UOX3ddyytJ2ye7nuF79idOJeosYY4T4NDkARHmfH3mUtjZ2%2BTTUrYvgmwKJlAYM%2BS%2BPt4ELAZl34mGmS5vh3QGKNJnaEYaoYiUQbU6ecHAcqJEk1Pk46%2FVZuAllsioeNabp4oMVVYSV%2BvjCqjlHR5nINdPJYZYa3zTrFZilValvznXR051Pn289ZJITrEOcKhgSYQgmM4B7UhE%2Fh146IoNoVK7wU%3D%7Ctkp%3ABk9SR7yHqrLCYQ"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.ebay.com/itm/165337199649?epid=24037853119&hash=item267edd7421:g:WK0AAOSw5pxjgrpi&amdata=enc%3AAQAHAAAA4BcTaXjAPWkPQHEGLadS0WevO4pCHHbxB3E%2Bghp%2FwSrSgRIZxdhNUWRkvYtDmmA5NcjtfCfH%2F%2B7%2BLASFZVoedKqaqqwklr1puMWBnzC4EPuOTuoeOjqIo%2BNMC2%2BFjYrediSVBOZGwX5l%2F8ALbZqojBoYIdXxkSMNlT7alj64oe%2BLjmCC3UNI4QUMWm0LOll9EkCuWPKi%2FKpi2O7Jrd0W%2BEmLNmJ844%2FCQKj5DZ9OHZwL%2BrTXc4av804pAF%2Fj9%2BkoOd1Vab2Qsmhnms5DLhIfnmqBDuUvb28%2BdVGFOQXCIemW%7Ctkp%3ABFBMvIeqssJh"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.ebay.com/itm/284837193309?epid=13057692504&hash=item42519ea65d:g:ITYAAOSwFaVin-Fd&amdata=enc%3AAQAHAAAA4LOHQXdx6PMPZ8BELQ8MPrLBBd%2F3p9CxwKR%2BN55WPrnf2LXiH8d2jSfgdBSja68RBxt93aSYJ2oX9m%2FYaF6LKIA728d0ZRNIiQnTjar5tWblRvWM9w02WWgJsuj7K6KXkIi%2FeQzuEeOp2d3lOt6l9hx1ajdq18HCCVEahnN%2BbCOlIoTKvdZfCeXGKblptxg2f68S1f8MMmAt8MSQ17cqz3DIpeyFIbjZhMcFEQRdYS5Z5IKqgDRpjtu0%2BRtFbfmNfV6GsOdUfaQ%2Bkeu2EE%2B53nJNulypa8szcne0ty2yGmKJ%7Ctkp%3ABFBMvIeqssJh"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.ebay.com/itm/284842367385?epid=14037756699&hash=item4251ed9999:g:230AAOSwiAVio8mQ&amdata=enc%3AAQAHAAAA4CmsLG5XpeMzPM4bhZX8I%2FsN4u1Vfdw7Vl9uH0EsZHoS4msT8d2RBADlwH2Xztbdbvxqq0sAZyO9uYLx7FHuGNXqlpS8tSvE3VW4irrIr8Vh%2BN16AmhtUBX2WXsdVLxyqkc4c79o9o%2BClf3y5srPjPdk3mMFCY59aI9%2FIJRVWMl3Vr0d2hyBAt6V7HR24HxN5j7JYjYqmQfJkgm%2FmXvq53q3TVtV5HdmoSQDi3OjOsSqesl5JoFV2xCVx0bMgwaEkW6VtFVlUsrKvsraLX2mNK2xVDJ8BlmtgFQj3xoUupmE%7Ctkp%3ABFBMvoeqssJh"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.ebay.com/itm/114975199041?epid=245228137&hash=item1ac50e4f41:g:nnsAAOSwecFhNwVE&amdata=enc%3AAQAHAAAA4DA0xaGh9QtOHo%2B0gmkmSwsL9vXdb7L%2BgYw%2BWhXynpRXCUKMBcxv9cpOdGNh0fW3YOUc9ypjATmcwpO0227HBT7QbNhOySgI6H1BJfgaC6s1DygmUB60DpVzUFmKAFQrIfyZ3SsrZCwYYljpHAZbnHapV7N4cKoz0AKX9gLlXFTNH5B5acSul7m5MMho9rrTA3zvPg0pQeTiDCng6W5FeuG3P9OwgP%2B46fXOGQSC4TFYOahzFFus0kKxH1ZhUpXI%2FzlXQw3HL6tijDlXWkFkiTLlQAzwMmfVLjzdFk91AniF%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.ebay.com/itm/285126736012?hash=item4262e0b88c:g:QcIAAOSwDSRjxB15&amdata=enc%3AAQAHAAAAkGKiAlwtur%2FmPt%2B9vIUM6Cyu3DdqkEPdG9Sj0qXc1WMhLE0Bx4tBvgMdHhtXTMDmmSeFtpBU1UU06Fsgr5p3LsXLSs7sjQ31BCoYBid5iLj247vpFIhU2Ie62URrdVXMPSK3fvyHppzD8BaqyrF6nabK3PHExgZl3CQ%2FtS9Sav2OHr2fQmmeT9emuqqVXUW2Fw%3D%3D%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.ebay.com/itm/284843502844?epid=11034210273&hash=item4251feecfc:g:q4kAAOSwr1Nio8pF&amdata=enc%3AAQAHAAAA4AqqXJw6a3IVMos1JmYlvdF%2BspvAt0nIKthfNtw8GBKxhA3MqQbi3rB5y4%2FVpXvKppuTlWMWUjsg1UwLXnAi6NhjnlrlGkAwaEawiC4PlmoZzTA819Wt%2FRM4b5GYG0o3MfMftflW6%2FK5Ib2E1crI%2FHStqMHLyRlBvb8wZAL3FE%2Fc5xQA5VDRzQ5wksk1rXtT6YQoiW6McBdIFFbrLFW3%2BIidgZHDUrPC26CE6U4jhW4DmVrl%2BZijyBTpRlSaRaaPcwUOEKyYSKr%2Fw2anP3UMGyNT71aTqzFauCpcKhcVW9hd%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.ebay.com/itm/115382462850?hash=item1add54a982:g:Qm4AAOSw~9tifmko&amdata=enc%3AAQAHAAAA4CtHO%2F7BqM6oDOBsGwo1GLY6nqMr65odDv4SJ4zxNGxeoxl47AUl%2FArq56grc7G3IB6%2FX%2Fk0u0Nn8KtlhH7TKXCiYqlbZxPd9hMnTMzh%2B6Lmtu%2B%2B91bKluc0a%2BYi68OkaQoxUBW6JtUoXHylhN5mbiWxxy4%2B2xojZMpFj1GalpMfQYiNZQzt4pWOOD436%2FoerSU06aTif5Go6jRKd4K04PFvUsjOPrEtlDhhGke3o1eGLyo9QcCd5oSrSOJmAHijrWsx%2Fl99%2BkZF%2BJ1yN533rvLl7VCM1jcNHIXa9XA7gSMP%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://www.ebay.com/itm/265495435187?epid=11043394863&hash=item3dd0c2d7b3:g:cDgAAOSwaI9h3XSA&amdata=enc%3AAQAHAAAA4KsoLUFY4EfgdFccXqshoZUkDxOQBoJqKdMuIGPFrvuZ%2FxqMW7hdxi9UQpgSGDUDuRJdXZsA4ReDCxcyNoAYbVPasi%2FygBXJlx8OusnlaNknU7gNzx1mLHtN6MfiwZJ1f5IyXrs77JpkqDN2qhl%2BZ9E%2Bx%2BSAAjBfDdcu5nYgrvCTXT5sit9Of4RuglxKgyJoUschpVFWh3UG2XPoOYQgdaprXOmVBwkucF9lFyTXtcfeMzupWVV2IPd%2B4tey8AMyTYbV%2F0SZKDCGfvNLwpTthlsE8YAjcbgwO%2F8dgo7%2F15Z1%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://www.ebay.com/itm/195581816273?epid=26034221296&hash=item2d8995add1:g:9dkAAOSwcs9jzT27&amdata=enc%3AAQAHAAAAkDcQT879sZ2qF%2BLXWtrmZwB11w4IkwsU6HGUfXZTG2Zl0Gz6Jf87JadFAiT8Z%2FkWI3ekO5Xg2G0gi%2FcPMRefKWZtyePp2ne5qt0wpeECpmyJ09Xne1audacJP8nQ8nghONsUrodXv8TBT0VdWnhtgN1wbAK4VXKwBdrz9cWB0p%2B23yWW7y4fNRk2f7TBUO%2FUvg%3D%3D%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://www.ebay.com/itm/275419609847?epid=18039187887&hash=item402049baf7:g:tlsAAOSwCoJi8vb1&amdata=enc%3AAQAHAAAA4NfdraIMVt8TBTcv%2BeSSJe9maUWtsEU9tzzvPtf2Ef5TCEUzabtE3gsrvNlTzo%2FdQ7%2BiZNJ6gNBhcsbtXBaD5yiWsd%2FbE6sfgyPw83X9neUWJvVC7CoFVOWRL0pRBRyQogzoOaiz8krHBiAShGn1fGSI64KrpQis9OYIruFuXoDCcoLM7gon8A6VN7Zo2qPpz7I%2FtSg%2BWwJS9IuqWkCAfWTua1cE2cztUZnHV5UPzYunkN%2B9Kp7qitMxAJPDJ49RHQHaIEcNtadQz5EJL6GmEx7Re87YjU1EJaNJU8nSbQuP%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://www.ebay.com/itm/185755456278?epid=13057692509&hash=item2b3fe35316:g:d~oAAOSwB8djzAs-&amdata=enc%3AAQAHAAAAkE8PdZMZa8t8p9Xet8vqO%2BqTUK9h1ZvrkMHBVJ6FgBSCMAh6JWSjwvLwef6Uza3AP6C4mQLDluxmOwt7q%2BousyLSRJH7mCbIcq6u43vnJLZMtesKOGixWJae5SDIxBiiQClmTGaVveKHIijcarV%2FtBvFdxf56Uf3fUwPFFVRdPh2QYqdciIJ%2F2I3XkTPldxHSQ%3D%3D%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://www.ebay.com/itm/275555429968?epid=23057357625&hash=item4028622e50:g:834AAOSwmCdhXunZ&amdata=enc%3AAQAHAAAA4M0tm3d2t02bud3a5WDVnXcbAPsDSJHdYlgDVdhCnD5EJUnttsbQQm%2F%2FMZ7Jkn1MO1PBc9af%2BxuEuNf6V0uCW%2BU2fkIITL%2FzaYhHWwSJBrGrLngK2K9Dy59GO8BT57A%2BHs2QbH%2BZ4nGao1S6farpQMPc%2B50r0OX7JS0pa13pa5KRUymrhch432nRuIAsYyjzcS43o2bKg1bRMmCch7ThcQ3lRM04EfY%2FH%2Bbp7YydhI1WruQLIKvMGqzzkmVbnt0fnzKQ%2FeSAlVVy8co1HsKbpWVuzhEeZTOsb%2FypOdbzWrps%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://www.ebay.com/itm/115398775717?epid=9051376057&hash=item1ade4d93a5:g:vYAAAOSw3bRij4R6&amdata=enc%3AAQAHAAAA4H3K3cmdwPRC5wET7%2F2xkS4%2BY06wViXKPIzSPY9Imm1QX%2FPtjywhAvfLkokX%2F4wbgcFEm%2Fvx2pN6m8QRMmFkGXRN7xGvIWHm%2B%2BqGV7N0d0HhcRKSLgMTSM17K6McInGnumb5KJrx3%2F5DHtUW9FQ%2BtIfCed1k3ch2RF3bcNQH2GbYbxKNMTs7gmWDWQOFHMxn6dsghvY8FJ80YxoDy9Dxx6c7F3JPGgM3qIBtnpOe4fSeYfGykQYpmdJLF5AM%2FrQlLMBS%2FaT%2FzzCz%2FYEPjxlJKtkzq1mS17zqsJXEvR1V5Y8K%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://www.ebay.com/itm/384342925442?epid=14035917224&hash=item597c9fa082:g:9qkAAOSwM5JhH1-5&amdata=enc%3AAQAHAAAA0FWLtXypj6qADoDeQuHqZ1dVP9hE9L9dXC%2FmA2tUkadtSewnzOsO%2BWAGeAH3bCaLOAR%2BW9ZNmeohMTi%2FxpG54pcp92uv7fNSpMbB2YwbYyHnelg%2B6b6e4mOdnoK3Mw5SD3yv44Ng%2Fxz2c153HjXzycivTSZWIQkcEVsemnq2ozQQs1sz9bt%2B3LhbH2WpfydsE1Z%2Bi4jpd980fRWe28YjX%2FJ8G1mCpPFXaVjIiWWE4%2B3YkN8aQXy6flTJRVvKiIMXXxErIq82zGwHWYX5WL6V96o%3D%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://www.ebay.com/itm/394373978599?epid=240174780&hash=item5bd28559e7:g:nnQAAOSwiWJjlZr-&amdata=enc%3AAQAHAAAAkG1Du%2Bf4d07y8jBatVlqQ6SrCXgb9%2B%2BCy7VEWR0SRnNg1QdDdy3jrjKBMJgOwde%2FTHRxcUaeY%2Fqz7F157bywzqAZbbcnHPQiRcyQJlGAZclv1mtx2SthGWygOGKBRb33tCWUlLSWcQKTi20BHhx%2FuWx1hrxgxEd2kyKxtGwneEVWJYg3el0xtBqco9%2BllRgi9Q%3D%3D%7Ctkp%3ABk9SR76HqrLCYQ"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://www.ebay.com/itm/284837223550?epid=26034221283&hash=item42519f1c7e:g:6XgAAOSwAUdio8q9&amdata=enc%3AAQAHAAAA4KRLndsNFZE%2FG2Gwi0RpkZ1XmZlZ3CfW5ZpPw1JxYfjlFNy5VmCoOOLdQrh5zZouvwojEdqvGlkW8zktR4vAw9t%2FVo0oYwwxjUR7ffJ%2BKbjEp0fZPj16NUZ2FKo7TUr32SY90uo08bk2rM18xuthWxq0ZyVkG7g3nSY1sLhJqIfK2c%2Ft%2FG4ey81K9ocEwFreqtTJd5UJA%2Bpi9YVcwQ%2FCPgryxqobstj6KBprZIyFXKoAfHq7%2BzrYN%2F1zLWMwJvrLd62XlZIZGWWdyLW72kT8q8Xw4ECDli1M1y4pevUXYghG%7Ctkp%3ABFBMvoeqssJh"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://www.ebay.com/itm/275563969227?epid=14035917224&hash=item4028e47acb:g:OiMAAOSwAHRjilss&amdata=enc%3AAQAHAAAA0KUuubeWDARmNbgSomW054zgf1E1m4NRwGo43HJpc2oRWNl8HovOrzDkqokwP%2B3y0aSHXUb4wp7Elkoa5y%2FtxjApmorPmtGFL29rlXplwv3vQG30atZC3L8ryotC59ltwi46ig6bog1MT7qS1Rtt1YJfMWRE3LyBeTuH%2BmLE3ltGuBXdHDLXkkysBIbPjR9dXqWok3b1409MnqDYsflAbzh3t3fuYqPsw1h0aFPXgM%2FuCr0gAKva2I3hM50WHuuLiFO371sdQpVixA1QGo7M02c%3D%7Ctkp%3ABFBMvoeqssJh"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://www.ebay.com/itm/384392379194?epid=15034218412&hash=item597f923b3a:g:TBUAAOSwcQxihfxQ&amdata=enc%3AAQAHAAAA4E6BFacxI6A2chqRI9xMeNs2EPZFwnEqDGG4mPgeJI7V%2BiO6PUPTKBhTHH7YUD035b2lzoV2%2FwrTC04URzlSOq5p2aoV06F3TV0v90UcPOsQrOudO5iox8g50pGtQDHLGPcQmuuLHfN2GtHmyidMAN83Lfso4D6fRbGcOCxcdzXRLJuM2G1E3bP3Cu%2FOg7KBtjOMTo11UYSmQmckpmyArSm13cUHKxnDugJGabNSyQ0Sfmwpqi5kKFaGkGBXChDUslPWbFAgYIBCl1fwwq82oTaZAxLmjrH2Hb3Xuv34GakG%7Ctkp%3ABFBMvoeqssJh"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://www.ebay.com/itm/284834690629?epid=27023701740&hash=item4251787645:g:~H4AAOSwFwZio8lE&amdata=enc%3AAQAHAAAA4D64fGAPrSEv14V6Lx6XqlIoO3Is%2FNIRckGsWM6SR7oguEXGM3UC8qOBMT6pEr4Z9pkqCo1hjbkRt9s1kWRhHYOd65Nfgvc1yb%2FKIHJTpNhWU9Pq%2BSJuwk%2FZAbx6EBk1aANZbB5FHO6nGPooe6prFVuZhvh1lo6JBFgYezpWNbVC17eG13fBmNgXOJj%2FWxF8pTd3yECW97Al%2FjELMmPDK%2Ff7kxv1ebjIcN2nKfwmhCP0ywZIAP3HB9AcLmRQq0mSr4dmCawMWrE7n6Xd6HF3VJtKeDDMK2mzHg3WW1PLYTth%7Ctkp%3ABFBMvoeqssJh"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://www.ebay.com/itm/385378711279?epid=5034224996&hash=item59ba5c76ef:g:8YIAAOSwRl9jwrl6&amdata=enc%3AAQAHAAAAoOdf4fJNQcoka6bs5ocCxWNHhIYx7oOCYUQau0j7T9XFKCvxCULgf7ciLtGIdNxbt6kej%2BKqG9xiilrw36nZR2khAh5EPHwUlydo5Fj6KZqmGIzzEPccTVoCKnGv8yaUGxno%2Fk2n%2BDu9r%2F9TansxafW6T1y4zxxnU7XBrjBXyo8%2FjjUmjbU7jxGXGQxLHNXZ7fg8P1vG0xgPrRCNqh5vaWI%3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://www.ebay.com/itm/284843533396?epid=5034224996&hash=item4251ff6454:g:k7AAAOSwxbtin92z&amdata=enc%3AAQAHAAAA4JB8zc5HRAIGjSABwz51ly%2B6gRJSYMP7ePCrq7egyB3ynDSzeYKcLSdyttBSoCpwzEnKYLTXKCQApCOMc%2FAgMQ5qNpQS63xpj1vpzUSA0ZAo%2BnOea0N4R59Cx1sXVnlndTjE%2Bm0DxhE%2FOWuUp4SlPy23pczbc%2F3Q6OROr02Q15vP1ue7AD7BLN%2FN%2BSH%2F1ho9eLriuT9%2F0CwQNtMdLaQSTf9F%2B2yK%2FDB2fQpp0ybIHaHkgjQe5HoHvJvVrwmhIfdhBifEFJThn1JwtZrqtgvbJ1XQ0HT50libXklr6%2FmOHsh9%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://www.ebay.com/itm/354352448855?epid=16034579360&hash=item52810d4557:g:jCsAAOSwNAFjSYuD&amdata=enc%3AAQAHAAAAoBe6PPX4cziAMH0zqph5CVKzeNK5rRqYKfKAk4GHDulh6Z4prRNzhjzV0cUxdC8dGp5lcPZ3wE8wZyc4xJveWoV9zNH8mHAuJtYXqFVKnWYthyltxBZabn8Lu4Sw2ZGZRYGr0IEpveY8F6Y6hzjP6hbFEwdEebm8MK4GxWHcMMwX%2FaxLXCWSD97YuGfHksfIG%2BfRrny6RufWm8ljq8yVj30%3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://www.ebay.com/itm/115055691694?epid=6023706166&hash=item1ac9da87ae:g:Q4UAAOSwWmBhcE9E&amdata=enc%3AAQAHAAAA4EUJLPKV703Ekx2%2BCWqMXvBRR%2BZjdsXLMQbxQ5blWGGbGi4M%2B3UbfyONygmPuFLkxjI027y0Hd%2FolBzoWN8SknMWX3Q9N4ToLpqQPIeUbHpiLfJKgEs0RwFZDIifdlj6KDk7VPz6U4Il4zD2d0Icrt6px993s7S5OHzxdJYtHhOYq%2BgXe0ZfHuQS6T%2Fk5l2Srhrt%2FFY8us%2FugysDgYnTxDj1zqGZFlDTsKgbklE6rtVIx58poayLW7onOQrKtFRoaFV6sIb4fxYefABdBecdZZghT23FoKp7%2FaHHZWBkcyT4%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://www.ebay.com/itm/204154889363?hash=item2f88946493:g:9DsAAOSw3R1jdMnI&amdata=enc%3AAQAHAAAA4P9DtAwd40J0WTSiekmkteRZoiZEd%2FkMehqqbdN8dSNEJZ%2BrZOaWWIShgeRfA7o7N639YViFxJkkg%2FmRhWAFir%2B24zPr3g9lb7Gl%2BRgIg5qT9nKCmQ5VtgnUVoMhiMlDfQ29YLJv9JZwo7b2iXWPo8uki3Un8qKk0PraRTp4RHXConRbIqopSwPdHznOLmop5iydoztVLSQhtW4GYHKCmSzcltPmvw6XQuPAIpBN2ebiPZrT85PpJ%2B%2FxYK8vJaHTE%2FU8mZyTUR6KAAlWpvKDIFVpZgh%2B2EQQ%2F6Wm2ogWDS3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://www.ebay.com/itm/114982462737?hash=item1ac57d2511:g:uCoAAOSwmlRhO76O&amdata=enc%3AAQAHAAAA4DOHXyPMyoQsjN2ZT0NzeY623TkFdSLW0CMa4shD6K5TsBZvYnUSenuzZg%2BiinB3pVfLeqd42hewDNPiTSzYNegfaV40DU6zYxWLk6rB%2Bg6XZ3VLtP07jmmkBkI3C7mkfpBH7RMvgS%2B46uo%2FmvoMRhhk54nG68HYepoIx%2By1vRVDPxu6DqwooGcp%2BolBnp%2Bd1i4dc7RyyXXEuJ1%2Fp82gcOhI3N120812fZ8VATHfJqg3IdQ1a3IfM7nqdxnA0dPkPLf1TVIwtJeyE0c7uZHATsY08u84E43UR9eFO%2BeI3oyU%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://www.ebay.com/itm/295366826662?epid=23041723818&hash=item44c53c1aa6:g:dl4AAOSwDC5jgSu-&amdata=enc%3AAQAHAAAA4PjXAsnjh5aI0vrEnGo7Z9OnBBoN%2B%2BVr9%2F5EFHOnPE6apceeU3bd6Ib2dVpm7vOuvi0mh3kWZz0JBpztsYclaqGUlCZa%2BqX8U83pme23zM0ADkiJxBMsToGYzEqjh6cvwKa%2BidzyeLqg389koSvYZg%2FXStbjMDreOFQr9n1cxhY67jNQvMIH469%2B72E%2FeBNb75x2uDj46xjF4A%2BenR2DDd7UEdBabTEDUWcCCNzYWwQkocmXQCXIthRuGr%2FNSVG77SrbVXr4kt1LUeaSYShs6vbYTBn55NUtIwUj69CuV%2B4W%7Ctkp%3ABFBMwIeqssJh"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://www.ebay.com/itm/275037837307?epid=235205919&hash=item40098857fb:g:BmQAAOSwhdhicagi&amdata=enc%3AAQAHAAAA0NGR4CAfGY1g9aBugj0vl3zqXcLw6jndqmUruRknV%2F4ZLSZITGRlruzUB2rjL1FC%2FM628dnRo%2BeTxqKptbADDWcAyPWqvpRLJcfn8gM7f9Qy7akVCDa82kOrBViw%2F6URqeJcKRJ6eqAWt6XAbcxuRvt4VO9A0hpt66CzdCD12gtbjIq9sz7NVLRRZqPIKB9p3fMIlwnx%2BanNPx1Yx%2Fe9BIx%2FQys3yEDXl1RIg54rry%2F9apVWOEfEJm%2B8Km02ecwPbs%2F1qEEOjV21EGTSitMoAiU%3D%7Ctkp%3ABFBMwIeqssJh"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://www.ebay.com/itm/165917646229?epid=15055100591&hash=item26a1765d95:g:GbUAAOSwon9jx2r2&amdata=enc%3AAQAHAAAAkJA8t8382O2wUFVyY44TF8%2F6RQu2rmQaB6CD%2FdknZw8966upTYJ5EqzW%2F4odXtRkA5gyOosdD%2FRINHtTQhZGBNUWG%2F%2BYIB0LUjg%2BTj9320EOmTpZPjC0TMKoYU5gzWGiA16QV%2BVlEu%2FoPWv4%2BT9Q2aJwl8OC%2F7N4%2F6kzbZ6VV24ewKag3fHyTHyZRGjWJowaIw%3D%3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://www.ebay.com/itm/134289962940?epid=8023709558&hash=item1f444e37bc:g:kG8AAOSwemNjUOyA&amdata=enc%3AAQAHAAAA0NYhSjHQ%2B3r9Ohbbg0P5SeKql99jLpvtv1C0W2nKcjuB8OQnbe9dAhrhAviF9vEdMLFMjNhuInRrxnyqLToLPaMJVzKjfmGtSX81%2FjQEqKEI4YH1R7Tvbvhf%2FZEOkGpEtTRc82Xw9M5dSguaAcp2mYoarAQi7cpZfVu6jQLQDsyeiotBZfUwQUxxDL7FLr2Fs4H2rqAYwwwypTP69wVR2B24MrCJ6FGEBm2EfJK9JbZZz1MSV%2BpMJc8%2B5Z88bEYUfkGSYR4IGdbn5RupdD8qGns%3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("42"),

                                value: "https://www.ebay.com/itm/115382465076?epid=15057003479&hash=item1add54b234:g:gIIAAOSwiJFifmmz&amdata=enc%3AAQAHAAAA4Pel7yRDK%2BnatS0iAXxk1WaGbuoYNoae0iyeFBxKZacYyQ%2Ftth%2FHvVPTU5BQ%2ByichClcVZZmyyVqKV6oRgXHKyXvu6ABRqPWRtFIfGDVEuFEMn6mRaAkHvKl99sNkZJ89bUq8M6GJrtoqk%2FypQBOBjQktHJeL87GbR6D4y4BkcKrwG475EcMmSxZ%2ByPiMFwCH%2FzmgHROa6NkgmL2HV%2BlOMCplMvfhP4AiS37ZEvpZ05N7%2BWb5ZI4By5lHGbt6N3AcobIZXk9IywIO2BY9fFVvZ6QACHF9kJ%2FQ9E1MIuZtap0%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("43"),

                                value: "https://www.ebay.com/itm/234870611190?epid=14034578851&hash=item36af611cf6:g:iR0AAOSwG31jvVQi&amdata=enc%3AAQAHAAAAkBSwZdfU7K35zNXT%2BnTVSkeTsWogSkmQeeb572EPUfRj3GQl%2BvzJBvHAMb6FpwoD2EMY7B9ddDzfoOVpPZmnb2bT6PZ%2BBTwFm5Er8AcYNmGsMgl1mGKxz1m5r8we%2FyV7s8Kw3zdHoVDtJT71H2arNwPULxbdqpF53hH8Ojx2tgE%2BqiCdn%2ByqVKvR61GzWbIsfg%3D%3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("44"),

                                value: "https://www.ebay.com/itm/134304224259?epid=26034221266&hash=item1f4527d403:g:59EAAOSweStjW8ZZ&amdata=enc%3AAQAHAAAA0BsJ1VkljwMFWwnM0jIkO%2Bd2rTgjF8Ps8zEjdH4gY14CcFRUF8MkF6DhHVfLaRQh0421VykhsrTC22jlcG%2FI2lP6B1j2c5ujIbmpdJOzBgcFbNrv%2FXqTELr7owA8r5zZ3EzyLgjx7LanzkNrk0XfxKobi6efxa83umH6%2FYX2Ze7NpYTVXbs37pAf54Ot5cXXYgu24rGHNjnRIn%2FtPDWUcqpvPL0WwcVfMnEGCpvPN4mKctUnqP7y%2FrUYKnSlDUG5PiW52qvXIRag8Cb3s0wI5Ik%3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("45"),

                                value: "https://www.ebay.com/itm/194316866035?epid=8023709558&hash=item2d3e3011f3:g:DfAAAOSw1ephFOPR&amdata=enc%3AAQAHAAAA4NSJ9hyAPoE3EL%2F86975ibMzsHsGDDkDLzcC2IgZVrQRjEsUJscwCausqJFSYI6Ab%2Fn%2BD15qv5deHvCdQAEOmP2rarGk1tprdTveSw3vG8j%2FpmvpxtqSOz3aoWVVd8XV2veBRqAPEoxoRG3iiGK63jd%2BkH8pUgXXhd2sAYZhst5dgpRq7U4cm1aWfrZvsEBO1YyCrgnACH1nVJfjd5AExEIKP5MEQTkemstac5Q5%2BmryufAeepZW%2FPcBCHwt%2FpyICoUtP36X2cq7u7aE9wT35EXhwrcZhEBSFkrOTmEzLHNw%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("46"),

                                value: "https://www.ebay.com/itm/295495133461?epid=18045314698&hash=item44cce1e915:g:9bYAAOSwvLFjpGwJ&amdata=enc%3AAQAHAAAAkCODiRPuf6NrA%2Ff4O2ZViOXWjcBJqR1XjeCNbevxP5u9VI95JGIq5CUv%2BXWQIT733cKrc994Qf6a9%2FDWyfC0iOWtnODSOsonWQJz7ALDPWQwuux%2BLT63MMyw7pl0660OkuZ%2BrPCvbJEC9esxXjaLkTjqjymImvJgkiKpMLu%2FWoVwdv0mM%2FvfFUpRInGJ%2F%2BOj5A%3D%3D%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("47"),

                                value: "https://www.ebay.com/itm/134278052376?epid=2310781314&hash=item1f43987a18:g:SJcAAOSwRiRjR58C&amdata=enc%3AAQAHAAAA4MuzP1v8LO2bJU8o1OIyRKN0A8jHabFvrZ38t%2By45PTiGMWx%2FVzh%2B%2FZnNQCB9mCbhdk%2FvIW3yJvMqRW4AcCB9cHkuWe6Hu50%2BdeDZCIJItEtXzmRADELMetUO8%2FzUQDqzi3QYIBArqnghN8ASWpndv484vN1v9TLHAtprYCzFHYAv3RYLQpAHcSRuOwlZDhfSkhnxDyWQVx5VqWT%2F3LlEBmIQEFC1HEN59FKeToi5FJ13JUpKGiUmfuJnJZbex86XTHq9Yud1wzdmX14HIKOR%2BdHxpoEEQWGVWe%2FMEgMpyQh%7Ctkp%3ABk9SR8CHqrLCYQ"

                            },

                            {

                                num: NumberInt("48"),

                                value: "https://www.ebay.com/itm/385385510766?epid=18041715094&hash=item59bac4376e:g:5osAAOSw0IJjzn8u&amdata=enc%3AAQAHAAAAkFRsqN5XTshfan%2FaQlBgyRmupACU6c%2F46htNVlozDZlSFvHuy1YoCt6S%2BHOXhD%2BwFnF3IHKh8NJNGeWTELxZkZhpD1wuCwap30JZi0Jx1KIEBXILCaJx9kHq62lMp18F9ctOY96N1Z0xksZPTh00HFh8KrPHpSOCE3rh64Iq5gVDjqeqfrxsVWXObzXhGSkmxg%3D%3D%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("49"),

                                value: "https://www.ebay.com/itm/354375729960?epid=16041709998&hash=item5282708328:g:eaMAAOSw-BVjZaxt&amdata=enc%3AAQAHAAAAoIYZCVaVMJlE1xi2Dazjl%2FWEj4m0nd4gXhIxisineG5Y4fWnCwNLwbkOvlKFPIwGmoC8pk66RzEt5bG4e0rqBHOc%2BqLM9TtgN69RfJ0FbembPUBqkeJqWLAqLAtgo14vnb7oVcfbnyP6ZDuG5APDw0AnOGRr%2FFIGxwB4UJTY56dyJzEBt7euOFjbTozcBn3kUFU5MqBtnQ5P9kVragVSv7E%3D%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("50"),

                                value: "https://www.ebay.com/itm/304786301225?hash=item46f6ade129:g:qnsAAOSwc3Jj1yVo&amdata=enc%3AAQAHAAAAkJaQM9LbO8pQQpm5Eg9m8R0uPlugNpcXSXqllVSKN0EPpnJzrE25gwCd8hhNR%2BcSMP978sfs16e%2Bua%2FKy160SEvxijbjWmzbFYXNdUNneRFHL%2Bz9jpRy2gvHuiN%2FiXW%2BRYwwRogGDV8NzWBXuBqjN%2FGkpH8WyJL7z6eEROZmMDxVah3aeJxBd0HX0S43WgvbNw%3D%3D%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("51"),

                                value: "https://www.ebay.com/itm/174911437767?epid=238944741&hash=item28b988bbc7:g:LAwAAOSw3tFhEnDR&amdata=enc%3AAQAHAAAA4OUrIuiGa2TtmvD2S1fdS%2B%2BCMSN6PEv70vribX3V%2FhIHx25mQNXNae4tS0Ud6jpKa4ZFjZzjlt7bygqxmRtgD79yiaTg9xT3vMvIVD%2BcGxBa%2BzjYl2PINFu6owvlsD0riwdahZJy2bdkGZXvxNOEi3uhs%2BjMLoLQxMpplMwk72lnY3wGNt2DX6hqr%2B00jKQWIzcA6uv%2FKZYCxVkwdJkqEs9JIjZlRKmxZoe%2F%2BQbCfqLqPHAIfv2P2y3QTsUhuqNDjYXMlt3iJtxzPgrXlz0ZwrvB7979C4lzZAtAPNif44Uc%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("52"),

                                value: "https://www.ebay.com/itm/134327782473?epid=224886862&hash=item1f468f4c49:g:fwMAAOSwrphjcmQF&amdata=enc%3AAQAHAAAA0MoVc8HnavBYYAcZpkyN7pzyeOjKXb1XBsPWG70gxXvRSLgJ9o1SNHJUYo2OHEfm%2FNzrKZrUORxxFMJ%2BstvFP3l6iik5KSVtD70PMjxOBUPKnFozs%2F5LxxqZxt9NPoVH8EaHJh0Mf4OYa467PZVV59QxrHIrRmG9N3IQFwj9FXZKTbSoQIVq9WnGCq6LvPFok0jLKo5JNo5RotMvquAk5il5e0r04gvIF9guKgM7lrQZnGNjbibqyCZN2NKvVaMR57INPi%2ByEG86n6dlSDXYQzs%3D%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("53"),

                                value: "https://www.ebay.com/itm/384354718272?epid=19034211465&hash=item597d539240:g:dJEAAOSwJfthDS3V&amdata=enc%3AAQAHAAAA4Ca7XeeVvYUALBuDtcNoNuhvGfaXQ7MvLfUZoXd5PeLwW5sPmCtc7NXmC9n%2FSJkwxtzY7BhiZVX37ie2PL6B2ksBm7K5XdYbc4yv%2BjWBo4OA2tuXRhx%2BwT%2BgYFa1zprhQnu2pN8BpbHTkusr7ZakxTQ0lWsCpcKJuNBSmaAN9H0lw2T%2FgBGQPbYVNc4weXw4ZJuoScNO7WsO7IxJxYzZFqReE38HWEkiWiXzrSeqFquhQUAqh2gedIWCFMELPz48TmP6E1vpckvVKSlWRiDvSPcx34QXXW1TruQRoI3l7%2B9c%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("54"),

                                value: "https://www.ebay.com/itm/165514454435?epid=19048294271&hash=item26896e25a3:g:DSQAAOSwJxVimRrw&amdata=enc%3AAQAHAAAA0AEcfe918pjX0VJfW6zR3ekp05VFnLII061XlBdjPyEm4imOkoy5Yd0nh4az%2BGOk9N71Bt4KgFcZAT8SfJz25DnGn0qxzSD8RXr%2BPzq1ny1LUzUaPn1v5YpdMOWorGo7munUtAh%2FaVDOJV0d%2BwLu9AIoOmF7kXH1TwZrZm3q4ZTSBTTo8dDGri3IsMNV4FFrvuAg%2FLCfDLu929MV6d9OkVFtshsNOAHO4zXUijjYQKaWRUtBnGp2HXXsoOOdc6yo6CpSp4FMkmWTA%2BVpiqBnoic%3D%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("55"),

                                value: "https://www.ebay.com/itm/384354878808?epid=21023708552&hash=item597d560558:g:H2YAAOSw8KthE6N8&amdata=enc%3AAQAHAAAA4DXQxeojdyx5xV0e9%2FqBE5zZ%2F1WT03i1eIKbZn8SSNqTKpyw80PFEMZ03eGhZrJZ8JStS9FFW1mPT7UTRkSRPOED6cae6T4cY3XEqIoBIY1en6kAreY%2Fj7j%2BOV01rYmK0Tp3zztJBPITNq3xi3o6lJNMAi5%2BQwGTZLVXYXIiTGIuRExIneKhvzOfT3btIr1vY0D%2F9YANjYsRwP33VVRR6XnGlWG5aPh9rAoH5UZCYSPJTPFdHyApMuIbsqGNxJ4Nyi%2BXwOf6FUWP7750zC%2BtYWmTJf498O02QmwDY7k%2FksOE%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("56"),

                                value: "https://www.ebay.com/itm/275558102208?epid=28024399462&hash=item40288af4c0:g:zZ4AAOSwBHhhQKm9&amdata=enc%3AAQAHAAAA4DX9Vhc87B23tD5jfMVFJZHAOvzu0gh%2BnU4M1DxyKOIiAwh1b1cfjI0HVs9yoIFK06Ka9nIaMeB635PtpGbprnIkaxOV9av20tgXnOwPOuMa3AtNImBgJUtABBhHW7k5zLtmD7GTc%2FwcdDGKadDOSoz%2Fymaebjd0V7QmUKz%2F3xqzJytX19G7P1QU3p7QoI77YwZuGE1K866QvszYtvlmsZLvmu%2BXbQMuDOoRqBP3Kb9OsWYVu8zfMEM0oFFGgMOw3RpM00htTxM7tc5tU5kWLnDRNoQpuFjblsYvoARi9xST%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("57"),

                                value: "https://www.ebay.com/itm/234870614872?epid=6041725317&hash=item36af612b58:g:Nb8AAOSwx4BjvVmz&amdata=enc%3AAQAHAAAAkEDeT8TmUlQ8IjQL99g9oZL8YHYFlR0TRqo2bLHhbsKtfw0AldDbv9VWIxc%2BvMg%2FV%2BbCex%2FVSmsJoNdMTOMyvGOIxG2sf4%2BRXvfldKHih939mnFK59lUpZGdc4WSukzF%2F5a%2FY0GE%2BHdBTDrPIFVKrG7RNbWqtjArUbPbe5nUxnQ6GIadY7kkmdgYp5%2F3MEsj%2Fg%3D%3D%7Ctkp%3ABk9SR8KHqrLCYQ"

                            },

                            {

                                num: NumberInt("58"),

                                value: "https://www.ebay.com/itm/275513445335?epid=242053148&hash=item4025e18bd7:g:lPkAAOSwa3NjVuDe&amdata=enc%3AAQAHAAAA4IR6AGPBlVGpOH7xh1nhu9MEJqdYk6VXoL8oRYBTP7ld8KoXBTQaIu6%2F6r7rlGWt4wcUHDG7WE8fQz4ZA0j07VGCVxpy%2FP9Eqff0%2B38UZ9%2F%2FlFrknO2rkHaX1DV13ztTCSNW2RRXVGIwan7%2B%2F167DOUDCVV32u7RRuq5hT23b%2BRA%2F30k3v4PbGABKCS5jTkveHIx9AeVbS23nMP8Cy3y7p9zpHisq5w3hVbWPzCoxOgc1vtgmZoRsZ23uaTwOMJPgWOxzxj1pB5JNh0iY97WEWg70Rut698YKTlG6kP%2FTD7V%7Ctkp%3ABFBMwoeqssJh"

                            },

                            {

                                num: NumberInt("59"),

                                value: "https://www.ebay.com/itm/325520901816?epid=27041707918&hash=item4bca8ec6b8:g:uqYAAOSwXWZj29Bo&amdata=enc%3AAQAHAAAA4G6SJ3xy1glI4gOD5fDQkPnjzMfEYvVIfAzHMFZ1X1i%2BbSRbZ6s11S6805uASEQCGH2lhtdK0aJIM2s2eyzxSQz8tCDSWmmLxuvNb9SmNHw4eFM%2BKfk09W%2FNZ%2B5UnEv%2FOdf68sImPbp0vWR2a1Q8p4iYQR09VRVZrwI4FzxuggoPmQuIh8K5%2BqyopGx2EsWuDaMSbaGF%2FGVKFrrPoZGcZY8XzRX7jK9ghb30K36vP%2BTIuDdt1GHqIqVvexsNG7FAzBdNymFarmBrMvBdvGaahw9t0gAn6XFcuFAE3YYbA5Nk%7Ctkp%3ABFBMwoeqssJh"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("28"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPhone",

            value: "iPhone"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop Click Next Page_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop Click Next Page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay Names and Link Addresses - demo",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "Name",

            desc: "",

            type: "string",

            exampleValue: "Apple iPhone 11 - 128GB 64GB - GSM+CDMA Factory Unlocked \"Excellent' Opens in a new window or tab"

        },

        {

            id: NumberInt("1"),

            name: "Link Address",

            desc: "",

            type: "string",

            exampleValue: "https://www.ebay.com/itm/115398776875?epid=18045314698&hash=item1ade4d982b:g:BI4AAOSwo5Rij4S0&amdata=enc%3AAQAHAAAA4ELrFOtK9Q4ol28SIBCj8AlEyuoOswMlad9UdATAXLLXzCrNiXBXqGjK834mUeluTYl2fG4nLibLzPUvOxpTWXkmIyoL%2B14iExY93etuVl%2FBk3C5nIg00wVu4dhYbRF07x6Bsjvf78UyZkC23ZQNHj%2BdfhMp16XqtHjP4m%2Fu2AYs%2F6lcEVMwWKCOW8mLSUEznmhE3xbgOTKZY7vTkB%2BNqszgjnI%2Bj9FduDUmPyH%2ByboyhCEDQHEOnS6boubjzpbJ4gvRsNrBGqR3qcdh%2F1qqEGxETnzj8k%2FFaggVj5uyGRqf%7Ctkp%3ABFBMuoeqssJh"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dbf989c85da553b7a9d4c2"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("7")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPhone"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("4"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5"),

                NumberInt("6")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("5"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Page Link",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("6"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[1]/div[1]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: " Apple iPhone 11 - 128GB 64GB - GSM+CDMA Factory Unlocked \"Excellent' "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[2]/form[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/span[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "US $224.00"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[2]/form[1]/div[4]/ul[1]/li[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "1,605 sold"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[2]/form[1]/div[4]/ul[1]/li[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3,874 watchers"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[2]/form[1]/div[4]/ul[1]/li[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Returns accepted"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[2]/form[1]/div[5]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "US $17.25 (approx HKD 135.25) eBay International ShippingShop worldwide with confidence including detailed tracking and hassle-free returns. Learn more | See detailsfor shipping"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[2]/form[1]/div[1]/div[1]/div[1]/div[2]/div[2]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Phones are in Excellent cosmetic condition. Devices are ready to activate. Clean ESN. PhoneCheck "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[3]/div[1]/div[1]/div[2]/div[3]/div[2]/form[1]/div[1]/div[1]/div[1]/div[2]/div[2]/a[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Read moreabout condition"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("7"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Click Next Page",

            sequence: [

                NumberInt("4"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("8"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Next",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        }

    ],

    id: NumberInt("29"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPhone",

            value: "iPhone"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop Click Next Page_2",

            nodeId: NumberInt("7"),

            nodeName: "Loop Click Next Page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay Detail Page Info Collection",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: " Apple iPhone 11 - 128GB 64GB - GSM+CDMA Factory Unlocked \"Excellent' "

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "US $224.00"

        },

        {

            id: NumberInt("2"),

            name: "para3_text",

            desc: "",

            type: "string",

            exampleValue: "1,605 sold"

        },

        {

            id: NumberInt("3"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: "3,874 watchers"

        },

        {

            id: NumberInt("4"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: "Returns accepted"

        },

        {

            id: NumberInt("5"),

            name: "para6_text",

            desc: "",

            type: "string",

            exampleValue: "US $17.25 (approx HKD 135.25) eBay International ShippingShop worldwide with confidence including detailed tracking and hassle-free returns. Learn more | See detailsfor shipping"

        },

        {

            id: NumberInt("6"),

            name: "para7_text",

            desc: "",

            type: "string",

            exampleValue: "Phones are in Excellent cosmetic condition. Devices are ready to activate. Clean ESN. PhoneCheck "

        },

        {

            id: NumberInt("7"),

            name: "para8_text",

            desc: "",

            type: "string",

            exampleValue: "Read moreabout condition"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dcedcb869cb52a8a8f6ea1"),

    containJudge: false,

    desc: "https://en.wikipedia.org/wiki/World_Wide_Web",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://en.wikipedia.org/wiki/World_Wide_Web",

                links: "https://en.wikipedia.org/wiki/World_Wide_Web",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[3]/main[1]/div[2]/div[3]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "System of interlinked hypertext documents accessed over the Internet\n.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the global system of pages accessed via URLs. For the worldwide computer network, see Internet. For the web browser, see WorldWideWeb.\n\"WWW\" and \"The Web\" redirect here. For other uses, see WWW (disambiguation) and The Web (disambiguation).\n\n\n\n\n  The historic World Wide Web logo, designed by Robert Cailliau\n  A web page displayed in a web browser\n  A global map of the Web Index for countries in 2014\nThe World Wide Web (WWW), commonly known as the Web, is an information system enabling documents and other web resources to be accessed over the Internet.[1] \nDocuments and downloadable media are made available to the network through web servers and can be accessed by programs such as web browsers. Servers and resources on the World Wide Web are identified and located through character strings called uniform resource locators (URLs). The original and still very common document type is a web page formatted in Hypertext Markup Language (HTML). This markup language supports plain text, images, embedded video and audio contents, and scripts (short programs) that implement complex user interaction. The HTML language also supports hyperlinks (embedded URLs) which provide immediate access to other web resources. Web navigation, or web surfing, is the common practice of following such hyperlinks across multiple websites. Web applications are web pages that function as application software. The information in the Web is transferred across the Internet using the Hypertext Transfer Protocol (HTTP).\nMultiple web resources with a common theme and usually a common domain name make up a website. A single web server may provide multiple websites, while some websites, especially the most popular ones, may be provided by multiple servers. Website content is provided by a myriad of companies, organizations, government agencies, and individual users; and comprises an enormous amount of educational, entertainment, commercial, and government information.\nThe World Wide Web has become the world's dominant software platform.[2][3][4][5] It is the primary tool billions of people worldwide use to interact with the Internet.[6]\nThe Web was invented by Tim Berners-Lee at CERN in 1989 and opened to the public in 1991. It was conceived as a \"universal linked information system\".[7]\n\n\nHistory\nMain article: History of the World Wide Web\n  This NeXT Computer was used by Sir Tim Berners-Lee at CERN and became the world's first Web server.\nThe Web was invented by English computer scientist Tim Berners-Lee while working at CERN. He conceived it as an information management system using several concepts and technologies, the most fundamental of which was the connections that existed between information.[8][9][10] The first proposal was written in 1989,[7] and a working system implemented by the end of 1990 including the WorldWideWeb browser and an HTTP server.[11] The technology was released outside CERN to other research institutions starting in January 1991, and then to the general public on 23 August 1991. The Web was a success at CERN, and began to spread to other scientific and academic institutions. Within the next two years, there were 50 websites created.[12][13]\nCERN made the Web protocol and code available royalty free in 1993, enabling its widespread use.[14][15] After the NCSA released the Mosaic web browser later that year, the Web's popularity grew rapidly as thousands of websites sprang up in less than a year.[16][17] Mosaic was a graphical browser that could display inline images and submit forms that  were processed by the HTTPd server.[18][19] Marc Andreessen and Jim Clark founded Netscape the following year and released the Navigator browser, which introduced Java and JavaScript to the Web. It quickly became the dominant browser. Netscape became a public company in 1995 which triggered a frenzy for the Web and started the dot-com bubble.[20] Microsoft responded by developing its own browser, Internet Explorer, starting the browser wars. By bundling it with Windows, it became the dominant browser for 14 years.[21]\nTim Berners-Lee founded the World Wide Web Consortium (W3C) which created XML in 1996 and recommended replacing HTML with stricter XHTML.[22] In the meantime, developers began exploiting an IE feature called XMLHttpRequest to make Ajax applications and launched the Web 2.0 revolution. Mozilla, Opera, and Apple rejected XHTML and created the WHATWG which developed HTML5.[23] In 2009, the W3C conceded and abandoned XHTML[24] and in 2019, ceded control of the HTML specification to the WHATWG.[25]\nThe World Wide Web has been central to the development of the Information Age and is the primary tool billions of people use to interact on the Internet.[26][27][28][29][30]\n\nFunction\nMain articles: HTTP and HTML\n  The World Wide Web functions as an application layer protocol that is run \"on top of\" (figuratively) the Internet, helping to make it more functional. The advent of the Mosaic web browser helped to make the web much more usable, to include the display of images and moving images (GIFs).\nThe terms Internet and World Wide Web are often used without much distinction. However, the two terms do not mean the same thing. The Internet is a global system of computer networks interconnected through telecommunications and optical networking. In contrast, the World Wide Web is a global collection of documents and other resources, linked by hyperlinks and URIs. Web resources are accessed using HTTP or HTTPS, which are application-level Internet protocols that use the Internet's transport protocols.[31]\nViewing a web page on the World Wide Web normally begins either by typing the URL of the page into a web browser or by following a hyperlink to that page or resource. The web browser then initiates a series of background communication messages to fetch and display the requested page. In the 1990s, using a browser to view web pages—and to move from one web page to another through hyperlinks—came to be known as 'browsing,' 'web surfing' (after channel surfing), or 'navigating the Web'. Early studies of this new behavior investigated user patterns in using web browsers. One study, for example, found five user patterns: exploratory surfing, window surfing, evolved surfing, bounded navigation and targeted navigation.[32]\nThe following example demonstrates the functioning of a web browser when accessing a page at the URL http://example.org/home.html. The browser resolves the server name of the URL (example.org) into an Internet Protocol address using the globally distributed Domain Name System (DNS). This lookup returns an IP address such as 203.0.113.4 or 2001:db8:2e::7334. The browser then requests the resource by sending an HTTP request across the Internet to the computer at that address. It requests service from a specific TCP port number that is well known for the HTTP service so that the receiving host can distinguish an HTTP request from other network protocols it may be servicing. HTTP normally uses port number 80 and for HTTPS it normally uses port number 443. The content of the HTTP request can be as simple as two lines of text:\n\nGET /home.html HTTP/1.1\nHost: example.org\n\nThe computer receiving the HTTP request delivers it to web server software listening for requests on port 80. If the webserver can fulfill the request it sends an HTTP response back to the browser indicating success:\n\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\n\nfollowed by the content of the requested page. Hypertext Markup Language (HTML) for a basic web page might look like this:\n\n<html>\n  <head>\n    <title>Example.org – The World Wide Web</title>\n  </head>\n  <body>\n    <p>The World Wide Web, abbreviated as WWW and commonly known ...</p>\n  </body>\n</html>\n\nThe web browser parses the HTML and interprets the markup (<title>, <p> for paragraph, and such) that surrounds the words to format the text on the screen. Many web pages use HTML to reference the URLs of other resources such as images, other embedded media, scripts that affect page behaviour, and Cascading Style Sheets that affect page layout. The browser makes additional HTTP requests to the web server for these other Internet media types. As it receives their content from the web server, the browser progressively renders the page onto the screen as specified by its HTML and these additional resources.\n\nHTML\nMain article: HTML\nHypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets (CSS) and JavaScript, it forms a triad of cornerstone technologies for the World Wide Web.[33]\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\nHTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img /> and <input /> directly introduce content into the page. Other tags such as <p> surround and provide information about document text and may include other tags as sub-elements. Browsers do not display the HTML tags, but use them to interpret the content of the page.\nHTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. Inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), maintainer of both the HTML and the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[update][34]\n\nLinking\nMost web pages contain hyperlinks to other related pages and perhaps to downloadable files, source documents, definitions and other web resources. In the underlying HTML, a hyperlink looks like this:\n<a href=\"http://example.org/home.html\">Example.org Homepage</a>.\n\n  Graphic representation of a minute fraction of the WWW, demonstrating hyperlinks\nSuch a collection of useful, related resources, interconnected via hypertext links is dubbed a web of information. Publication on the Internet created what Tim Berners-Lee first called the WorldWideWeb (in its original CamelCase, which was subsequently discarded) in November 1990.[35]\nThe hyperlink structure of the web is described by the webgraph: the nodes of the web graph correspond to the web pages (or URLs) the directed edges between them to the hyperlinks. Over time, many web resources pointed to by hyperlinks disappear, relocate, or are replaced with different content. This makes hyperlinks obsolete, a phenomenon referred to in some circles as link rot, and the hyperlinks affected by it are often called dead links. The ephemeral nature of the Web has prompted many efforts to archive websites. The Internet Archive, active since 1996, is the best known of such efforts.\n\nWWW prefix\nMany hostnames used for the World Wide Web begin with www because of the long-standing practice of naming Internet hosts according to the services they provide. The hostname of a web server is often www, in the same way that it may be ftp for an FTP server, and news or nntp for a Usenet news server. These hostnames appear as Domain Name System (DNS) or subdomain names, as in www.example.com. The use of www is not required by any technical or policy standard and many web sites do not use it; the first web server was nxoc01.cern.ch.[36] According to Paolo Palazzi, who worked at CERN along with Tim Berners-Lee, the popular use of www as subdomain was accidental; the World Wide Web project page was intended to be published at www.cern.ch while info.cern.ch was intended to be the CERN home page; however the DNS records were never switched, and the practice of prepending www to an institution's website domain name was subsequently copied.[37][better source needed] Many established websites still use the prefix, or they employ other subdomain names such as www2, secure or en for special purposes. Many such web servers are set up so that both the main domain name (e.g., example.com) and the www subdomain (e.g., www.example.com) refer to the same site; others require one form or the other, or they may map to different web sites. The use of a subdomain name is useful for load balancing incoming web traffic by creating a CNAME record that points to a cluster of web servers. Since, currently, only a subdomain can be used in a CNAME, the same result cannot be achieved by using the bare domain root.[38][dubious  – discuss]\nWhen a user submits an incomplete domain name to a web browser in its address bar input field, some web browsers automatically try adding the prefix \"www\" to the beginning of it and possibly \".com\", \".org\" and \".net\" at the end, depending on what might be missing. For example, entering \"microsoft\" may be transformed to http://www.microsoft.com/ and \"openoffice\" to http://www.openoffice.org. This feature started appearing in early versions of Firefox, when it still had the working title 'Firebird' in early 2003, from an earlier practice in browsers such as Lynx.[39][unreliable source?] It is reported that Microsoft was granted a US patent for the same idea in 2008, but only for mobile devices.[40]\nIn English, www is usually read as double-u double-u double-u.[41] Some users pronounce it dub-dub-dub, particularly in New Zealand.[42] Stephen Fry, in his \"Podgrams\" series of podcasts, pronounces it wuh wuh wuh.[43] The English writer Douglas Adams once quipped in The Independent on Sunday (1999): \"The World Wide Web is the only thing I know of whose shortened form takes three times longer to say than what it's short for\".[44] In Mandarin Chinese, World Wide Web is commonly translated via a phono-semantic matching to wàn wéi wǎng (万维网), which satisfies www and literally means \"myriad-dimensional net\",[45][better source needed] a translation that reflects the design concept and proliferation of the World Wide Web. Tim Berners-Lee's web-space states that World Wide Web is officially spelled as three separate words, each capitalised, with no intervening hyphens.[46] Nonetheless, it is often called simply the Web, and also often the web; see Capitalization of Internet for details. Use of the www prefix has been declining, especially when Web 2.0 web applications sought to brand their domain names and make them easily pronounceable.[47]\nAs the mobile Web grew in popularity, services like Gmail.com, Outlook.com, Myspace.com, Facebook.com and Twitter.com are most often mentioned without adding \"www.\" (or, indeed, \".com\") to the domain.\n\nScheme specifiers\nThe scheme specifiers http:// and https:// at the start of a web URI refer to Hypertext Transfer Protocol or HTTP Secure, respectively. They specify the communication protocol to use for the request and response. The HTTP protocol is fundamental to the operation of the World Wide Web, and the added encryption layer in HTTPS is essential when browsers send or retrieve confidential data, such as passwords or banking information. Web browsers usually automatically prepend http:// to user-entered URIs, if omitted.\n\nPages\nMain article: Web page\n  A screenshot of a web page on Wikimedia Commons\nA web page (also written as webpage) is a document that is suitable for the World Wide Web and web browsers. A web browser displays a web page on a monitor or mobile device.\nThe term web page usually refers to what is visible, but may also refer to the contents of the computer file itself, which is usually a text file containing hypertext written in HTML or a comparable markup language. Typical web pages provide hypertext for browsing to other web pages via hyperlinks, often referred to as links. Web browsers will frequently have to access multiple web resource elements, such as reading style sheets, scripts, and images, while presenting each web page.\nOn a network, a web browser can retrieve a web page from a remote web server. The web server may restrict access to a private network such as a corporate intranet. The web browser uses the Hypertext Transfer Protocol (HTTP) to make such requests to the web server.\nA static web page is delivered exactly as stored, as web content in the web server's file system. In contrast, a dynamic web page is generated by a web application, usually driven by server-side software. Dynamic web pages are used when each user may require completely different information, for example, bank websites, web email etc.\n\nStatic page\nMain article: Static web page\nA static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application.\nConsequently, a static web page displays the same information for all users, from all contexts, subject to modern capabilities of a web server to negotiate content-type or language of the document where such versions are available and the server is configured to do so.\n\nDynamic pages\nMain articles: Dynamic web page and Ajax (programming)\n  Dynamic web page: example of server-side scripting (PHP and MySQL)\nA server-side dynamic web page is a web page whose construction is controlled by an application server processing server-side scripts. In server-side scripting, parameters determine how the assembly of every new web page proceeds, including the setting up of more client-side processing.\nA client-side dynamic web page processes the web page using JavaScript running in the browser. JavaScript programs can interact with the document via Document Object Model, or DOM, to query page state and alter it. The same client-side techniques can then dynamically update or change the DOM in the same way.\nA dynamic web page is then reloaded by the user or by a computer program to change some variable content. The updating information could come from the server, or from changes made to that page's DOM. This may or may not truncate the browsing history or create a saved version to go back to, but a dynamic web page update using Ajax technologies will neither create a page to go back to nor truncate the web browsing history forward of the displayed page. Using Ajax technologies the end user gets one dynamic page managed as a single page in the web browser while the actual web content rendered on that page can vary. The Ajax engine sits only on the browser requesting parts of its DOM, the DOM, for its client, from an application server.\nDynamic HTML, or DHTML, is the umbrella term for technologies and methods used to create web pages that are not static web pages, though it has fallen out of common use since the popularization of AJAX, a term which is now itself rarely used.[citation needed] Client-side-scripting, server-side scripting, or a combination of these make for the dynamic web experience in a browser.\nJavaScript is a scripting language that was initially developed in 1995 by Brendan Eich, then of Netscape, for use within web pages.[48] The standardised version is ECMAScript.[48] To make web pages more interactive, some web applications also use JavaScript techniques such as Ajax (asynchronous JavaScript and XML). Client-side script is delivered with the page that can make additional HTTP requests to the server, either in response to user actions such as mouse movements or clicks, or based on elapsed time. The server's responses are used to modify the current page rather than creating a new page with each response, so the server needs only to provide limited, incremental information. Multiple Ajax requests can be handled at the same time, and users can interact with the page while data is retrieved. Web pages may also regularly poll the server to check whether new information is available.[49]\n\nWebsite\n  The usap.gov website\nMain article: Website\nA website[50] is a collection of related web resources including web pages, multimedia content, typically identified with a common domain name, and published on at least one web server. Notable examples are wikipedia.org, google.com, and amazon.com.\nA website may be accessible via a public Internet Protocol (IP) network, such as the Internet, or a private local area network (LAN), by referencing a uniform resource locator (URL) that identifies the site.\nWebsites can have many functions and can be used in various fashions; a website can be a personal website, a corporate website for a company, a government website, an organization website, etc. Websites are typically dedicated to a particular topic or purpose, ranging from entertainment and social networking to providing news and education. All publicly accessible websites collectively constitute the World Wide Web, while private websites, such as a company's website for its employees, are typically a part of an intranet.\nWeb pages, which are the building blocks of websites, are documents, typically composed in plain text interspersed with formatting instructions of Hypertext Markup Language (HTML, XHTML). They may incorporate elements from other websites with suitable markup anchors. Web pages are accessed and transported with the Hypertext Transfer Protocol (HTTP), which may optionally employ encryption (HTTP Secure, HTTPS) to provide security and privacy for the user. The user's application, often a web browser, renders the page content according to its HTML markup instructions onto a display terminal.\nHyperlinking between web pages conveys to the reader the site structure and guides the navigation of the site, which often starts with a home page containing a directory of the site web content. Some websites require user registration or subscription to access content. Examples of subscription websites include many business sites, news websites, academic journal websites, gaming websites, file-sharing websites, message boards, web-based email, social networking websites, websites providing real-time price quotations for different types of markets, as well as sites providing various other services. End users can access websites on a range of devices, including desktop and laptop computers, tablet computers, smartphones and smart TVs.\n\nBrowser\nMain article: Web browser\nA web browser (commonly referred to as a browser) is a software user agent for accessing information on the World Wide Web. To connect to a website's server and display its pages, a user needs to have a web browser program. This is the program that the user runs to download, format, and display a web page on the user's computer.\nIn addition to allowing users to find, display, and move between web pages, a web browser will usually have features like keeping bookmarks, recording history, managing cookies (see below), and home pages and may have facilities for recording passwords for logging into web sites.\nThe most popular browsers are Chrome, Firefox, Safari, Internet Explorer, and Edge.\n\nServer\nMain article: Web server\n  The inside and front of a Dell PowerEdge web server, a computer designed for rack mounting\nA Web server is server software, or hardware dedicated to running said software, that can satisfy World Wide Web client requests. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols.\nThe primary function of a web server is to store, process and deliver web pages to clients.[51] The communication between client and server takes place using the Hypertext Transfer Protocol (HTTP). Pages delivered are most frequently HTML documents, which may include images, style sheets and scripts in addition to the text content.\n\n  Multiple web servers may be used for a high traffic website; here, Dell servers are installed together to be used for the Wikimedia Foundation.\nA user agent, commonly a web browser or web crawler, initiates communication by making a request for a specific resource using HTTP and the server responds with the content of that resource or an error message if unable to do so. The resource is typically a real file on the server's secondary storage, but this is not necessarily the case and depends on how the webserver is implemented.\nWhile the primary function is to serve content, full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files.\nMany generic web servers also support server-side scripting using Active Server Pages (ASP), PHP (Hypertext Preprocessor), or other scripting languages. This means that the behavior of the webserver can be scripted in separate files, while the actual server software remains unchanged. Usually, this function is used to generate HTML documents dynamically (\"on-the-fly\") as opposed to returning static documents. The former is primarily used for retrieving or modifying information from databases. The latter is typically much faster and more easily cached but cannot deliver dynamic content.\nWeb servers can also frequently be found embedded in devices such as printers, routers, webcams and serving only a local network. The web server may then be used as a part of a system for monitoring or administering the device in question. This usually means that no additional software has to be installed on the client computer since only a web browser is required (which now is included with most operating systems).\n\nCookie\nMain article: HTTP cookie\nAn HTTP cookie (also called web cookie, Internet cookie, browser cookie, or simply cookie) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past). They can also be used to remember arbitrary pieces of information that the user previously entered into form fields such as names, addresses, passwords, and credit card numbers.\nCookies perform essential functions in the modern web. Perhaps most importantly, authentication cookies are the most common method used by web servers to know whether the user is logged in or not, and which account they are logged in with. Without such a mechanism, the site would not know whether to send a page containing sensitive information or require the user to authenticate themselves by logging in. The security of an authentication cookie generally depends on the security of the issuing website and the user's web browser, and on whether the cookie data is encrypted. Security vulnerabilities may allow a cookie's data to be read by a hacker, used to gain access to user data, or used to gain access (with the user's credentials) to the website to which the cookie belongs (see cross-site scripting and cross-site request forgery for examples).[52]\nTracking cookies, and especially third-party tracking cookies, are commonly used as ways to compile long-term records of individuals' browsing histories – a potential privacy concern that prompted European[53] and U.S. lawmakers to take action in 2011.[54][55] European law requires that all websites targeting European Union member states gain \"informed consent\" from users before storing non-essential cookies on their device.\nGoogle Project Zero researcher Jann Horn describes ways cookies can be read by intermediaries, like Wi-Fi hotspot providers. He recommends using the browser in incognito mode in such circumstances.[56]\n\nSearch engine\nMain article: Search engine\n  The results of a search for the term \"lunar eclipse\" in a web-based image search engine\nA web search engine or Internet search engine is a software system that is designed to carry out web search (Internet search), which means to search the World Wide Web in a systematic way for particular information specified in a web search query. The search results are generally presented in a line of results, often referred to as search engine results pages (SERPs). The information may be a mix of web pages, images, videos, infographics, articles, research papers, and other types of files. Some search engines also mine data available in databases or open directories. Unlike web directories, which are maintained only by human editors, search engines also maintain real-time information by running an algorithm on a web crawler.\nInternet content that is not capable of being searched by a web search engine is generally described as the deep web.\n\nDeep web\nMain article: Deep web\nThe deep web,[57] invisible web,[58] or hidden web[59] are parts of the World Wide Web whose contents are not indexed by standard web search engines. The opposite term to the deep web is the surface web, which is accessible to anyone using the Internet.[60] Computer scientist Michael K. Bergman is credited with coining the term deep web in 2001 as a search indexing term.[61]\nThe content of the deep web is hidden behind HTTP forms,[62][63] and includes many very common uses such as web mail, online banking, and services that users must pay for, and which is protected by a paywall, such as video on demand, some online magazines and newspapers, among others.\nThe content of the deep web can be located and accessed by a direct URL or IP address, and may require a password or other security access past the public website page.\n\nCaching\nA web cache is a server computer located either on the public Internet or within an enterprise that stores recently accessed web pages to improve response time for users when the same content is requested within a certain time after the original request. Most web browsers also implement a browser cache by writing recently obtained data to a local data storage device. HTTP requests by a browser may ask only for data that has changed since the last access. Web pages and resources may contain expiration information to control caching to secure sensitive data, such as in online banking, or to facilitate frequently updated sites, such as news media. Even sites with highly dynamic content may permit basic resources to be refreshed only occasionally. Web site designers find it worthwhile to collate resources such as CSS data and JavaScript into a few site-wide files so that they can be cached efficiently. Enterprise firewalls often cache Web resources requested by one user for the benefit of many users. Some search engines store cached content of frequently accessed websites.\n\nSecurity\nFor criminals, the Web has become a venue to spread malware and engage in a range of cybercrimes, including (but not limited to) identity theft, fraud, espionage and intelligence gathering.[64] Web-based vulnerabilities now outnumber traditional computer security concerns,[65][66] and as measured by Google, about one in ten web pages may contain malicious code.[67] Most web-based attacks take place on legitimate websites, and most, as measured by Sophos, are hosted in the United States, China and Russia.[68] The most common of all malware threats is SQL injection attacks against websites.[69] Through HTML and URIs, the Web was vulnerable to attacks like cross-site scripting (XSS) that came with the introduction of JavaScript[70] and were exacerbated to some degree by Web 2.0 and Ajax web design that favours the use of scripts.[71] Today by one estimate, 70% of all websites are open to XSS attacks on their users.[72] Phishing is another common threat to the Web. In February 2013, RSA (the security division of EMC) estimated the global losses from phishing at $1.5 billion in 2012.[73] Two of the well-known phishing methods are Covert Redirect and Open Redirect.\nProposed solutions vary. Large security companies like McAfee already design governance and compliance suites to meet post-9/11 regulations,[74] and some, like Finjan have recommended active real-time inspection of programming code and all content regardless of its source.[64] Some have argued that for enterprises to see Web security as a business opportunity rather than a cost centre,[75] while others call for \"ubiquitous, always-on digital rights management\" enforced in the infrastructure to replace the hundreds of companies that secure data and networks.[76] Jonathan Zittrain has said users sharing responsibility for computing safety is far preferable to locking down the Internet.[77]\n\nPrivacy\nMain article: Internet privacy\nEvery time a client requests a web page, the server can identify the request's IP address. Web servers usually log IP addresses in a log file. Also, unless set not to do so, most web browsers record requested web pages in a viewable history feature, and usually cache much of the content locally. Unless the server-browser communication uses HTTPS encryption, web requests and responses travel in plain text across the Internet and can be viewed, recorded, and cached by intermediate systems. Another way to hide personally identifiable information is by using a virtual private network. A VPN encrypts online traffic and masks the original IP address lowering the chance of user identification.\nWhen a web page asks for, and the user supplies, personally identifiable information—such as their real name, address, e-mail address, etc. web-based entities can associate current web traffic with that individual. If the website uses HTTP cookies, username, and password authentication, or other tracking techniques, it can relate other web visits, before and after, to the identifiable information provided. In this way, a web-based organization can develop and build.md a profile of the individual people who use its site or sites. It may be able to build.md a record for an individual that includes information about their leisure activities, their shopping interests, their profession, and other aspects of their demographic profile. These profiles are of potential interest to marketers, advertisers, and others. Depending on the website's terms and conditions and the local laws that apply information from these profiles may be sold, shared, or passed to other organizations without the user being informed. For many ordinary people, this means little more than some unexpected e-mails in their in-box or some uncannily relevant advertising on a future web page. For others, it can mean that time spent indulging an unusual interest can result in a deluge of further targeted marketing that may be unwelcome. Law enforcement, counter-terrorism, and espionage agencies can also identify, target, and track individuals based on their interests or proclivities on the Web.\nSocial networking sites usually try to get users to use their real names, interests, and locations, rather than pseudonyms, as their executives believe that this makes the social networking experience more engaging for users. On the other hand, uploaded photographs or unguarded statements can be identified to an individual, who may regret this exposure. Employers, schools, parents, and other relatives may be influenced by aspects of social networking profiles, such as text posts or digital photos, that the posting individual did not intend for these audiences. Online bullies may make use of personal information to harass or stalk users. Modern social networking websites allow fine-grained control of the privacy settings for each posting, but these can be complex and not easy to find or use, especially for beginners.[78] Photographs and videos posted onto websites have caused particular problems, as they can add a person's face to an online profile. With modern and potential facial recognition technology, it may then be possible to relate that face with other, previously anonymous, images, events, and scenarios that have been imaged elsewhere. Due to image caching, mirroring, and copying, it is difficult to remove an image from the World Wide Web.\n\nStandards\nMain article: Web standards\nWeb standards include many interdependent standards and specifications, some of which govern aspects of the Internet, not just the World Wide Web. Even when not web-focused, such standards directly or indirectly affect the development and administration of websites and web services. Considerations include the interoperability, accessibility and usability of web pages and web sites.\nWeb standards, in the broader sense, consist of the following:\n\nRecommendations published by the World Wide Web Consortium (W3C)[79]\n\"Living Standard\" made by the Web Hypertext Application Technology Working Group (WHATWG)\nRequest for Comments (RFC) documents published by the Internet Engineering Task Force (IETF)[80]\nStandards published by the International Organization for Standardization (ISO)[81]\nStandards published by Ecma International (formerly ECMA)[82]\nThe Unicode Standard and various Unicode Technical Reports (UTRs) published by the Unicode Consortium[83]\nName and number registries maintained by the Internet Assigned Numbers Authority (IANA)[84]\nWeb standards are not fixed sets of rules but are constantly evolving sets of finalized technical specifications of web technologies.[85] Web standards are developed by standards organizations—groups of interested and often competing parties chartered with the task of standardization—not technologies developed and declared to be a standard by a single individual or company. It is crucial to distinguish those specifications that are under development from the ones that already reached the final development status (in the case of W3C specifications, the highest maturity level).\n\nAccessibility\nMain article: Web accessibility\nThere are methods for accessing the Web in alternative mediums and formats to facilitate use by individuals with disabilities. These disabilities may be visual, auditory, physical, speech-related, cognitive, neurological, or some combination. Accessibility features also help people with temporary disabilities, like a broken arm, or ageing users as their abilities change.[86] The Web receives information as well as providing information and interacting with society. The World Wide Web Consortium claims that it is essential that the Web be accessible, so it can provide equal access and equal opportunity to people with disabilities.[87] Tim Berners-Lee once noted, \"The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.\"[86] Many countries regulate web accessibility as a requirement for websites.[88] International co-operation in the W3C Web Accessibility Initiative led to simple guidelines that web content authors as well as software developers can use to make the Web accessible to persons who may or may not be using assistive technology.[86][89]\n\nInternationalisation\nThe W3C Internationalisation Activity assures that web technology works in all languages, scripts, and cultures.[90] Beginning in 2004 or 2005, Unicode gained ground and eventually in December 2007 surpassed both ASCII and Western European as the Web's most frequently used character encoding.[91] Originally .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}RFC 3986 allowed resources to be identified by URI in a subset of US-ASCII. RFC 3987 allows more characters—any character in the Universal Character Set—and now a resource can be identified by IRI in any language.[92]\n\nSee also\n.mw-parser-output .portalbox{padding:0;margin:0.5em 0;display:table;box-sizing:border-box;max-width:175px;list-style:none}.mw-parser-output .portalborder{border:solid #aaa 1px;padding:0.1em;background:#f9f9f9}.mw-parser-output .portalbox-entry{display:table-row;font-size:85%;line-height:110%;height:1.9em;font-style:italic;font-weight:bold}.mw-parser-output .portalbox-image{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox-link{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}@media(min-width:720px){.mw-parser-output .portalleft{clear:left;float:left;margin:0.5em 1em 0.5em 0}.mw-parser-output .portalright{clear:right;float:right;margin:0.5em 0 0.5em 1em}}\nEngineering portalInternet portalWorld portal\n.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}\nElectronic publishing\nInternet metaphors\nInternet security\nLists of websites\nStreaming media\nWeb development tools\nWeb literacy\n\nReferences\n.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Retrieved 16 July 2015.\n\n^ Bleigh, Michael (16 May 2014). \"The Once And Future Web Platform\". TechCrunch. Retrieved 9 March 2022.\n\n^ \"World Wide Web Timeline\". Pews Research Center. 11 March 2014. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways The Web Has Changed Us\". The Washington Post. Retrieved 1 August 2015.\n\n^ \"Website Analytics Tool\". Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Archived from the original on 9 July 2015. Retrieved 16 July 2015.\n\n^ Jump up to: a b Berners-Lee, Tim. \"Information Management: A Proposal\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ Berners-Lee, T.; Cailliau, R.; Groff, J.-F.; Pollermann, B. (1992). \"World-Wide Web: The Information Universe\". Electron. Netw. Res. Appl. Policy. 2: 52–58. doi:10.1108/eb047254.\n\n^ Quittner, Joshua (29 March 1999). \"Network Designer Tim Berners-Lee\". Time Magazine. Archived from the original on 15 August 2007. Retrieved 17 May 2010. He wove the World Wide Web and created a mass medium for the 21st century. The World Wide Web is Berners-Lee's alone. He designed it. He set it loose it on the world. And he more than anyone else has fought to keep it an open, non-proprietary and free.[page needed]\n\n^ McPherson, Stephanie Sammartino (2009). Tim Berners-Lee: Inventor of the World Wide Web. Twenty-First Century Books. ISBN 978-0-8225-7273-2.\n\n^ W3 (1991) Re: Qualifiers on Hypertext links\n\n^ Hopgood, Bob. \"History of the Web\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ \"A short history of the Web\". CERN. Retrieved 15 April 2022.\n\n^ \"Software release of WWW into public domain\". CERN Document Server. CERN. Retrieved 17 February 2022.\n\n^ \"Ten Years Public Domain for the Original Web Software\". Tenyears-www.web.cern.ch. 30 April 2003. Archived from the original on 13 August 2009. Retrieved 27 July 2009.\n\n^ Calore, Michael (22 April 2010). \"April 22, 1993: Mosaic Browser Lights Up Web With Color, Creativity\". Wired. Retrieved 12 February 2022.\n\n^ Couldry, Nick (2012). Media, Society, World: Social Theory and Digital Media Practice. London: Polity Press. p. 2. ISBN 9780745639208.\n\n^ Hoffman, Jay (21 April 1993). \"The Origin of the IMG Tag\". The History of the Web. Retrieved 13 February 2022.\n\n^ Clarke, Roger. \"The Birth of Web Commerce\". Roger Clarke's Web-Site. XAMAX. Retrieved 15 February 2022.\n\n^ McCullough, Brian. \"20 YEARS ON: WHY NETSCAPE'S IPO WAS THE \"BIG BANG\" OF THE INTERNET ERA\". www.internethistorypodcast.com. INTERNET HISTORY PODCAST. Retrieved 12 February 2022.\n\n^ Calore, Michael (28 September 2009). \"Sept. 28, 1998: Internet Explorer Leaves Netscape in Its Wake\". Wired. Retrieved 14 February 2022.\n\n^ Daly, Janet (26 January 2000). \"World Wide Web Consortium Issues XHTML 1.0 as a Recommendation\". W3C. Retrieved 8 March 2022.\n\n^ Hickson, Ian. \"WHAT open mailing list announcement\". whatwg.org. WHATWG. Retrieved 16 February 2022.\n\n^ Shankland, Stephen (9 July 2009). \"An epitaph for the Web standard, XHTML 2\". CNet. Retrieved 17 February 2022.\n\n^ \"Memorandum of Understanding Between W3C and WHATWG\". w3.org. W3C. Retrieved 16 February 2022.\n\n^ In, Lee (30 June 2012). Electronic Commerce Management for Business Activities and Global Enterprises: Competitive Advantages: Competitive Advantages. IGI Global. ISBN 978-1-4666-1801-5.\n\n^ Misiroglu, Gina (26 March 2015). American Countercultures: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History. Routledge. ISBN 978-1-317-47729-7.\n\n^ \"World Wide Web Timeline\". Pew Research Center. 11 March 2014. Archived from the original on 29 July 2015. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways the Web Has Changed Us\". The Washington Post. Archived from the original on 9 September 2015. Retrieved 1 August 2015.\n\n^ \"Internet Live Stats\". Archived from the original on 2 July 2015. Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". World Wide Web Consortium. Archived from the original on 22 April 2016. Retrieved 18 April 2016.\n\n^ Muylle, Steve; Moenaert, Rudy; Despont, Marc (1999). \"A grounded theory of World Wide Web search behaviour\". Journal of Marketing Communications. 5 (3): 143. doi:10.1080/135272699345644.\n\n^ Flanagan, David. JavaScript – The definitive guide (6 ed.). p. 1. JavaScript is part of the triad of technologies that all Web developers must learn: HTML to specify the content of web pages, CSS to specify the presentation of web pages, and JavaScript to specify the behaviour of web pages.\n\n^ \"HTML 4.0 Specification – W3C Recommendation – Conformance: requirements and recommendations\". World Wide Web Consortium. 18 December 1997. Retrieved 6 July 2015.\n\n^ Berners-Lee, Tim; Cailliau, Robert (12 November 1990). \"WorldWideWeb: Proposal for a HyperText Project\". Archived from the original on 2 May 2015. Retrieved 12 May 2015.\n\n^ Berners-Lee, Tim. \"Frequently asked questions by the Press\". W3C. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Palazzi, P (2011). \"The Early Days of the WWW at CERN\". Archived from the original on 23 July 2012.\n\n^ Fraser, Dominic (13 May 2018). \"Why a domain's root can't be a CNAME – and other tidbits about the DNS\". FreeCodeCamp.\n\n^ \"automatically adding www.___.com\". mozillaZine. 16 May 2003. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ Masnick, Mike (7 July 2008). \"Microsoft Patents Adding 'www.' And '.com' To Text\". Techdirt. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ \"Audible pronunciation of 'WWW'\". Oxford University Press. Archived from the original on 25 May 2014. Retrieved 25 May 2014.\n\n^ Harvey, Charlie. \"How we pronounce WWW in English: a detailed but unscientific survey\". charlieharvey.org.uk. Retrieved 19 May 2022.\n\n^ \"Stephen Fry's pronunciation of 'WWW'\". Podcasts.com. Archived from the original on 4 April 2017.\n\n^ Simonite, Tom (22 July 2008). \"Help us find a better way to pronounce www\". newscientist.com. New Scientist, Technology. Archived from the original on 13 March 2016. Retrieved 7 February 2016.\n\n^ \"MDBG Chinese-English dictionary – Translate\". Archived from the original on 12 November 2008. Retrieved 27 July 2009.\n\n^ \"Frequently asked questions by the Press – Tim BL\". W3.org. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Castelluccio, Michael (2010). \"It's not your grandfather's Internet\". thefreelibrary.com. Institute of Management Accountants. Retrieved 7 February 2016.\n\n^ Jump up to: a b Hamilton, Naomi (31 July 2008). \"The A-Z of Programming Languages: JavaScript\". Computerworld. IDG. Archived from the original on 24 May 2009. Retrieved 12 May 2009.\n\n^ Buntin, Seth (23 September 2008). \"jQuery Polling plugin\". Archived from the original on 13 August 2009. Retrieved 22 August 2009.\n\n^ \"website\". TheFreeDictionary.com. Retrieved 2 July 2011.\n\n^ Patrick, Killelea (2002). Web performance tuning (2nd ed.). Beijing: O'Reilly. p. 264. ISBN 978-0596001728. OCLC 49502686.\n\n^ Vamosi, Robert (14 April 2008). \"Gmail cookie stolen via Google Spreadsheets\". News.cnet.com. Archived from the original on 9 December 2013. Retrieved 19 October 2017.\n\n^ \"What about the \"EU Cookie Directive\"?\". WebCookies.org. 2013. Archived from the original on 11 October 2017. Retrieved 19 October 2017.\n\n^ \"New net rules set to make cookies crumble\". BBC. 8 March 2011.\n\n^ \"Sen. Rockefeller: Get Ready for a Real Do-Not-Track Bill for Online Advertising\". Adage.com. 6 May 2011.\n\n^ Want to use my wifi?, Jann Horn accessed 5 January 2018.\n\n^ Hamilton, Nigel. \"The Mechanics of a Deep Net Metasearch Engine\". CiteSeerX 10.1.1.90.5847. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ Devine, Jane; Egger-Sider, Francine (July 2004). \"Beyond google: the invisible web in the academic library\". The Journal of Academic Librarianship. 30 (4): 265–269. doi:10.1016/j.acalib.2004.04.010.\n\n^ Raghavan, Sriram; Garcia-Molina, Hector (11–14 September 2001). \"Crawling the Hidden Web\". 27th International Conference on Very Large Data Bases.\n\n^ \"Surface Web\". Computer Hope. Retrieved 20 June 2018.\n\n^ Wright, Alex (22 February 2009). \"Exploring a 'Deep Web' That Google Can't Grasp\". The New York Times. Retrieved 23 February 2009.\n\n^ Madhavan, J., Ko, D., Kot, Ł., Ganapathy, V., Rasmussen, A., & Halevy, A. (2008). Google's deep web crawl. Proceedings of the VLDB Endowment, 1(2), 1241–52.\n\n^ Shedden, Sam (8 June 2014). \"How Do You Want Me to Do It? Does It Have to Look like an Accident? – an Assassin Selling a Hit on the Net; Revealed Inside the Deep Web\". Sunday Mail. Archived from the original on 1 March 2020. Retrieved 5 May 2017.\n\n^ Jump up to: a b Ben-Itzhak, Yuval (18 April 2008). \"Infosecurity 2008 – New defence strategy in battle against e-crime\". ComputerWeekly. Reed Business Information. Archived from the original on 4 June 2008. Retrieved 20 April 2008.\n\n^ Christey, Steve & Martin, Robert A. (22 May 2007). \"Vulnerability Type Distributions in CVE (version 1.1)\". MITRE Corporation. Archived from the original on 17 March 2013. Retrieved 7 June 2008.\n\n^ \"Symantec Internet Security Threat Report: Trends for July–December 2007 (Executive Summary)\" (PDF). XIII. Symantec Corp. April 2008: 1–2. Archived (PDF) from the original on 25 June 2008. Retrieved 11 May 2008. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ \"Google searches web's dark side\". BBC News. 11 May 2007. Archived from the original on 7 March 2008. Retrieved 26 April 2008.\n\n^ \"Security Threat Report (Q1 2008)\" (PDF). Sophos. Archived (PDF) from the original on 31 December 2013. Retrieved 24 April 2008.\n\n^ \"Security threat report\" (PDF). Sophos. July 2008. Archived (PDF) from the original on 31 December 2013. Retrieved 24 August 2008.\n\n^ Fogie, Seth, Jeremiah Grossman, Robert Hansen, and Anton Rager (2007). Cross Site Scripting Attacks: XSS Exploits and Defense (PDF). Syngress, Elsevier Science & Technology. pp. 68–69, 127. ISBN 978-1-59749-154-9. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008.{{cite book}}:  CS1 maint: multiple names: authors list (link)\n\n^ O'Reilly, Tim (30 September 2005). \"What Is Web 2.0\". O'Reilly Media. pp. 4–5. Archived from the original on 15 April 2013. Retrieved 4 June 2008. and AJAX web applications can introduce security vulnerabilities like \"client-side security controls, increased attack surfaces, and new possibilities for Cross-Site Scripting (XSS)\", in Ritchie, Paul (March 2007). \"The security risks of AJAX/web 2.0 applications\" (PDF). Infosecurity. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008. which cites Hayre, Jaswinder S. & Kelath, Jayasankar (22 June 2006). \"Ajax Security Basics\". SecurityFocus. Archived from the original on 15 May 2008. Retrieved 6 June 2008.\n\n^ Berinato, Scott (1 January 2007). \"Software Vulnerability Disclosure: The Chilling Effect\". CSO. CXO Media. p. 7. Archived from the original on 18 April 2008. Retrieved 7 June 2008.\n\n^ \"2012 Global Losses From phishing Estimated At $1.5 Bn\". FirstPost. 20 February 2013. Archived from the original on 21 December 2014. Retrieved 25 January 2019.\n\n^ Prince, Brian (9 April 2008). \"McAfee Governance, Risk and Compliance Business Unit\". eWEEK. Ziff Davis Enterprise Holdings. Retrieved 25 April 2008.\n\n^ Preston, Rob (12 April 2008). \"Down To Business: It's Past Time To Elevate The Infosec Conversation\". InformationWeek. United Business Media. Archived from the original on 14 April 2008. Retrieved 25 April 2008.\n\n^ Claburn, Thomas (6 February 2007). \"RSA's Coviello Predicts Security Consolidation\". InformationWeek. United Business Media. Archived from the original on 7 February 2009. Retrieved 25 April 2008.\n\n^ Duffy Marsan, Carolyn (9 April 2008). \"How the iPhone is killing the 'Net\". Network World. IDG. Archived from the original on 14 April 2008. Retrieved 17 April 2008.\n\n^ boyd, danah; Hargittai, Eszter (July 2010). \"Facebook privacy settings: Who cares?\". First Monday. 15 (8). doi:10.5210/fm.v15i8.3086.\n\n^ \"W3C Technical Reports and Publications\". W3C. Retrieved 19 January 2009.\n\n^ \"IETF RFC page\". IETF. Archived from the original on 2 February 2009. Retrieved 19 January 2009.\n\n^ \"Search for World Wide Web in ISO standards\". ISO. Retrieved 19 January 2009.\n\n^ \"Ecma formal publications\". Ecma. Retrieved 19 January 2009.\n\n^ \"Unicode Technical Reports\". Unicode Consortium. Retrieved 19 January 2009.\n\n^ \"IANA home page\". IANA. Retrieved 19 January 2009.\n\n^ Sikos, Leslie (2011). Web standards – Mastering HTML5, CSS3, and XML. Apress. ISBN 978-1-4302-4041-9. Archived from the original on 2 April 2015. Retrieved 12 March 2019.\n\n^ Jump up to: a b c \"Web Accessibility Initiative (WAI)\". World Wide Web Consortium. Archived from the original on 2 April 2009. Retrieved 7 April 2009.\n\n^ \"Developing a Web Accessibility Business Case for Your Organization: Overview\". World Wide Web Consortium. Archived from the original on 14 April 2009. Retrieved 7 April 2009.\n\n^ \"Legal and Policy Factors in Developing a Web Accessibility Business Case for Your Organization\". World Wide Web Consortium. Archived from the original on 5 April 2009. Retrieved 7 April 2009.\n\n^ \"Web Content Accessibility Guidelines (WCAG) Overview\". World Wide Web Consortium. Archived from the original on 1 April 2009. Retrieved 7 April 2009.\n\n^ \"Internationalization (I18n) Activity\". World Wide Web Consortium. Archived from the original on 16 April 2009. Retrieved 10 April 2009.\n\n^ Davis, Mark (5 April 2008). \"Moving to Unicode 5.1\". Archived from the original on 21 May 2009. Retrieved 10 April 2009.\n\n^ \"World Wide Web Consortium Supports the IETF URI Standard and IRI Proposed Standard\" (Press release). World Wide Web Consortium. 26 January 2005. Archived from the original on 7 February 2009. Retrieved 10 April 2009.\n\n\nFurther reading\nBerners-Lee, Tim; Bray, Tim; Connolly, Dan; Cotton, Paul; Fielding, Roy; Jeckle, Mario; Lilley, Chris; Mendelsohn, Noah; Orchard, David; Walsh, Norman; Williams, Stuart (15 December 2004). \"Architecture of the World Wide Web, Volume One\". Version 20041215. W3C. {{cite journal}}: Cite journal requires |journal= (help)\nBerners-Lee, Tim (August 1996). \"The World Wide Web: Past, Present and Future\". {{cite journal}}: Cite journal requires |journal= (help)\nBrügger, Niels, ed, Web25: Histories from the first 25 years of the World Wide Web (Peter Lang, 2017).\nFielding, R.; Gettys, J.; Mogul, J.; Frystyk, H.; Masinter, L.; Leach, P.; Berners-Lee, T. (June 1999). \"Hypertext Transfer Protocol – HTTP/1.1\". Request For Comments 2616. Information Sciences Institute. {{cite journal}}: Cite journal requires |journal= (help)\nNiels Brügger, ed. Web History (2010) 362 pages; Historical perspective on the World Wide Web, including issues of culture, content, and preservation.\nPolo, Luciano (2003). \"World Wide Web Technology Architecture: A Conceptual Analysis\". New Devices.\nSkau, H.O. (March 1990). \"The World Wide Web and Health Information\". New Devices.\nExternal links\n.mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:#f9f9f9;display:flow-root}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1}}@media(min-width:720px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}}.mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0}\n\n\nWikimedia Commons has media related to World Wide Web.\n\n\n\n\nWikibooks has a book on the topic of: Nets, Webs and the Information Infrastructure\n\nThe first website\nEarly archive of the first Web site\nInternet Statistics: Growth and Usage of the Web and the Internet\nLiving Internet A comprehensive history of the Internet, including the World Wide Web\nWeb Design and Development at Curlie\nWorld Wide Web Consortium (W3C)\nW3C Recommendations Reduce \"World Wide Wait\"\nWorld Wide Web Size Daily estimated size of the World Wide Web\nAntonio A. Casilli, Some Elements for a Sociology of Online Interactions\nThe Erdős Webgraph Server Archived 1 March 2021 at the Wayback Machine offers weekly updated graph representation of a constantly increasing fraction of the WWW\nThe 25th Anniversary of the World Wide Web Archived 11 July 2021 at the Wayback Machine is an animated video produced by USAID and TechChange which explores the role of the WWW in addressing extreme poverty\n.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" · \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"}.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteTelecommunicationsHistory\nBeacon\nBroadcasting\nCable protection system\nCable TV\nCommunications satellite\nComputer network\nData compression\naudio\nDCT\nimage\nvideo\nDigital media\nInternet video\nonline video platform\nsocial media\nstreaming\nDrums\nEdholm's law\nElectrical telegraph\nFax\nHeliographs\nHydraulic telegraph\nInformation Age\nInformation revolution\nInternet\nMass media\nMobile phone\nSmartphone\nOptical telecommunication\nOptical telegraphy\nPager\nPhotophone\nPrepaid mobile phone\nRadio\nRadiotelephone\nSatellite communications\nSemaphore\nSemiconductor\ndevice\nMOSFET\ntransistor\nSmoke signals\nTelecommunications history\nTelautograph\nTelegraphy\nTeleprinter (teletype)\nTelephone\nThe Telephone Cases\nTelevision\ndigital\nstreaming\nUndersea telegraph line\nVideotelephony\nWhistled language\nWireless revolution\nPioneers\nNasir Ahmed\nEdwin Howard Armstrong\nMohamed M. Atalla\nJohn Logie Baird\nPaul Baran\nJohn Bardeen\nAlexander Graham Bell\nEmile Berliner\nTim Berners-Lee\nFrancis Blake (telephone)\nJagadish Chandra Bose\nCharles Bourseul\nWalter Houser Brattain\nVint Cerf\nClaude Chappe\nYogen Dalal\nDaniel Davis Jr.\nDonald Davies\nAmos Dolbear\nThomas Edison\nLee de Forest\nPhilo Farnsworth\nReginald Fessenden\nElisha Gray\nOliver Heaviside\nRobert Hooke\nErna Schneider Hoover\nHarold Hopkins\nGardiner Greene Hubbard\nInternet pioneers\nBob Kahn\nDawon Kahng\nCharles K. Kao\nNarinder Singh Kapany\nHedy Lamarr\nInnocenzo Manzetti\nGuglielmo Marconi\nRobert Metcalfe\nAntonio Meucci\nSamuel Morse\nJun-ichi Nishizawa\nCharles Grafton Page\nRadia Perlman\nAlexander Stepanovich Popov\nTivadar Puskás\nJohann Philipp Reis\nClaude Shannon\nAlmon Brown Strowger\nHenry Sutton\nCharles Sumner Tainter\nNikola Tesla\nCamille Tissot\nAlfred Vail\nThomas A. Watson\nCharles Wheatstone\nVladimir K. Zworykin\nTransmissionmedia\nCoaxial cable\nFiber-optic communication\noptical fiber\nFree-space optical communication\nMolecular communication\nRadio waves\nwireless\nTransmission line\ndata transmission circuit\ntelecommunication circuit\nNetwork topologyand switching\nBandwidth\nLinks\nNodes\nterminal\nNetwork switching\ncircuit\npacket\nTelephone exchange\nMultiplexing\nSpace-division\nFrequency-division\nTime-division\nPolarization-division\nOrbital angular-momentum\nCode-division\nConcepts\nCommunication protocol\nComputer network\nData transmission\nStore and forward\nTelecommunications equipment\nTypes of network\nCellular network\nEthernet\nISDN\nLAN\nMobile\nNGN\nPublic Switched Telephone\nRadio\nTelevision\nTelex\nUUCP\nWAN\nWireless network\nNotable networks\nARPANET\nBITNET\nCYCLADES\nFidoNet\nInternet\nInternet2\nJANET\nNPL network\nToasternet\nUsenet\nLocations\nAfrica\nAmericas\nNorth\nSouth\nAntarctica\nAsia\nEurope\nOceania\n(Global telecommunications regulation bodies)\n\n Telecommunication portal\n Category\n Outline\n Commons\n\nshowvteWeb syndication\nHistory\nBlogging\nPodcasting\nVlogging\nWeb syndication technology\nTypes\nArt\nBloggernacle\nClassical music\nCorporate\nDream diary\nEdublog\nElectronic journal\nFake\nFamily\nFashion\nFood\nHealth\nLaw\nLifelog\nLitblog\nMP3\nNews\nPhotoblog\nPolice\nPolitical\nProject\nReverse\nTravel\nWarblog\nTechnologyGeneral\nBitTorrent\nFeed URI scheme\nFeatures\nLinkback\nPermalink\nPing\nPingback\nReblogging\nRefback\nRollback\nTrackback\nMechanism\nConversation threading\nGeotagging\nRSS enclosure\nSynchronization\nMemetics\nAtom feed\nData feed\nPhotofeed\nProduct feed\nRDF feed\nWeb feed\nRSS\nGeoRSS\nMRSS\nRSS TV\nSocial\nInter-process communication\nLivemark\nMashup\nReferencing\nRSS editor\nRSS tracking\nStreaming media\nStandard\nOML\nOPML\nRSS Advisory Board\nUsenet\nWorld Wide Web\nXBEL\nXOXO\nForm\nAudio podcast\nEnhanced podcast\nMobilecast\nNarrowcasting\nPeercasting\nScreencast\nSlidecasting\nVideocast\nWebcomic\nWebtoon\nWeb series\n\nAnonymous blogging\nCollaborative blog\nColumnist\nInstant messaging\nLiveblogging\nMicroblog\nMobile blogging\nRoblog\nSpam blog\nVideo blogging\nMotovlogging\nMediaAlternative media\nCarnivals\nFiction\nJournalism\nCitizen\nDatabase\nOnline diary\nSearch engines\nSideblog\nSoftware\nWeb directory\nMicromedia\nAggregation\nNews\nPoll\nReview\nSearch\nVideo\nAtom\nAtomPub\nBroadcatching\nHashtag\nNewsML\n1\nG2\nSocial communication\nSocial software\nWeb Slice\nRelated\nBlogosphere\nEscribitionist\nGlossary of blogging\nPay per click\nPosting style\nSlashdot effect\nSpam in blogs\nUses of podcasting\n\nshowvteSemantic WebBackground\nDatabases\nHypertext\nInternet\nOntologies\nSemantics\nSemantic networks\nWorld Wide Web\nSub-topics\nDataspaces\nHyperdata\nLinked data\nRule-based systems\nApplications\nSemantic analytics\nSemantic broker\nSemantic computing\nSemantic mapper\nSemantic matching\nSemantic publishing\nSemantic reasoner\nSemantic search\nSemantic service-oriented architecture\nSemantic wiki\nSolid\nRelated topics\nCollective intelligence\nDescription logic\nFolksonomy\nGeotagging\nInformation architecture\nKnowledge extraction\nKnowledge management\nKnowledge representation and reasoning\nLibrary 2.0\nDigital library\nDigital humanities\nMetadata\nReferences\nTopic map\nWeb 2.0\nWeb engineering\nWeb Science Trust\nStandardsSyntax and supporting technologies\nHTTP\nIRI\nURI\nRDF\ntriples\nRDF/XML\nJSON-LD\nTurtle\nTriG\nNotation3\nN-Triples\nTriX (no W3C standard)\nRRID\nSPARQL\nXML\nSemantic HTML\nSchemas, ontologies and rules\nCommon Logic\nOWL\nRDFS\nRule Interchange Format\nSemantic Web Rule Language\nALPS\nSHACL\nSemantic annotation\neRDF\nGRDDL\nMicrodata\nMicroformats\nRDFa\nSAWSDL\nFacebook Platform\nCommon vocabularies\nDOAP\nDublin Core\nFOAF\nSchema.org\nSIOC\nSKOS\nMicroformat vocabularies\nhAtom\nhCalendar\nhCard\nhProduct\nhRecipe\nhReview\n\nshowAuthority control National libraries\nSpain\nFrance (data)\nGermany\nIsrael\nUnited States\nLatvia\nCzech Republic\nOther\nFAST\nNational Archives (US)\n\n\n\n\n\n"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("30"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://en.wikipedia.org/wiki/World_Wide_Web",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://en.wikipedia.org/wiki/World_Wide_Web"

        }

    ],

    links: "https://en.wikipedia.org/wiki/World_Wide_Web",

    name: "WIKI",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "System of interlinked hypertext documents accessed over the Internet\n.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the global system of pages accessed via URLs. For the worldwide computer network, see Internet. For the web browser, see WorldWideWeb.\n\"WWW\" and \"The Web\" redirect here. For other uses, see WWW (disambiguation) and The Web (disambiguation).\n\n\n\n\n  The historic World Wide Web logo, designed by Robert Cailliau\n  A web page displayed in a web browser\n  A global map of the Web Index for countries in 2014\nThe World Wide Web (WWW), commonly known as the Web, is an information system enabling documents and other web resources to be accessed over the Internet.[1] \nDocuments and downloadable media are made available to the network through web servers and can be accessed by programs such as web browsers. Servers and resources on the World Wide Web are identified and located through character strings called uniform resource locators (URLs). The original and still very common document type is a web page formatted in Hypertext Markup Language (HTML). This markup language supports plain text, images, embedded video and audio contents, and scripts (short programs) that implement complex user interaction. The HTML language also supports hyperlinks (embedded URLs) which provide immediate access to other web resources. Web navigation, or web surfing, is the common practice of following such hyperlinks across multiple websites. Web applications are web pages that function as application software. The information in the Web is transferred across the Internet using the Hypertext Transfer Protocol (HTTP).\nMultiple web resources with a common theme and usually a common domain name make up a website. A single web server may provide multiple websites, while some websites, especially the most popular ones, may be provided by multiple servers. Website content is provided by a myriad of companies, organizations, government agencies, and individual users; and comprises an enormous amount of educational, entertainment, commercial, and government information.\nThe World Wide Web has become the world's dominant software platform.[2][3][4][5] It is the primary tool billions of people worldwide use to interact with the Internet.[6]\nThe Web was invented by Tim Berners-Lee at CERN in 1989 and opened to the public in 1991. It was conceived as a \"universal linked information system\".[7]\n\n\nHistory\nMain article: History of the World Wide Web\n  This NeXT Computer was used by Sir Tim Berners-Lee at CERN and became the world's first Web server.\nThe Web was invented by English computer scientist Tim Berners-Lee while working at CERN. He conceived it as an information management system using several concepts and technologies, the most fundamental of which was the connections that existed between information.[8][9][10] The first proposal was written in 1989,[7] and a working system implemented by the end of 1990 including the WorldWideWeb browser and an HTTP server.[11] The technology was released outside CERN to other research institutions starting in January 1991, and then to the general public on 23 August 1991. The Web was a success at CERN, and began to spread to other scientific and academic institutions. Within the next two years, there were 50 websites created.[12][13]\nCERN made the Web protocol and code available royalty free in 1993, enabling its widespread use.[14][15] After the NCSA released the Mosaic web browser later that year, the Web's popularity grew rapidly as thousands of websites sprang up in less than a year.[16][17] Mosaic was a graphical browser that could display inline images and submit forms that  were processed by the HTTPd server.[18][19] Marc Andreessen and Jim Clark founded Netscape the following year and released the Navigator browser, which introduced Java and JavaScript to the Web. It quickly became the dominant browser. Netscape became a public company in 1995 which triggered a frenzy for the Web and started the dot-com bubble.[20] Microsoft responded by developing its own browser, Internet Explorer, starting the browser wars. By bundling it with Windows, it became the dominant browser for 14 years.[21]\nTim Berners-Lee founded the World Wide Web Consortium (W3C) which created XML in 1996 and recommended replacing HTML with stricter XHTML.[22] In the meantime, developers began exploiting an IE feature called XMLHttpRequest to make Ajax applications and launched the Web 2.0 revolution. Mozilla, Opera, and Apple rejected XHTML and created the WHATWG which developed HTML5.[23] In 2009, the W3C conceded and abandoned XHTML[24] and in 2019, ceded control of the HTML specification to the WHATWG.[25]\nThe World Wide Web has been central to the development of the Information Age and is the primary tool billions of people use to interact on the Internet.[26][27][28][29][30]\n\nFunction\nMain articles: HTTP and HTML\n  The World Wide Web functions as an application layer protocol that is run \"on top of\" (figuratively) the Internet, helping to make it more functional. The advent of the Mosaic web browser helped to make the web much more usable, to include the display of images and moving images (GIFs).\nThe terms Internet and World Wide Web are often used without much distinction. However, the two terms do not mean the same thing. The Internet is a global system of computer networks interconnected through telecommunications and optical networking. In contrast, the World Wide Web is a global collection of documents and other resources, linked by hyperlinks and URIs. Web resources are accessed using HTTP or HTTPS, which are application-level Internet protocols that use the Internet's transport protocols.[31]\nViewing a web page on the World Wide Web normally begins either by typing the URL of the page into a web browser or by following a hyperlink to that page or resource. The web browser then initiates a series of background communication messages to fetch and display the requested page. In the 1990s, using a browser to view web pages—and to move from one web page to another through hyperlinks—came to be known as 'browsing,' 'web surfing' (after channel surfing), or 'navigating the Web'. Early studies of this new behavior investigated user patterns in using web browsers. One study, for example, found five user patterns: exploratory surfing, window surfing, evolved surfing, bounded navigation and targeted navigation.[32]\nThe following example demonstrates the functioning of a web browser when accessing a page at the URL http://example.org/home.html. The browser resolves the server name of the URL (example.org) into an Internet Protocol address using the globally distributed Domain Name System (DNS). This lookup returns an IP address such as 203.0.113.4 or 2001:db8:2e::7334. The browser then requests the resource by sending an HTTP request across the Internet to the computer at that address. It requests service from a specific TCP port number that is well known for the HTTP service so that the receiving host can distinguish an HTTP request from other network protocols it may be servicing. HTTP normally uses port number 80 and for HTTPS it normally uses port number 443. The content of the HTTP request can be as simple as two lines of text:\n\nGET /home.html HTTP/1.1\nHost: example.org\n\nThe computer receiving the HTTP request delivers it to web server software listening for requests on port 80. If the webserver can fulfill the request it sends an HTTP response back to the browser indicating success:\n\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\n\nfollowed by the content of the requested page. Hypertext Markup Language (HTML) for a basic web page might look like this:\n\n<html>\n  <head>\n    <title>Example.org – The World Wide Web</title>\n  </head>\n  <body>\n    <p>The World Wide Web, abbreviated as WWW and commonly known ...</p>\n  </body>\n</html>\n\nThe web browser parses the HTML and interprets the markup (<title>, <p> for paragraph, and such) that surrounds the words to format the text on the screen. Many web pages use HTML to reference the URLs of other resources such as images, other embedded media, scripts that affect page behaviour, and Cascading Style Sheets that affect page layout. The browser makes additional HTTP requests to the web server for these other Internet media types. As it receives their content from the web server, the browser progressively renders the page onto the screen as specified by its HTML and these additional resources.\n\nHTML\nMain article: HTML\nHypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets (CSS) and JavaScript, it forms a triad of cornerstone technologies for the World Wide Web.[33]\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\nHTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img /> and <input /> directly introduce content into the page. Other tags such as <p> surround and provide information about document text and may include other tags as sub-elements. Browsers do not display the HTML tags, but use them to interpret the content of the page.\nHTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. Inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), maintainer of both the HTML and the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[update][34]\n\nLinking\nMost web pages contain hyperlinks to other related pages and perhaps to downloadable files, source documents, definitions and other web resources. In the underlying HTML, a hyperlink looks like this:\n<a href=\"http://example.org/home.html\">Example.org Homepage</a>.\n\n  Graphic representation of a minute fraction of the WWW, demonstrating hyperlinks\nSuch a collection of useful, related resources, interconnected via hypertext links is dubbed a web of information. Publication on the Internet created what Tim Berners-Lee first called the WorldWideWeb (in its original CamelCase, which was subsequently discarded) in November 1990.[35]\nThe hyperlink structure of the web is described by the webgraph: the nodes of the web graph correspond to the web pages (or URLs) the directed edges between them to the hyperlinks. Over time, many web resources pointed to by hyperlinks disappear, relocate, or are replaced with different content. This makes hyperlinks obsolete, a phenomenon referred to in some circles as link rot, and the hyperlinks affected by it are often called dead links. The ephemeral nature of the Web has prompted many efforts to archive websites. The Internet Archive, active since 1996, is the best known of such efforts.\n\nWWW prefix\nMany hostnames used for the World Wide Web begin with www because of the long-standing practice of naming Internet hosts according to the services they provide. The hostname of a web server is often www, in the same way that it may be ftp for an FTP server, and news or nntp for a Usenet news server. These hostnames appear as Domain Name System (DNS) or subdomain names, as in www.example.com. The use of www is not required by any technical or policy standard and many web sites do not use it; the first web server was nxoc01.cern.ch.[36] According to Paolo Palazzi, who worked at CERN along with Tim Berners-Lee, the popular use of www as subdomain was accidental; the World Wide Web project page was intended to be published at www.cern.ch while info.cern.ch was intended to be the CERN home page; however the DNS records were never switched, and the practice of prepending www to an institution's website domain name was subsequently copied.[37][better source needed] Many established websites still use the prefix, or they employ other subdomain names such as www2, secure or en for special purposes. Many such web servers are set up so that both the main domain name (e.g., example.com) and the www subdomain (e.g., www.example.com) refer to the same site; others require one form or the other, or they may map to different web sites. The use of a subdomain name is useful for load balancing incoming web traffic by creating a CNAME record that points to a cluster of web servers. Since, currently, only a subdomain can be used in a CNAME, the same result cannot be achieved by using the bare domain root.[38][dubious  – discuss]\nWhen a user submits an incomplete domain name to a web browser in its address bar input field, some web browsers automatically try adding the prefix \"www\" to the beginning of it and possibly \".com\", \".org\" and \".net\" at the end, depending on what might be missing. For example, entering \"microsoft\" may be transformed to http://www.microsoft.com/ and \"openoffice\" to http://www.openoffice.org. This feature started appearing in early versions of Firefox, when it still had the working title 'Firebird' in early 2003, from an earlier practice in browsers such as Lynx.[39][unreliable source?] It is reported that Microsoft was granted a US patent for the same idea in 2008, but only for mobile devices.[40]\nIn English, www is usually read as double-u double-u double-u.[41] Some users pronounce it dub-dub-dub, particularly in New Zealand.[42] Stephen Fry, in his \"Podgrams\" series of podcasts, pronounces it wuh wuh wuh.[43] The English writer Douglas Adams once quipped in The Independent on Sunday (1999): \"The World Wide Web is the only thing I know of whose shortened form takes three times longer to say than what it's short for\".[44] In Mandarin Chinese, World Wide Web is commonly translated via a phono-semantic matching to wàn wéi wǎng (万维网), which satisfies www and literally means \"myriad-dimensional net\",[45][better source needed] a translation that reflects the design concept and proliferation of the World Wide Web. Tim Berners-Lee's web-space states that World Wide Web is officially spelled as three separate words, each capitalised, with no intervening hyphens.[46] Nonetheless, it is often called simply the Web, and also often the web; see Capitalization of Internet for details. Use of the www prefix has been declining, especially when Web 2.0 web applications sought to brand their domain names and make them easily pronounceable.[47]\nAs the mobile Web grew in popularity, services like Gmail.com, Outlook.com, Myspace.com, Facebook.com and Twitter.com are most often mentioned without adding \"www.\" (or, indeed, \".com\") to the domain.\n\nScheme specifiers\nThe scheme specifiers http:// and https:// at the start of a web URI refer to Hypertext Transfer Protocol or HTTP Secure, respectively. They specify the communication protocol to use for the request and response. The HTTP protocol is fundamental to the operation of the World Wide Web, and the added encryption layer in HTTPS is essential when browsers send or retrieve confidential data, such as passwords or banking information. Web browsers usually automatically prepend http:// to user-entered URIs, if omitted.\n\nPages\nMain article: Web page\n  A screenshot of a web page on Wikimedia Commons\nA web page (also written as webpage) is a document that is suitable for the World Wide Web and web browsers. A web browser displays a web page on a monitor or mobile device.\nThe term web page usually refers to what is visible, but may also refer to the contents of the computer file itself, which is usually a text file containing hypertext written in HTML or a comparable markup language. Typical web pages provide hypertext for browsing to other web pages via hyperlinks, often referred to as links. Web browsers will frequently have to access multiple web resource elements, such as reading style sheets, scripts, and images, while presenting each web page.\nOn a network, a web browser can retrieve a web page from a remote web server. The web server may restrict access to a private network such as a corporate intranet. The web browser uses the Hypertext Transfer Protocol (HTTP) to make such requests to the web server.\nA static web page is delivered exactly as stored, as web content in the web server's file system. In contrast, a dynamic web page is generated by a web application, usually driven by server-side software. Dynamic web pages are used when each user may require completely different information, for example, bank websites, web email etc.\n\nStatic page\nMain article: Static web page\nA static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application.\nConsequently, a static web page displays the same information for all users, from all contexts, subject to modern capabilities of a web server to negotiate content-type or language of the document where such versions are available and the server is configured to do so.\n\nDynamic pages\nMain articles: Dynamic web page and Ajax (programming)\n  Dynamic web page: example of server-side scripting (PHP and MySQL)\nA server-side dynamic web page is a web page whose construction is controlled by an application server processing server-side scripts. In server-side scripting, parameters determine how the assembly of every new web page proceeds, including the setting up of more client-side processing.\nA client-side dynamic web page processes the web page using JavaScript running in the browser. JavaScript programs can interact with the document via Document Object Model, or DOM, to query page state and alter it. The same client-side techniques can then dynamically update or change the DOM in the same way.\nA dynamic web page is then reloaded by the user or by a computer program to change some variable content. The updating information could come from the server, or from changes made to that page's DOM. This may or may not truncate the browsing history or create a saved version to go back to, but a dynamic web page update using Ajax technologies will neither create a page to go back to nor truncate the web browsing history forward of the displayed page. Using Ajax technologies the end user gets one dynamic page managed as a single page in the web browser while the actual web content rendered on that page can vary. The Ajax engine sits only on the browser requesting parts of its DOM, the DOM, for its client, from an application server.\nDynamic HTML, or DHTML, is the umbrella term for technologies and methods used to create web pages that are not static web pages, though it has fallen out of common use since the popularization of AJAX, a term which is now itself rarely used.[citation needed] Client-side-scripting, server-side scripting, or a combination of these make for the dynamic web experience in a browser.\nJavaScript is a scripting language that was initially developed in 1995 by Brendan Eich, then of Netscape, for use within web pages.[48] The standardised version is ECMAScript.[48] To make web pages more interactive, some web applications also use JavaScript techniques such as Ajax (asynchronous JavaScript and XML). Client-side script is delivered with the page that can make additional HTTP requests to the server, either in response to user actions such as mouse movements or clicks, or based on elapsed time. The server's responses are used to modify the current page rather than creating a new page with each response, so the server needs only to provide limited, incremental information. Multiple Ajax requests can be handled at the same time, and users can interact with the page while data is retrieved. Web pages may also regularly poll the server to check whether new information is available.[49]\n\nWebsite\n  The usap.gov website\nMain article: Website\nA website[50] is a collection of related web resources including web pages, multimedia content, typically identified with a common domain name, and published on at least one web server. Notable examples are wikipedia.org, google.com, and amazon.com.\nA website may be accessible via a public Internet Protocol (IP) network, such as the Internet, or a private local area network (LAN), by referencing a uniform resource locator (URL) that identifies the site.\nWebsites can have many functions and can be used in various fashions; a website can be a personal website, a corporate website for a company, a government website, an organization website, etc. Websites are typically dedicated to a particular topic or purpose, ranging from entertainment and social networking to providing news and education. All publicly accessible websites collectively constitute the World Wide Web, while private websites, such as a company's website for its employees, are typically a part of an intranet.\nWeb pages, which are the building blocks of websites, are documents, typically composed in plain text interspersed with formatting instructions of Hypertext Markup Language (HTML, XHTML). They may incorporate elements from other websites with suitable markup anchors. Web pages are accessed and transported with the Hypertext Transfer Protocol (HTTP), which may optionally employ encryption (HTTP Secure, HTTPS) to provide security and privacy for the user. The user's application, often a web browser, renders the page content according to its HTML markup instructions onto a display terminal.\nHyperlinking between web pages conveys to the reader the site structure and guides the navigation of the site, which often starts with a home page containing a directory of the site web content. Some websites require user registration or subscription to access content. Examples of subscription websites include many business sites, news websites, academic journal websites, gaming websites, file-sharing websites, message boards, web-based email, social networking websites, websites providing real-time price quotations for different types of markets, as well as sites providing various other services. End users can access websites on a range of devices, including desktop and laptop computers, tablet computers, smartphones and smart TVs.\n\nBrowser\nMain article: Web browser\nA web browser (commonly referred to as a browser) is a software user agent for accessing information on the World Wide Web. To connect to a website's server and display its pages, a user needs to have a web browser program. This is the program that the user runs to download, format, and display a web page on the user's computer.\nIn addition to allowing users to find, display, and move between web pages, a web browser will usually have features like keeping bookmarks, recording history, managing cookies (see below), and home pages and may have facilities for recording passwords for logging into web sites.\nThe most popular browsers are Chrome, Firefox, Safari, Internet Explorer, and Edge.\n\nServer\nMain article: Web server\n  The inside and front of a Dell PowerEdge web server, a computer designed for rack mounting\nA Web server is server software, or hardware dedicated to running said software, that can satisfy World Wide Web client requests. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols.\nThe primary function of a web server is to store, process and deliver web pages to clients.[51] The communication between client and server takes place using the Hypertext Transfer Protocol (HTTP). Pages delivered are most frequently HTML documents, which may include images, style sheets and scripts in addition to the text content.\n\n  Multiple web servers may be used for a high traffic website; here, Dell servers are installed together to be used for the Wikimedia Foundation.\nA user agent, commonly a web browser or web crawler, initiates communication by making a request for a specific resource using HTTP and the server responds with the content of that resource or an error message if unable to do so. The resource is typically a real file on the server's secondary storage, but this is not necessarily the case and depends on how the webserver is implemented.\nWhile the primary function is to serve content, full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files.\nMany generic web servers also support server-side scripting using Active Server Pages (ASP), PHP (Hypertext Preprocessor), or other scripting languages. This means that the behavior of the webserver can be scripted in separate files, while the actual server software remains unchanged. Usually, this function is used to generate HTML documents dynamically (\"on-the-fly\") as opposed to returning static documents. The former is primarily used for retrieving or modifying information from databases. The latter is typically much faster and more easily cached but cannot deliver dynamic content.\nWeb servers can also frequently be found embedded in devices such as printers, routers, webcams and serving only a local network. The web server may then be used as a part of a system for monitoring or administering the device in question. This usually means that no additional software has to be installed on the client computer since only a web browser is required (which now is included with most operating systems).\n\nCookie\nMain article: HTTP cookie\nAn HTTP cookie (also called web cookie, Internet cookie, browser cookie, or simply cookie) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past). They can also be used to remember arbitrary pieces of information that the user previously entered into form fields such as names, addresses, passwords, and credit card numbers.\nCookies perform essential functions in the modern web. Perhaps most importantly, authentication cookies are the most common method used by web servers to know whether the user is logged in or not, and which account they are logged in with. Without such a mechanism, the site would not know whether to send a page containing sensitive information or require the user to authenticate themselves by logging in. The security of an authentication cookie generally depends on the security of the issuing website and the user's web browser, and on whether the cookie data is encrypted. Security vulnerabilities may allow a cookie's data to be read by a hacker, used to gain access to user data, or used to gain access (with the user's credentials) to the website to which the cookie belongs (see cross-site scripting and cross-site request forgery for examples).[52]\nTracking cookies, and especially third-party tracking cookies, are commonly used as ways to compile long-term records of individuals' browsing histories – a potential privacy concern that prompted European[53] and U.S. lawmakers to take action in 2011.[54][55] European law requires that all websites targeting European Union member states gain \"informed consent\" from users before storing non-essential cookies on their device.\nGoogle Project Zero researcher Jann Horn describes ways cookies can be read by intermediaries, like Wi-Fi hotspot providers. He recommends using the browser in incognito mode in such circumstances.[56]\n\nSearch engine\nMain article: Search engine\n  The results of a search for the term \"lunar eclipse\" in a web-based image search engine\nA web search engine or Internet search engine is a software system that is designed to carry out web search (Internet search), which means to search the World Wide Web in a systematic way for particular information specified in a web search query. The search results are generally presented in a line of results, often referred to as search engine results pages (SERPs). The information may be a mix of web pages, images, videos, infographics, articles, research papers, and other types of files. Some search engines also mine data available in databases or open directories. Unlike web directories, which are maintained only by human editors, search engines also maintain real-time information by running an algorithm on a web crawler.\nInternet content that is not capable of being searched by a web search engine is generally described as the deep web.\n\nDeep web\nMain article: Deep web\nThe deep web,[57] invisible web,[58] or hidden web[59] are parts of the World Wide Web whose contents are not indexed by standard web search engines. The opposite term to the deep web is the surface web, which is accessible to anyone using the Internet.[60] Computer scientist Michael K. Bergman is credited with coining the term deep web in 2001 as a search indexing term.[61]\nThe content of the deep web is hidden behind HTTP forms,[62][63] and includes many very common uses such as web mail, online banking, and services that users must pay for, and which is protected by a paywall, such as video on demand, some online magazines and newspapers, among others.\nThe content of the deep web can be located and accessed by a direct URL or IP address, and may require a password or other security access past the public website page.\n\nCaching\nA web cache is a server computer located either on the public Internet or within an enterprise that stores recently accessed web pages to improve response time for users when the same content is requested within a certain time after the original request. Most web browsers also implement a browser cache by writing recently obtained data to a local data storage device. HTTP requests by a browser may ask only for data that has changed since the last access. Web pages and resources may contain expiration information to control caching to secure sensitive data, such as in online banking, or to facilitate frequently updated sites, such as news media. Even sites with highly dynamic content may permit basic resources to be refreshed only occasionally. Web site designers find it worthwhile to collate resources such as CSS data and JavaScript into a few site-wide files so that they can be cached efficiently. Enterprise firewalls often cache Web resources requested by one user for the benefit of many users. Some search engines store cached content of frequently accessed websites.\n\nSecurity\nFor criminals, the Web has become a venue to spread malware and engage in a range of cybercrimes, including (but not limited to) identity theft, fraud, espionage and intelligence gathering.[64] Web-based vulnerabilities now outnumber traditional computer security concerns,[65][66] and as measured by Google, about one in ten web pages may contain malicious code.[67] Most web-based attacks take place on legitimate websites, and most, as measured by Sophos, are hosted in the United States, China and Russia.[68] The most common of all malware threats is SQL injection attacks against websites.[69] Through HTML and URIs, the Web was vulnerable to attacks like cross-site scripting (XSS) that came with the introduction of JavaScript[70] and were exacerbated to some degree by Web 2.0 and Ajax web design that favours the use of scripts.[71] Today by one estimate, 70% of all websites are open to XSS attacks on their users.[72] Phishing is another common threat to the Web. In February 2013, RSA (the security division of EMC) estimated the global losses from phishing at $1.5 billion in 2012.[73] Two of the well-known phishing methods are Covert Redirect and Open Redirect.\nProposed solutions vary. Large security companies like McAfee already design governance and compliance suites to meet post-9/11 regulations,[74] and some, like Finjan have recommended active real-time inspection of programming code and all content regardless of its source.[64] Some have argued that for enterprises to see Web security as a business opportunity rather than a cost centre,[75] while others call for \"ubiquitous, always-on digital rights management\" enforced in the infrastructure to replace the hundreds of companies that secure data and networks.[76] Jonathan Zittrain has said users sharing responsibility for computing safety is far preferable to locking down the Internet.[77]\n\nPrivacy\nMain article: Internet privacy\nEvery time a client requests a web page, the server can identify the request's IP address. Web servers usually log IP addresses in a log file. Also, unless set not to do so, most web browsers record requested web pages in a viewable history feature, and usually cache much of the content locally. Unless the server-browser communication uses HTTPS encryption, web requests and responses travel in plain text across the Internet and can be viewed, recorded, and cached by intermediate systems. Another way to hide personally identifiable information is by using a virtual private network. A VPN encrypts online traffic and masks the original IP address lowering the chance of user identification.\nWhen a web page asks for, and the user supplies, personally identifiable information—such as their real name, address, e-mail address, etc. web-based entities can associate current web traffic with that individual. If the website uses HTTP cookies, username, and password authentication, or other tracking techniques, it can relate other web visits, before and after, to the identifiable information provided. In this way, a web-based organization can develop and build.md a profile of the individual people who use its site or sites. It may be able to build.md a record for an individual that includes information about their leisure activities, their shopping interests, their profession, and other aspects of their demographic profile. These profiles are of potential interest to marketers, advertisers, and others. Depending on the website's terms and conditions and the local laws that apply information from these profiles may be sold, shared, or passed to other organizations without the user being informed. For many ordinary people, this means little more than some unexpected e-mails in their in-box or some uncannily relevant advertising on a future web page. For others, it can mean that time spent indulging an unusual interest can result in a deluge of further targeted marketing that may be unwelcome. Law enforcement, counter-terrorism, and espionage agencies can also identify, target, and track individuals based on their interests or proclivities on the Web.\nSocial networking sites usually try to get users to use their real names, interests, and locations, rather than pseudonyms, as their executives believe that this makes the social networking experience more engaging for users. On the other hand, uploaded photographs or unguarded statements can be identified to an individual, who may regret this exposure. Employers, schools, parents, and other relatives may be influenced by aspects of social networking profiles, such as text posts or digital photos, that the posting individual did not intend for these audiences. Online bullies may make use of personal information to harass or stalk users. Modern social networking websites allow fine-grained control of the privacy settings for each posting, but these can be complex and not easy to find or use, especially for beginners.[78] Photographs and videos posted onto websites have caused particular problems, as they can add a person's face to an online profile. With modern and potential facial recognition technology, it may then be possible to relate that face with other, previously anonymous, images, events, and scenarios that have been imaged elsewhere. Due to image caching, mirroring, and copying, it is difficult to remove an image from the World Wide Web.\n\nStandards\nMain article: Web standards\nWeb standards include many interdependent standards and specifications, some of which govern aspects of the Internet, not just the World Wide Web. Even when not web-focused, such standards directly or indirectly affect the development and administration of websites and web services. Considerations include the interoperability, accessibility and usability of web pages and web sites.\nWeb standards, in the broader sense, consist of the following:\n\nRecommendations published by the World Wide Web Consortium (W3C)[79]\n\"Living Standard\" made by the Web Hypertext Application Technology Working Group (WHATWG)\nRequest for Comments (RFC) documents published by the Internet Engineering Task Force (IETF)[80]\nStandards published by the International Organization for Standardization (ISO)[81]\nStandards published by Ecma International (formerly ECMA)[82]\nThe Unicode Standard and various Unicode Technical Reports (UTRs) published by the Unicode Consortium[83]\nName and number registries maintained by the Internet Assigned Numbers Authority (IANA)[84]\nWeb standards are not fixed sets of rules but are constantly evolving sets of finalized technical specifications of web technologies.[85] Web standards are developed by standards organizations—groups of interested and often competing parties chartered with the task of standardization—not technologies developed and declared to be a standard by a single individual or company. It is crucial to distinguish those specifications that are under development from the ones that already reached the final development status (in the case of W3C specifications, the highest maturity level).\n\nAccessibility\nMain article: Web accessibility\nThere are methods for accessing the Web in alternative mediums and formats to facilitate use by individuals with disabilities. These disabilities may be visual, auditory, physical, speech-related, cognitive, neurological, or some combination. Accessibility features also help people with temporary disabilities, like a broken arm, or ageing users as their abilities change.[86] The Web receives information as well as providing information and interacting with society. The World Wide Web Consortium claims that it is essential that the Web be accessible, so it can provide equal access and equal opportunity to people with disabilities.[87] Tim Berners-Lee once noted, \"The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.\"[86] Many countries regulate web accessibility as a requirement for websites.[88] International co-operation in the W3C Web Accessibility Initiative led to simple guidelines that web content authors as well as software developers can use to make the Web accessible to persons who may or may not be using assistive technology.[86][89]\n\nInternationalisation\nThe W3C Internationalisation Activity assures that web technology works in all languages, scripts, and cultures.[90] Beginning in 2004 or 2005, Unicode gained ground and eventually in December 2007 surpassed both ASCII and Western European as the Web's most frequently used character encoding.[91] Originally .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}RFC 3986 allowed resources to be identified by URI in a subset of US-ASCII. RFC 3987 allows more characters—any character in the Universal Character Set—and now a resource can be identified by IRI in any language.[92]\n\nSee also\n.mw-parser-output .portalbox{padding:0;margin:0.5em 0;display:table;box-sizing:border-box;max-width:175px;list-style:none}.mw-parser-output .portalborder{border:solid #aaa 1px;padding:0.1em;background:#f9f9f9}.mw-parser-output .portalbox-entry{display:table-row;font-size:85%;line-height:110%;height:1.9em;font-style:italic;font-weight:bold}.mw-parser-output .portalbox-image{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox-link{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}@media(min-width:720px){.mw-parser-output .portalleft{clear:left;float:left;margin:0.5em 1em 0.5em 0}.mw-parser-output .portalright{clear:right;float:right;margin:0.5em 0 0.5em 1em}}\nEngineering portalInternet portalWorld portal\n.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}\nElectronic publishing\nInternet metaphors\nInternet security\nLists of websites\nStreaming media\nWeb development tools\nWeb literacy\n\nReferences\n.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Retrieved 16 July 2015.\n\n^ Bleigh, Michael (16 May 2014). \"The Once And Future Web Platform\". TechCrunch. Retrieved 9 March 2022.\n\n^ \"World Wide Web Timeline\". Pews Research Center. 11 March 2014. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways The Web Has Changed Us\". The Washington Post. Retrieved 1 August 2015.\n\n^ \"Website Analytics Tool\". Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Archived from the original on 9 July 2015. Retrieved 16 July 2015.\n\n^ Jump up to: a b Berners-Lee, Tim. \"Information Management: A Proposal\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ Berners-Lee, T.; Cailliau, R.; Groff, J.-F.; Pollermann, B. (1992). \"World-Wide Web: The Information Universe\". Electron. Netw. Res. Appl. Policy. 2: 52–58. doi:10.1108/eb047254.\n\n^ Quittner, Joshua (29 March 1999). \"Network Designer Tim Berners-Lee\". Time Magazine. Archived from the original on 15 August 2007. Retrieved 17 May 2010. He wove the World Wide Web and created a mass medium for the 21st century. The World Wide Web is Berners-Lee's alone. He designed it. He set it loose it on the world. And he more than anyone else has fought to keep it an open, non-proprietary and free.[page needed]\n\n^ McPherson, Stephanie Sammartino (2009). Tim Berners-Lee: Inventor of the World Wide Web. Twenty-First Century Books. ISBN 978-0-8225-7273-2.\n\n^ W3 (1991) Re: Qualifiers on Hypertext links\n\n^ Hopgood, Bob. \"History of the Web\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ \"A short history of the Web\". CERN. Retrieved 15 April 2022.\n\n^ \"Software release of WWW into public domain\". CERN Document Server. CERN. Retrieved 17 February 2022.\n\n^ \"Ten Years Public Domain for the Original Web Software\". Tenyears-www.web.cern.ch. 30 April 2003. Archived from the original on 13 August 2009. Retrieved 27 July 2009.\n\n^ Calore, Michael (22 April 2010). \"April 22, 1993: Mosaic Browser Lights Up Web With Color, Creativity\". Wired. Retrieved 12 February 2022.\n\n^ Couldry, Nick (2012). Media, Society, World: Social Theory and Digital Media Practice. London: Polity Press. p. 2. ISBN 9780745639208.\n\n^ Hoffman, Jay (21 April 1993). \"The Origin of the IMG Tag\". The History of the Web. Retrieved 13 February 2022.\n\n^ Clarke, Roger. \"The Birth of Web Commerce\". Roger Clarke's Web-Site. XAMAX. Retrieved 15 February 2022.\n\n^ McCullough, Brian. \"20 YEARS ON: WHY NETSCAPE'S IPO WAS THE \"BIG BANG\" OF THE INTERNET ERA\". www.internethistorypodcast.com. INTERNET HISTORY PODCAST. Retrieved 12 February 2022.\n\n^ Calore, Michael (28 September 2009). \"Sept. 28, 1998: Internet Explorer Leaves Netscape in Its Wake\". Wired. Retrieved 14 February 2022.\n\n^ Daly, Janet (26 January 2000). \"World Wide Web Consortium Issues XHTML 1.0 as a Recommendation\". W3C. Retrieved 8 March 2022.\n\n^ Hickson, Ian. \"WHAT open mailing list announcement\". whatwg.org. WHATWG. Retrieved 16 February 2022.\n\n^ Shankland, Stephen (9 July 2009). \"An epitaph for the Web standard, XHTML 2\". CNet. Retrieved 17 February 2022.\n\n^ \"Memorandum of Understanding Between W3C and WHATWG\". w3.org. W3C. Retrieved 16 February 2022.\n\n^ In, Lee (30 June 2012). Electronic Commerce Management for Business Activities and Global Enterprises: Competitive Advantages: Competitive Advantages. IGI Global. ISBN 978-1-4666-1801-5.\n\n^ Misiroglu, Gina (26 March 2015). American Countercultures: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History. Routledge. ISBN 978-1-317-47729-7.\n\n^ \"World Wide Web Timeline\". Pew Research Center. 11 March 2014. Archived from the original on 29 July 2015. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways the Web Has Changed Us\". The Washington Post. Archived from the original on 9 September 2015. Retrieved 1 August 2015.\n\n^ \"Internet Live Stats\". Archived from the original on 2 July 2015. Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". World Wide Web Consortium. Archived from the original on 22 April 2016. Retrieved 18 April 2016.\n\n^ Muylle, Steve; Moenaert, Rudy; Despont, Marc (1999). \"A grounded theory of World Wide Web search behaviour\". Journal of Marketing Communications. 5 (3): 143. doi:10.1080/135272699345644.\n\n^ Flanagan, David. JavaScript – The definitive guide (6 ed.). p. 1. JavaScript is part of the triad of technologies that all Web developers must learn: HTML to specify the content of web pages, CSS to specify the presentation of web pages, and JavaScript to specify the behaviour of web pages.\n\n^ \"HTML 4.0 Specification – W3C Recommendation – Conformance: requirements and recommendations\". World Wide Web Consortium. 18 December 1997. Retrieved 6 July 2015.\n\n^ Berners-Lee, Tim; Cailliau, Robert (12 November 1990). \"WorldWideWeb: Proposal for a HyperText Project\". Archived from the original on 2 May 2015. Retrieved 12 May 2015.\n\n^ Berners-Lee, Tim. \"Frequently asked questions by the Press\". W3C. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Palazzi, P (2011). \"The Early Days of the WWW at CERN\". Archived from the original on 23 July 2012.\n\n^ Fraser, Dominic (13 May 2018). \"Why a domain's root can't be a CNAME – and other tidbits about the DNS\". FreeCodeCamp.\n\n^ \"automatically adding www.___.com\". mozillaZine. 16 May 2003. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ Masnick, Mike (7 July 2008). \"Microsoft Patents Adding 'www.' And '.com' To Text\". Techdirt. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ \"Audible pronunciation of 'WWW'\". Oxford University Press. Archived from the original on 25 May 2014. Retrieved 25 May 2014.\n\n^ Harvey, Charlie. \"How we pronounce WWW in English: a detailed but unscientific survey\". charlieharvey.org.uk. Retrieved 19 May 2022.\n\n^ \"Stephen Fry's pronunciation of 'WWW'\". Podcasts.com. Archived from the original on 4 April 2017.\n\n^ Simonite, Tom (22 July 2008). \"Help us find a better way to pronounce www\". newscientist.com. New Scientist, Technology. Archived from the original on 13 March 2016. Retrieved 7 February 2016.\n\n^ \"MDBG Chinese-English dictionary – Translate\". Archived from the original on 12 November 2008. Retrieved 27 July 2009.\n\n^ \"Frequently asked questions by the Press – Tim BL\". W3.org. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Castelluccio, Michael (2010). \"It's not your grandfather's Internet\". thefreelibrary.com. Institute of Management Accountants. Retrieved 7 February 2016.\n\n^ Jump up to: a b Hamilton, Naomi (31 July 2008). \"The A-Z of Programming Languages: JavaScript\". Computerworld. IDG. Archived from the original on 24 May 2009. Retrieved 12 May 2009.\n\n^ Buntin, Seth (23 September 2008). \"jQuery Polling plugin\". Archived from the original on 13 August 2009. Retrieved 22 August 2009.\n\n^ \"website\". TheFreeDictionary.com. Retrieved 2 July 2011.\n\n^ Patrick, Killelea (2002). Web performance tuning (2nd ed.). Beijing: O'Reilly. p. 264. ISBN 978-0596001728. OCLC 49502686.\n\n^ Vamosi, Robert (14 April 2008). \"Gmail cookie stolen via Google Spreadsheets\". News.cnet.com. Archived from the original on 9 December 2013. Retrieved 19 October 2017.\n\n^ \"What about the \"EU Cookie Directive\"?\". WebCookies.org. 2013. Archived from the original on 11 October 2017. Retrieved 19 October 2017.\n\n^ \"New net rules set to make cookies crumble\". BBC. 8 March 2011.\n\n^ \"Sen. Rockefeller: Get Ready for a Real Do-Not-Track Bill for Online Advertising\". Adage.com. 6 May 2011.\n\n^ Want to use my wifi?, Jann Horn accessed 5 January 2018.\n\n^ Hamilton, Nigel. \"The Mechanics of a Deep Net Metasearch Engine\". CiteSeerX 10.1.1.90.5847. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ Devine, Jane; Egger-Sider, Francine (July 2004). \"Beyond google: the invisible web in the academic library\". The Journal of Academic Librarianship. 30 (4): 265–269. doi:10.1016/j.acalib.2004.04.010.\n\n^ Raghavan, Sriram; Garcia-Molina, Hector (11–14 September 2001). \"Crawling the Hidden Web\". 27th International Conference on Very Large Data Bases.\n\n^ \"Surface Web\". Computer Hope. Retrieved 20 June 2018.\n\n^ Wright, Alex (22 February 2009). \"Exploring a 'Deep Web' That Google Can't Grasp\". The New York Times. Retrieved 23 February 2009.\n\n^ Madhavan, J., Ko, D., Kot, Ł., Ganapathy, V., Rasmussen, A., & Halevy, A. (2008). Google's deep web crawl. Proceedings of the VLDB Endowment, 1(2), 1241–52.\n\n^ Shedden, Sam (8 June 2014). \"How Do You Want Me to Do It? Does It Have to Look like an Accident? – an Assassin Selling a Hit on the Net; Revealed Inside the Deep Web\". Sunday Mail. Archived from the original on 1 March 2020. Retrieved 5 May 2017.\n\n^ Jump up to: a b Ben-Itzhak, Yuval (18 April 2008). \"Infosecurity 2008 – New defence strategy in battle against e-crime\". ComputerWeekly. Reed Business Information. Archived from the original on 4 June 2008. Retrieved 20 April 2008.\n\n^ Christey, Steve & Martin, Robert A. (22 May 2007). \"Vulnerability Type Distributions in CVE (version 1.1)\". MITRE Corporation. Archived from the original on 17 March 2013. Retrieved 7 June 2008.\n\n^ \"Symantec Internet Security Threat Report: Trends for July–December 2007 (Executive Summary)\" (PDF). XIII. Symantec Corp. April 2008: 1–2. Archived (PDF) from the original on 25 June 2008. Retrieved 11 May 2008. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ \"Google searches web's dark side\". BBC News. 11 May 2007. Archived from the original on 7 March 2008. Retrieved 26 April 2008.\n\n^ \"Security Threat Report (Q1 2008)\" (PDF). Sophos. Archived (PDF) from the original on 31 December 2013. Retrieved 24 April 2008.\n\n^ \"Security threat report\" (PDF). Sophos. July 2008. Archived (PDF) from the original on 31 December 2013. Retrieved 24 August 2008.\n\n^ Fogie, Seth, Jeremiah Grossman, Robert Hansen, and Anton Rager (2007). Cross Site Scripting Attacks: XSS Exploits and Defense (PDF). Syngress, Elsevier Science & Technology. pp. 68–69, 127. ISBN 978-1-59749-154-9. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008.{{cite book}}:  CS1 maint: multiple names: authors list (link)\n\n^ O'Reilly, Tim (30 September 2005). \"What Is Web 2.0\". O'Reilly Media. pp. 4–5. Archived from the original on 15 April 2013. Retrieved 4 June 2008. and AJAX web applications can introduce security vulnerabilities like \"client-side security controls, increased attack surfaces, and new possibilities for Cross-Site Scripting (XSS)\", in Ritchie, Paul (March 2007). \"The security risks of AJAX/web 2.0 applications\" (PDF). Infosecurity. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008. which cites Hayre, Jaswinder S. & Kelath, Jayasankar (22 June 2006). \"Ajax Security Basics\". SecurityFocus. Archived from the original on 15 May 2008. Retrieved 6 June 2008.\n\n^ Berinato, Scott (1 January 2007). \"Software Vulnerability Disclosure: The Chilling Effect\". CSO. CXO Media. p. 7. Archived from the original on 18 April 2008. Retrieved 7 June 2008.\n\n^ \"2012 Global Losses From phishing Estimated At $1.5 Bn\". FirstPost. 20 February 2013. Archived from the original on 21 December 2014. Retrieved 25 January 2019.\n\n^ Prince, Brian (9 April 2008). \"McAfee Governance, Risk and Compliance Business Unit\". eWEEK. Ziff Davis Enterprise Holdings. Retrieved 25 April 2008.\n\n^ Preston, Rob (12 April 2008). \"Down To Business: It's Past Time To Elevate The Infosec Conversation\". InformationWeek. United Business Media. Archived from the original on 14 April 2008. Retrieved 25 April 2008.\n\n^ Claburn, Thomas (6 February 2007). \"RSA's Coviello Predicts Security Consolidation\". InformationWeek. United Business Media. Archived from the original on 7 February 2009. Retrieved 25 April 2008.\n\n^ Duffy Marsan, Carolyn (9 April 2008). \"How the iPhone is killing the 'Net\". Network World. IDG. Archived from the original on 14 April 2008. Retrieved 17 April 2008.\n\n^ boyd, danah; Hargittai, Eszter (July 2010). \"Facebook privacy settings: Who cares?\". First Monday. 15 (8). doi:10.5210/fm.v15i8.3086.\n\n^ \"W3C Technical Reports and Publications\". W3C. Retrieved 19 January 2009.\n\n^ \"IETF RFC page\". IETF. Archived from the original on 2 February 2009. Retrieved 19 January 2009.\n\n^ \"Search for World Wide Web in ISO standards\". ISO. Retrieved 19 January 2009.\n\n^ \"Ecma formal publications\". Ecma. Retrieved 19 January 2009.\n\n^ \"Unicode Technical Reports\". Unicode Consortium. Retrieved 19 January 2009.\n\n^ \"IANA home page\". IANA. Retrieved 19 January 2009.\n\n^ Sikos, Leslie (2011). Web standards – Mastering HTML5, CSS3, and XML. Apress. ISBN 978-1-4302-4041-9. Archived from the original on 2 April 2015. Retrieved 12 March 2019.\n\n^ Jump up to: a b c \"Web Accessibility Initiative (WAI)\". World Wide Web Consortium. Archived from the original on 2 April 2009. Retrieved 7 April 2009.\n\n^ \"Developing a Web Accessibility Business Case for Your Organization: Overview\". World Wide Web Consortium. Archived from the original on 14 April 2009. Retrieved 7 April 2009.\n\n^ \"Legal and Policy Factors in Developing a Web Accessibility Business Case for Your Organization\". World Wide Web Consortium. Archived from the original on 5 April 2009. Retrieved 7 April 2009.\n\n^ \"Web Content Accessibility Guidelines (WCAG) Overview\". World Wide Web Consortium. Archived from the original on 1 April 2009. Retrieved 7 April 2009.\n\n^ \"Internationalization (I18n) Activity\". World Wide Web Consortium. Archived from the original on 16 April 2009. Retrieved 10 April 2009.\n\n^ Davis, Mark (5 April 2008). \"Moving to Unicode 5.1\". Archived from the original on 21 May 2009. Retrieved 10 April 2009.\n\n^ \"World Wide Web Consortium Supports the IETF URI Standard and IRI Proposed Standard\" (Press release). World Wide Web Consortium. 26 January 2005. Archived from the original on 7 February 2009. Retrieved 10 April 2009.\n\n\nFurther reading\nBerners-Lee, Tim; Bray, Tim; Connolly, Dan; Cotton, Paul; Fielding, Roy; Jeckle, Mario; Lilley, Chris; Mendelsohn, Noah; Orchard, David; Walsh, Norman; Williams, Stuart (15 December 2004). \"Architecture of the World Wide Web, Volume One\". Version 20041215. W3C. {{cite journal}}: Cite journal requires |journal= (help)\nBerners-Lee, Tim (August 1996). \"The World Wide Web: Past, Present and Future\". {{cite journal}}: Cite journal requires |journal= (help)\nBrügger, Niels, ed, Web25: Histories from the first 25 years of the World Wide Web (Peter Lang, 2017).\nFielding, R.; Gettys, J.; Mogul, J.; Frystyk, H.; Masinter, L.; Leach, P.; Berners-Lee, T. (June 1999). \"Hypertext Transfer Protocol – HTTP/1.1\". Request For Comments 2616. Information Sciences Institute. {{cite journal}}: Cite journal requires |journal= (help)\nNiels Brügger, ed. Web History (2010) 362 pages; Historical perspective on the World Wide Web, including issues of culture, content, and preservation.\nPolo, Luciano (2003). \"World Wide Web Technology Architecture: A Conceptual Analysis\". New Devices.\nSkau, H.O. (March 1990). \"The World Wide Web and Health Information\". New Devices.\nExternal links\n.mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:#f9f9f9;display:flow-root}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1}}@media(min-width:720px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}}.mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0}\n\n\nWikimedia Commons has media related to World Wide Web.\n\n\n\n\nWikibooks has a book on the topic of: Nets, Webs and the Information Infrastructure\n\nThe first website\nEarly archive of the first Web site\nInternet Statistics: Growth and Usage of the Web and the Internet\nLiving Internet A comprehensive history of the Internet, including the World Wide Web\nWeb Design and Development at Curlie\nWorld Wide Web Consortium (W3C)\nW3C Recommendations Reduce \"World Wide Wait\"\nWorld Wide Web Size Daily estimated size of the World Wide Web\nAntonio A. Casilli, Some Elements for a Sociology of Online Interactions\nThe Erdős Webgraph Server Archived 1 March 2021 at the Wayback Machine offers weekly updated graph representation of a constantly increasing fraction of the WWW\nThe 25th Anniversary of the World Wide Web Archived 11 July 2021 at the Wayback Machine is an animated video produced by USAID and TechChange which explores the role of the WWW in addressing extreme poverty\n.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" · \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"}.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteTelecommunicationsHistory\nBeacon\nBroadcasting\nCable protection system\nCable TV\nCommunications satellite\nComputer network\nData compression\naudio\nDCT\nimage\nvideo\nDigital media\nInternet video\nonline video platform\nsocial media\nstreaming\nDrums\nEdholm's law\nElectrical telegraph\nFax\nHeliographs\nHydraulic telegraph\nInformation Age\nInformation revolution\nInternet\nMass media\nMobile phone\nSmartphone\nOptical telecommunication\nOptical telegraphy\nPager\nPhotophone\nPrepaid mobile phone\nRadio\nRadiotelephone\nSatellite communications\nSemaphore\nSemiconductor\ndevice\nMOSFET\ntransistor\nSmoke signals\nTelecommunications history\nTelautograph\nTelegraphy\nTeleprinter (teletype)\nTelephone\nThe Telephone Cases\nTelevision\ndigital\nstreaming\nUndersea telegraph line\nVideotelephony\nWhistled language\nWireless revolution\nPioneers\nNasir Ahmed\nEdwin Howard Armstrong\nMohamed M. Atalla\nJohn Logie Baird\nPaul Baran\nJohn Bardeen\nAlexander Graham Bell\nEmile Berliner\nTim Berners-Lee\nFrancis Blake (telephone)\nJagadish Chandra Bose\nCharles Bourseul\nWalter Houser Brattain\nVint Cerf\nClaude Chappe\nYogen Dalal\nDaniel Davis Jr.\nDonald Davies\nAmos Dolbear\nThomas Edison\nLee de Forest\nPhilo Farnsworth\nReginald Fessenden\nElisha Gray\nOliver Heaviside\nRobert Hooke\nErna Schneider Hoover\nHarold Hopkins\nGardiner Greene Hubbard\nInternet pioneers\nBob Kahn\nDawon Kahng\nCharles K. Kao\nNarinder Singh Kapany\nHedy Lamarr\nInnocenzo Manzetti\nGuglielmo Marconi\nRobert Metcalfe\nAntonio Meucci\nSamuel Morse\nJun-ichi Nishizawa\nCharles Grafton Page\nRadia Perlman\nAlexander Stepanovich Popov\nTivadar Puskás\nJohann Philipp Reis\nClaude Shannon\nAlmon Brown Strowger\nHenry Sutton\nCharles Sumner Tainter\nNikola Tesla\nCamille Tissot\nAlfred Vail\nThomas A. Watson\nCharles Wheatstone\nVladimir K. Zworykin\nTransmissionmedia\nCoaxial cable\nFiber-optic communication\noptical fiber\nFree-space optical communication\nMolecular communication\nRadio waves\nwireless\nTransmission line\ndata transmission circuit\ntelecommunication circuit\nNetwork topologyand switching\nBandwidth\nLinks\nNodes\nterminal\nNetwork switching\ncircuit\npacket\nTelephone exchange\nMultiplexing\nSpace-division\nFrequency-division\nTime-division\nPolarization-division\nOrbital angular-momentum\nCode-division\nConcepts\nCommunication protocol\nComputer network\nData transmission\nStore and forward\nTelecommunications equipment\nTypes of network\nCellular network\nEthernet\nISDN\nLAN\nMobile\nNGN\nPublic Switched Telephone\nRadio\nTelevision\nTelex\nUUCP\nWAN\nWireless network\nNotable networks\nARPANET\nBITNET\nCYCLADES\nFidoNet\nInternet\nInternet2\nJANET\nNPL network\nToasternet\nUsenet\nLocations\nAfrica\nAmericas\nNorth\nSouth\nAntarctica\nAsia\nEurope\nOceania\n(Global telecommunications regulation bodies)\n\n Telecommunication portal\n Category\n Outline\n Commons\n\nshowvteWeb syndication\nHistory\nBlogging\nPodcasting\nVlogging\nWeb syndication technology\nTypes\nArt\nBloggernacle\nClassical music\nCorporate\nDream diary\nEdublog\nElectronic journal\nFake\nFamily\nFashion\nFood\nHealth\nLaw\nLifelog\nLitblog\nMP3\nNews\nPhotoblog\nPolice\nPolitical\nProject\nReverse\nTravel\nWarblog\nTechnologyGeneral\nBitTorrent\nFeed URI scheme\nFeatures\nLinkback\nPermalink\nPing\nPingback\nReblogging\nRefback\nRollback\nTrackback\nMechanism\nConversation threading\nGeotagging\nRSS enclosure\nSynchronization\nMemetics\nAtom feed\nData feed\nPhotofeed\nProduct feed\nRDF feed\nWeb feed\nRSS\nGeoRSS\nMRSS\nRSS TV\nSocial\nInter-process communication\nLivemark\nMashup\nReferencing\nRSS editor\nRSS tracking\nStreaming media\nStandard\nOML\nOPML\nRSS Advisory Board\nUsenet\nWorld Wide Web\nXBEL\nXOXO\nForm\nAudio podcast\nEnhanced podcast\nMobilecast\nNarrowcasting\nPeercasting\nScreencast\nSlidecasting\nVideocast\nWebcomic\nWebtoon\nWeb series\n\nAnonymous blogging\nCollaborative blog\nColumnist\nInstant messaging\nLiveblogging\nMicroblog\nMobile blogging\nRoblog\nSpam blog\nVideo blogging\nMotovlogging\nMediaAlternative media\nCarnivals\nFiction\nJournalism\nCitizen\nDatabase\nOnline diary\nSearch engines\nSideblog\nSoftware\nWeb directory\nMicromedia\nAggregation\nNews\nPoll\nReview\nSearch\nVideo\nAtom\nAtomPub\nBroadcatching\nHashtag\nNewsML\n1\nG2\nSocial communication\nSocial software\nWeb Slice\nRelated\nBlogosphere\nEscribitionist\nGlossary of blogging\nPay per click\nPosting style\nSlashdot effect\nSpam in blogs\nUses of podcasting\n\nshowvteSemantic WebBackground\nDatabases\nHypertext\nInternet\nOntologies\nSemantics\nSemantic networks\nWorld Wide Web\nSub-topics\nDataspaces\nHyperdata\nLinked data\nRule-based systems\nApplications\nSemantic analytics\nSemantic broker\nSemantic computing\nSemantic mapper\nSemantic matching\nSemantic publishing\nSemantic reasoner\nSemantic search\nSemantic service-oriented architecture\nSemantic wiki\nSolid\nRelated topics\nCollective intelligence\nDescription logic\nFolksonomy\nGeotagging\nInformation architecture\nKnowledge extraction\nKnowledge management\nKnowledge representation and reasoning\nLibrary 2.0\nDigital library\nDigital humanities\nMetadata\nReferences\nTopic map\nWeb 2.0\nWeb engineering\nWeb Science Trust\nStandardsSyntax and supporting technologies\nHTTP\nIRI\nURI\nRDF\ntriples\nRDF/XML\nJSON-LD\nTurtle\nTriG\nNotation3\nN-Triples\nTriX (no W3C standard)\nRRID\nSPARQL\nXML\nSemantic HTML\nSchemas, ontologies and rules\nCommon Logic\nOWL\nRDFS\nRule Interchange Format\nSemantic Web Rule Language\nALPS\nSHACL\nSemantic annotation\neRDF\nGRDDL\nMicrodata\nMicroformats\nRDFa\nSAWSDL\nFacebook Platform\nCommon vocabularies\nDOAP\nDublin Core\nFOAF\nSchema.org\nSIOC\nSKOS\nMicroformat vocabularies\nhAtom\nhCalendar\nhCard\nhProduct\nhRecipe\nhReview\n\nshowAuthority control National libraries\nSpain\nFrance (data)\nGermany\nIsrael\nUnited States\nLatvia\nCzech Republic\nOther\nFAST\nNational Archives (US)\n\n\n\n\n\n"

        }

    ],

    url: "https://en.wikipedia.org/wiki/World_Wide_Web"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dd0be4869cb52a8a8f6ea3"),

    containJudge: false,

    desc: "https://en.wikipedia.org/wiki/World_Wide_Web",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://en.wikipedia.org/wiki/World_Wide_Web",

                links: "https://en.wikipedia.org/wiki/World_Wide_Web",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[3]/main[1]/div[2]/div[3]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "System of interlinked hypertext documents accessed over the Internet\n.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the global system of pages accessed via URLs. For the worldwide computer network, see Internet. For the web browser, see WorldWideWeb.\n\"WWW\" and \"The Web\" redirect here. For other uses, see WWW (disambiguation) and The Web (disambiguation).\n\n\n\n\n  The historic World Wide Web logo, designed by Robert Cailliau\n  A web page displayed in a web browser\n  A global map of the Web Index for countries in 2014\nThe World Wide Web (WWW), commonly known as the Web, is an information system enabling documents and other web resources to be accessed over the Internet.[1] \nDocuments and downloadable media are made available to the network through web servers and can be accessed by programs such as web browsers. Servers and resources on the World Wide Web are identified and located through character strings called uniform resource locators (URLs). The original and still very common document type is a web page formatted in Hypertext Markup Language (HTML). This markup language supports plain text, images, embedded video and audio contents, and scripts (short programs) that implement complex user interaction. The HTML language also supports hyperlinks (embedded URLs) which provide immediate access to other web resources. Web navigation, or web surfing, is the common practice of following such hyperlinks across multiple websites. Web applications are web pages that function as application software. The information in the Web is transferred across the Internet using the Hypertext Transfer Protocol (HTTP).\nMultiple web resources with a common theme and usually a common domain name make up a website. A single web server may provide multiple websites, while some websites, especially the most popular ones, may be provided by multiple servers. Website content is provided by a myriad of companies, organizations, government agencies, and individual users; and comprises an enormous amount of educational, entertainment, commercial, and government information.\nThe World Wide Web has become the world's dominant software platform.[2][3][4][5] It is the primary tool billions of people worldwide use to interact with the Internet.[6]\nThe Web was invented by Tim Berners-Lee at CERN in 1989 and opened to the public in 1991. It was conceived as a \"universal linked information system\".[7]\n\n\nHistory\nMain article: History of the World Wide Web\n  This NeXT Computer was used by Sir Tim Berners-Lee at CERN and became the world's first Web server.\nThe Web was invented by English computer scientist Tim Berners-Lee while working at CERN. He conceived it as an information management system using several concepts and technologies, the most fundamental of which was the connections that existed between information.[8][9][10] The first proposal was written in 1989,[7] and a working system implemented by the end of 1990 including the WorldWideWeb browser and an HTTP server.[11] The technology was released outside CERN to other research institutions starting in January 1991, and then to the general public on 23 August 1991. The Web was a success at CERN, and began to spread to other scientific and academic institutions. Within the next two years, there were 50 websites created.[12][13]\nCERN made the Web protocol and code available royalty free in 1993, enabling its widespread use.[14][15] After the NCSA released the Mosaic web browser later that year, the Web's popularity grew rapidly as thousands of websites sprang up in less than a year.[16][17] Mosaic was a graphical browser that could display inline images and submit forms that  were processed by the HTTPd server.[18][19] Marc Andreessen and Jim Clark founded Netscape the following year and released the Navigator browser, which introduced Java and JavaScript to the Web. It quickly became the dominant browser. Netscape became a public company in 1995 which triggered a frenzy for the Web and started the dot-com bubble.[20] Microsoft responded by developing its own browser, Internet Explorer, starting the browser wars. By bundling it with Windows, it became the dominant browser for 14 years.[21]\nTim Berners-Lee founded the World Wide Web Consortium (W3C) which created XML in 1996 and recommended replacing HTML with stricter XHTML.[22] In the meantime, developers began exploiting an IE feature called XMLHttpRequest to make Ajax applications and launched the Web 2.0 revolution. Mozilla, Opera, and Apple rejected XHTML and created the WHATWG which developed HTML5.[23] In 2009, the W3C conceded and abandoned XHTML[24] and in 2019, ceded control of the HTML specification to the WHATWG.[25]\nThe World Wide Web has been central to the development of the Information Age and is the primary tool billions of people use to interact on the Internet.[26][27][28][29][30]\n\nFunction\nMain articles: HTTP and HTML\n  The World Wide Web functions as an application layer protocol that is run \"on top of\" (figuratively) the Internet, helping to make it more functional. The advent of the Mosaic web browser helped to make the web much more usable, to include the display of images and moving images (GIFs).\nThe terms Internet and World Wide Web are often used without much distinction. However, the two terms do not mean the same thing. The Internet is a global system of computer networks interconnected through telecommunications and optical networking. In contrast, the World Wide Web is a global collection of documents and other resources, linked by hyperlinks and URIs. Web resources are accessed using HTTP or HTTPS, which are application-level Internet protocols that use the Internet's transport protocols.[31]\nViewing a web page on the World Wide Web normally begins either by typing the URL of the page into a web browser or by following a hyperlink to that page or resource. The web browser then initiates a series of background communication messages to fetch and display the requested page. In the 1990s, using a browser to view web pages—and to move from one web page to another through hyperlinks—came to be known as 'browsing,' 'web surfing' (after channel surfing), or 'navigating the Web'. Early studies of this new behavior investigated user patterns in using web browsers. One study, for example, found five user patterns: exploratory surfing, window surfing, evolved surfing, bounded navigation and targeted navigation.[32]\nThe following example demonstrates the functioning of a web browser when accessing a page at the URL http://example.org/home.html. The browser resolves the server name of the URL (example.org) into an Internet Protocol address using the globally distributed Domain Name System (DNS). This lookup returns an IP address such as 203.0.113.4 or 2001:db8:2e::7334. The browser then requests the resource by sending an HTTP request across the Internet to the computer at that address. It requests service from a specific TCP port number that is well known for the HTTP service so that the receiving host can distinguish an HTTP request from other network protocols it may be servicing. HTTP normally uses port number 80 and for HTTPS it normally uses port number 443. The content of the HTTP request can be as simple as two lines of text:\n\nGET /home.html HTTP/1.1\nHost: example.org\n\nThe computer receiving the HTTP request delivers it to web server software listening for requests on port 80. If the webserver can fulfill the request it sends an HTTP response back to the browser indicating success:\n\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\n\nfollowed by the content of the requested page. Hypertext Markup Language (HTML) for a basic web page might look like this:\n\n<html>\n  <head>\n    <title>Example.org – The World Wide Web</title>\n  </head>\n  <body>\n    <p>The World Wide Web, abbreviated as WWW and commonly known ...</p>\n  </body>\n</html>\n\nThe web browser parses the HTML and interprets the markup (<title>, <p> for paragraph, and such) that surrounds the words to format the text on the screen. Many web pages use HTML to reference the URLs of other resources such as images, other embedded media, scripts that affect page behaviour, and Cascading Style Sheets that affect page layout. The browser makes additional HTTP requests to the web server for these other Internet media types. As it receives their content from the web server, the browser progressively renders the page onto the screen as specified by its HTML and these additional resources.\n\nHTML\nMain article: HTML\nHypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets (CSS) and JavaScript, it forms a triad of cornerstone technologies for the World Wide Web.[33]\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\nHTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img /> and <input /> directly introduce content into the page. Other tags such as <p> surround and provide information about document text and may include other tags as sub-elements. Browsers do not display the HTML tags, but use them to interpret the content of the page.\nHTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. Inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), maintainer of both the HTML and the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[update][34]\n\nLinking\nMost web pages contain hyperlinks to other related pages and perhaps to downloadable files, source documents, definitions and other web resources. In the underlying HTML, a hyperlink looks like this:\n<a href=\"http://example.org/home.html\">Example.org Homepage</a>.\n\n  Graphic representation of a minute fraction of the WWW, demonstrating hyperlinks\nSuch a collection of useful, related resources, interconnected via hypertext links is dubbed a web of information. Publication on the Internet created what Tim Berners-Lee first called the WorldWideWeb (in its original CamelCase, which was subsequently discarded) in November 1990.[35]\nThe hyperlink structure of the web is described by the webgraph: the nodes of the web graph correspond to the web pages (or URLs) the directed edges between them to the hyperlinks. Over time, many web resources pointed to by hyperlinks disappear, relocate, or are replaced with different content. This makes hyperlinks obsolete, a phenomenon referred to in some circles as link rot, and the hyperlinks affected by it are often called dead links. The ephemeral nature of the Web has prompted many efforts to archive websites. The Internet Archive, active since 1996, is the best known of such efforts.\n\nWWW prefix\nMany hostnames used for the World Wide Web begin with www because of the long-standing practice of naming Internet hosts according to the services they provide. The hostname of a web server is often www, in the same way that it may be ftp for an FTP server, and news or nntp for a Usenet news server. These hostnames appear as Domain Name System (DNS) or subdomain names, as in www.example.com. The use of www is not required by any technical or policy standard and many web sites do not use it; the first web server was nxoc01.cern.ch.[36] According to Paolo Palazzi, who worked at CERN along with Tim Berners-Lee, the popular use of www as subdomain was accidental; the World Wide Web project page was intended to be published at www.cern.ch while info.cern.ch was intended to be the CERN home page; however the DNS records were never switched, and the practice of prepending www to an institution's website domain name was subsequently copied.[37][better source needed] Many established websites still use the prefix, or they employ other subdomain names such as www2, secure or en for special purposes. Many such web servers are set up so that both the main domain name (e.g., example.com) and the www subdomain (e.g., www.example.com) refer to the same site; others require one form or the other, or they may map to different web sites. The use of a subdomain name is useful for load balancing incoming web traffic by creating a CNAME record that points to a cluster of web servers. Since, currently, only a subdomain can be used in a CNAME, the same result cannot be achieved by using the bare domain root.[38][dubious  – discuss]\nWhen a user submits an incomplete domain name to a web browser in its address bar input field, some web browsers automatically try adding the prefix \"www\" to the beginning of it and possibly \".com\", \".org\" and \".net\" at the end, depending on what might be missing. For example, entering \"microsoft\" may be transformed to http://www.microsoft.com/ and \"openoffice\" to http://www.openoffice.org. This feature started appearing in early versions of Firefox, when it still had the working title 'Firebird' in early 2003, from an earlier practice in browsers such as Lynx.[39][unreliable source?] It is reported that Microsoft was granted a US patent for the same idea in 2008, but only for mobile devices.[40]\nIn English, www is usually read as double-u double-u double-u.[41] Some users pronounce it dub-dub-dub, particularly in New Zealand.[42] Stephen Fry, in his \"Podgrams\" series of podcasts, pronounces it wuh wuh wuh.[43] The English writer Douglas Adams once quipped in The Independent on Sunday (1999): \"The World Wide Web is the only thing I know of whose shortened form takes three times longer to say than what it's short for\".[44] In Mandarin Chinese, World Wide Web is commonly translated via a phono-semantic matching to wàn wéi wǎng (万维网), which satisfies www and literally means \"myriad-dimensional net\",[45][better source needed] a translation that reflects the design concept and proliferation of the World Wide Web. Tim Berners-Lee's web-space states that World Wide Web is officially spelled as three separate words, each capitalised, with no intervening hyphens.[46] Nonetheless, it is often called simply the Web, and also often the web; see Capitalization of Internet for details. Use of the www prefix has been declining, especially when Web 2.0 web applications sought to brand their domain names and make them easily pronounceable.[47]\nAs the mobile Web grew in popularity, services like Gmail.com, Outlook.com, Myspace.com, Facebook.com and Twitter.com are most often mentioned without adding \"www.\" (or, indeed, \".com\") to the domain.\n\nScheme specifiers\nThe scheme specifiers http:// and https:// at the start of a web URI refer to Hypertext Transfer Protocol or HTTP Secure, respectively. They specify the communication protocol to use for the request and response. The HTTP protocol is fundamental to the operation of the World Wide Web, and the added encryption layer in HTTPS is essential when browsers send or retrieve confidential data, such as passwords or banking information. Web browsers usually automatically prepend http:// to user-entered URIs, if omitted.\n\nPages\nMain article: Web page\n  A screenshot of a web page on Wikimedia Commons\nA web page (also written as webpage) is a document that is suitable for the World Wide Web and web browsers. A web browser displays a web page on a monitor or mobile device.\nThe term web page usually refers to what is visible, but may also refer to the contents of the computer file itself, which is usually a text file containing hypertext written in HTML or a comparable markup language. Typical web pages provide hypertext for browsing to other web pages via hyperlinks, often referred to as links. Web browsers will frequently have to access multiple web resource elements, such as reading style sheets, scripts, and images, while presenting each web page.\nOn a network, a web browser can retrieve a web page from a remote web server. The web server may restrict access to a private network such as a corporate intranet. The web browser uses the Hypertext Transfer Protocol (HTTP) to make such requests to the web server.\nA static web page is delivered exactly as stored, as web content in the web server's file system. In contrast, a dynamic web page is generated by a web application, usually driven by server-side software. Dynamic web pages are used when each user may require completely different information, for example, bank websites, web email etc.\n\nStatic page\nMain article: Static web page\nA static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application.\nConsequently, a static web page displays the same information for all users, from all contexts, subject to modern capabilities of a web server to negotiate content-type or language of the document where such versions are available and the server is configured to do so.\n\nDynamic pages\nMain articles: Dynamic web page and Ajax (programming)\n  Dynamic web page: example of server-side scripting (PHP and MySQL)\nA server-side dynamic web page is a web page whose construction is controlled by an application server processing server-side scripts. In server-side scripting, parameters determine how the assembly of every new web page proceeds, including the setting up of more client-side processing.\nA client-side dynamic web page processes the web page using JavaScript running in the browser. JavaScript programs can interact with the document via Document Object Model, or DOM, to query page state and alter it. The same client-side techniques can then dynamically update or change the DOM in the same way.\nA dynamic web page is then reloaded by the user or by a computer program to change some variable content. The updating information could come from the server, or from changes made to that page's DOM. This may or may not truncate the browsing history or create a saved version to go back to, but a dynamic web page update using Ajax technologies will neither create a page to go back to nor truncate the web browsing history forward of the displayed page. Using Ajax technologies the end user gets one dynamic page managed as a single page in the web browser while the actual web content rendered on that page can vary. The Ajax engine sits only on the browser requesting parts of its DOM, the DOM, for its client, from an application server.\nDynamic HTML, or DHTML, is the umbrella term for technologies and methods used to create web pages that are not static web pages, though it has fallen out of common use since the popularization of AJAX, a term which is now itself rarely used.[citation needed] Client-side-scripting, server-side scripting, or a combination of these make for the dynamic web experience in a browser.\nJavaScript is a scripting language that was initially developed in 1995 by Brendan Eich, then of Netscape, for use within web pages.[48] The standardised version is ECMAScript.[48] To make web pages more interactive, some web applications also use JavaScript techniques such as Ajax (asynchronous JavaScript and XML). Client-side script is delivered with the page that can make additional HTTP requests to the server, either in response to user actions such as mouse movements or clicks, or based on elapsed time. The server's responses are used to modify the current page rather than creating a new page with each response, so the server needs only to provide limited, incremental information. Multiple Ajax requests can be handled at the same time, and users can interact with the page while data is retrieved. Web pages may also regularly poll the server to check whether new information is available.[49]\n\nWebsite\n  The usap.gov website\nMain article: Website\nA website[50] is a collection of related web resources including web pages, multimedia content, typically identified with a common domain name, and published on at least one web server. Notable examples are wikipedia.org, google.com, and amazon.com.\nA website may be accessible via a public Internet Protocol (IP) network, such as the Internet, or a private local area network (LAN), by referencing a uniform resource locator (URL) that identifies the site.\nWebsites can have many functions and can be used in various fashions; a website can be a personal website, a corporate website for a company, a government website, an organization website, etc. Websites are typically dedicated to a particular topic or purpose, ranging from entertainment and social networking to providing news and education. All publicly accessible websites collectively constitute the World Wide Web, while private websites, such as a company's website for its employees, are typically a part of an intranet.\nWeb pages, which are the building blocks of websites, are documents, typically composed in plain text interspersed with formatting instructions of Hypertext Markup Language (HTML, XHTML). They may incorporate elements from other websites with suitable markup anchors. Web pages are accessed and transported with the Hypertext Transfer Protocol (HTTP), which may optionally employ encryption (HTTP Secure, HTTPS) to provide security and privacy for the user. The user's application, often a web browser, renders the page content according to its HTML markup instructions onto a display terminal.\nHyperlinking between web pages conveys to the reader the site structure and guides the navigation of the site, which often starts with a home page containing a directory of the site web content. Some websites require user registration or subscription to access content. Examples of subscription websites include many business sites, news websites, academic journal websites, gaming websites, file-sharing websites, message boards, web-based email, social networking websites, websites providing real-time price quotations for different types of markets, as well as sites providing various other services. End users can access websites on a range of devices, including desktop and laptop computers, tablet computers, smartphones and smart TVs.\n\nBrowser\nMain article: Web browser\nA web browser (commonly referred to as a browser) is a software user agent for accessing information on the World Wide Web. To connect to a website's server and display its pages, a user needs to have a web browser program. This is the program that the user runs to download, format, and display a web page on the user's computer.\nIn addition to allowing users to find, display, and move between web pages, a web browser will usually have features like keeping bookmarks, recording history, managing cookies (see below), and home pages and may have facilities for recording passwords for logging into web sites.\nThe most popular browsers are Chrome, Firefox, Safari, Internet Explorer, and Edge.\n\nServer\nMain article: Web server\n  The inside and front of a Dell PowerEdge web server, a computer designed for rack mounting\nA Web server is server software, or hardware dedicated to running said software, that can satisfy World Wide Web client requests. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols.\nThe primary function of a web server is to store, process and deliver web pages to clients.[51] The communication between client and server takes place using the Hypertext Transfer Protocol (HTTP). Pages delivered are most frequently HTML documents, which may include images, style sheets and scripts in addition to the text content.\n\n  Multiple web servers may be used for a high traffic website; here, Dell servers are installed together to be used for the Wikimedia Foundation.\nA user agent, commonly a web browser or web crawler, initiates communication by making a request for a specific resource using HTTP and the server responds with the content of that resource or an error message if unable to do so. The resource is typically a real file on the server's secondary storage, but this is not necessarily the case and depends on how the webserver is implemented.\nWhile the primary function is to serve content, full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files.\nMany generic web servers also support server-side scripting using Active Server Pages (ASP), PHP (Hypertext Preprocessor), or other scripting languages. This means that the behavior of the webserver can be scripted in separate files, while the actual server software remains unchanged. Usually, this function is used to generate HTML documents dynamically (\"on-the-fly\") as opposed to returning static documents. The former is primarily used for retrieving or modifying information from databases. The latter is typically much faster and more easily cached but cannot deliver dynamic content.\nWeb servers can also frequently be found embedded in devices such as printers, routers, webcams and serving only a local network. The web server may then be used as a part of a system for monitoring or administering the device in question. This usually means that no additional software has to be installed on the client computer since only a web browser is required (which now is included with most operating systems).\n\nCookie\nMain article: HTTP cookie\nAn HTTP cookie (also called web cookie, Internet cookie, browser cookie, or simply cookie) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past). They can also be used to remember arbitrary pieces of information that the user previously entered into form fields such as names, addresses, passwords, and credit card numbers.\nCookies perform essential functions in the modern web. Perhaps most importantly, authentication cookies are the most common method used by web servers to know whether the user is logged in or not, and which account they are logged in with. Without such a mechanism, the site would not know whether to send a page containing sensitive information or require the user to authenticate themselves by logging in. The security of an authentication cookie generally depends on the security of the issuing website and the user's web browser, and on whether the cookie data is encrypted. Security vulnerabilities may allow a cookie's data to be read by a hacker, used to gain access to user data, or used to gain access (with the user's credentials) to the website to which the cookie belongs (see cross-site scripting and cross-site request forgery for examples).[52]\nTracking cookies, and especially third-party tracking cookies, are commonly used as ways to compile long-term records of individuals' browsing histories – a potential privacy concern that prompted European[53] and U.S. lawmakers to take action in 2011.[54][55] European law requires that all websites targeting European Union member states gain \"informed consent\" from users before storing non-essential cookies on their device.\nGoogle Project Zero researcher Jann Horn describes ways cookies can be read by intermediaries, like Wi-Fi hotspot providers. He recommends using the browser in incognito mode in such circumstances.[56]\n\nSearch engine\nMain article: Search engine\n  The results of a search for the term \"lunar eclipse\" in a web-based image search engine\nA web search engine or Internet search engine is a software system that is designed to carry out web search (Internet search), which means to search the World Wide Web in a systematic way for particular information specified in a web search query. The search results are generally presented in a line of results, often referred to as search engine results pages (SERPs). The information may be a mix of web pages, images, videos, infographics, articles, research papers, and other types of files. Some search engines also mine data available in databases or open directories. Unlike web directories, which are maintained only by human editors, search engines also maintain real-time information by running an algorithm on a web crawler.\nInternet content that is not capable of being searched by a web search engine is generally described as the deep web.\n\nDeep web\nMain article: Deep web\nThe deep web,[57] invisible web,[58] or hidden web[59] are parts of the World Wide Web whose contents are not indexed by standard web search engines. The opposite term to the deep web is the surface web, which is accessible to anyone using the Internet.[60] Computer scientist Michael K. Bergman is credited with coining the term deep web in 2001 as a search indexing term.[61]\nThe content of the deep web is hidden behind HTTP forms,[62][63] and includes many very common uses such as web mail, online banking, and services that users must pay for, and which is protected by a paywall, such as video on demand, some online magazines and newspapers, among others.\nThe content of the deep web can be located and accessed by a direct URL or IP address, and may require a password or other security access past the public website page.\n\nCaching\nA web cache is a server computer located either on the public Internet or within an enterprise that stores recently accessed web pages to improve response time for users when the same content is requested within a certain time after the original request. Most web browsers also implement a browser cache by writing recently obtained data to a local data storage device. HTTP requests by a browser may ask only for data that has changed since the last access. Web pages and resources may contain expiration information to control caching to secure sensitive data, such as in online banking, or to facilitate frequently updated sites, such as news media. Even sites with highly dynamic content may permit basic resources to be refreshed only occasionally. Web site designers find it worthwhile to collate resources such as CSS data and JavaScript into a few site-wide files so that they can be cached efficiently. Enterprise firewalls often cache Web resources requested by one user for the benefit of many users. Some search engines store cached content of frequently accessed websites.\n\nSecurity\nFor criminals, the Web has become a venue to spread malware and engage in a range of cybercrimes, including (but not limited to) identity theft, fraud, espionage and intelligence gathering.[64] Web-based vulnerabilities now outnumber traditional computer security concerns,[65][66] and as measured by Google, about one in ten web pages may contain malicious code.[67] Most web-based attacks take place on legitimate websites, and most, as measured by Sophos, are hosted in the United States, China and Russia.[68] The most common of all malware threats is SQL injection attacks against websites.[69] Through HTML and URIs, the Web was vulnerable to attacks like cross-site scripting (XSS) that came with the introduction of JavaScript[70] and were exacerbated to some degree by Web 2.0 and Ajax web design that favours the use of scripts.[71] Today by one estimate, 70% of all websites are open to XSS attacks on their users.[72] Phishing is another common threat to the Web. In February 2013, RSA (the security division of EMC) estimated the global losses from phishing at $1.5 billion in 2012.[73] Two of the well-known phishing methods are Covert Redirect and Open Redirect.\nProposed solutions vary. Large security companies like McAfee already design governance and compliance suites to meet post-9/11 regulations,[74] and some, like Finjan have recommended active real-time inspection of programming code and all content regardless of its source.[64] Some have argued that for enterprises to see Web security as a business opportunity rather than a cost centre,[75] while others call for \"ubiquitous, always-on digital rights management\" enforced in the infrastructure to replace the hundreds of companies that secure data and networks.[76] Jonathan Zittrain has said users sharing responsibility for computing safety is far preferable to locking down the Internet.[77]\n\nPrivacy\nMain article: Internet privacy\nEvery time a client requests a web page, the server can identify the request's IP address. Web servers usually log IP addresses in a log file. Also, unless set not to do so, most web browsers record requested web pages in a viewable history feature, and usually cache much of the content locally. Unless the server-browser communication uses HTTPS encryption, web requests and responses travel in plain text across the Internet and can be viewed, recorded, and cached by intermediate systems. Another way to hide personally identifiable information is by using a virtual private network. A VPN encrypts online traffic and masks the original IP address lowering the chance of user identification.\nWhen a web page asks for, and the user supplies, personally identifiable information—such as their real name, address, e-mail address, etc. web-based entities can associate current web traffic with that individual. If the website uses HTTP cookies, username, and password authentication, or other tracking techniques, it can relate other web visits, before and after, to the identifiable information provided. In this way, a web-based organization can develop and build.md a profile of the individual people who use its site or sites. It may be able to build.md a record for an individual that includes information about their leisure activities, their shopping interests, their profession, and other aspects of their demographic profile. These profiles are of potential interest to marketers, advertisers, and others. Depending on the website's terms and conditions and the local laws that apply information from these profiles may be sold, shared, or passed to other organizations without the user being informed. For many ordinary people, this means little more than some unexpected e-mails in their in-box or some uncannily relevant advertising on a future web page. For others, it can mean that time spent indulging an unusual interest can result in a deluge of further targeted marketing that may be unwelcome. Law enforcement, counter-terrorism, and espionage agencies can also identify, target, and track individuals based on their interests or proclivities on the Web.\nSocial networking sites usually try to get users to use their real names, interests, and locations, rather than pseudonyms, as their executives believe that this makes the social networking experience more engaging for users. On the other hand, uploaded photographs or unguarded statements can be identified to an individual, who may regret this exposure. Employers, schools, parents, and other relatives may be influenced by aspects of social networking profiles, such as text posts or digital photos, that the posting individual did not intend for these audiences. Online bullies may make use of personal information to harass or stalk users. Modern social networking websites allow fine-grained control of the privacy settings for each posting, but these can be complex and not easy to find or use, especially for beginners.[78] Photographs and videos posted onto websites have caused particular problems, as they can add a person's face to an online profile. With modern and potential facial recognition technology, it may then be possible to relate that face with other, previously anonymous, images, events, and scenarios that have been imaged elsewhere. Due to image caching, mirroring, and copying, it is difficult to remove an image from the World Wide Web.\n\nStandards\nMain article: Web standards\nWeb standards include many interdependent standards and specifications, some of which govern aspects of the Internet, not just the World Wide Web. Even when not web-focused, such standards directly or indirectly affect the development and administration of websites and web services. Considerations include the interoperability, accessibility and usability of web pages and web sites.\nWeb standards, in the broader sense, consist of the following:\n\nRecommendations published by the World Wide Web Consortium (W3C)[79]\n\"Living Standard\" made by the Web Hypertext Application Technology Working Group (WHATWG)\nRequest for Comments (RFC) documents published by the Internet Engineering Task Force (IETF)[80]\nStandards published by the International Organization for Standardization (ISO)[81]\nStandards published by Ecma International (formerly ECMA)[82]\nThe Unicode Standard and various Unicode Technical Reports (UTRs) published by the Unicode Consortium[83]\nName and number registries maintained by the Internet Assigned Numbers Authority (IANA)[84]\nWeb standards are not fixed sets of rules but are constantly evolving sets of finalized technical specifications of web technologies.[85] Web standards are developed by standards organizations—groups of interested and often competing parties chartered with the task of standardization—not technologies developed and declared to be a standard by a single individual or company. It is crucial to distinguish those specifications that are under development from the ones that already reached the final development status (in the case of W3C specifications, the highest maturity level).\n\nAccessibility\nMain article: Web accessibility\nThere are methods for accessing the Web in alternative mediums and formats to facilitate use by individuals with disabilities. These disabilities may be visual, auditory, physical, speech-related, cognitive, neurological, or some combination. Accessibility features also help people with temporary disabilities, like a broken arm, or ageing users as their abilities change.[86] The Web receives information as well as providing information and interacting with society. The World Wide Web Consortium claims that it is essential that the Web be accessible, so it can provide equal access and equal opportunity to people with disabilities.[87] Tim Berners-Lee once noted, \"The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.\"[86] Many countries regulate web accessibility as a requirement for websites.[88] International co-operation in the W3C Web Accessibility Initiative led to simple guidelines that web content authors as well as software developers can use to make the Web accessible to persons who may or may not be using assistive technology.[86][89]\n\nInternationalisation\nThe W3C Internationalisation Activity assures that web technology works in all languages, scripts, and cultures.[90] Beginning in 2004 or 2005, Unicode gained ground and eventually in December 2007 surpassed both ASCII and Western European as the Web's most frequently used character encoding.[91] Originally .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}RFC 3986 allowed resources to be identified by URI in a subset of US-ASCII. RFC 3987 allows more characters—any character in the Universal Character Set—and now a resource can be identified by IRI in any language.[92]\n\nSee also\n.mw-parser-output .portalbox{padding:0;margin:0.5em 0;display:table;box-sizing:border-box;max-width:175px;list-style:none}.mw-parser-output .portalborder{border:solid #aaa 1px;padding:0.1em;background:#f9f9f9}.mw-parser-output .portalbox-entry{display:table-row;font-size:85%;line-height:110%;height:1.9em;font-style:italic;font-weight:bold}.mw-parser-output .portalbox-image{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox-link{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}@media(min-width:720px){.mw-parser-output .portalleft{clear:left;float:left;margin:0.5em 1em 0.5em 0}.mw-parser-output .portalright{clear:right;float:right;margin:0.5em 0 0.5em 1em}}\nEngineering portalInternet portalWorld portal\n.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}\nElectronic publishing\nInternet metaphors\nInternet security\nLists of websites\nStreaming media\nWeb development tools\nWeb literacy\n\nReferences\n.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Retrieved 16 July 2015.\n\n^ Bleigh, Michael (16 May 2014). \"The Once And Future Web Platform\". TechCrunch. Retrieved 9 March 2022.\n\n^ \"World Wide Web Timeline\". Pews Research Center. 11 March 2014. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways The Web Has Changed Us\". The Washington Post. Retrieved 1 August 2015.\n\n^ \"Website Analytics Tool\". Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Archived from the original on 9 July 2015. Retrieved 16 July 2015.\n\n^ Jump up to: a b Berners-Lee, Tim. \"Information Management: A Proposal\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ Berners-Lee, T.; Cailliau, R.; Groff, J.-F.; Pollermann, B. (1992). \"World-Wide Web: The Information Universe\". Electron. Netw. Res. Appl. Policy. 2: 52–58. doi:10.1108/eb047254.\n\n^ Quittner, Joshua (29 March 1999). \"Network Designer Tim Berners-Lee\". Time Magazine. Archived from the original on 15 August 2007. Retrieved 17 May 2010. He wove the World Wide Web and created a mass medium for the 21st century. The World Wide Web is Berners-Lee's alone. He designed it. He set it loose it on the world. And he more than anyone else has fought to keep it an open, non-proprietary and free.[page needed]\n\n^ McPherson, Stephanie Sammartino (2009). Tim Berners-Lee: Inventor of the World Wide Web. Twenty-First Century Books. ISBN 978-0-8225-7273-2.\n\n^ W3 (1991) Re: Qualifiers on Hypertext links\n\n^ Hopgood, Bob. \"History of the Web\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ \"A short history of the Web\". CERN. Retrieved 15 April 2022.\n\n^ \"Software release of WWW into public domain\". CERN Document Server. CERN. Retrieved 17 February 2022.\n\n^ \"Ten Years Public Domain for the Original Web Software\". Tenyears-www.web.cern.ch. 30 April 2003. Archived from the original on 13 August 2009. Retrieved 27 July 2009.\n\n^ Calore, Michael (22 April 2010). \"April 22, 1993: Mosaic Browser Lights Up Web With Color, Creativity\". Wired. Retrieved 12 February 2022.\n\n^ Couldry, Nick (2012). Media, Society, World: Social Theory and Digital Media Practice. London: Polity Press. p. 2. ISBN 9780745639208.\n\n^ Hoffman, Jay (21 April 1993). \"The Origin of the IMG Tag\". The History of the Web. Retrieved 13 February 2022.\n\n^ Clarke, Roger. \"The Birth of Web Commerce\". Roger Clarke's Web-Site. XAMAX. Retrieved 15 February 2022.\n\n^ McCullough, Brian. \"20 YEARS ON: WHY NETSCAPE'S IPO WAS THE \"BIG BANG\" OF THE INTERNET ERA\". www.internethistorypodcast.com. INTERNET HISTORY PODCAST. Retrieved 12 February 2022.\n\n^ Calore, Michael (28 September 2009). \"Sept. 28, 1998: Internet Explorer Leaves Netscape in Its Wake\". Wired. Retrieved 14 February 2022.\n\n^ Daly, Janet (26 January 2000). \"World Wide Web Consortium Issues XHTML 1.0 as a Recommendation\". W3C. Retrieved 8 March 2022.\n\n^ Hickson, Ian. \"WHAT open mailing list announcement\". whatwg.org. WHATWG. Retrieved 16 February 2022.\n\n^ Shankland, Stephen (9 July 2009). \"An epitaph for the Web standard, XHTML 2\". CNet. Retrieved 17 February 2022.\n\n^ \"Memorandum of Understanding Between W3C and WHATWG\". w3.org. W3C. Retrieved 16 February 2022.\n\n^ In, Lee (30 June 2012). Electronic Commerce Management for Business Activities and Global Enterprises: Competitive Advantages: Competitive Advantages. IGI Global. ISBN 978-1-4666-1801-5.\n\n^ Misiroglu, Gina (26 March 2015). American Countercultures: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History. Routledge. ISBN 978-1-317-47729-7.\n\n^ \"World Wide Web Timeline\". Pew Research Center. 11 March 2014. Archived from the original on 29 July 2015. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways the Web Has Changed Us\". The Washington Post. Archived from the original on 9 September 2015. Retrieved 1 August 2015.\n\n^ \"Internet Live Stats\". Archived from the original on 2 July 2015. Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". World Wide Web Consortium. Archived from the original on 22 April 2016. Retrieved 18 April 2016.\n\n^ Muylle, Steve; Moenaert, Rudy; Despont, Marc (1999). \"A grounded theory of World Wide Web search behaviour\". Journal of Marketing Communications. 5 (3): 143. doi:10.1080/135272699345644.\n\n^ Flanagan, David. JavaScript – The definitive guide (6 ed.). p. 1. JavaScript is part of the triad of technologies that all Web developers must learn: HTML to specify the content of web pages, CSS to specify the presentation of web pages, and JavaScript to specify the behaviour of web pages.\n\n^ \"HTML 4.0 Specification – W3C Recommendation – Conformance: requirements and recommendations\". World Wide Web Consortium. 18 December 1997. Retrieved 6 July 2015.\n\n^ Berners-Lee, Tim; Cailliau, Robert (12 November 1990). \"WorldWideWeb: Proposal for a HyperText Project\". Archived from the original on 2 May 2015. Retrieved 12 May 2015.\n\n^ Berners-Lee, Tim. \"Frequently asked questions by the Press\". W3C. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Palazzi, P (2011). \"The Early Days of the WWW at CERN\". Archived from the original on 23 July 2012.\n\n^ Fraser, Dominic (13 May 2018). \"Why a domain's root can't be a CNAME – and other tidbits about the DNS\". FreeCodeCamp.\n\n^ \"automatically adding www.___.com\". mozillaZine. 16 May 2003. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ Masnick, Mike (7 July 2008). \"Microsoft Patents Adding 'www.' And '.com' To Text\". Techdirt. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ \"Audible pronunciation of 'WWW'\". Oxford University Press. Archived from the original on 25 May 2014. Retrieved 25 May 2014.\n\n^ Harvey, Charlie. \"How we pronounce WWW in English: a detailed but unscientific survey\". charlieharvey.org.uk. Retrieved 19 May 2022.\n\n^ \"Stephen Fry's pronunciation of 'WWW'\". Podcasts.com. Archived from the original on 4 April 2017.\n\n^ Simonite, Tom (22 July 2008). \"Help us find a better way to pronounce www\". newscientist.com. New Scientist, Technology. Archived from the original on 13 March 2016. Retrieved 7 February 2016.\n\n^ \"MDBG Chinese-English dictionary – Translate\". Archived from the original on 12 November 2008. Retrieved 27 July 2009.\n\n^ \"Frequently asked questions by the Press – Tim BL\". W3.org. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Castelluccio, Michael (2010). \"It's not your grandfather's Internet\". thefreelibrary.com. Institute of Management Accountants. Retrieved 7 February 2016.\n\n^ Jump up to: a b Hamilton, Naomi (31 July 2008). \"The A-Z of Programming Languages: JavaScript\". Computerworld. IDG. Archived from the original on 24 May 2009. Retrieved 12 May 2009.\n\n^ Buntin, Seth (23 September 2008). \"jQuery Polling plugin\". Archived from the original on 13 August 2009. Retrieved 22 August 2009.\n\n^ \"website\". TheFreeDictionary.com. Retrieved 2 July 2011.\n\n^ Patrick, Killelea (2002). Web performance tuning (2nd ed.). Beijing: O'Reilly. p. 264. ISBN 978-0596001728. OCLC 49502686.\n\n^ Vamosi, Robert (14 April 2008). \"Gmail cookie stolen via Google Spreadsheets\". News.cnet.com. Archived from the original on 9 December 2013. Retrieved 19 October 2017.\n\n^ \"What about the \"EU Cookie Directive\"?\". WebCookies.org. 2013. Archived from the original on 11 October 2017. Retrieved 19 October 2017.\n\n^ \"New net rules set to make cookies crumble\". BBC. 8 March 2011.\n\n^ \"Sen. Rockefeller: Get Ready for a Real Do-Not-Track Bill for Online Advertising\". Adage.com. 6 May 2011.\n\n^ Want to use my wifi?, Jann Horn accessed 5 January 2018.\n\n^ Hamilton, Nigel. \"The Mechanics of a Deep Net Metasearch Engine\". CiteSeerX 10.1.1.90.5847. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ Devine, Jane; Egger-Sider, Francine (July 2004). \"Beyond google: the invisible web in the academic library\". The Journal of Academic Librarianship. 30 (4): 265–269. doi:10.1016/j.acalib.2004.04.010.\n\n^ Raghavan, Sriram; Garcia-Molina, Hector (11–14 September 2001). \"Crawling the Hidden Web\". 27th International Conference on Very Large Data Bases.\n\n^ \"Surface Web\". Computer Hope. Retrieved 20 June 2018.\n\n^ Wright, Alex (22 February 2009). \"Exploring a 'Deep Web' That Google Can't Grasp\". The New York Times. Retrieved 23 February 2009.\n\n^ Madhavan, J., Ko, D., Kot, Ł., Ganapathy, V., Rasmussen, A., & Halevy, A. (2008). Google's deep web crawl. Proceedings of the VLDB Endowment, 1(2), 1241–52.\n\n^ Shedden, Sam (8 June 2014). \"How Do You Want Me to Do It? Does It Have to Look like an Accident? – an Assassin Selling a Hit on the Net; Revealed Inside the Deep Web\". Sunday Mail. Archived from the original on 1 March 2020. Retrieved 5 May 2017.\n\n^ Jump up to: a b Ben-Itzhak, Yuval (18 April 2008). \"Infosecurity 2008 – New defence strategy in battle against e-crime\". ComputerWeekly. Reed Business Information. Archived from the original on 4 June 2008. Retrieved 20 April 2008.\n\n^ Christey, Steve & Martin, Robert A. (22 May 2007). \"Vulnerability Type Distributions in CVE (version 1.1)\". MITRE Corporation. Archived from the original on 17 March 2013. Retrieved 7 June 2008.\n\n^ \"Symantec Internet Security Threat Report: Trends for July–December 2007 (Executive Summary)\" (PDF). XIII. Symantec Corp. April 2008: 1–2. Archived (PDF) from the original on 25 June 2008. Retrieved 11 May 2008. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ \"Google searches web's dark side\". BBC News. 11 May 2007. Archived from the original on 7 March 2008. Retrieved 26 April 2008.\n\n^ \"Security Threat Report (Q1 2008)\" (PDF). Sophos. Archived (PDF) from the original on 31 December 2013. Retrieved 24 April 2008.\n\n^ \"Security threat report\" (PDF). Sophos. July 2008. Archived (PDF) from the original on 31 December 2013. Retrieved 24 August 2008.\n\n^ Fogie, Seth, Jeremiah Grossman, Robert Hansen, and Anton Rager (2007). Cross Site Scripting Attacks: XSS Exploits and Defense (PDF). Syngress, Elsevier Science & Technology. pp. 68–69, 127. ISBN 978-1-59749-154-9. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008.{{cite book}}:  CS1 maint: multiple names: authors list (link)\n\n^ O'Reilly, Tim (30 September 2005). \"What Is Web 2.0\". O'Reilly Media. pp. 4–5. Archived from the original on 15 April 2013. Retrieved 4 June 2008. and AJAX web applications can introduce security vulnerabilities like \"client-side security controls, increased attack surfaces, and new possibilities for Cross-Site Scripting (XSS)\", in Ritchie, Paul (March 2007). \"The security risks of AJAX/web 2.0 applications\" (PDF). Infosecurity. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008. which cites Hayre, Jaswinder S. & Kelath, Jayasankar (22 June 2006). \"Ajax Security Basics\". SecurityFocus. Archived from the original on 15 May 2008. Retrieved 6 June 2008.\n\n^ Berinato, Scott (1 January 2007). \"Software Vulnerability Disclosure: The Chilling Effect\". CSO. CXO Media. p. 7. Archived from the original on 18 April 2008. Retrieved 7 June 2008.\n\n^ \"2012 Global Losses From phishing Estimated At $1.5 Bn\". FirstPost. 20 February 2013. Archived from the original on 21 December 2014. Retrieved 25 January 2019.\n\n^ Prince, Brian (9 April 2008). \"McAfee Governance, Risk and Compliance Business Unit\". eWEEK. Ziff Davis Enterprise Holdings. Retrieved 25 April 2008.\n\n^ Preston, Rob (12 April 2008). \"Down To Business: It's Past Time To Elevate The Infosec Conversation\". InformationWeek. United Business Media. Archived from the original on 14 April 2008. Retrieved 25 April 2008.\n\n^ Claburn, Thomas (6 February 2007). \"RSA's Coviello Predicts Security Consolidation\". InformationWeek. United Business Media. Archived from the original on 7 February 2009. Retrieved 25 April 2008.\n\n^ Duffy Marsan, Carolyn (9 April 2008). \"How the iPhone is killing the 'Net\". Network World. IDG. Archived from the original on 14 April 2008. Retrieved 17 April 2008.\n\n^ boyd, danah; Hargittai, Eszter (July 2010). \"Facebook privacy settings: Who cares?\". First Monday. 15 (8). doi:10.5210/fm.v15i8.3086.\n\n^ \"W3C Technical Reports and Publications\". W3C. Retrieved 19 January 2009.\n\n^ \"IETF RFC page\". IETF. Archived from the original on 2 February 2009. Retrieved 19 January 2009.\n\n^ \"Search for World Wide Web in ISO standards\". ISO. Retrieved 19 January 2009.\n\n^ \"Ecma formal publications\". Ecma. Retrieved 19 January 2009.\n\n^ \"Unicode Technical Reports\". Unicode Consortium. Retrieved 19 January 2009.\n\n^ \"IANA home page\". IANA. Retrieved 19 January 2009.\n\n^ Sikos, Leslie (2011). Web standards – Mastering HTML5, CSS3, and XML. Apress. ISBN 978-1-4302-4041-9. Archived from the original on 2 April 2015. Retrieved 12 March 2019.\n\n^ Jump up to: a b c \"Web Accessibility Initiative (WAI)\". World Wide Web Consortium. Archived from the original on 2 April 2009. Retrieved 7 April 2009.\n\n^ \"Developing a Web Accessibility Business Case for Your Organization: Overview\". World Wide Web Consortium. Archived from the original on 14 April 2009. Retrieved 7 April 2009.\n\n^ \"Legal and Policy Factors in Developing a Web Accessibility Business Case for Your Organization\". World Wide Web Consortium. Archived from the original on 5 April 2009. Retrieved 7 April 2009.\n\n^ \"Web Content Accessibility Guidelines (WCAG) Overview\". World Wide Web Consortium. Archived from the original on 1 April 2009. Retrieved 7 April 2009.\n\n^ \"Internationalization (I18n) Activity\". World Wide Web Consortium. Archived from the original on 16 April 2009. Retrieved 10 April 2009.\n\n^ Davis, Mark (5 April 2008). \"Moving to Unicode 5.1\". Archived from the original on 21 May 2009. Retrieved 10 April 2009.\n\n^ \"World Wide Web Consortium Supports the IETF URI Standard and IRI Proposed Standard\" (Press release). World Wide Web Consortium. 26 January 2005. Archived from the original on 7 February 2009. Retrieved 10 April 2009.\n\n\nFurther reading\nBerners-Lee, Tim; Bray, Tim; Connolly, Dan; Cotton, Paul; Fielding, Roy; Jeckle, Mario; Lilley, Chris; Mendelsohn, Noah; Orchard, David; Walsh, Norman; Williams, Stuart (15 December 2004). \"Architecture of the World Wide Web, Volume One\". Version 20041215. W3C. {{cite journal}}: Cite journal requires |journal= (help)\nBerners-Lee, Tim (August 1996). \"The World Wide Web: Past, Present and Future\". {{cite journal}}: Cite journal requires |journal= (help)\nBrügger, Niels, ed, Web25: Histories from the first 25 years of the World Wide Web (Peter Lang, 2017).\nFielding, R.; Gettys, J.; Mogul, J.; Frystyk, H.; Masinter, L.; Leach, P.; Berners-Lee, T. (June 1999). \"Hypertext Transfer Protocol – HTTP/1.1\". Request For Comments 2616. Information Sciences Institute. {{cite journal}}: Cite journal requires |journal= (help)\nNiels Brügger, ed. Web History (2010) 362 pages; Historical perspective on the World Wide Web, including issues of culture, content, and preservation.\nPolo, Luciano (2003). \"World Wide Web Technology Architecture: A Conceptual Analysis\". New Devices.\nSkau, H.O. (March 1990). \"The World Wide Web and Health Information\". New Devices.\nExternal links\n.mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:#f9f9f9;display:flow-root}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1}}@media(min-width:720px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}}.mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0}\n\n\nWikimedia Commons has media related to World Wide Web.\n\n\n\n\nWikibooks has a book on the topic of: Nets, Webs and the Information Infrastructure\n\nThe first website\nEarly archive of the first Web site\nInternet Statistics: Growth and Usage of the Web and the Internet\nLiving Internet A comprehensive history of the Internet, including the World Wide Web\nWeb Design and Development at Curlie\nWorld Wide Web Consortium (W3C)\nW3C Recommendations Reduce \"World Wide Wait\"\nWorld Wide Web Size Daily estimated size of the World Wide Web\nAntonio A. Casilli, Some Elements for a Sociology of Online Interactions\nThe Erdős Webgraph Server Archived 1 March 2021 at the Wayback Machine offers weekly updated graph representation of a constantly increasing fraction of the WWW\nThe 25th Anniversary of the World Wide Web Archived 11 July 2021 at the Wayback Machine is an animated video produced by USAID and TechChange which explores the role of the WWW in addressing extreme poverty\n.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" · \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"}.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteTelecommunicationsHistory\nBeacon\nBroadcasting\nCable protection system\nCable TV\nCommunications satellite\nComputer network\nData compression\naudio\nDCT\nimage\nvideo\nDigital media\nInternet video\nonline video platform\nsocial media\nstreaming\nDrums\nEdholm's law\nElectrical telegraph\nFax\nHeliographs\nHydraulic telegraph\nInformation Age\nInformation revolution\nInternet\nMass media\nMobile phone\nSmartphone\nOptical telecommunication\nOptical telegraphy\nPager\nPhotophone\nPrepaid mobile phone\nRadio\nRadiotelephone\nSatellite communications\nSemaphore\nSemiconductor\ndevice\nMOSFET\ntransistor\nSmoke signals\nTelecommunications history\nTelautograph\nTelegraphy\nTeleprinter (teletype)\nTelephone\nThe Telephone Cases\nTelevision\ndigital\nstreaming\nUndersea telegraph line\nVideotelephony\nWhistled language\nWireless revolution\nPioneers\nNasir Ahmed\nEdwin Howard Armstrong\nMohamed M. Atalla\nJohn Logie Baird\nPaul Baran\nJohn Bardeen\nAlexander Graham Bell\nEmile Berliner\nTim Berners-Lee\nFrancis Blake (telephone)\nJagadish Chandra Bose\nCharles Bourseul\nWalter Houser Brattain\nVint Cerf\nClaude Chappe\nYogen Dalal\nDaniel Davis Jr.\nDonald Davies\nAmos Dolbear\nThomas Edison\nLee de Forest\nPhilo Farnsworth\nReginald Fessenden\nElisha Gray\nOliver Heaviside\nRobert Hooke\nErna Schneider Hoover\nHarold Hopkins\nGardiner Greene Hubbard\nInternet pioneers\nBob Kahn\nDawon Kahng\nCharles K. Kao\nNarinder Singh Kapany\nHedy Lamarr\nInnocenzo Manzetti\nGuglielmo Marconi\nRobert Metcalfe\nAntonio Meucci\nSamuel Morse\nJun-ichi Nishizawa\nCharles Grafton Page\nRadia Perlman\nAlexander Stepanovich Popov\nTivadar Puskás\nJohann Philipp Reis\nClaude Shannon\nAlmon Brown Strowger\nHenry Sutton\nCharles Sumner Tainter\nNikola Tesla\nCamille Tissot\nAlfred Vail\nThomas A. Watson\nCharles Wheatstone\nVladimir K. Zworykin\nTransmissionmedia\nCoaxial cable\nFiber-optic communication\noptical fiber\nFree-space optical communication\nMolecular communication\nRadio waves\nwireless\nTransmission line\ndata transmission circuit\ntelecommunication circuit\nNetwork topologyand switching\nBandwidth\nLinks\nNodes\nterminal\nNetwork switching\ncircuit\npacket\nTelephone exchange\nMultiplexing\nSpace-division\nFrequency-division\nTime-division\nPolarization-division\nOrbital angular-momentum\nCode-division\nConcepts\nCommunication protocol\nComputer network\nData transmission\nStore and forward\nTelecommunications equipment\nTypes of network\nCellular network\nEthernet\nISDN\nLAN\nMobile\nNGN\nPublic Switched Telephone\nRadio\nTelevision\nTelex\nUUCP\nWAN\nWireless network\nNotable networks\nARPANET\nBITNET\nCYCLADES\nFidoNet\nInternet\nInternet2\nJANET\nNPL network\nToasternet\nUsenet\nLocations\nAfrica\nAmericas\nNorth\nSouth\nAntarctica\nAsia\nEurope\nOceania\n(Global telecommunications regulation bodies)\n\n Telecommunication portal\n Category\n Outline\n Commons\n\nshowvteWeb syndication\nHistory\nBlogging\nPodcasting\nVlogging\nWeb syndication technology\nTypes\nArt\nBloggernacle\nClassical music\nCorporate\nDream diary\nEdublog\nElectronic journal\nFake\nFamily\nFashion\nFood\nHealth\nLaw\nLifelog\nLitblog\nMP3\nNews\nPhotoblog\nPolice\nPolitical\nProject\nReverse\nTravel\nWarblog\nTechnologyGeneral\nBitTorrent\nFeed URI scheme\nFeatures\nLinkback\nPermalink\nPing\nPingback\nReblogging\nRefback\nRollback\nTrackback\nMechanism\nConversation threading\nGeotagging\nRSS enclosure\nSynchronization\nMemetics\nAtom feed\nData feed\nPhotofeed\nProduct feed\nRDF feed\nWeb feed\nRSS\nGeoRSS\nMRSS\nRSS TV\nSocial\nInter-process communication\nLivemark\nMashup\nReferencing\nRSS editor\nRSS tracking\nStreaming media\nStandard\nOML\nOPML\nRSS Advisory Board\nUsenet\nWorld Wide Web\nXBEL\nXOXO\nForm\nAudio podcast\nEnhanced podcast\nMobilecast\nNarrowcasting\nPeercasting\nScreencast\nSlidecasting\nVideocast\nWebcomic\nWebtoon\nWeb series\n\nAnonymous blogging\nCollaborative blog\nColumnist\nInstant messaging\nLiveblogging\nMicroblog\nMobile blogging\nRoblog\nSpam blog\nVideo blogging\nMotovlogging\nMediaAlternative media\nCarnivals\nFiction\nJournalism\nCitizen\nDatabase\nOnline diary\nSearch engines\nSideblog\nSoftware\nWeb directory\nMicromedia\nAggregation\nNews\nPoll\nReview\nSearch\nVideo\nAtom\nAtomPub\nBroadcatching\nHashtag\nNewsML\n1\nG2\nSocial communication\nSocial software\nWeb Slice\nRelated\nBlogosphere\nEscribitionist\nGlossary of blogging\nPay per click\nPosting style\nSlashdot effect\nSpam in blogs\nUses of podcasting\n\nshowvteSemantic WebBackground\nDatabases\nHypertext\nInternet\nOntologies\nSemantics\nSemantic networks\nWorld Wide Web\nSub-topics\nDataspaces\nHyperdata\nLinked data\nRule-based systems\nApplications\nSemantic analytics\nSemantic broker\nSemantic computing\nSemantic mapper\nSemantic matching\nSemantic publishing\nSemantic reasoner\nSemantic search\nSemantic service-oriented architecture\nSemantic wiki\nSolid\nRelated topics\nCollective intelligence\nDescription logic\nFolksonomy\nGeotagging\nInformation architecture\nKnowledge extraction\nKnowledge management\nKnowledge representation and reasoning\nLibrary 2.0\nDigital library\nDigital humanities\nMetadata\nReferences\nTopic map\nWeb 2.0\nWeb engineering\nWeb Science Trust\nStandardsSyntax and supporting technologies\nHTTP\nIRI\nURI\nRDF\ntriples\nRDF/XML\nJSON-LD\nTurtle\nTriG\nNotation3\nN-Triples\nTriX (no W3C standard)\nRRID\nSPARQL\nXML\nSemantic HTML\nSchemas, ontologies and rules\nCommon Logic\nOWL\nRDFS\nRule Interchange Format\nSemantic Web Rule Language\nALPS\nSHACL\nSemantic annotation\neRDF\nGRDDL\nMicrodata\nMicroformats\nRDFa\nSAWSDL\nFacebook Platform\nCommon vocabularies\nDOAP\nDublin Core\nFOAF\nSchema.org\nSIOC\nSKOS\nMicroformat vocabularies\nhAtom\nhCalendar\nhCard\nhProduct\nhRecipe\nhReview\n\nshowAuthority control National libraries\nSpain\nFrance (data)\nGermany\nIsrael\nUnited States\nLatvia\nCzech Republic\nOther\nFAST\nNational Archives (US)\n\n\n\n\n\n"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("31"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://en.wikipedia.org/wiki/World_Wide_Web",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://en.wikipedia.org/wiki/World_Wide_Web"

        }

    ],

    links: "https://en.wikipedia.org/wiki/World_Wide_Web",

    name: "WIKI WWW",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "System of interlinked hypertext documents accessed over the Internet\n.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the global system of pages accessed via URLs. For the worldwide computer network, see Internet. For the web browser, see WorldWideWeb.\n\"WWW\" and \"The Web\" redirect here. For other uses, see WWW (disambiguation) and The Web (disambiguation).\n\n\n\n\n  The historic World Wide Web logo, designed by Robert Cailliau\n  A web page displayed in a web browser\n  A global map of the Web Index for countries in 2014\nThe World Wide Web (WWW), commonly known as the Web, is an information system enabling documents and other web resources to be accessed over the Internet.[1] \nDocuments and downloadable media are made available to the network through web servers and can be accessed by programs such as web browsers. Servers and resources on the World Wide Web are identified and located through character strings called uniform resource locators (URLs). The original and still very common document type is a web page formatted in Hypertext Markup Language (HTML). This markup language supports plain text, images, embedded video and audio contents, and scripts (short programs) that implement complex user interaction. The HTML language also supports hyperlinks (embedded URLs) which provide immediate access to other web resources. Web navigation, or web surfing, is the common practice of following such hyperlinks across multiple websites. Web applications are web pages that function as application software. The information in the Web is transferred across the Internet using the Hypertext Transfer Protocol (HTTP).\nMultiple web resources with a common theme and usually a common domain name make up a website. A single web server may provide multiple websites, while some websites, especially the most popular ones, may be provided by multiple servers. Website content is provided by a myriad of companies, organizations, government agencies, and individual users; and comprises an enormous amount of educational, entertainment, commercial, and government information.\nThe World Wide Web has become the world's dominant software platform.[2][3][4][5] It is the primary tool billions of people worldwide use to interact with the Internet.[6]\nThe Web was invented by Tim Berners-Lee at CERN in 1989 and opened to the public in 1991. It was conceived as a \"universal linked information system\".[7]\n\n\nHistory\nMain article: History of the World Wide Web\n  This NeXT Computer was used by Sir Tim Berners-Lee at CERN and became the world's first Web server.\nThe Web was invented by English computer scientist Tim Berners-Lee while working at CERN. He conceived it as an information management system using several concepts and technologies, the most fundamental of which was the connections that existed between information.[8][9][10] The first proposal was written in 1989,[7] and a working system implemented by the end of 1990 including the WorldWideWeb browser and an HTTP server.[11] The technology was released outside CERN to other research institutions starting in January 1991, and then to the general public on 23 August 1991. The Web was a success at CERN, and began to spread to other scientific and academic institutions. Within the next two years, there were 50 websites created.[12][13]\nCERN made the Web protocol and code available royalty free in 1993, enabling its widespread use.[14][15] After the NCSA released the Mosaic web browser later that year, the Web's popularity grew rapidly as thousands of websites sprang up in less than a year.[16][17] Mosaic was a graphical browser that could display inline images and submit forms that  were processed by the HTTPd server.[18][19] Marc Andreessen and Jim Clark founded Netscape the following year and released the Navigator browser, which introduced Java and JavaScript to the Web. It quickly became the dominant browser. Netscape became a public company in 1995 which triggered a frenzy for the Web and started the dot-com bubble.[20] Microsoft responded by developing its own browser, Internet Explorer, starting the browser wars. By bundling it with Windows, it became the dominant browser for 14 years.[21]\nTim Berners-Lee founded the World Wide Web Consortium (W3C) which created XML in 1996 and recommended replacing HTML with stricter XHTML.[22] In the meantime, developers began exploiting an IE feature called XMLHttpRequest to make Ajax applications and launched the Web 2.0 revolution. Mozilla, Opera, and Apple rejected XHTML and created the WHATWG which developed HTML5.[23] In 2009, the W3C conceded and abandoned XHTML[24] and in 2019, ceded control of the HTML specification to the WHATWG.[25]\nThe World Wide Web has been central to the development of the Information Age and is the primary tool billions of people use to interact on the Internet.[26][27][28][29][30]\n\nFunction\nMain articles: HTTP and HTML\n  The World Wide Web functions as an application layer protocol that is run \"on top of\" (figuratively) the Internet, helping to make it more functional. The advent of the Mosaic web browser helped to make the web much more usable, to include the display of images and moving images (GIFs).\nThe terms Internet and World Wide Web are often used without much distinction. However, the two terms do not mean the same thing. The Internet is a global system of computer networks interconnected through telecommunications and optical networking. In contrast, the World Wide Web is a global collection of documents and other resources, linked by hyperlinks and URIs. Web resources are accessed using HTTP or HTTPS, which are application-level Internet protocols that use the Internet's transport protocols.[31]\nViewing a web page on the World Wide Web normally begins either by typing the URL of the page into a web browser or by following a hyperlink to that page or resource. The web browser then initiates a series of background communication messages to fetch and display the requested page. In the 1990s, using a browser to view web pages—and to move from one web page to another through hyperlinks—came to be known as 'browsing,' 'web surfing' (after channel surfing), or 'navigating the Web'. Early studies of this new behavior investigated user patterns in using web browsers. One study, for example, found five user patterns: exploratory surfing, window surfing, evolved surfing, bounded navigation and targeted navigation.[32]\nThe following example demonstrates the functioning of a web browser when accessing a page at the URL http://example.org/home.html. The browser resolves the server name of the URL (example.org) into an Internet Protocol address using the globally distributed Domain Name System (DNS). This lookup returns an IP address such as 203.0.113.4 or 2001:db8:2e::7334. The browser then requests the resource by sending an HTTP request across the Internet to the computer at that address. It requests service from a specific TCP port number that is well known for the HTTP service so that the receiving host can distinguish an HTTP request from other network protocols it may be servicing. HTTP normally uses port number 80 and for HTTPS it normally uses port number 443. The content of the HTTP request can be as simple as two lines of text:\n\nGET /home.html HTTP/1.1\nHost: example.org\n\nThe computer receiving the HTTP request delivers it to web server software listening for requests on port 80. If the webserver can fulfill the request it sends an HTTP response back to the browser indicating success:\n\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\n\nfollowed by the content of the requested page. Hypertext Markup Language (HTML) for a basic web page might look like this:\n\n<html>\n  <head>\n    <title>Example.org – The World Wide Web</title>\n  </head>\n  <body>\n    <p>The World Wide Web, abbreviated as WWW and commonly known ...</p>\n  </body>\n</html>\n\nThe web browser parses the HTML and interprets the markup (<title>, <p> for paragraph, and such) that surrounds the words to format the text on the screen. Many web pages use HTML to reference the URLs of other resources such as images, other embedded media, scripts that affect page behaviour, and Cascading Style Sheets that affect page layout. The browser makes additional HTTP requests to the web server for these other Internet media types. As it receives their content from the web server, the browser progressively renders the page onto the screen as specified by its HTML and these additional resources.\n\nHTML\nMain article: HTML\nHypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets (CSS) and JavaScript, it forms a triad of cornerstone technologies for the World Wide Web.[33]\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\nHTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img /> and <input /> directly introduce content into the page. Other tags such as <p> surround and provide information about document text and may include other tags as sub-elements. Browsers do not display the HTML tags, but use them to interpret the content of the page.\nHTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. Inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), maintainer of both the HTML and the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[update][34]\n\nLinking\nMost web pages contain hyperlinks to other related pages and perhaps to downloadable files, source documents, definitions and other web resources. In the underlying HTML, a hyperlink looks like this:\n<a href=\"http://example.org/home.html\">Example.org Homepage</a>.\n\n  Graphic representation of a minute fraction of the WWW, demonstrating hyperlinks\nSuch a collection of useful, related resources, interconnected via hypertext links is dubbed a web of information. Publication on the Internet created what Tim Berners-Lee first called the WorldWideWeb (in its original CamelCase, which was subsequently discarded) in November 1990.[35]\nThe hyperlink structure of the web is described by the webgraph: the nodes of the web graph correspond to the web pages (or URLs) the directed edges between them to the hyperlinks. Over time, many web resources pointed to by hyperlinks disappear, relocate, or are replaced with different content. This makes hyperlinks obsolete, a phenomenon referred to in some circles as link rot, and the hyperlinks affected by it are often called dead links. The ephemeral nature of the Web has prompted many efforts to archive websites. The Internet Archive, active since 1996, is the best known of such efforts.\n\nWWW prefix\nMany hostnames used for the World Wide Web begin with www because of the long-standing practice of naming Internet hosts according to the services they provide. The hostname of a web server is often www, in the same way that it may be ftp for an FTP server, and news or nntp for a Usenet news server. These hostnames appear as Domain Name System (DNS) or subdomain names, as in www.example.com. The use of www is not required by any technical or policy standard and many web sites do not use it; the first web server was nxoc01.cern.ch.[36] According to Paolo Palazzi, who worked at CERN along with Tim Berners-Lee, the popular use of www as subdomain was accidental; the World Wide Web project page was intended to be published at www.cern.ch while info.cern.ch was intended to be the CERN home page; however the DNS records were never switched, and the practice of prepending www to an institution's website domain name was subsequently copied.[37][better source needed] Many established websites still use the prefix, or they employ other subdomain names such as www2, secure or en for special purposes. Many such web servers are set up so that both the main domain name (e.g., example.com) and the www subdomain (e.g., www.example.com) refer to the same site; others require one form or the other, or they may map to different web sites. The use of a subdomain name is useful for load balancing incoming web traffic by creating a CNAME record that points to a cluster of web servers. Since, currently, only a subdomain can be used in a CNAME, the same result cannot be achieved by using the bare domain root.[38][dubious  – discuss]\nWhen a user submits an incomplete domain name to a web browser in its address bar input field, some web browsers automatically try adding the prefix \"www\" to the beginning of it and possibly \".com\", \".org\" and \".net\" at the end, depending on what might be missing. For example, entering \"microsoft\" may be transformed to http://www.microsoft.com/ and \"openoffice\" to http://www.openoffice.org. This feature started appearing in early versions of Firefox, when it still had the working title 'Firebird' in early 2003, from an earlier practice in browsers such as Lynx.[39][unreliable source?] It is reported that Microsoft was granted a US patent for the same idea in 2008, but only for mobile devices.[40]\nIn English, www is usually read as double-u double-u double-u.[41] Some users pronounce it dub-dub-dub, particularly in New Zealand.[42] Stephen Fry, in his \"Podgrams\" series of podcasts, pronounces it wuh wuh wuh.[43] The English writer Douglas Adams once quipped in The Independent on Sunday (1999): \"The World Wide Web is the only thing I know of whose shortened form takes three times longer to say than what it's short for\".[44] In Mandarin Chinese, World Wide Web is commonly translated via a phono-semantic matching to wàn wéi wǎng (万维网), which satisfies www and literally means \"myriad-dimensional net\",[45][better source needed] a translation that reflects the design concept and proliferation of the World Wide Web. Tim Berners-Lee's web-space states that World Wide Web is officially spelled as three separate words, each capitalised, with no intervening hyphens.[46] Nonetheless, it is often called simply the Web, and also often the web; see Capitalization of Internet for details. Use of the www prefix has been declining, especially when Web 2.0 web applications sought to brand their domain names and make them easily pronounceable.[47]\nAs the mobile Web grew in popularity, services like Gmail.com, Outlook.com, Myspace.com, Facebook.com and Twitter.com are most often mentioned without adding \"www.\" (or, indeed, \".com\") to the domain.\n\nScheme specifiers\nThe scheme specifiers http:// and https:// at the start of a web URI refer to Hypertext Transfer Protocol or HTTP Secure, respectively. They specify the communication protocol to use for the request and response. The HTTP protocol is fundamental to the operation of the World Wide Web, and the added encryption layer in HTTPS is essential when browsers send or retrieve confidential data, such as passwords or banking information. Web browsers usually automatically prepend http:// to user-entered URIs, if omitted.\n\nPages\nMain article: Web page\n  A screenshot of a web page on Wikimedia Commons\nA web page (also written as webpage) is a document that is suitable for the World Wide Web and web browsers. A web browser displays a web page on a monitor or mobile device.\nThe term web page usually refers to what is visible, but may also refer to the contents of the computer file itself, which is usually a text file containing hypertext written in HTML or a comparable markup language. Typical web pages provide hypertext for browsing to other web pages via hyperlinks, often referred to as links. Web browsers will frequently have to access multiple web resource elements, such as reading style sheets, scripts, and images, while presenting each web page.\nOn a network, a web browser can retrieve a web page from a remote web server. The web server may restrict access to a private network such as a corporate intranet. The web browser uses the Hypertext Transfer Protocol (HTTP) to make such requests to the web server.\nA static web page is delivered exactly as stored, as web content in the web server's file system. In contrast, a dynamic web page is generated by a web application, usually driven by server-side software. Dynamic web pages are used when each user may require completely different information, for example, bank websites, web email etc.\n\nStatic page\nMain article: Static web page\nA static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application.\nConsequently, a static web page displays the same information for all users, from all contexts, subject to modern capabilities of a web server to negotiate content-type or language of the document where such versions are available and the server is configured to do so.\n\nDynamic pages\nMain articles: Dynamic web page and Ajax (programming)\n  Dynamic web page: example of server-side scripting (PHP and MySQL)\nA server-side dynamic web page is a web page whose construction is controlled by an application server processing server-side scripts. In server-side scripting, parameters determine how the assembly of every new web page proceeds, including the setting up of more client-side processing.\nA client-side dynamic web page processes the web page using JavaScript running in the browser. JavaScript programs can interact with the document via Document Object Model, or DOM, to query page state and alter it. The same client-side techniques can then dynamically update or change the DOM in the same way.\nA dynamic web page is then reloaded by the user or by a computer program to change some variable content. The updating information could come from the server, or from changes made to that page's DOM. This may or may not truncate the browsing history or create a saved version to go back to, but a dynamic web page update using Ajax technologies will neither create a page to go back to nor truncate the web browsing history forward of the displayed page. Using Ajax technologies the end user gets one dynamic page managed as a single page in the web browser while the actual web content rendered on that page can vary. The Ajax engine sits only on the browser requesting parts of its DOM, the DOM, for its client, from an application server.\nDynamic HTML, or DHTML, is the umbrella term for technologies and methods used to create web pages that are not static web pages, though it has fallen out of common use since the popularization of AJAX, a term which is now itself rarely used.[citation needed] Client-side-scripting, server-side scripting, or a combination of these make for the dynamic web experience in a browser.\nJavaScript is a scripting language that was initially developed in 1995 by Brendan Eich, then of Netscape, for use within web pages.[48] The standardised version is ECMAScript.[48] To make web pages more interactive, some web applications also use JavaScript techniques such as Ajax (asynchronous JavaScript and XML). Client-side script is delivered with the page that can make additional HTTP requests to the server, either in response to user actions such as mouse movements or clicks, or based on elapsed time. The server's responses are used to modify the current page rather than creating a new page with each response, so the server needs only to provide limited, incremental information. Multiple Ajax requests can be handled at the same time, and users can interact with the page while data is retrieved. Web pages may also regularly poll the server to check whether new information is available.[49]\n\nWebsite\n  The usap.gov website\nMain article: Website\nA website[50] is a collection of related web resources including web pages, multimedia content, typically identified with a common domain name, and published on at least one web server. Notable examples are wikipedia.org, google.com, and amazon.com.\nA website may be accessible via a public Internet Protocol (IP) network, such as the Internet, or a private local area network (LAN), by referencing a uniform resource locator (URL) that identifies the site.\nWebsites can have many functions and can be used in various fashions; a website can be a personal website, a corporate website for a company, a government website, an organization website, etc. Websites are typically dedicated to a particular topic or purpose, ranging from entertainment and social networking to providing news and education. All publicly accessible websites collectively constitute the World Wide Web, while private websites, such as a company's website for its employees, are typically a part of an intranet.\nWeb pages, which are the building blocks of websites, are documents, typically composed in plain text interspersed with formatting instructions of Hypertext Markup Language (HTML, XHTML). They may incorporate elements from other websites with suitable markup anchors. Web pages are accessed and transported with the Hypertext Transfer Protocol (HTTP), which may optionally employ encryption (HTTP Secure, HTTPS) to provide security and privacy for the user. The user's application, often a web browser, renders the page content according to its HTML markup instructions onto a display terminal.\nHyperlinking between web pages conveys to the reader the site structure and guides the navigation of the site, which often starts with a home page containing a directory of the site web content. Some websites require user registration or subscription to access content. Examples of subscription websites include many business sites, news websites, academic journal websites, gaming websites, file-sharing websites, message boards, web-based email, social networking websites, websites providing real-time price quotations for different types of markets, as well as sites providing various other services. End users can access websites on a range of devices, including desktop and laptop computers, tablet computers, smartphones and smart TVs.\n\nBrowser\nMain article: Web browser\nA web browser (commonly referred to as a browser) is a software user agent for accessing information on the World Wide Web. To connect to a website's server and display its pages, a user needs to have a web browser program. This is the program that the user runs to download, format, and display a web page on the user's computer.\nIn addition to allowing users to find, display, and move between web pages, a web browser will usually have features like keeping bookmarks, recording history, managing cookies (see below), and home pages and may have facilities for recording passwords for logging into web sites.\nThe most popular browsers are Chrome, Firefox, Safari, Internet Explorer, and Edge.\n\nServer\nMain article: Web server\n  The inside and front of a Dell PowerEdge web server, a computer designed for rack mounting\nA Web server is server software, or hardware dedicated to running said software, that can satisfy World Wide Web client requests. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols.\nThe primary function of a web server is to store, process and deliver web pages to clients.[51] The communication between client and server takes place using the Hypertext Transfer Protocol (HTTP). Pages delivered are most frequently HTML documents, which may include images, style sheets and scripts in addition to the text content.\n\n  Multiple web servers may be used for a high traffic website; here, Dell servers are installed together to be used for the Wikimedia Foundation.\nA user agent, commonly a web browser or web crawler, initiates communication by making a request for a specific resource using HTTP and the server responds with the content of that resource or an error message if unable to do so. The resource is typically a real file on the server's secondary storage, but this is not necessarily the case and depends on how the webserver is implemented.\nWhile the primary function is to serve content, full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files.\nMany generic web servers also support server-side scripting using Active Server Pages (ASP), PHP (Hypertext Preprocessor), or other scripting languages. This means that the behavior of the webserver can be scripted in separate files, while the actual server software remains unchanged. Usually, this function is used to generate HTML documents dynamically (\"on-the-fly\") as opposed to returning static documents. The former is primarily used for retrieving or modifying information from databases. The latter is typically much faster and more easily cached but cannot deliver dynamic content.\nWeb servers can also frequently be found embedded in devices such as printers, routers, webcams and serving only a local network. The web server may then be used as a part of a system for monitoring or administering the device in question. This usually means that no additional software has to be installed on the client computer since only a web browser is required (which now is included with most operating systems).\n\nCookie\nMain article: HTTP cookie\nAn HTTP cookie (also called web cookie, Internet cookie, browser cookie, or simply cookie) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past). They can also be used to remember arbitrary pieces of information that the user previously entered into form fields such as names, addresses, passwords, and credit card numbers.\nCookies perform essential functions in the modern web. Perhaps most importantly, authentication cookies are the most common method used by web servers to know whether the user is logged in or not, and which account they are logged in with. Without such a mechanism, the site would not know whether to send a page containing sensitive information or require the user to authenticate themselves by logging in. The security of an authentication cookie generally depends on the security of the issuing website and the user's web browser, and on whether the cookie data is encrypted. Security vulnerabilities may allow a cookie's data to be read by a hacker, used to gain access to user data, or used to gain access (with the user's credentials) to the website to which the cookie belongs (see cross-site scripting and cross-site request forgery for examples).[52]\nTracking cookies, and especially third-party tracking cookies, are commonly used as ways to compile long-term records of individuals' browsing histories – a potential privacy concern that prompted European[53] and U.S. lawmakers to take action in 2011.[54][55] European law requires that all websites targeting European Union member states gain \"informed consent\" from users before storing non-essential cookies on their device.\nGoogle Project Zero researcher Jann Horn describes ways cookies can be read by intermediaries, like Wi-Fi hotspot providers. He recommends using the browser in incognito mode in such circumstances.[56]\n\nSearch engine\nMain article: Search engine\n  The results of a search for the term \"lunar eclipse\" in a web-based image search engine\nA web search engine or Internet search engine is a software system that is designed to carry out web search (Internet search), which means to search the World Wide Web in a systematic way for particular information specified in a web search query. The search results are generally presented in a line of results, often referred to as search engine results pages (SERPs). The information may be a mix of web pages, images, videos, infographics, articles, research papers, and other types of files. Some search engines also mine data available in databases or open directories. Unlike web directories, which are maintained only by human editors, search engines also maintain real-time information by running an algorithm on a web crawler.\nInternet content that is not capable of being searched by a web search engine is generally described as the deep web.\n\nDeep web\nMain article: Deep web\nThe deep web,[57] invisible web,[58] or hidden web[59] are parts of the World Wide Web whose contents are not indexed by standard web search engines. The opposite term to the deep web is the surface web, which is accessible to anyone using the Internet.[60] Computer scientist Michael K. Bergman is credited with coining the term deep web in 2001 as a search indexing term.[61]\nThe content of the deep web is hidden behind HTTP forms,[62][63] and includes many very common uses such as web mail, online banking, and services that users must pay for, and which is protected by a paywall, such as video on demand, some online magazines and newspapers, among others.\nThe content of the deep web can be located and accessed by a direct URL or IP address, and may require a password or other security access past the public website page.\n\nCaching\nA web cache is a server computer located either on the public Internet or within an enterprise that stores recently accessed web pages to improve response time for users when the same content is requested within a certain time after the original request. Most web browsers also implement a browser cache by writing recently obtained data to a local data storage device. HTTP requests by a browser may ask only for data that has changed since the last access. Web pages and resources may contain expiration information to control caching to secure sensitive data, such as in online banking, or to facilitate frequently updated sites, such as news media. Even sites with highly dynamic content may permit basic resources to be refreshed only occasionally. Web site designers find it worthwhile to collate resources such as CSS data and JavaScript into a few site-wide files so that they can be cached efficiently. Enterprise firewalls often cache Web resources requested by one user for the benefit of many users. Some search engines store cached content of frequently accessed websites.\n\nSecurity\nFor criminals, the Web has become a venue to spread malware and engage in a range of cybercrimes, including (but not limited to) identity theft, fraud, espionage and intelligence gathering.[64] Web-based vulnerabilities now outnumber traditional computer security concerns,[65][66] and as measured by Google, about one in ten web pages may contain malicious code.[67] Most web-based attacks take place on legitimate websites, and most, as measured by Sophos, are hosted in the United States, China and Russia.[68] The most common of all malware threats is SQL injection attacks against websites.[69] Through HTML and URIs, the Web was vulnerable to attacks like cross-site scripting (XSS) that came with the introduction of JavaScript[70] and were exacerbated to some degree by Web 2.0 and Ajax web design that favours the use of scripts.[71] Today by one estimate, 70% of all websites are open to XSS attacks on their users.[72] Phishing is another common threat to the Web. In February 2013, RSA (the security division of EMC) estimated the global losses from phishing at $1.5 billion in 2012.[73] Two of the well-known phishing methods are Covert Redirect and Open Redirect.\nProposed solutions vary. Large security companies like McAfee already design governance and compliance suites to meet post-9/11 regulations,[74] and some, like Finjan have recommended active real-time inspection of programming code and all content regardless of its source.[64] Some have argued that for enterprises to see Web security as a business opportunity rather than a cost centre,[75] while others call for \"ubiquitous, always-on digital rights management\" enforced in the infrastructure to replace the hundreds of companies that secure data and networks.[76] Jonathan Zittrain has said users sharing responsibility for computing safety is far preferable to locking down the Internet.[77]\n\nPrivacy\nMain article: Internet privacy\nEvery time a client requests a web page, the server can identify the request's IP address. Web servers usually log IP addresses in a log file. Also, unless set not to do so, most web browsers record requested web pages in a viewable history feature, and usually cache much of the content locally. Unless the server-browser communication uses HTTPS encryption, web requests and responses travel in plain text across the Internet and can be viewed, recorded, and cached by intermediate systems. Another way to hide personally identifiable information is by using a virtual private network. A VPN encrypts online traffic and masks the original IP address lowering the chance of user identification.\nWhen a web page asks for, and the user supplies, personally identifiable information—such as their real name, address, e-mail address, etc. web-based entities can associate current web traffic with that individual. If the website uses HTTP cookies, username, and password authentication, or other tracking techniques, it can relate other web visits, before and after, to the identifiable information provided. In this way, a web-based organization can develop and build.md a profile of the individual people who use its site or sites. It may be able to build.md a record for an individual that includes information about their leisure activities, their shopping interests, their profession, and other aspects of their demographic profile. These profiles are of potential interest to marketers, advertisers, and others. Depending on the website's terms and conditions and the local laws that apply information from these profiles may be sold, shared, or passed to other organizations without the user being informed. For many ordinary people, this means little more than some unexpected e-mails in their in-box or some uncannily relevant advertising on a future web page. For others, it can mean that time spent indulging an unusual interest can result in a deluge of further targeted marketing that may be unwelcome. Law enforcement, counter-terrorism, and espionage agencies can also identify, target, and track individuals based on their interests or proclivities on the Web.\nSocial networking sites usually try to get users to use their real names, interests, and locations, rather than pseudonyms, as their executives believe that this makes the social networking experience more engaging for users. On the other hand, uploaded photographs or unguarded statements can be identified to an individual, who may regret this exposure. Employers, schools, parents, and other relatives may be influenced by aspects of social networking profiles, such as text posts or digital photos, that the posting individual did not intend for these audiences. Online bullies may make use of personal information to harass or stalk users. Modern social networking websites allow fine-grained control of the privacy settings for each posting, but these can be complex and not easy to find or use, especially for beginners.[78] Photographs and videos posted onto websites have caused particular problems, as they can add a person's face to an online profile. With modern and potential facial recognition technology, it may then be possible to relate that face with other, previously anonymous, images, events, and scenarios that have been imaged elsewhere. Due to image caching, mirroring, and copying, it is difficult to remove an image from the World Wide Web.\n\nStandards\nMain article: Web standards\nWeb standards include many interdependent standards and specifications, some of which govern aspects of the Internet, not just the World Wide Web. Even when not web-focused, such standards directly or indirectly affect the development and administration of websites and web services. Considerations include the interoperability, accessibility and usability of web pages and web sites.\nWeb standards, in the broader sense, consist of the following:\n\nRecommendations published by the World Wide Web Consortium (W3C)[79]\n\"Living Standard\" made by the Web Hypertext Application Technology Working Group (WHATWG)\nRequest for Comments (RFC) documents published by the Internet Engineering Task Force (IETF)[80]\nStandards published by the International Organization for Standardization (ISO)[81]\nStandards published by Ecma International (formerly ECMA)[82]\nThe Unicode Standard and various Unicode Technical Reports (UTRs) published by the Unicode Consortium[83]\nName and number registries maintained by the Internet Assigned Numbers Authority (IANA)[84]\nWeb standards are not fixed sets of rules but are constantly evolving sets of finalized technical specifications of web technologies.[85] Web standards are developed by standards organizations—groups of interested and often competing parties chartered with the task of standardization—not technologies developed and declared to be a standard by a single individual or company. It is crucial to distinguish those specifications that are under development from the ones that already reached the final development status (in the case of W3C specifications, the highest maturity level).\n\nAccessibility\nMain article: Web accessibility\nThere are methods for accessing the Web in alternative mediums and formats to facilitate use by individuals with disabilities. These disabilities may be visual, auditory, physical, speech-related, cognitive, neurological, or some combination. Accessibility features also help people with temporary disabilities, like a broken arm, or ageing users as their abilities change.[86] The Web receives information as well as providing information and interacting with society. The World Wide Web Consortium claims that it is essential that the Web be accessible, so it can provide equal access and equal opportunity to people with disabilities.[87] Tim Berners-Lee once noted, \"The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.\"[86] Many countries regulate web accessibility as a requirement for websites.[88] International co-operation in the W3C Web Accessibility Initiative led to simple guidelines that web content authors as well as software developers can use to make the Web accessible to persons who may or may not be using assistive technology.[86][89]\n\nInternationalisation\nThe W3C Internationalisation Activity assures that web technology works in all languages, scripts, and cultures.[90] Beginning in 2004 or 2005, Unicode gained ground and eventually in December 2007 surpassed both ASCII and Western European as the Web's most frequently used character encoding.[91] Originally .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}RFC 3986 allowed resources to be identified by URI in a subset of US-ASCII. RFC 3987 allows more characters—any character in the Universal Character Set—and now a resource can be identified by IRI in any language.[92]\n\nSee also\n.mw-parser-output .portalbox{padding:0;margin:0.5em 0;display:table;box-sizing:border-box;max-width:175px;list-style:none}.mw-parser-output .portalborder{border:solid #aaa 1px;padding:0.1em;background:#f9f9f9}.mw-parser-output .portalbox-entry{display:table-row;font-size:85%;line-height:110%;height:1.9em;font-style:italic;font-weight:bold}.mw-parser-output .portalbox-image{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox-link{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}@media(min-width:720px){.mw-parser-output .portalleft{clear:left;float:left;margin:0.5em 1em 0.5em 0}.mw-parser-output .portalright{clear:right;float:right;margin:0.5em 0 0.5em 1em}}\nEngineering portalInternet portalWorld portal\n.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}\nElectronic publishing\nInternet metaphors\nInternet security\nLists of websites\nStreaming media\nWeb development tools\nWeb literacy\n\nReferences\n.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Retrieved 16 July 2015.\n\n^ Bleigh, Michael (16 May 2014). \"The Once And Future Web Platform\". TechCrunch. Retrieved 9 March 2022.\n\n^ \"World Wide Web Timeline\". Pews Research Center. 11 March 2014. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways The Web Has Changed Us\". The Washington Post. Retrieved 1 August 2015.\n\n^ \"Website Analytics Tool\". Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Archived from the original on 9 July 2015. Retrieved 16 July 2015.\n\n^ Jump up to: a b Berners-Lee, Tim. \"Information Management: A Proposal\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ Berners-Lee, T.; Cailliau, R.; Groff, J.-F.; Pollermann, B. (1992). \"World-Wide Web: The Information Universe\". Electron. Netw. Res. Appl. Policy. 2: 52–58. doi:10.1108/eb047254.\n\n^ Quittner, Joshua (29 March 1999). \"Network Designer Tim Berners-Lee\". Time Magazine. Archived from the original on 15 August 2007. Retrieved 17 May 2010. He wove the World Wide Web and created a mass medium for the 21st century. The World Wide Web is Berners-Lee's alone. He designed it. He set it loose it on the world. And he more than anyone else has fought to keep it an open, non-proprietary and free.[page needed]\n\n^ McPherson, Stephanie Sammartino (2009). Tim Berners-Lee: Inventor of the World Wide Web. Twenty-First Century Books. ISBN 978-0-8225-7273-2.\n\n^ W3 (1991) Re: Qualifiers on Hypertext links\n\n^ Hopgood, Bob. \"History of the Web\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ \"A short history of the Web\". CERN. Retrieved 15 April 2022.\n\n^ \"Software release of WWW into public domain\". CERN Document Server. CERN. Retrieved 17 February 2022.\n\n^ \"Ten Years Public Domain for the Original Web Software\". Tenyears-www.web.cern.ch. 30 April 2003. Archived from the original on 13 August 2009. Retrieved 27 July 2009.\n\n^ Calore, Michael (22 April 2010). \"April 22, 1993: Mosaic Browser Lights Up Web With Color, Creativity\". Wired. Retrieved 12 February 2022.\n\n^ Couldry, Nick (2012). Media, Society, World: Social Theory and Digital Media Practice. London: Polity Press. p. 2. ISBN 9780745639208.\n\n^ Hoffman, Jay (21 April 1993). \"The Origin of the IMG Tag\". The History of the Web. Retrieved 13 February 2022.\n\n^ Clarke, Roger. \"The Birth of Web Commerce\". Roger Clarke's Web-Site. XAMAX. Retrieved 15 February 2022.\n\n^ McCullough, Brian. \"20 YEARS ON: WHY NETSCAPE'S IPO WAS THE \"BIG BANG\" OF THE INTERNET ERA\". www.internethistorypodcast.com. INTERNET HISTORY PODCAST. Retrieved 12 February 2022.\n\n^ Calore, Michael (28 September 2009). \"Sept. 28, 1998: Internet Explorer Leaves Netscape in Its Wake\". Wired. Retrieved 14 February 2022.\n\n^ Daly, Janet (26 January 2000). \"World Wide Web Consortium Issues XHTML 1.0 as a Recommendation\". W3C. Retrieved 8 March 2022.\n\n^ Hickson, Ian. \"WHAT open mailing list announcement\". whatwg.org. WHATWG. Retrieved 16 February 2022.\n\n^ Shankland, Stephen (9 July 2009). \"An epitaph for the Web standard, XHTML 2\". CNet. Retrieved 17 February 2022.\n\n^ \"Memorandum of Understanding Between W3C and WHATWG\". w3.org. W3C. Retrieved 16 February 2022.\n\n^ In, Lee (30 June 2012). Electronic Commerce Management for Business Activities and Global Enterprises: Competitive Advantages: Competitive Advantages. IGI Global. ISBN 978-1-4666-1801-5.\n\n^ Misiroglu, Gina (26 March 2015). American Countercultures: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History. Routledge. ISBN 978-1-317-47729-7.\n\n^ \"World Wide Web Timeline\". Pew Research Center. 11 March 2014. Archived from the original on 29 July 2015. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways the Web Has Changed Us\". The Washington Post. Archived from the original on 9 September 2015. Retrieved 1 August 2015.\n\n^ \"Internet Live Stats\". Archived from the original on 2 July 2015. Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". World Wide Web Consortium. Archived from the original on 22 April 2016. Retrieved 18 April 2016.\n\n^ Muylle, Steve; Moenaert, Rudy; Despont, Marc (1999). \"A grounded theory of World Wide Web search behaviour\". Journal of Marketing Communications. 5 (3): 143. doi:10.1080/135272699345644.\n\n^ Flanagan, David. JavaScript – The definitive guide (6 ed.). p. 1. JavaScript is part of the triad of technologies that all Web developers must learn: HTML to specify the content of web pages, CSS to specify the presentation of web pages, and JavaScript to specify the behaviour of web pages.\n\n^ \"HTML 4.0 Specification – W3C Recommendation – Conformance: requirements and recommendations\". World Wide Web Consortium. 18 December 1997. Retrieved 6 July 2015.\n\n^ Berners-Lee, Tim; Cailliau, Robert (12 November 1990). \"WorldWideWeb: Proposal for a HyperText Project\". Archived from the original on 2 May 2015. Retrieved 12 May 2015.\n\n^ Berners-Lee, Tim. \"Frequently asked questions by the Press\". W3C. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Palazzi, P (2011). \"The Early Days of the WWW at CERN\". Archived from the original on 23 July 2012.\n\n^ Fraser, Dominic (13 May 2018). \"Why a domain's root can't be a CNAME – and other tidbits about the DNS\". FreeCodeCamp.\n\n^ \"automatically adding www.___.com\". mozillaZine. 16 May 2003. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ Masnick, Mike (7 July 2008). \"Microsoft Patents Adding 'www.' And '.com' To Text\". Techdirt. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ \"Audible pronunciation of 'WWW'\". Oxford University Press. Archived from the original on 25 May 2014. Retrieved 25 May 2014.\n\n^ Harvey, Charlie. \"How we pronounce WWW in English: a detailed but unscientific survey\". charlieharvey.org.uk. Retrieved 19 May 2022.\n\n^ \"Stephen Fry's pronunciation of 'WWW'\". Podcasts.com. Archived from the original on 4 April 2017.\n\n^ Simonite, Tom (22 July 2008). \"Help us find a better way to pronounce www\". newscientist.com. New Scientist, Technology. Archived from the original on 13 March 2016. Retrieved 7 February 2016.\n\n^ \"MDBG Chinese-English dictionary – Translate\". Archived from the original on 12 November 2008. Retrieved 27 July 2009.\n\n^ \"Frequently asked questions by the Press – Tim BL\". W3.org. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Castelluccio, Michael (2010). \"It's not your grandfather's Internet\". thefreelibrary.com. Institute of Management Accountants. Retrieved 7 February 2016.\n\n^ Jump up to: a b Hamilton, Naomi (31 July 2008). \"The A-Z of Programming Languages: JavaScript\". Computerworld. IDG. Archived from the original on 24 May 2009. Retrieved 12 May 2009.\n\n^ Buntin, Seth (23 September 2008). \"jQuery Polling plugin\". Archived from the original on 13 August 2009. Retrieved 22 August 2009.\n\n^ \"website\". TheFreeDictionary.com. Retrieved 2 July 2011.\n\n^ Patrick, Killelea (2002). Web performance tuning (2nd ed.). Beijing: O'Reilly. p. 264. ISBN 978-0596001728. OCLC 49502686.\n\n^ Vamosi, Robert (14 April 2008). \"Gmail cookie stolen via Google Spreadsheets\". News.cnet.com. Archived from the original on 9 December 2013. Retrieved 19 October 2017.\n\n^ \"What about the \"EU Cookie Directive\"?\". WebCookies.org. 2013. Archived from the original on 11 October 2017. Retrieved 19 October 2017.\n\n^ \"New net rules set to make cookies crumble\". BBC. 8 March 2011.\n\n^ \"Sen. Rockefeller: Get Ready for a Real Do-Not-Track Bill for Online Advertising\". Adage.com. 6 May 2011.\n\n^ Want to use my wifi?, Jann Horn accessed 5 January 2018.\n\n^ Hamilton, Nigel. \"The Mechanics of a Deep Net Metasearch Engine\". CiteSeerX 10.1.1.90.5847. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ Devine, Jane; Egger-Sider, Francine (July 2004). \"Beyond google: the invisible web in the academic library\". The Journal of Academic Librarianship. 30 (4): 265–269. doi:10.1016/j.acalib.2004.04.010.\n\n^ Raghavan, Sriram; Garcia-Molina, Hector (11–14 September 2001). \"Crawling the Hidden Web\". 27th International Conference on Very Large Data Bases.\n\n^ \"Surface Web\". Computer Hope. Retrieved 20 June 2018.\n\n^ Wright, Alex (22 February 2009). \"Exploring a 'Deep Web' That Google Can't Grasp\". The New York Times. Retrieved 23 February 2009.\n\n^ Madhavan, J., Ko, D., Kot, Ł., Ganapathy, V., Rasmussen, A., & Halevy, A. (2008). Google's deep web crawl. Proceedings of the VLDB Endowment, 1(2), 1241–52.\n\n^ Shedden, Sam (8 June 2014). \"How Do You Want Me to Do It? Does It Have to Look like an Accident? – an Assassin Selling a Hit on the Net; Revealed Inside the Deep Web\". Sunday Mail. Archived from the original on 1 March 2020. Retrieved 5 May 2017.\n\n^ Jump up to: a b Ben-Itzhak, Yuval (18 April 2008). \"Infosecurity 2008 – New defence strategy in battle against e-crime\". ComputerWeekly. Reed Business Information. Archived from the original on 4 June 2008. Retrieved 20 April 2008.\n\n^ Christey, Steve & Martin, Robert A. (22 May 2007). \"Vulnerability Type Distributions in CVE (version 1.1)\". MITRE Corporation. Archived from the original on 17 March 2013. Retrieved 7 June 2008.\n\n^ \"Symantec Internet Security Threat Report: Trends for July–December 2007 (Executive Summary)\" (PDF). XIII. Symantec Corp. April 2008: 1–2. Archived (PDF) from the original on 25 June 2008. Retrieved 11 May 2008. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ \"Google searches web's dark side\". BBC News. 11 May 2007. Archived from the original on 7 March 2008. Retrieved 26 April 2008.\n\n^ \"Security Threat Report (Q1 2008)\" (PDF). Sophos. Archived (PDF) from the original on 31 December 2013. Retrieved 24 April 2008.\n\n^ \"Security threat report\" (PDF). Sophos. July 2008. Archived (PDF) from the original on 31 December 2013. Retrieved 24 August 2008.\n\n^ Fogie, Seth, Jeremiah Grossman, Robert Hansen, and Anton Rager (2007). Cross Site Scripting Attacks: XSS Exploits and Defense (PDF). Syngress, Elsevier Science & Technology. pp. 68–69, 127. ISBN 978-1-59749-154-9. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008.{{cite book}}:  CS1 maint: multiple names: authors list (link)\n\n^ O'Reilly, Tim (30 September 2005). \"What Is Web 2.0\". O'Reilly Media. pp. 4–5. Archived from the original on 15 April 2013. Retrieved 4 June 2008. and AJAX web applications can introduce security vulnerabilities like \"client-side security controls, increased attack surfaces, and new possibilities for Cross-Site Scripting (XSS)\", in Ritchie, Paul (March 2007). \"The security risks of AJAX/web 2.0 applications\" (PDF). Infosecurity. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008. which cites Hayre, Jaswinder S. & Kelath, Jayasankar (22 June 2006). \"Ajax Security Basics\". SecurityFocus. Archived from the original on 15 May 2008. Retrieved 6 June 2008.\n\n^ Berinato, Scott (1 January 2007). \"Software Vulnerability Disclosure: The Chilling Effect\". CSO. CXO Media. p. 7. Archived from the original on 18 April 2008. Retrieved 7 June 2008.\n\n^ \"2012 Global Losses From phishing Estimated At $1.5 Bn\". FirstPost. 20 February 2013. Archived from the original on 21 December 2014. Retrieved 25 January 2019.\n\n^ Prince, Brian (9 April 2008). \"McAfee Governance, Risk and Compliance Business Unit\". eWEEK. Ziff Davis Enterprise Holdings. Retrieved 25 April 2008.\n\n^ Preston, Rob (12 April 2008). \"Down To Business: It's Past Time To Elevate The Infosec Conversation\". InformationWeek. United Business Media. Archived from the original on 14 April 2008. Retrieved 25 April 2008.\n\n^ Claburn, Thomas (6 February 2007). \"RSA's Coviello Predicts Security Consolidation\". InformationWeek. United Business Media. Archived from the original on 7 February 2009. Retrieved 25 April 2008.\n\n^ Duffy Marsan, Carolyn (9 April 2008). \"How the iPhone is killing the 'Net\". Network World. IDG. Archived from the original on 14 April 2008. Retrieved 17 April 2008.\n\n^ boyd, danah; Hargittai, Eszter (July 2010). \"Facebook privacy settings: Who cares?\". First Monday. 15 (8). doi:10.5210/fm.v15i8.3086.\n\n^ \"W3C Technical Reports and Publications\". W3C. Retrieved 19 January 2009.\n\n^ \"IETF RFC page\". IETF. Archived from the original on 2 February 2009. Retrieved 19 January 2009.\n\n^ \"Search for World Wide Web in ISO standards\". ISO. Retrieved 19 January 2009.\n\n^ \"Ecma formal publications\". Ecma. Retrieved 19 January 2009.\n\n^ \"Unicode Technical Reports\". Unicode Consortium. Retrieved 19 January 2009.\n\n^ \"IANA home page\". IANA. Retrieved 19 January 2009.\n\n^ Sikos, Leslie (2011). Web standards – Mastering HTML5, CSS3, and XML. Apress. ISBN 978-1-4302-4041-9. Archived from the original on 2 April 2015. Retrieved 12 March 2019.\n\n^ Jump up to: a b c \"Web Accessibility Initiative (WAI)\". World Wide Web Consortium. Archived from the original on 2 April 2009. Retrieved 7 April 2009.\n\n^ \"Developing a Web Accessibility Business Case for Your Organization: Overview\". World Wide Web Consortium. Archived from the original on 14 April 2009. Retrieved 7 April 2009.\n\n^ \"Legal and Policy Factors in Developing a Web Accessibility Business Case for Your Organization\". World Wide Web Consortium. Archived from the original on 5 April 2009. Retrieved 7 April 2009.\n\n^ \"Web Content Accessibility Guidelines (WCAG) Overview\". World Wide Web Consortium. Archived from the original on 1 April 2009. Retrieved 7 April 2009.\n\n^ \"Internationalization (I18n) Activity\". World Wide Web Consortium. Archived from the original on 16 April 2009. Retrieved 10 April 2009.\n\n^ Davis, Mark (5 April 2008). \"Moving to Unicode 5.1\". Archived from the original on 21 May 2009. Retrieved 10 April 2009.\n\n^ \"World Wide Web Consortium Supports the IETF URI Standard and IRI Proposed Standard\" (Press release). World Wide Web Consortium. 26 January 2005. Archived from the original on 7 February 2009. Retrieved 10 April 2009.\n\n\nFurther reading\nBerners-Lee, Tim; Bray, Tim; Connolly, Dan; Cotton, Paul; Fielding, Roy; Jeckle, Mario; Lilley, Chris; Mendelsohn, Noah; Orchard, David; Walsh, Norman; Williams, Stuart (15 December 2004). \"Architecture of the World Wide Web, Volume One\". Version 20041215. W3C. {{cite journal}}: Cite journal requires |journal= (help)\nBerners-Lee, Tim (August 1996). \"The World Wide Web: Past, Present and Future\". {{cite journal}}: Cite journal requires |journal= (help)\nBrügger, Niels, ed, Web25: Histories from the first 25 years of the World Wide Web (Peter Lang, 2017).\nFielding, R.; Gettys, J.; Mogul, J.; Frystyk, H.; Masinter, L.; Leach, P.; Berners-Lee, T. (June 1999). \"Hypertext Transfer Protocol – HTTP/1.1\". Request For Comments 2616. Information Sciences Institute. {{cite journal}}: Cite journal requires |journal= (help)\nNiels Brügger, ed. Web History (2010) 362 pages; Historical perspective on the World Wide Web, including issues of culture, content, and preservation.\nPolo, Luciano (2003). \"World Wide Web Technology Architecture: A Conceptual Analysis\". New Devices.\nSkau, H.O. (March 1990). \"The World Wide Web and Health Information\". New Devices.\nExternal links\n.mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:#f9f9f9;display:flow-root}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1}}@media(min-width:720px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}}.mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0}\n\n\nWikimedia Commons has media related to World Wide Web.\n\n\n\n\nWikibooks has a book on the topic of: Nets, Webs and the Information Infrastructure\n\nThe first website\nEarly archive of the first Web site\nInternet Statistics: Growth and Usage of the Web and the Internet\nLiving Internet A comprehensive history of the Internet, including the World Wide Web\nWeb Design and Development at Curlie\nWorld Wide Web Consortium (W3C)\nW3C Recommendations Reduce \"World Wide Wait\"\nWorld Wide Web Size Daily estimated size of the World Wide Web\nAntonio A. Casilli, Some Elements for a Sociology of Online Interactions\nThe Erdős Webgraph Server Archived 1 March 2021 at the Wayback Machine offers weekly updated graph representation of a constantly increasing fraction of the WWW\nThe 25th Anniversary of the World Wide Web Archived 11 July 2021 at the Wayback Machine is an animated video produced by USAID and TechChange which explores the role of the WWW in addressing extreme poverty\n.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" · \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"}.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteTelecommunicationsHistory\nBeacon\nBroadcasting\nCable protection system\nCable TV\nCommunications satellite\nComputer network\nData compression\naudio\nDCT\nimage\nvideo\nDigital media\nInternet video\nonline video platform\nsocial media\nstreaming\nDrums\nEdholm's law\nElectrical telegraph\nFax\nHeliographs\nHydraulic telegraph\nInformation Age\nInformation revolution\nInternet\nMass media\nMobile phone\nSmartphone\nOptical telecommunication\nOptical telegraphy\nPager\nPhotophone\nPrepaid mobile phone\nRadio\nRadiotelephone\nSatellite communications\nSemaphore\nSemiconductor\ndevice\nMOSFET\ntransistor\nSmoke signals\nTelecommunications history\nTelautograph\nTelegraphy\nTeleprinter (teletype)\nTelephone\nThe Telephone Cases\nTelevision\ndigital\nstreaming\nUndersea telegraph line\nVideotelephony\nWhistled language\nWireless revolution\nPioneers\nNasir Ahmed\nEdwin Howard Armstrong\nMohamed M. Atalla\nJohn Logie Baird\nPaul Baran\nJohn Bardeen\nAlexander Graham Bell\nEmile Berliner\nTim Berners-Lee\nFrancis Blake (telephone)\nJagadish Chandra Bose\nCharles Bourseul\nWalter Houser Brattain\nVint Cerf\nClaude Chappe\nYogen Dalal\nDaniel Davis Jr.\nDonald Davies\nAmos Dolbear\nThomas Edison\nLee de Forest\nPhilo Farnsworth\nReginald Fessenden\nElisha Gray\nOliver Heaviside\nRobert Hooke\nErna Schneider Hoover\nHarold Hopkins\nGardiner Greene Hubbard\nInternet pioneers\nBob Kahn\nDawon Kahng\nCharles K. Kao\nNarinder Singh Kapany\nHedy Lamarr\nInnocenzo Manzetti\nGuglielmo Marconi\nRobert Metcalfe\nAntonio Meucci\nSamuel Morse\nJun-ichi Nishizawa\nCharles Grafton Page\nRadia Perlman\nAlexander Stepanovich Popov\nTivadar Puskás\nJohann Philipp Reis\nClaude Shannon\nAlmon Brown Strowger\nHenry Sutton\nCharles Sumner Tainter\nNikola Tesla\nCamille Tissot\nAlfred Vail\nThomas A. Watson\nCharles Wheatstone\nVladimir K. Zworykin\nTransmissionmedia\nCoaxial cable\nFiber-optic communication\noptical fiber\nFree-space optical communication\nMolecular communication\nRadio waves\nwireless\nTransmission line\ndata transmission circuit\ntelecommunication circuit\nNetwork topologyand switching\nBandwidth\nLinks\nNodes\nterminal\nNetwork switching\ncircuit\npacket\nTelephone exchange\nMultiplexing\nSpace-division\nFrequency-division\nTime-division\nPolarization-division\nOrbital angular-momentum\nCode-division\nConcepts\nCommunication protocol\nComputer network\nData transmission\nStore and forward\nTelecommunications equipment\nTypes of network\nCellular network\nEthernet\nISDN\nLAN\nMobile\nNGN\nPublic Switched Telephone\nRadio\nTelevision\nTelex\nUUCP\nWAN\nWireless network\nNotable networks\nARPANET\nBITNET\nCYCLADES\nFidoNet\nInternet\nInternet2\nJANET\nNPL network\nToasternet\nUsenet\nLocations\nAfrica\nAmericas\nNorth\nSouth\nAntarctica\nAsia\nEurope\nOceania\n(Global telecommunications regulation bodies)\n\n Telecommunication portal\n Category\n Outline\n Commons\n\nshowvteWeb syndication\nHistory\nBlogging\nPodcasting\nVlogging\nWeb syndication technology\nTypes\nArt\nBloggernacle\nClassical music\nCorporate\nDream diary\nEdublog\nElectronic journal\nFake\nFamily\nFashion\nFood\nHealth\nLaw\nLifelog\nLitblog\nMP3\nNews\nPhotoblog\nPolice\nPolitical\nProject\nReverse\nTravel\nWarblog\nTechnologyGeneral\nBitTorrent\nFeed URI scheme\nFeatures\nLinkback\nPermalink\nPing\nPingback\nReblogging\nRefback\nRollback\nTrackback\nMechanism\nConversation threading\nGeotagging\nRSS enclosure\nSynchronization\nMemetics\nAtom feed\nData feed\nPhotofeed\nProduct feed\nRDF feed\nWeb feed\nRSS\nGeoRSS\nMRSS\nRSS TV\nSocial\nInter-process communication\nLivemark\nMashup\nReferencing\nRSS editor\nRSS tracking\nStreaming media\nStandard\nOML\nOPML\nRSS Advisory Board\nUsenet\nWorld Wide Web\nXBEL\nXOXO\nForm\nAudio podcast\nEnhanced podcast\nMobilecast\nNarrowcasting\nPeercasting\nScreencast\nSlidecasting\nVideocast\nWebcomic\nWebtoon\nWeb series\n\nAnonymous blogging\nCollaborative blog\nColumnist\nInstant messaging\nLiveblogging\nMicroblog\nMobile blogging\nRoblog\nSpam blog\nVideo blogging\nMotovlogging\nMediaAlternative media\nCarnivals\nFiction\nJournalism\nCitizen\nDatabase\nOnline diary\nSearch engines\nSideblog\nSoftware\nWeb directory\nMicromedia\nAggregation\nNews\nPoll\nReview\nSearch\nVideo\nAtom\nAtomPub\nBroadcatching\nHashtag\nNewsML\n1\nG2\nSocial communication\nSocial software\nWeb Slice\nRelated\nBlogosphere\nEscribitionist\nGlossary of blogging\nPay per click\nPosting style\nSlashdot effect\nSpam in blogs\nUses of podcasting\n\nshowvteSemantic WebBackground\nDatabases\nHypertext\nInternet\nOntologies\nSemantics\nSemantic networks\nWorld Wide Web\nSub-topics\nDataspaces\nHyperdata\nLinked data\nRule-based systems\nApplications\nSemantic analytics\nSemantic broker\nSemantic computing\nSemantic mapper\nSemantic matching\nSemantic publishing\nSemantic reasoner\nSemantic search\nSemantic service-oriented architecture\nSemantic wiki\nSolid\nRelated topics\nCollective intelligence\nDescription logic\nFolksonomy\nGeotagging\nInformation architecture\nKnowledge extraction\nKnowledge management\nKnowledge representation and reasoning\nLibrary 2.0\nDigital library\nDigital humanities\nMetadata\nReferences\nTopic map\nWeb 2.0\nWeb engineering\nWeb Science Trust\nStandardsSyntax and supporting technologies\nHTTP\nIRI\nURI\nRDF\ntriples\nRDF/XML\nJSON-LD\nTurtle\nTriG\nNotation3\nN-Triples\nTriX (no W3C standard)\nRRID\nSPARQL\nXML\nSemantic HTML\nSchemas, ontologies and rules\nCommon Logic\nOWL\nRDFS\nRule Interchange Format\nSemantic Web Rule Language\nALPS\nSHACL\nSemantic annotation\neRDF\nGRDDL\nMicrodata\nMicroformats\nRDFa\nSAWSDL\nFacebook Platform\nCommon vocabularies\nDOAP\nDublin Core\nFOAF\nSchema.org\nSIOC\nSKOS\nMicroformat vocabularies\nhAtom\nhCalendar\nhCard\nhProduct\nhRecipe\nhReview\n\nshowAuthority control National libraries\nSpain\nFrance (data)\nGermany\nIsrael\nUnited States\nLatvia\nCzech Republic\nOther\nFAST\nNational Archives (US)\n\n\n\n\n\n"

        }

    ],

    url: "https://en.wikipedia.org/wiki/World_Wide_Web"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dfc300dcb6508b71d51af8"),

    containJudge: false,

    desc: "https://www.amazon.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://www.amazon.com",

                links: "https://www.amazon.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"twotabsearchtextbox\"]",

                wait: NumberInt("0"),

                value: "computer"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-search-submit-button\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"s-pagination-next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("5"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"s-pagination-next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[1]/div[1]/span[1]/div[1]/div/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/h2[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_linktext",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2022 HP Stream 14 英寸高清显示屏,英特尔赛扬 N4020 双核处理器,4GB DDR4 内存,128GB 存储(64GB eMMC+64GB 卡),HDMI,WiFi,网络摄像头,蓝牙,1 年微 柔软 365 Win10 S | TGCD 套装 "

                            },

                            {

                                num: NumberInt("1"),

                                value: "2022 惠普 14 英寸高清笔记本电脑、Windows 11、英特尔赛扬双核处理器高达 2.80GHz、4GB 内存、64GB 固态硬盘、铬操作系统、钴蓝色(续订) "

                            },

                            {

                                num: NumberInt("2"),

                                value: "惠普 Elite 6300 台式电脑、英特尔酷睿 i7 处理器、16GB 内存、128GB M.2 SSD + 1TB 硬盘、WiFi 和蓝牙、无线键盘和鼠标、22 英寸 FHD LED 显示器、Windows 10 ( 续订) "

                            },

                            {

                                num: NumberInt("3"),

                                value: "Lenovo 联想 IdeaCentre AIO 3 AMD 一体机,24 英寸全高清显示屏,锐龙 5 5500U,16GB 内存,512GB 固态硬盘,DVD RW 驱动器,Windows 11 "

                            },

                            {

                                num: NumberInt("4"),

                                value: "戴尔 Optiplex 5040-SFF,酷睿 i5-6500 3.2GHz,8GB 内存,256GB 固态硬盘,DVD,Windows 10 Pro 64 位(续订)'] "

                            },

                            {

                                num: NumberInt("5"),

                                value: "联想 ThinkCentre M73 SFF 小型商用台式机、英特尔双核 i3-4130 3.4GHz、8GB 内存、500GB 硬盘、USB 3.0、WiFi、DVD、Windows 10 专业版(续订 ) ) "

                            },

                            {

                                num: NumberInt("6"),

                                value: "Dell Optiplex 7010 台式电脑 - 英特尔酷睿 i5 3.6GHz、16GB DDR3、500GB SSD、Windows 10 Pro 64 位、WiFi、USB 3.0、DVDRW、2X 显示端口（支持使用） "

                            },

                            {

                                num: NumberInt("7"),

                                value: "联想 11.6 英寸 300e Chromebook 触摸屏 LCD 2 合 1-联发科技 M8173C 四核 2.1GHz 4GB LPDDR3 32GB 闪存 Chrome OS 型号 81H000US(续订) "

                            },

                            {

                                num: NumberInt("8"),

                                value: "戴尔 Chromebook 11 3180 11.6 英寸 4GB | 16GB SSD 传统笔记本电脑(黑色)(续订) "

                            },

                            {

                                num: NumberInt("9"),

                                value: "DELL OPTIPLEX 390 DT 台式电脑，英特尔酷睿 I3-2100 3.1 GHz，8GB DDR3，1 TB，DVD，WIFI，HDMI，VGA，蓝牙 4.0，Windows 10 专业版 64 位（嵌入式） "

                            },

                            {

                                num: NumberInt("10"),

                                value: "迷你电脑 Windows 10 Pro 8GB DDR3 128GB SSD 英特尔赛扬 J3455 处理器(高达 2.3GHz)迷你电脑双显示屏,4K 高清千兆以太网 2.4G+5G 双频 WiFi BT 4.2 "

                            },

                            {

                                num: NumberInt("11"),

                                value: "Gateway 15.6 英寸 FHD 超薄笔记本电脑,四核奔腾银色 N5030 高达 3.1GHz,4GB 内存,128GB emMC,WiFi,蓝牙,木炭(续订) "

                            },

                            {

                                num: NumberInt("12"),

                                value: "Lenovo 联想 15.6 英寸 IdeaPad 1 笔记本电脑,AMD 双核处理器,15.6 英寸高清防眩光显示屏,Wi-Fi 6 和蓝牙 5.0,HDMI,Windows 11 家庭模式(20GB RAM | 1TB SSD) "

                            },

                            {

                                num: NumberInt("13"),

                                value: "ACEMAGICIAN Mini Micro PC Windows 11Pro, Intel 11th Gen 4 Cores N5095 (up to 2.9GHz), Small Portable Compact Desktop Computer 8GB RAM 256GB SSD Support 4K UHD,Dual Gigabit Ethernet,3 HDMI,Dual WiFi,BT "

                            },

                            {

                                num: NumberInt("14"),

                                value: "戴尔 Optiplex 7050 SFF 台式电脑英特尔 i7-7700 4 核 3.60GHz 32GB DDR4 1TB 固态硬盘 WiFi BT HDMI 决斗显示器支持 Windows 10 Pro 卓越状态(续订) "

                            },

                            {

                                num: NumberInt("15"),

                                value: "惠普 ProDesk 台式机 RGB 灯电脑英特尔酷睿 i5 6500 3.2 GHz 8GB RAM 256GB SSD Win 10 Pro 游戏电脑键盘和鼠标(续订) "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_linkAddress",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.amazon.com/-/zh/dp/B09QH6131Z/ref=sr_1_17?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-17"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.amazon.com/-/zh/dp/B0B3M3P6DB/ref=sr_1_18?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-18"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.amazon.com/-/zh/dp/B0977SQX9V/ref=sr_1_19?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-19"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.amazon.com/-/zh/dp/B09F75N1SH/ref=sr_1_20?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-20"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.amazon.com/-/zh/dp/B07N1TNKCY/ref=sr_1_21?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-21"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.amazon.com/-/zh/dp/B07798GCN7/ref=sr_1_17?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-17"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.amazon.com/-/zh/dp/B07NSG62QX/ref=sr_1_18?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-18"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.amazon.com/-/zh/dp/B07RJZMC49/ref=sr_1_19?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-19"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.amazon.com/-/zh/dp/B0BLP9B54N/ref=sr_1_20?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-20"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.amazon.com/-/zh/dp/B07DY47BQQ/ref=sr_1_21?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-21"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.amazon.com/-/zh/dp/B0BR9XDZ52/ref=sr_1_22?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-22"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.amazon.com/-/zh/dp/B0BQFJ5587/ref=sr_1_23?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-23"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.amazon.com/-/zh/dp/B0BMWBF3B1/ref=sr_1_24?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-24"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.amazon.com/-/zh/dp/B0BFGLSRMD/ref=sr_1_25?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-25"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.amazon.com/-/zh/dp/B08X1KKVCZ/ref=sr_1_26?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-26"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.amazon.com/-/zh/dp/B0B1JNY1WG/ref=sr_1_27?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-27"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.amazon.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.amazon.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "computer",

            value: "computer"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("5"),

            value: NumberInt("5")

        }

    ],

    links: "https://www.amazon.com",

    name: "Amazon product names and links",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_linktext",

            desc: "",

            type: "string",

            exampleValue: "2022 HP Stream 14 英寸高清显示屏,英特尔赛扬 N4020 双核处理器,4GB DDR4 内存,128GB 存储(64GB eMMC+64GB 卡),HDMI,WiFi,网络摄像头,蓝牙,1 年微 柔软 365 Win10 S | TGCD 套装 "

        },

        {

            id: NumberInt("1"),

            name: "para2_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://www.amazon.com/-/zh/dp/B09QH6131Z/ref=sr_1_17?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&crid=233WEIGBCHV44&keywords=computer&qid=1675502405&sprefix=computer%2Caps%2C1244&sr=8-17"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dfc34cdcb6508b71d51af9"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "computer"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Click Next Page",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("5"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Collection",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "product name",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "HP Laptop Computer ProBook 11 G1 Touchscreen Windows 11  Core i3 8GB 180GB SSDOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Little Big Planet Figure Sackboy Sackbot Console Kitty 3'' Toys 6'' SackboyOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("2"),

                                value: "FAST Intel Quad Core i5 Gaming PC Computer 16GB RAM 1TB HDD Win10 4GB GTX 1050TiOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Cheap Dell i7 4th Gen Desktop SFF 32GB RAM SSD / HDD Windows 10 PC Computer WIFIOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("4"),

                                value: "DELL 8FC8 Admin System BIOS password unlock service. One listing for ALL models!Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("5"),

                                value: "[NEW & SEALED] | Raspberry Pi 4 Computer Model B 8GB RAMOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("6"),

                                value: "HP Elitebook 840 G3 14\" TOUCHSCREEN  i7-6600U 2.6GHz 8GB RAM 128GB SSD Win 10 POpens in a new window or tab"

                            },

                            {

                                num: NumberInt("7"),

                                value: "1999 Pokemon Base Set: Choose Your Card! All Pokemon Available! Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("8"),

                                value: "✅COMPUTER✅HP ELITEDEK 705 G3 DESKTOP MINI AMD PRO A10-8770 8GB 512GB SSD WIN-10Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("9"),

                                value: "New ListingHP EliteDesk 800 G1 SFF Business Computer Core i7-4770 3.4GHz 240GB SSD 8GB RAMOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Lenovo ThinkCentre M910Q Mini Tiny Desktop PC Computer i5 6500T SSD Win 10 Pro Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Lenovo ThinkCentre M710 Mini Tiny Desktop PC Computer i5 7400T SSD Win 10 Pro Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("12"),

                                value: "J1900 Quad Core 4 Ethernet  Lan x86  Firewall  PFsense Desktop Computer RouterOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("13"),

                                value: "GAMING DELL BUNDLE DESKTOP PC FULL SET COMPUTER SYSTEM INTEL i3 8GB 500GB GT 710Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Gaming PC Computer Intel Quad Core i5 8GB DDR3 500GB HDD WiFi Window10 AntivirusOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("15"),

                                value: "HP i3 4th Gen SFF Computer PC 16GB RAM 2TB HDD/SSD Windows 10 PC WIFIOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Dell Optiplex 7450 AIO Intel i5 7500 16GB RAM 512GB SSD 24\" FHD Win 10 ComputerOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("17"),

                                value: "HP Z820 Computer 20-Core 2.50GHz E5-2670 v2 128GB RAM 256GB SSD No OSOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Dell Optiplex 7460 AIO i5 8500 16GB RAM 512GB 24\" FHD Win 11 All in One ComputerOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Fast Gaming PC Computer Bundle Intel Quad Core i7 16GB 1TB 2GB Nvidia GT 710 W10Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Compact Computer Ms-dos Windows 95 98 Intel 566MHz CPU Isa USB RS-232 Lpt #W2Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Fanless Mini PC Intel Atom Z8350 ProcessorMini Computer Windows 10 Pro4GB LDD...Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Gaming PC i7 13700F 32GB DDR4 RAM RTX 3070 1TB SSD 2TB HDD Intel Windows 10 PCOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("23"),

                                value: "(Raspberry Pi 3 SUPERIOR ALTERNATIVE) Orange Pi 3 LTS Quad-Core 1.8GHz ARM 8GBOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("24"),

                                value: "DELL HP QUAD i5 4th GEN DESKTOP SFF 16GB RAM 480GB SSD WINDOWS 10 COMPUTER PCOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("25"),

                                value: "DELL Optiplex 780 USFF Intel Core 2 Duo 250GB 4GB RAM Mini PC Computer Windows11Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Gaming PC Computer Intel Quad Core i5 8GB DDR3 500GB HDD Windows 10 AntivirusOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("27"),

                                value: "HP ProDesk 400 G1 MT Desktop Computer i3-4130, 4GB, 500GB, W10P, RestoredOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Fast Dell DT Dual Screen Setup Computer Intel i5 16GB 512GB SSD 2TB HDD WIFIOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Dell OptiPlex Tower Computer PC Core i3 32GB RAM 2TB HDD/SSD Windows 10 PCOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("30"),

                                value: "WINDOWS 7 FAST DELL OPTIPLEX DESKTOP PC COMPUTER INTEL CORE 2 DUO 8GB 500GB WIFIOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Fast Gaming PC Computer Bundle Intel Quad Core i5 16GB 1TB Win 10 2GB GT710Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("32"),

                                value: "New ListingRaspberry Pi 3 B Plus (3B+) Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Gaming PC Bundle i7 i5 i3 Desktop Gaming Computer PC 16GB RAM RTX 3050 Windows11Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("34"),

                                value: "HP Z210 MT workstation computer Intel i7 32GB RAM 960GB SSD Win10 Pro WiFiOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("35"),

                                value: "PC Computer Dell OptiPlex 3060 MiniTower i5-8500 8/16GB RAM 256GB SSD DVDRW, VGOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Forex Day Trading Computer full Set PC Intel Core i7 16GB 2TB SSD SIX 6 MonitorsOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("37"),

                                value: "INTEL CPU 8GB DDR4 128GB SSD USB 3.0 HDMI WINDOWS 11 V340 MINI PC COMPUTEROpens in a new window or tab"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Dell OptiPlex Tower Computer PC Core i5 32GB RAM 2TB HDD/SSD Windows 10 PCOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Fast Trading i7 Quad Monitor Tower Computer PC Dell/HP 32GB 512SSD 2TB Win10 ProOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("40"),

                                value: "Linux Mint Desktop Computer: HP 3.20GHz i5, 500GB, 120GB SSD, 16GB RAM, DVD, PCOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Gaming PC Bundle i5 i3 Desktop Computer & Monitor 8GB RAM 1TB HDD SSD Win10 WiFiOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("42"),

                                value: "New - Raspberry Pi Model B+ 512MB, 700MHz - Single Board Computer  (RPi B Plus)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Gaming PC Computer Desktop PC Intel i5 8GB DDR3 500GB HDD WiFi WIN 10 AntivirusOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Dell Inspiron 24 5490 AIO Computer i5-10210 16GB 1.25TB HD 23.8\" FHD Touch W10HMOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("45"),

                                value: "HP J5N50UT Chromebox 4GB RAM 16GB Intel Celeron 2955U Mini PC Desktop ComputerOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("46"),

                                value: "FAST COMPUTER i5 4th QUAD DESKTOP TOWER PC &TFT SET 32GB WINDOWS 10 HDD & SSDOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("47"),

                                value: "FAST DELL QUAD CORE PC COMPUTER DESKTOP WINDOWS 10 WI-FI 8GB RAM 500GB HDDOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Desktop Gaming PC Bundle i7 i5 i3 2TB+480GB SSD 16GB RAM RTX 3050 Win10 + 19\"LCDOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Dell 7020 MT PC Tower Computer PC i7 32GB RAM 960GB SSD DVD-RW WiFi Windows 10Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("50"),

                                value: "Fast Gaming PC Computer Bundle Intel Quad Core i5 8GB 500GB Windows 11 2GB GT730Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Computer Set PC DELL HP 22\" TFT i3 Desktop SFF 8GB RAM 500GB HDD WINDOWS10 WiFiOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Dell OptiPlex DT Computer Core i3 i5 i7 16GB RAM 2TB HDD/SSD Windows 10 PC WiFiOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("53"),

                                value: "MINI COMPUTER PC 1GHZ WINDOWS 98 40GB HARD DRIVE RS-232 LPT PARALLEL PCMCIA TC70Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Fast Trading i5 Dual Monitor Tower Computer PC Dell 16GB RAM 512SSD 2TB WIFIOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("55"),

                                value: "PC Computer Bundle + 3 x 22\" Full HD Monitor i5 CPU 8-16GB Ram 240-1Tb SSD WifiOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("56"),

                                value: "FAST DELL QUAD CORE PC COMPUTER DESKTOP TOWER WINDOWS 10 WI-FI 8GB RAM 500GB HDDOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("57"),

                                value: "pi-top [4] Computer Design Code Make PT4GY3 Brand New UK StockOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("58"),

                                value: "FAST Intel Quad Core i5 Gaming PC Computer 16GB RAM 1TB HDD GTX 1630 Windows 10Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("59"),

                                value: "CHUWI LarkBox X Mini PC Windows 11 Tiny Desktop Computer AMD Ryzen 7 3750U 8+256Opens in a new window or tab"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "product address",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.ebay.com/itm/324106350107?epid=218948554&hash=item4b763e6e1b:g:7sMAAOSwlNtjyCGJ&amdata=enc%3AAQAHAAAA0Kv%2BWjTheQ9TMxWam%2Bo22kbG%2BOLTP0KOrmksUtV0QA2U8RQGCHObZGbCC8FVmUW8mzqL3dLUpUjpqSjvxhAyU1CnK60E3Z0bmO5r3JO3WlCLGTKPlvYplfZGxFLAwVrO0jijP34ub8sKMs5F8LliIgnnvAJpbmdd0O4T0fLanDTOvXBpj4ri7s%2BmsD3XVx6qJ4L0Oo%2FEIyFJJfkwQ%2FZNwlu3pSJZdsKPs%2BsDkr25tBFdH6hF49qIF42RHFbVKOc5O5so7hHSAhFGONNiXmWPtbo%3D%7Ctkp%3ABFBMlP6H-MJh"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.ebay.com/itm/184870108514?hash=item2b0b1dfd62:g:MQkAAOSwcnNgwHAg&amdata=enc%3AAQAHAAAA4Lw%2BZZnvPrcPGS8GUKtnS0XWk6qJQke2T9irm%2FT%2FQ6WunWx9s8FkFV%2BVRCMPLK8gR9ic63uIScRAxPQdXaUaKRjRHZz4MGHdlEJ8d7cIyMYp%2Fdv8CR1y9CQ0nfJdlNrQWtBCoIbTmNeAwOka4C1RycCvOPGCOxjrtvADbvB8chq4GjlXT3hN7Lk%2B9WY6PFuo0vQoShNJqh2SHza4OP86uRKh4TFWnBKRiMydQDMyaeIizzP5qz87UUbhaUKX0kKwcn%2BLu9b%2FqrikbWxmoSjI9CEQI7pQkQFSIxlBt1QBRmg8%7Ctkp%3ABFBMlP6H-MJh"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.ebay.com/itm/303765414163?hash=item46b9d46113:g:5LwAAOSwaaZhsIwt&amdata=enc%3AAQAHAAAA4OopyNwxH4Vidw1QrSDlt8gKmZcNWy0fZMtqVHVO6wirIdhz3PDoOJzgObRiwZaAqFgE6q0TZ6Vjc2DdD3sq2BsrOzbuoTP%2FnLQ5Z6%2F%2FjY9QcdlYTRnaFr9xE9IMBESfSfWQFSFCHY9DLJXMep%2FfnDrM%2F09xuJUcRqiQCP8hqLAtZY3rkGhk%2FVb1MJbSwR0To6erZGsJRx1QmmXbCBUXpGzsfd0VMZr7f%2BQzG3HsZm2dzLlwTZ5%2B5KnxTAVI%2B%2FFf7GAkvLfPIsXCBlJQVBDOxlcUu2M%2BnlLZzl7CPjqG%2F740%7Ctkp%3ABFBMlP6H-MJh"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.ebay.com/itm/255291787383?hash=item3b70938877:g:k8cAAOSwaxtiMdbD&amdata=enc%3AAQAHAAAA4HuApRFHP7Pe1bYwRqJf6BnjXxnAYfo8boOQPingKp1%2Bk6GkbGzF5USItWW9gsZ9Pp8gbGVbrAk6c%2FtIOPGMQn1Id8AOO5U4Y34hMqxQzXSlhliaqJYS1RpYVJ55jflS4m%2FhvLdNijayKWcdG6vb%2F7jKsAfPP%2FDpLEx5a9JxY1U8aw1HftSJdj1MV8hb%2F0bKp2qmdYJHHtvtiIZKQIjkYlP7gNH0ad9JujRVtqp%2BU5hsUnp6cOiGxK3UjN6hzZ6j%2BFyk8%2BAbsPCo9h6zWQl95jBPjN2YwBUA%2F46K5mOPzU7W%7Ctkp%3ABFBMlP6H-MJh"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.ebay.com/itm/294046987936?hash=item447690f6a0:g:5McAAOSw8~xgQeS4&amdata=enc%3AAQAHAAAAoAX9ytDbqheQz4Rz7VHBikTqhlo8kBRNOcM%2Fs%2FA9VXhdebh2QGkqqg9SOok3byiqY%2FJ1Leb%2BSWx61GguYlU4jybsgRNLcTVqEej4OxrZFzJJm65Pkej6GJmuBFZXVcMzzdf0FUgzPI15s3ghOW%2BcZRzTJQdooisb6Svq0DNIT7uZunNqOmaLa1WQHFQqLZZhbROk8oQzBUKnYUfZxUd%2Fkq4%3D%7Ctkp%3ABk9SR5T-h_jCYQ"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.ebay.com/itm/225329535445?epid=18047669553&hash=item3476afd9d5:g:bwQAAOSwcHZjxZOi&amdata=enc%3AAQAHAAAAoHSMRLzXMubDAvzXx8J3k7P%2BuB4CwfoiuMf5oIVL40C4JaA3HXzcAq4YyYb88vO2%2B7iKYtyv2iuqPjmfhdodgHPkAcQ5nDEWa38EcMHo4Yo8DZbjb0a%2BGLyaP8fk9zOugN8IvBWwgUZkQiDPgGAgnEZruEeX7rya%2BeHDNhs9VYlVNMtlDwdH9NZca3tlT2%2FmwkqHku2xTRabBAOQk6eHgzs%3D%7Ctkp%3ABk9SR5T-h_jCYQ"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.ebay.com/itm/325373593130?epid=10051234737&hash=item4bc1c7062a:g:EpAAAOSwwIFjQIqD&amdata=enc%3AAQAHAAAA4JxQeh7z61jcCcyCF4pNRQsNBUqRbL1fp07Naaxs4RjZUoAiR5n%2FQpS9eesvJRNYWi9cOIUB%2Ftyl8SN7aXyuPlVXPskA%2F7y%2FQY7R42uIj8RP1eNk8ibRKw6HEof0J81LJawdX4v0%2BwhluMqe2nVenkAM%2FJt1OchmHfy6xTAZxVr%2BurjQbWyJ2aM4c%2BfoFenUuGNd6S5vd4oWNCF%2BjnR6FbI3O%2B2%2Fu2Fa87BZx%2F9jRk2N5g7exXdkoq7IIUI0ai0Dw2vlFbHLqUbt%2BrkOVfyk80Gr3HIaVG4H6MAEuACP5oTk%7Ctkp%3ABk9SR5T-h_jCYQ"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.ebay.com/itm/144259997552?hash=item219690df70:g:0t8AAOSwFBhhc3f5&amdata=enc%3AAQAHAAAA4AsugDblUbroOAYenoUjH92PUMbwXOJwp9y%2B4kYiCTwG%2FUTQm7j9GRwQfhLaIx6869s5uc75ytw8VlLnz72t%2FRyFqNLS25gWeDo7bMzmbvoVxydTtNk9A1fQlXlLlup7t7Wz7%2BbupISUeX3cm7%2BFVXWm9v7AcQbMsumEdITNMorT7Heuu%2Butm1PmuA9SDDlQVV7RbZCogECef2A82Om54BZASA6Vj16lG%2BRmRS7PSBF4Hvk%2BfddJ8aBEpJ9vpu%2F3rMMU3%2Fxq0KkiIFZuxWw9cUhImPmWmDTBMbs6p%2FhQHfaJ%7Ctkp%3ABk9SR5T-h_jCYQ"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.ebay.com/itm/404097058383?epid=13040155816&hash=item5e160fc64f:g:vrIAAOSw~N1juvqe&amdata=enc%3AAQAHAAAA4D0Ig%2FJAMubXQ5GZMBe0vfm7OClz3LyNd1T24MBGU7yVId9StbojMBy%2FyHeSXYno4%2FJluVdSDU2ItEdPQAqvDTG7NEdp2ymqv7ZFtUA%2F1ofUBheCSl777NxahH%2FuCB4mVqSQuoR0eaoh1G5F9AiX1dt0%2BEt4tTJJFktSQKylUf8MGeUnu%2BewyETflB3hRQgKG1NEJEHl5YRK38lyDgxGXBsOloTQEcHl9iyn73mk%2B7d57WhWrH0iNIzD48laotZvjQyRQg%2FUps0C9sfRFAkgQmlFVPZAzUGwxDqwjlSBdGHd%7Ctkp%3ABk9SR5T-h_jCYQ"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.ebay.com/itm/195582906878?hash=item2d89a651fe:g:JZkAAOSw1Ktj3N-J&amdata=enc%3AAQAHAAAAoKLswVbxX4wyryXiiMic7nH8WuGIszb6NdMdi6ZqJLgJlBkFCSMyaGEc5IF93SMkVzDzVnvLH%2F9sYYldFgkIDx5sgmiBrLmi0MXDi5qbOVsxfVLuurgDpkFmudb1sQ891%2FrYVNjGmHO3A3CB48Zs4StoWQZj2CTZnVWXuy1p0wBNV6xgr3ypRtXtSRmG8DAF5okadpQRWlv%2FuhMhTwyXTiM%3D%7Ctkp%3ABk9SR5b-h_jCYQ"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.ebay.com/itm/255608574938?hash=item3b837553da:g:IRAAAOSwdOljrS11&amdata=enc%3AAQAHAAAA4L7SheBo8dTAN4DZZGRggdJwytWKlL8fIvffTrdScHg7s6wnxrVo7arxyuyhQ4oMseNk%2BPsoGtTRp9nMKwYstZFIktyPvbK%2FlcykBYKhc5f8%2FmtQ6fDLW1xZaPnKsyCKVLpMMugbsYdZDwedOKjc5cubEad8jPSBpIoHpCphXMBy99p%2FBX8D6gAfwK7GW%2Fylpf0kQU2uSC17qTG9WgaCl%2F1yJdMoXGxcCeUhUApPD%2BiDVT1zxzNQryOTS3Gz%2FeZNLkLWBQkToivr%2FCNZq9iyCb7yPCNry0mPhf08Z%2BN0MpxD%7Ctkp%3ABk9SR5b-h_jCYQ"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.ebay.com/itm/255652606232?hash=item3b86153118:g:hI8AAOSw2sxi~I7Y&amdata=enc%3AAQAHAAAA4MmGNIe7swscGGPvUyANBBacuN%2F0EBqTla3kC0KdYP38S8HhTn7DjvZvlojx9cTTOO6qESFwGEFx6ICjoWBksy1virSTCUI7wMDMrK6BTGUi1S54CrOjQ7ZdzAuMmV7WAgi06WC8tQWn8XRlZlv%2FqPJ8RWeHvXA3XFnNQELWYyJ5qhX9Vqqxc2MjB2mpjJBfiuhO0yP7vI5VMj3Vl3WZIY%2FvtE2A%2F0iVI7pryk1iWncMuwhjAvw3Fcl6Nx3prZvNxgstJmk7ZRnST3DaABJMRnDPjZRjqoCuPliT7YnJddIJ%7Ctkp%3ABk9SR5b-h_jCYQ"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.ebay.com/itm/266107996299?hash=item3df545c88b:g:uC4AAOSwxy5jKYNT&amdata=enc%3AAQAHAAAAoNHtSD8qFc6%2F4%2BffGapdwX3gna8UXyBhIyaQurdNJ4%2FD7ov6%2Bxv1ZNUQU5QH3pgtJ%2Bv4N0NSogXNDWzKBUUbCBRvExsYWT0WdNECdKWgE%2BdH5jrjfEFOH1YDBAp8DTP81YxMzOWw4h8MkK9rB7cfpiieUMvwBSV1O8xcR%2BveQvyt1YAO7%2BIpKPObNaD22IxRqJAH%2B2D02okXZ%2FxVvWOfHZ4%3D%7Ctkp%3ABk9SR5b-h_jCYQ"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.ebay.com/itm/292482933047?hash=item4419576137:g:b60AAOSw3NBjYBCN&amdata=enc%3AAQAHAAAA4P%2BuXGYCPLLBiUMRwXg3XVYv36tQ1f99vX4Blh5fKgdR6L08aI4SRkETd%2BqTPfTSOUHs4Wdou4RODKXaTEuELuF0PSe%2Bz9wsgG1Kny4CGR%2FE8ltBl0nHwgoJYDZw7NBaY0T7QOJf%2BxlHnP7KNaXIVzLQE8029rCgKmoNhxWJwkdSnj5NpWCJhrl37oFTuedi9Y2gv1PqqUIq0OzSMn6AsVSCqf3EZm0h1mgkq%2B8pSXPQo415T8ADoAMlIJT%2FKUMCaUCpbdt2bSrw7YaGwAb8D%2FyTkQ1j2M4QEgGe4AowaP3V%7Ctkp%3ABFBMlv6H-MJh"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.ebay.com/itm/265906088775?hash=item3de93ceb47:g:WGIAAOSwwXdjYO0~&amdata=enc%3AAQAHAAAA4NHdc10kLjXcLFveSSUcJT%2BNxCTdaQSAYJQUejytIaXHo5IBNQs4l1myPPZxvuVvFssqLpaVCWAK%2BaqJnwvCR8qKaMtfD%2Fv5NZwrc5C33PAJFI%2FlMTOBJVuC117JCTKUt6Vk1dmWITK041uvgPi81hmeG%2BUtMUaqTSFEzKzTP0YCpFOOYb8XehIGlcFTZGIUtsL%2BW5a3v%2F9LBeiINu%2BnIYrsf4ZvNQHzt5yy699vai4AIQLrg32gX1dKLR2ZFsGz77%2BQKt2XxKuM%2Bfn94A1EzuWmBRVID2adRRA3ZvE16coQ%7Ctkp%3ABFBMlv6H-MJh"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.ebay.com/itm/275365485268?hash=item401d0fdad4:g:2oIAAOSwcAxiubNl&amdata=enc%3AAQAHAAAA4Gmp4rkBHHVQ8MimeR3Ez9H%2FubM7cCJvykKYRD366HhjgIHOs4zbJmaxRX%2B7ilvps3cfDzVQgH8nlYeptsHA1Z3p90KGDNS2BOLX%2FUzKEQiB%2BwffHCYhnRHuYsQgXwrPw8y7HQhHXanDrk4RMfxkSa5%2Bmh7fdYf7nYcCzNDH739lJ1ddHRNlTn3NDnZsVdJzJ7ehQHLz7ozSlH2AeuogCCRJ%2BqKvR7Fl6cGmmb35b3XSLqdqmYdzA43QME%2FnxBgWYI8%2FjNR0xXutAk0kVTEDkSwVa7QDir1djGVdQZQJ2ruO%7Ctkp%3ABFBMlv6H-MJh"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.ebay.com/itm/255873243553?epid=23050676507&hash=item3b933bd9a1:g:z7kAAOSwH0VjlIaB&amdata=enc%3AAQAHAAAA4H2RpNZ8M67ERAZzYsIsES977KtrMtWRdHrNDg9lTI6TAcr%2F0OYYPvM%2Byx0Xjc%2B2oZcgk5RIHGcGyB1D4OyG8frEpbMVD1sUPROW70nZhA6NQ7WP2LjxzoghohrZG%2FFATFogNHnpgM6e%2B3Qj%2FAExEmDSyiPZCf2VNCINN4L4uwNSMtyAiDpKS%2FcAy0pnC%2BuLgchaxKakFn8SSvyxWTSjcpkrF19kxBTkEj0v37VrC8zCHC1xR4MFkiQQFc0JjSP%2BxaWL67rUGdiBz9Tgn7WDpAwdCR3d90Hjfk5NazVXS5e8%7Ctkp%3ABk9SR5b-h_jCYQ"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.ebay.com/itm/383809689955?hash=item595cd71963:g:6NAAAOSwg4JhCKuJ&amdata=enc%3AAQAHAAAA4JulVCJW%2FyyFYz3dCh62u2etq7HLYWXICDkBOVuM6Dr4%2FhAJGEoyzwauRaVtSSTpo8pU460iDIOvKLhwtNFDJmToLPfRq2CvVfayVn4800ptLZ%2BtOVUXXgN6hazMirG5F3bNpvgmzooZVqx%2BP6iWj%2FZPWsA2LnmBZc%2Fhx0%2FahgBDBTj4evJGYPu%2BVCrYwcBMgc53cpTHub2cI4ub3gibJi4v%2FVvTGZH3WR9scE6ckRzU92QNncpQFpSjwd3O7wM2f1KMe5J%2F5vFCV3CoxWXgs%2FeDyjx41SDtNRlPDBFXebEP%7Ctkp%3ABk9SR5b-h_jCYQ"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.ebay.com/itm/255883030813?hash=item3b93d1311d:g:nh0AAOSwjJJjnXlV&amdata=enc%3AAQAHAAAA4NkURa%2BzkwrzjKpCdTwhEnWf1V00ipI2K9QxvlPPOyGc6xXVXOGmRq8gCfn8MvAxtQcpQvT1e5jpiUUi4c7hUivVMSDS%2FcRbBNlw6CGsDpJ2k1OoVZD1O536IQB15VFhjUG08%2BdrmO6bNTwyHNKwonJ%2FkKV4p7BqJVyJ%2FgYpzJFW3Y6VAYL5abMk4JJzKBLKyUlJmpyyWnJdSp1FVjmJSSOmdqZCrkL5Sn1djyJEccfVl9urKHZ5HXmqNVMqCdmyX5ZeOVS%2B7kly7Z0kx59gQKT3B8IwuPYcF04uc%2BujVE%2Fo%7Ctkp%3ABk9SR5b-h_jCYQ"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.ebay.com/itm/303267474487?hash=item469c266c37:g:u20AAOSwyTpjlyGy&amdata=enc%3AAQAHAAAA4LDmL5ABqtxzBFuvwUrsRn6LWTcJY1amhcUZAlqesma%2BT%2B4oBWDTNHe9dwK9IWVpHYsxFRwVEyp8Ah9UTw8Rh%2Fxo9FUOAFy8NeRm5o3xdF0533eTLEvYKuvjnvGQKVpIJhFtyABUnFzEL5lsgQBRB%2BD2FZJl8H1vbSXecGG3dLm0isPAf56luYvm%2BCjBNesyq9N6wjIbXwZsSwxrxVH45u3I6v8Sy9JVWwikje1fWGQPElhrZEmfSlNx0H3KpZXBX6066ylF%2FIJfhWuDl70I%2B78uLDOjCC5qD0n3bO%2FqHjdl%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://www.ebay.com/itm/274082367984?hash=item3fd09509f0:g:cTgAAOSwcbRbpVCE&amdata=enc%3AAQAHAAAAoOHNWlAST0%2FQEfKszR0XBSHDh4rrqNGbe%2FwGu9BJQBhd3eOYMVfcgTMx4gZjmKaBhwEBbtYhttxKg1ehT2PnC4RjDS8BleIDBWyE%2Fgc0%2FPRYvnM9m3ka%2FR%2BaqApZ0dQTiVCC3sO2Rg94bVZKIJcozd9XhtLvBf%2BRk5hfTF6BBh7nmv4pFtgiSiTOpWCQhJUBR0JDMzO%2BnVOGdbrIAUHIDR4%3D%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://www.ebay.com/itm/374456349625?hash=item572f5673b9:g:UK0AAOSwFNRjwDjX&amdata=enc%3AAQAHAAAA4LKLx70lPJGqjNff6dV1lLozVijjio25K%2BJo4638k2ffMTc7ZnuDJeMNSbhfEQUfTur9U3lp5VvkA83BvPlxMLqdsUDgI9%2ByBixDgajIWqNK6khnV4sj6y5rCG9xftuzFfVwEJVA5nUtmsxRLX1B062petN1TVX7FTjtOizomjESiXfeiLMZv%2FsCuDUotm4jfx3Dp8F4tzFQQJCIzJuH%2F%2BYKfFmfncMCY4hLKw0puoER29ltLHfe4reJmM%2FSz3HWJDg1MsEsgu2J8e8lwWG7dBI1KnmfZnhFiLMNyu%2BEaE7p%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://www.ebay.com/itm/125728671794?hash=item1d46034832:g:6S8AAOSwodpjyk~5&amdata=enc%3AAQAHAAAA4FC37a3mUiaT21pgFnYhcMAUbixCcqIgnXhQSeApp6Av6RJLDWiNP4BVUbqYiXvxLg5n7o62R0W0rH4jcNBkMQrCpE0k9MdvDOe4R5AyLGQTmW9ZJaMFUdMvv%2Fp6sxiiM%2B0mATLeOsDpfgZddJS26RhdqwK4h96wb%2FUKQtT2YeFeJ%2Bb8cDLdP3n2qsKBPWeA%2FaqCqzrUSmElHgEStAO8%2FN2rkkPhC9Z7Q8GKvvxMcmRelnQ2yaS6nkEHJhtC6wDcAqCQPK3KtfZ5Aj6KNGyD%2Br9hI%2F7wxhvNVZfWYIQltv6N%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://www.ebay.com/itm/144913389857?hash=item21bd82d921:g:-TYAAOSwHcljzzSW&amdata=enc%3AAQAHAAAAoDtFwAOq5%2BtP0Qc1MMvT6TNJrVbmf55MPb63WH1tINZyKIpoe6GJT7uKk0AtN0UAHqm1zWpEPMaK2wo%2FUjAHPqdnZSotNLAI%2FuQ1pstI305Ph4q3oArTA%2Bl5QFby1SmoMrrR%2BbwMogkXqAZPZ6oDV%2FK998KvfzGok5l4JTFLi3Xfb6Z131UNTMIffyWlLWTDYiPJbVLySs4HGsW97npSNEM%3D%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://www.ebay.com/itm/185609134672?hash=item2b372aa250:g:xPkAAOSwo2FjP~tj&amdata=enc%3AAQAHAAAA4EN80%2FIsi23f0Zr7to4qpwyQXOMIZXCDDc128YNScuM4npd%2B2KHnhFsqw1%2Fv8IPkpcDj1o%2FdGB0c7L48b%2BpAVCIIQ0UgiepT0NofR2Gbd8vs%2FYDm1m0l7513rPpVlGTGoh4OVJIhK5QL2Csurpe8nt3tgWTIgKxhfBIVaQWZ%2F13NWXdRiqLHtqwVoaD2zAKZ%2BbiiK7Mb%2Faoinq06NtT9j6Zh7DYpA6nlPO27FXvzQukh3sIRKVXVIYcyEYP2AO%2BgsGA82CvoeUN5MeGoTXj59mimrXnDGWAfYk7etXLCUeWg%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://www.ebay.com/itm/125582856799?hash=item1d3d52525f:g:MKEAAOSwuk1jW4TH&amdata=enc%3AAQAHAAAA4P6QsHvFfCmkgFDiHw24V0ESrPHlTV5Y8HU2g8%2Ftalr7LaBL6om8OaIXlmLRLrR04WScqYKeXaefO1uUVy92DLqDdM%2BCgpUKf3I7fVyplBDEUJtJAOhrd3d1OCGiqt4xXkQBMAX7y7qX81Njnj3586abouodTO4b1O%2FWVwlmdHpBmMKGqeU4t%2FWd6PUkF7WXl8%2BOE1YnHUEKXbKdqzYPZtNv%2FBg4e211Sl2QKmfE0j%2B1sqUz4HK%2BSPpah6jN5zgVkroFvRB2oJmQKMijhj%2FttfuxJrpYtIRAEsMu%2FiSDgr5t%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://www.ebay.com/itm/265372518746?hash=item3dc96f495a:g:SsAAAOSw2SRjpEnb&amdata=enc%3AAQAHAAAA4A1EkLGBbr%2FSFre%2BXAGRXXvchX%2BRkcku0JQeKRstJvVtqt4qWVJWtXX3b6CGXiY08e7Fs%2Blv6vEgEOC7HXe6%2B1p2243C6szQOw0LjzZkpBA2mJwVe7icUDV4vQHd%2BFDI9bvUlYNxmtF%2BEMm13tmB%2BONIVc2kA6aL2LiwLbIl4OCbUN7Yl71Iqq3n8%2FMJi4kUlf8bJE9tEPjpDfdyJa%2BIhINKsFrqk8Yqvc%2FsjS9Z8smlKqR9iNF7H1KEk%2Bcz1HZ0A6wqSp643Gd8dZ082qEdVEb5smna%2FROrscvUSBcWMFME%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://www.ebay.com/itm/115444599374?hash=item1ae108ca4e:g:iJQAAOSw32diuf4G&amdata=enc%3AAQAHAAAA0MZiEJDSl4iNlZpGFRQqhhaYnTZbBdcC4t9LQPT08GbYZrhwtcVZ5E%2BwbqdQ1mw7KFwXf068EDISWCsTmNhthUYCNIvBayIDhkHSM%2Ft%2F5BH8NQfHiMjyrWR%2FaHit%2F4vcUpdMhFiTnAJNzpD37W8bw59axQMQbDJ98D0jl%2FsvjgKecMhAo55IrpjUDGRPTwx0ZkS0eLX0N0p3n5OW8lKXbV890Ja1Ax8by3n1gELC5T08eSJ8eeiHcIHUYIFSTXpM6kkWusY1gkhgsyeU0iFGEmQ%3D%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://www.ebay.com/itm/223172033000?hash=item33f616f9e8:g:0UAAAOSwIIFivtl-&amdata=enc%3AAQAHAAAA4OLXspPwytzQG%2FNuUHQs%2FhLJINFU5%2Fk9Rx1l56t8SnKg4kunmubB1gPvPZM9wQTYPHXfmF2kqOUnsb%2B%2FASB901zXbC6j9N0iLIxYMM9eESIZKHRuzR3aCexQdPQtxjHWQdyx6pDoLHN5Rpr4afMMRe4DeqHofpeKghic0xLfrzE4UYKrW7e7REZyuSthY0fEOAxJI%2BZta%2BF%2FS3TXTmkdPvy6Q%2F8M7DSG64b2kVff6KCqc99MeXWePZodUJoGv%2BF0TqsEyXDJErbuT023gQ%2FTsMiezLGCe1JThaOLeylSu6aX%7Ctkp%3ABFBMmP6H-MJh"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://www.ebay.com/itm/275432199152?hash=item402109d3f0:g:aMsAAOSwW0Ji~kVp&amdata=enc%3AAQAHAAAA4B9G5yjp1jODMzYhbW2LqLVtfUlGajwGcuXPSj0Cq%2BgEhKtH%2FuWxsJm73tq%2BFHbpHXq%2BD8cJrY1UErhDdd5LVJlX%2BRYWlosw5%2BCBJRVIn3J3Y6j0IBZLtoTsv990QPwTb8NFSt8SycH97NO5k%2FHc7UXQzYK%2Bw5XiP2pPI3HwqR4sOrAN8%2BUQ6usQ4CzSggjXkHw2MbNKWgflIAz%2BYW5xKUG6Gs%2BKy5zGJ61t4ukYkO2kRcrldxVlOlNfB21o%2BWU4HxukI5jaFpfLr%2FuZWCNK4gs%2FMGFJQ6E7dpssRV%2B6yLSk%7Ctkp%3ABFBMmP6H-MJh"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://www.ebay.com/itm/292512179602?epid=2238456505&hash=item441b15a592:g:MswAAOSw-btaxjWs&amdata=enc%3AAQAHAAAA4N38XnchaKyCEv3uoivjxnYr49xVb5tMutSOcfivF1%2FrDEZJmvRH9J9kDJiB40FQ8v1D%2BmaAu4LM94fO9rqlK95%2FoTn5vaxFD2BJic8VCfCo82YK4HBKX5VY90RNwAVRAzlGLQKnxGBDcpQBHmGO8LVJOIGk2lPeDbq7Wy7qEhNTnfN3biH3pwa4VWWKaaWS0weMV2w9TwpLgeiNXgjxQJm32udeouUj6wovBcd%2F%2B8aNMuxojR9omn1tdYbKGBBJaebpO1aLXohWT07CMVe9pUYiIDDYfFmHBL0bXuIHtKz7%7Ctkp%3ABFBMmP6H-MJh"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://www.ebay.com/itm/224450136332?hash=item344245490c:g:7G8AAOSw061ft9Yq&amdata=enc%3AAQAHAAAA4DYnUCy%2BL26Lhn6SgJ%2Br0lmhSyFU5vJTk1nWbL7QK868tsfZw5Pr%2B78buc5OH%2BFqGfPbXCj4PAIzSGLRln9%2BSG7TLOvcYUHSsVobYgh%2BpBBE%2BOfqRS%2B1RkLOjavVWMVW5WLahLmoZNSbdQ%2BikSGguEra8gwh%2Bk0rUwuANJKGWCKsV9ZrDugp6EFdd1WM80mMxuEEbXxFKLwMJHTPu8Hh%2Bt0tr95quzI3xPbBSsINoBIIEAwEgE0%2FmqddgF52xmmTQgI69bU%2BjrUoTX2hqnhLkr%2FXjomcZfC78m3ZLHChHQLL%7Ctkp%3ABFBMmP6H-MJh"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://www.ebay.com/itm/125751868178?epid=3029963667&hash=item1d47653b12:g:RnsAAOSwdRFj3LR3&amdata=enc%3AAQAHAAAAkHCahjlgqCxzLZv8SHXWSlhlvJwCovEbecsN9QHykvJ0e9geJHR2SvPohJj4k3Qluu%2FKWTRCB7EJ%2F6%2FUEiYeinwGBimwHxrngSL3JVtnh2OijkrtEcXEAf%2Biwo8zy0zVOtq%2BAgSrvhnFaxYlpMIyYPKwvkN%2FN%2BkYqWToQAeXM34%2F9SR4mzgywQjH8bUqoOrVNQ%3D%3D%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://www.ebay.com/itm/304719006205?hash=item46f2ab09fd:g:TTMAAOSwr3hjhJYp&amdata=enc%3AAQAHAAAA4Gkkc3OS%2BTV1veoOVpYuMmNrINFeYA%2FbKdUwZclXV69Xf2U%2FijW4%2FTNyH5apDjbeP9I%2BST0dxJIqHeq3LYHyBugZWMEtsvIQK5BdyGsEcUDMTSlCjfddsGNA01qMeLQI5KogWT8W%2FYH7oVsBhHETe1bd%2BtdyDkylsmB2zypowyU4LV17zLhU3Ccy%2B84ELpxaVQ36FVr8TQM7Jx7O4V4DAL9NcYpsSUQV0yO%2Ft9Vk4OPBUKpZWu6houG6rfIUOCTLU1LUBRlVYoMwDrqjbUC5cZRdApbhsKgpHOj6ESl8beRH%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://www.ebay.com/itm/234711377986?hash=item36a5e36842:g:rYwAAOSw6SJjMzsD&amdata=enc%3AAQAHAAAAoJzde63Bz%2FZD0fOeAJod8i5W45iQpYGXlkmNtZ6d0tTK8V%2BNQxUrAdWq9f0CX6WnJgDXm4TLYMtdgQOqKrD3tqDfX2jACrNDdrAjGW6tJZ2T2t74pi%2BhvT3D%2Bz37UyQqy%2FBkunuRADArPE0eURVM%2BOWwk%2F69vR1HYwJGPzr0FnrT7x99ULhFqipCEryvygR6WBbcVvL8ikApqcNib7TU4ok%3D%7Ctkp%3ABk9SR5j-h_jCYQ"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://www.ebay.com/itm/115678277362?epid=6055699538&hash=item1aeef66ef2:g:o3YAAOSwQi9jyTNF&amdata=enc%3AAQAHAAAA4DdhnUovD07IfzTnWc45YVaZUfebsZfVlg0DOjOF16mpenX%2Buq1x4c6Grq%2BAwQMkwaXF6IptLCsW0lt8diy7OXAeGI4QMmtkQlR2tV11wnSyNdfQ1kng29orzT3W4NUgvYsVIw8SZWpL1U0r1m7Xj9FigmpEH%2BTnL29hzrT6297hFhkV7gnRykcaD24gVS2Tc35tdrPcWggPGK1jZaYvXXea9FZ14KiVq8grP5KhP8%2BJLvS%2F2vrz9IrnNeu9eKZ0dpEVSVx5KQILYRImnbBrVijmKRcN0wTIVSk%2Bvp4O3%2FNu%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://www.ebay.com/itm/275047138035?hash=item400a1642f3:g:FD0AAOSwoyBianIq&amdata=enc%3AAQAHAAAA4Ma2m8PXTrQ5u8KB2Zhe7ivYnzKMDO%2BzdM%2FsjpQbwkp2Hm3Z78XnsiLfCm3tyiZoDbxqoBvlB0W4C02dXJ72jX%2BzinO%2B%2Bg4MPJz%2BfccGFWTnbFcxFYuGoFaBUeyQ%2FOiLqcpmYAVl8QzDqbeIufATInChDl2LinCoiDkzV3p747hDwPDlew%2Bw6wFwegMGZfTuX1yHzLTXPMmhBNeDo4VQ%2BH8nmtLIn01PGI1jKZuaela%2FIu5o4cwYoDBc52ZeEKMcpgtClmV0qqU%2Fep2Wx%2F3qsZDFKZq0HWxrnqOPm69t%2FluA%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://www.ebay.com/itm/275394373901?hash=item401ec8a90d:g:W2kAAOSw-kpirBpn&amdata=enc%3AAQAHAAAAoOm3l4QrAiUEj%2BH2SVvfG0na3Vj06Kc7mt%2BSpmgzF3I2YTKmbRNN0krIz2Dv1WmvQLB0C0g5QNMVTRUbb%2F%2FUV8WapFxU3OXTVxQIMIvCxIG1qDkevJnnv0Fknmj8gPqfz1Ns7vs3AGIb2y0J%2FDW8OmKLc2gvtIzyPIr0lBXF62sHcxBgHppdfddzM0jzQe5wdF8nWA6zDeTua5KIZrGfLOc%3D%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://www.ebay.com/itm/255690426781?hash=item3b8856499d:g:aMsAAOSwW0Ji~kVp&amdata=enc%3AAQAHAAAA4CgJooKbRWB6b6i0j6hOyel0l0L7hYPOW9iW7xA4X9i6y0dsq97WQqL0HwLHTRBdRl1icqKx%2FabqkV%2Bj57wRBgsI4xhQoZYbj8SrmVfeDnM2lnePQEGK2uxQrtSlMo8Ry94JkZ9QpETLOHFG%2F83Yc20kz8eS56U7ciitXhYm0dIIXJ9NigXVPlA9GFwqlvjOMF3hinxtm8yWvexqsZNY2QeDtnLsda11PiIOnqvehbGtcqVjZ8x18pBKgoFjXa0VCzZcQmQjXnDOtpfmcKRtSsPpZ3mR9vHmC9yPwinVHqcF%7Ctkp%3ABFBMmv6H-MJh"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://www.ebay.com/itm/265812959772?hash=item3de3afe21c:g:dqcAAOSwmShi66Qz&amdata=enc%3AAQAHAAAA4NF8PgN1bSi%2B6YRXe3foI8te04QNp5J5SenCv9nMwePoQM0QZgUOahLWGQacGr6BojLMGs6GVs64%2FXyehn6xiqeSLzK3ipVKC4e4Lr9amU6U87R0VXJOyzO5bb1Q4u3MDuQr84zfMr4wDZNIj62wKi66e0vFIv9jTfYH1hp1FSRmecFdkYjrg%2FwtUssBHGrOdB1bhEYKwWYt0450C01iMr8D%2BPPXQ7jRA%2FDs7fHWfeCfFxqWjm%2BGx7hUjp8shWTBFevMMg21K4j8du8ZmqjNsJRbe1%2F1gauC2OgzeAAryp3a%7Ctkp%3ABFBMmv6H-MJh"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://www.ebay.com/itm/284960385595?hash=item4258f66a3b:g:dYkAAOSw8HtjGo0Q&amdata=enc%3AAQAHAAAA0PIgxRdjMvsvQFLjOVylbR9OBYzf55i39op0CLrMHg4eU7USkoSeyum0frNnMDD7ybUKP7kzJt7i00z67XZQz1SRFwzPANfxsrO4qhetGRm2lxpVse9je0wgnq7bY%2FAOWNl3MyTPurmTsRafWUzWne%2BxRH8g6mwkR%2B%2Fyn8eshFftkUrGQuht04RUdvgOej13s8vD8999rLWbESWJ%2FBw3fxx4aU%2FTBREp3jiKWV7d49qIm%2Brrc5mdpdEdXZgUU0WNB7EmLrSz%2FmzWnhMjGrQ%2FK7U%3D%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://www.ebay.com/itm/155046660545?hash=item24198049c1:g:WP0AAOSwGudiseHk&amdata=enc%3AAQAHAAAA4FurkP8rprjPAEY9EenrxDgZQzdlcIh9nlh6%2FhgeWIlJHVsLYQ4gG1070DM1sVW2p01GJu3zX0vIuMlyLBB1x%2BS20U%2ByDWjzE3Kp5Y6awHgXu%2FDO5tw0CwMxRjsko9nSNEpIFqUe%2F69mrIjCUGUTzfEiFQN3zy6IhwCbaNGOYRYNIKTl1KITW9nq%2BGSWhRXkgwXIPnaLdqWf%2FoZ0CwfuIrjB4bFyFzabo1lI6RSDCQvAPFLz9GoGSTfc6mkE8mMCJhPPQ%2BYsESkb88qBW56xm3GdO7bCJRwjHw6%2F3hoUgyEZ%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("42"),

                                value: "https://www.ebay.com/itm/115690933316?hash=item1aefb78c44:g:UKcAAOSw28BjyVsz&amdata=enc%3AAQAHAAAA4N7DRnsawOfd7Np4wuTO4CesJwVBUS2HxY1xiUbdF8eYb612SJB5MHcYd0Hc9OqnmX2Sudn5YVA5IpbW%2BTkxra82bHEV9%2FSSn1Us8pyY%2F2Pp2JnEArAXrs4451ucAiTtviH3T%2FlC3P8SAMjxOFxXVrZnuFOwoaxSUvNM03HdcEehG7zc9n0oIYVXrBaEsYJkIn7Onc1DQS5b46hly6P%2F%2FKqAIzGR3aKIIG9VFnR32qFIiEZS3gfKNsbcUBkeNPHVvAoQG%2Fa7q0yHMoa8xzxZ54xvItPo%2BwPMor1jESHD65MD%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("43"),

                                value: "https://www.ebay.com/itm/265906100052?hash=item3de93d1754:g:vAsAAOSwpCJjYNfD&amdata=enc%3AAQAHAAAA4K4w93ycFLPq0cnanhhXRaaq9GDuNGgjFQLFi5ezJMhbOxF4IOxh5UlXzyc7sPKfXjlya9gQ9D3s5TjKClljJKgimY9ajZVbghd198bAeFaKaYBfngyDS57FAmdrP2f2wTj7k9%2BtKw9aoKaWKECDLUW8%2Fe9qYxgyKWoD1S7muLnD%2FrGrZ6JM2d19ZmQiO2T%2BzsgFH3hf3RGDSs9rHFJExDGAMqJdedbLjMXDtJQDfA1B%2BnHKlvN3xdz9QmfkptUsChQjm08T4%2BU4F22LOYCUJgfApwUorgs2qxAOMNDZvb7K%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("44"),

                                value: "https://www.ebay.com/itm/144381601330?hash=item219dd06632:g:pl4AAOSwW4Zh7Dp8&amdata=enc%3AAQAHAAAAoD4H%2BRQmylBpODE6f62u5bKx36RUS8%2FyfpqV2BYmsQS%2FLPltJJb7r0yMCArnoQvZNMBLcJ9%2BN%2F9UJsBfV6WNtJ6z1ovHfmKhILNZZQ%2BBnGk0j72fTDesNW4lH0feCLuiqdy1FqtttiAGuW56VVq8%2FlSKzFQwDEPDGu8BhZS%2BYCT2oKHDFkxJyOHNoCDtpFTdORRvz5fsG3BOxMOCPSNPtPU%3D%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("45"),

                                value: "https://www.ebay.com/itm/125746832360?hash=item1d471863e8:g:ZTMAAOSwZBBjwWJK&amdata=enc%3AAQAHAAAAoPQxnE3lfFqh5ME%2F%2BnHcxYLMOA5i%2FcE7U6WUCAz21PmZBeYfnzCOHiTM0uIz7o1FdbPvt5keN8uAgK6gQXy1FtcP8sA1mHKTUFRRS%2Ft3dfUP1BbH9TxDRdyAmV%2FC70zYJ7osmMKRXYYJMfgPZRAssGPwisqH779v%2FomIAbM8I65GNj1W8Z4u8ZKAlfmBFnQXeP%2FJSsJ82%2F776hch4nmPRpQ%3D%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("46"),

                                value: "https://www.ebay.com/itm/144085984090?hash=item218c31a35a:g:SGwAAOSwlZxg0ktM&amdata=enc%3AAQAHAAAA4O0R9KCmsxPTSM5mymYJ5xsXo9pGzqNvm8UdA30%2F55YHaQqy7PM0gQH2qXRFkjZxEte%2Fw0T6%2FPgPxeJk9kcnPmk82E8PLFL2zhMfoVdW9AzJxbzJlzRmwAL2lh1M2AaZ9rLCjJCmmgbTVTWVt4Lp4MHH3YwEYys7W0CsrwygLYfS%2BTOVyiJbGUjrDrBZoQAqDcPZ3dq12elPV5pGbYD%2FzJ7zj6YzOmx%2FDw2LEq0rQDWKlj5lrU5XaFBlVZgfoGLItSwScZAKf3KrJPj%2FgSi%2FDs6GTZ5CM0xK5gRtdtz4vffE%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("47"),

                                value: "https://www.ebay.com/itm/303247751667?hash=item469af979f3:g:xwUAAOSwmBJclMFd&amdata=enc%3AAQAHAAAA4IC8LdgAX5vBMHyRi6Rn8yEgFZTZBC4XB0GHXZ7Z5Pcq5D1pkfIsbr55tCWqgHGoTLnnlkIrqQFMqd%2FjE8iqIgRKWdr7OOxveuyXuACpEfkgAup2mOqkcUj3t7cx0e1l0pZ4mXZgypRzdqbuMDr35hCnaswxsQchTaDfyoDCIJ6MKDjG7PcdhFcdmVWs4a0IBLCVTGyZyRV9JXKcV6ESArDd5YCOjObpM7n%2Fxe8DdvO1BCNtBJlIN8bBSXDNj3jKinxliCLVOTRsMU8UUh6FQXWsooAqRjSPHsQ7Yga8TLAJ%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("48"),

                                value: "https://www.ebay.com/itm/295310884482?hash=item44c1e67e82:g:u28AAOSww75j13KT&amdata=enc%3AAQAHAAAA4AhBBqbhkzj7l4hrnBoNaDA7dLJbfo0i%2FgK%2Bzc1BaZlbI9iSbdROkeBhBo7NZ9jyX86dPzyA5QtKpENxT0saolrswIMe4ERScxtCiCamLqg65A%2ByGmMMisVrCIYbWYhWK5peGDIjya935N8gy79zzsrBJDlR6CVWNjEdIiBS4j74%2Bulm7DloI4O4VQEprAdleGeFQqDT6dQNzPLf11wswj5v%2BVGFoi5us4BZ%2Fr1tYDtOPi3eFayTkayF8Ioa5kUBuiqVWROPtjGOY1m2oWePPiVmjcp2ZXxWgbPhm9LEYYoF%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("49"),

                                value: "https://www.ebay.com/itm/234690240169?hash=item36a4a0dea9:g:QhcAAOSwU~xjG9kb&amdata=enc%3AAQAHAAAAoKzMHifspHcNl9eFovr9fRCe1fXok54ja3DrqqcNb2MSLt%2Fjr%2BPY3W%2B%2Fzn2dBLqymBubw%2FBKoIX8%2BmAHEUk9gnLNldn3%2BNemXrFZMtgMVuPev2jtzi2R6oxpRHO1BDxSHh9R14CzABtudwkNLswiWKIQfwM%2FjknVALXivtk%2FIJVBzv5ktUjYLdCqWZABENPuYFajxFGHZvjUq7%2B2k353HEk%3D%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("50"),

                                value: "https://www.ebay.com/itm/144611806693?hash=item21ab890de5:g:vl4AAOSwp~tisGmk&amdata=enc%3AAQAHAAAAoEj6RuSwhdac7KCJJEj%2FwitumAPGdrbnlAcfn3IhmO8I%2Bgnm4MJmRbEJ%2FO7TC%2BtTM0O05X%2BCjTMfY%2FHdembRibsA8zC7YIZmFDDZ0HpX%2FvA7GHqwl8t0otxAQ%2B5OJVut7wxSmM1B4%2FnUhKy7IuQ7e7U%2FTJ4k%2BRCQwTU%2FQCPdljVcF50KB5xehWOGyhgJGQVjINfG%2F1Jkb0qeAurzuiLFvfw%3D%7Ctkp%3ABk9SR5r-h_jCYQ"

                            },

                            {

                                num: NumberInt("51"),

                                value: "https://www.ebay.com/itm/144110916956?hash=item218dae155c:g:OIAAAOSwH3Fg7BRp&amdata=enc%3AAQAHAAAAoN3fkBuG%2B5%2Bmkafauc4GcTPa%2B1ho4%2FBwM62uNumAkIFwNp79vOlC1qzKCHYMZDcE%2BIIGsWMo0oOqLCunk0mLnJ1VNAb1Yq1kY6Y9I4DDxDO9GJqwpFn%2F4m2fNrW2tl2wLdP6xcehaqWIn3%2FE02s8byRPkOlsVD1DdpN65aKyIAxKiEsUgyTiHP4DJ4ZGZoLNhJBspIEWlPlM3Ub8yjk0QRE%3D%7Ctkp%3ABk9SR5z-h_jCYQ"

                            },

                            {

                                num: NumberInt("52"),

                                value: "https://www.ebay.com/itm/363951112583?hash=item54bd2d4187:g:AjkAAOSwRVBi~0Ub&amdata=enc%3AAQAHAAAA4A%2BrbsGHaMEhdp%2BC%2FQxDYY%2BEn%2Fl4cxyp4EMJZkU4pY53ciMbf8vvEC3W4N2ce92qWGQIykc2E6bFxzLvjFrx57arpV0t54bOs3uCmtC4st0ERmgVRbg8jl2C%2F7o7zTejP00LzuTq5Y7KW0iT8b%2FuXQ1sNhWIF6BmT3%2FVldI%2BlH7Gyf7w3UliEL2CZrGbv3rDarjjGQ2Pm9sCFigPAWssrq5DdwQzBY6ByUOk5QXcvX9OAMJT1KbH0ouMyTkHHokvJjymEKPgBWoJXJvp90rjjNHunKPzisQJCu5fjrHrQhGI%7Ctkp%3ABk9SR5z-h_jCYQ"

                            },

                            {

                                num: NumberInt("53"),

                                value: "https://www.ebay.com/itm/275375557275?hash=item401da98a9b:g:FDcAAOSwIitgt~M7&amdata=enc%3AAQAHAAAAoNOZkY8xVwAuIJTQcyHASh9e45cAvom7jm0700sgiBtJCTSeUcPEuwbjp0%2BbcB5IrauKM5TFnHnqEUG2gRTwQYKCGOgJD9bpgl%2Fj3JOyyNxf9TEME9WedAt%2BJisPEyls4Izppw0tntOv0xsgnEdCDny3ScmpykE1dBuvPobWCtCJR8i8D%2Flwin2mcmObWR4qJ3PioiE1zErntyV0LOCyeDY%3D%7Ctkp%3ABk9SR5z-h_jCYQ"

                            },

                            {

                                num: NumberInt("54"),

                                value: "https://www.ebay.com/itm/265429620554?hash=item3dccd6974a:g:1PUAAOSw6I9iX9zA&amdata=enc%3AAQAHAAAA4BVVqQzbOZpeLGmCf2ZOnIZ%2FizkrXCakI4MfpWbAmP467LONJktqTRZNp6zkfPDGoGK5hQld%2BciQsvQ6cBvvFe60PT%2BIOcSXzB3NLNOVCfu2j7BRzgldkjx6sEki8RavuaSjKJJzjyE1kn4H8ExFrWlQNqfQB4HiwptE%2BcjTo7d%2Fy%2FmYK7d6rkGNyyjmJS3k15UtRMu4CTm4Of%2FS%2FOEVAF3e4KLWO4ladLFWOOBnjWWZmP164eVBDZi6yWGU5w7ckFM4MKPQOeVEcSN%2FonCudTeMwapkjwmAC4CCdVy0arWW%7Ctkp%3ABk9SR5z-h_jCYQ"

                            },

                            {

                                num: NumberInt("55"),

                                value: "https://www.ebay.com/itm/373938233169?hash=item5710749f51:g:do8AAOSwe2ViD8t6&amdata=enc%3AAQAHAAAA4JfJWeZVeY5q7x4B2AyHcoJyl6N1B%2Fc%2Bl%2FcLfsmzkd1VVGlSlZGPoTEMpHg8jXpOohthvXmDNnTyQFVDA5cKB2ft8IeQixjoGLL3nwy65FyoaI%2BvN8Gh8IbZauT4eu61BwQmP7cck7i7yKV3hMopz4IucsODTbXzi21DsW53uB69dCKP4gdKSh0ez9csRQK6N1n%2Btp7WRGRoCtsvw4NOb8MAiuWNb5L9IMhzv8zgfE%2FoJoK8KQuQ1A%2BH9yFM%2FXv4GkiUCSsSEmavNETV%2FzWeZ1k9i%2BBXU%2FjC1YUGSR8b0KQu%7Ctkp%3ABk9SR5z-h_jCYQ"

                            },

                            {

                                num: NumberInt("56"),

                                value: "https://www.ebay.com/itm/294138927037?hash=item447c0bd7bd:g:L7AAAOSwwGBggq8w&amdata=enc%3AAQAHAAAA4CDF319hj2AcQ%2FKwVz19oCCjVSJE0TLetS9LX4st8fuu0nBlvUlABe747ehXnGzxo71b3w26D4CFDGm8Fb9%2F6Q1bsQcjRojfAh19WryRM%2FLixr%2FGZzNQej1Q8N2QI%2FiukQI%2FcGujrwo%2B5ToM1GCDVUy6bALMGiedk5YKcv7HzaEpigLtelJmiLkaewaVilWXlg3oAdkfolwbm2jQyZ%2FvMsQJapbM0032vlM5jbJR7By6IiZ4UP8Maf2bNNnRAZOoh8AB2C3ho%2B1lfC1%2Fy0rUvEOs%2FgymDLCsh1ibDv9ERN32%7Ctkp%3ABk9SR5z-h_jCYQ"

                            },

                            {

                                num: NumberInt("57"),

                                value: "https://www.ebay.com/itm/125728823762?epid=21051490359&hash=item1d460599d2:g:yAgAAOSwj4Fh6Aaa&amdata=enc%3AAQAHAAAAoBgD%2B%2FchUPmdWqr%2BAtwHtdGn6z2a0z9sCqKL2PtXSoMi6%2BhWH%2FVZD478ek3SrPvwKS7RYucg9ZZFWNbXftpnD%2FzPYmsvFowzmmBZGc%2BUofOHUGXGG9ywHY%2FseZsDbBKpnnx52R7lID5ARNoegwZMn42e6Cl4%2B0jx%2Fr%2FV1b%2FmrsoUVeNlS2SdS%2F2DN6BPOFRqH99IKnvJHFOzhvmpR2429lg%3D%7Ctkp%3ABk9SR5z-h_jCYQ"

                            },

                            {

                                num: NumberInt("58"),

                                value: "https://www.ebay.com/itm/124789931370?hash=item1d0e0f3d6a:g:V5MAAOSw8yFjhIo4&amdata=enc%3AAQAHAAAA4FVwvfZA%2BuDV4hkRn3AONVXaG9lPj%2BB81A7ImA3J8mnuPlEifWDpM2mfgHdGcq7GNL5vXtl8K5XrIZcrSR2H1UgJfHSQILpU8LomyIHwauuovxYKV%2B9vJA9Y84rjvNvwOGW6yjAi9stDG6WF7HksZjey8azjiD3R3p4bmngZ5FfdkxQTMwJejw%2BKIAKRvli%2B%2Bwd8jNpu0iqo6gjDUN%2FQ35p5vpZKioSmRyK7YasjJYhL%2Bz7V%2Bqb%2FYFH%2FsZd47fPxcXZu5rUMcOs8bVjSVB7JljzTAbgdrfU%2FhwMX3Sf4JT3R%7Ctkp%3ABFBMnP6H-MJh"

                            },

                            {

                                num: NumberInt("59"),

                                value: "https://www.ebay.com/itm/334609619633?hash=item4de8499ab1:g:bBIAAOSwpBVjXPuL&amdata=enc%3AAQAHAAAA4LVe3mYO56gjRc4NllHnQl93kwWOYKVDCy6600ypXVaY1oKap4KOaY5KkEbcZ%2BUO%2Bq9tNQFDeKU0nilv5OhQmrxRzyfVt%2BFAYk4D4f%2F1VUkM7Eiq6MBYb8VBjcaUDLHGqVqHwdZB3E4t7X%2Fi5nnaK2L%2BacxP0GjBfCoNTi0eRsL%2FKlj5pnYX62lNlU6cVrwWYFnKhiBDgKACK490mdorhbhdGLyRorQqIda3AN4OzPYY69TPxWyo8Oc9fQFOipTohiqceSxWv2JC%2FLa2UldVg9JbXPpRl1E4530yOFgJjsFb%7Ctkp%3ABFBMnP6H-MJh"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "computer",

            value: "computer"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop Click Next Page_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop Click Next Page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("5"),

            value: NumberInt("5")

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay product information task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "product name",

            desc: "",

            type: "string",

            exampleValue: "HP Laptop Computer ProBook 11 G1 Touchscreen Windows 11  Core i3 8GB 180GB SSDOpens in a new window or tab"

        },

        {

            id: NumberInt("1"),

            name: "product address",

            desc: "",

            type: "string",

            exampleValue: "https://www.ebay.com/itm/324106350107?epid=218948554&hash=item4b763e6e1b:g:7sMAAOSwlNtjyCGJ&amdata=enc%3AAQAHAAAA0Kv%2BWjTheQ9TMxWam%2Bo22kbG%2BOLTP0KOrmksUtV0QA2U8RQGCHObZGbCC8FVmUW8mzqL3dLUpUjpqSjvxhAyU1CnK60E3Z0bmO5r3JO3WlCLGTKPlvYplfZGxFLAwVrO0jijP34ub8sKMs5F8LliIgnnvAJpbmdd0O4T0fLanDTOvXBpj4ri7s%2BmsD3XVx6qJ4L0Oo%2FEIyFJJfkwQ%2FZNwlu3pSJZdsKPs%2BsDkr25tBFdH6hF49qIF42RHFbVKOc5O5so7hHSAhFGONNiXmWPtbo%3D%7Ctkp%3ABFBMlP6H-MJh"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63dfd3c4869cb52a8a8f6eab"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[5]/div[1]/ul[1]/li",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已保存"

                            },

                            {

                                num: NumberInt("1"),

                                value: "主页"

                            },

                            {

                                num: NumberInt("2"),

                                value: "电子产品展开： 电子产品最受欢迎类别手机、智能电话智能手表电脑、平板电脑及网络硬件数码相机视频游戏、游戏机便携式音响、耳机电视、视频、家用音响翻新技术更多类别苹果三星小米微软戴尔索尼任天堂汽车电子设备、GPS\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("3"),

                                value: "时尚展开： 时尚最受欢迎类别男装男鞋女装女鞋手表、零配件珠宝首饰女士箱包男士配饰更多类别阿迪达斯Champion耐克卡西欧西铁城古驰雷朋拉夫劳伦\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("4"),

                                value: "保健、美容展开： 保健、美容最受欢迎类别护肤品化妆品香水沐浴、身体护理护发、造型剃须、脱毛口腔护理保健品更多类别维生素、膳食补充视力保健美甲、指甲护理海蓝之谜SK-II雅诗兰黛飞利浦戴森吹风机\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("5"),

                                value: "体育运动展开： 体育运动最受欢迎类别骑行健身、跑步、瑜伽健身科技钓鱼露营、徒步高尔夫团体运动狩猎更多类别水上运动冬季运动网球游泳GPS、运动手表佳明颂拓\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("6"),

                                value: "收藏品、艺术品展开： 收藏品、艺术品最受欢迎类别体育集换卡及配件古董运动纪念品烟草动作玩偶硬币、纸币压铸车模、玩具车军用物品更多类别拼装玩具玩偶、玩具熊笔、书写用具陶瓷装饰性收藏品迪士尼藏品漫画艺术印刷品\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("7"),

                                value: "商业、工业用品展开： 商业、工业用品最受欢迎类别医疗保健、口腔护理电子设备及用品数控机、金工及制造自动化控制设备重型设备零件轻型工业工具测试、测量及检测设备更多类别包装、运输办公用品及设备印刷、平面艺术餐厅、餐饮服务维修、安全设备零售、服务材料处理\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("8"),

                                value: "家居园艺展开： 家居园艺最受欢迎类别厨房小家电吸尘器旅行、行李箱包玩具、爱好戴森iRobot新秀丽乐高更多类别凯膳怡Ninja途明Nest婴儿用品家居装修智能家居工具、车间设备\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("9"),

                                value: "海淘展开： 海淘海淘主页收藏品频道运输俱乐部\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("10"),

                                value: "车辆展开： 车辆汽车汽车及卡车零件工具、用品涡轮增压器服装、商品减震器发动机进气系统复古单品摩托车和特惠活动摩托车零件车身、车架发动机和零件配件排气系统轮辋超值特价\n\n\n\n\n\n\n\n\n\n"

                            },

                            {

                                num: NumberInt("11"),

                                value: "超值特价"

                            },

                            {

                                num: NumberInt("12"),

                                value: "更多 展开： 更多电子产品时尚保健、美容体育运动收藏品、艺术品商业、工业用品家居园艺海淘车辆超值特价"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        }

    ],

    links: "https://www.ebay.com",

    name: "New Crawler Task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "已保存"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63e0c181c85da553b7a9d4d2"),

    containJudge: false,

    desc: "https://wenku.baidu.com/view/291a3ff982d049649b6648d7c1c708a1284a0ad9.html?fr=hp_doclist&_wkts_=1675673791462",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://wenku.baidu.com/view/291a3ff982d049649b6648d7c1c708a1284a0ad9.html?fr=hp_doclist&_wkts_=1675673791462",

                links: "https://wenku.baidu.com/view/291a3ff982d049649b6648d7c1c708a1284a0ad9.html?fr=hp_doclist&_wkts_=1675673791462",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[4]/div[1]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[4]/div[1]/div[1]/div[3]/div[2]/div[1]/canvas[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[4]/div[1]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[4]/div[1]/div[1]/div[3]/div[2]/div[1]/canvas[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://wenku.baidu.com/view/291a3ff982d049649b6648d7c1c708a1284a0ad9.html?fr=hp_doclist&_wkts_=1675673791462",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://wenku.baidu.com/view/291a3ff982d049649b6648d7c1c708a1284a0ad9.html?fr=hp_doclist&_wkts_=1675673791462"

        }

    ],

    links: "https://wenku.baidu.com/view/291a3ff982d049649b6648d7c1c708a1284a0ad9.html?fr=hp_doclist&_wkts_=1675673791462",

    name: "300字作文",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: ""

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: ""

        },

        {

            id: NumberInt("2"),

            name: "para3_text",

            desc: "",

            type: "string",

            exampleValue: ""

        },

        {

            id: NumberInt("3"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: ""

        }

    ],

    url: "https://wenku.baidu.com/view/291a3ff982d049649b6648d7c1c708a1284a0ad9.html?fr=hp_doclist&_wkts_=1675673791462"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63e0c2a8c85da553b7a9d4d4"),

    containJudge: false,

    desc: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[4]/div[2]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n\n        \n            \n                \n                    小学教师家访记录内容整理 \n \n1.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，但是这孩子却非常的粗心，受到一点打击就会掉眼泪，内心比较脆弱。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。在家与妈妈相处的时间较多，不经常与周围的孩子玩耍，可能内心脆弱与这个有关。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n2.家访记录： \n    该孩子在校是个有礼貌的孩子，但脾气较暴躁，虽然脑袋灵活，但学习习惯不是很好，比较拖拉。 \n孩子的父母很负责，对孩子的学习抓的很紧，但孩子在生活上不太善于收拾，学习时也总是注意力分散，思想不容易集中，完成作业自觉性不够，需要家长守着。 \n家长希望老师多给孩子鼓励，作业时多盯紧她，家长也会积极配合老师帮助孩子改正缺点，养成良好的学习习惯。 \n \n 3.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，喜欢体育活动，在活动中有不俗的表现。但是这孩子却非常的粗心。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。劳逸结合，积极参加体育锻炼和适当地实践活动。做完作业后，最大的兴趣就是看课外书，父母如果强加一些练习给他，他就非常的不情愿。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n4.家访记录： \n    该生在校表现较好，能尊敬老师，团结同学，按要求完成各项任务，但是该孩子学习基础很差，各科学习都相当吃力，上课也经常开小差，作业不能独立完成。 \n该生在年龄上比其他学生要小的多，因此学习比较吃力，相对有些难度的习题他就无从下手。不过该孩子平时都能按时完成各科作业，其爸爸每天也会耐心地辅导她，渐渐地她对学习也产生了兴趣。 \n    家长对学校和老师的工作很满意，感谢老师们为孩子的耐心付出，希望在今后能继续加强对孩子的学习的辅导，让孩子能缩小与同学的差距。   \n5.家访记录： \n    该生性格内向、文静，能尊重老师、团结同学。在学习方面，学习态度端正，学习基础较好，但课外知识积累不够。 \n该生在家能帮助父母做一些力所能及的事。不过父母对其学习不够重视，不会着重培养她的爱好、兴趣。虽然她很努力学习，成绩也优异，但是思维不够活跃。 \n     家长表示一定积极支持学校和老师的工作，配合老师共同管理好孩子的学习和生活。   \n6.家访记录： \n\n                \n            \n\n        \n    "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

        }

    ],

    links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    name: "小学教师家访记录",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "\n\n        \n            \n                \n                    小学教师家访记录内容整理 \n \n1.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，但是这孩子却非常的粗心，受到一点打击就会掉眼泪，内心比较脆弱。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。在家与妈妈相处的时间较多，不经常与周围的孩子玩耍，可能内心脆弱与这个有关。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n2.家访记录： \n    该孩子在校是个有礼貌的孩子，但脾气较暴躁，虽然脑袋灵活，但学习习惯不是很好，比较拖拉。 \n孩子的父母很负责，对孩子的学习抓的很紧，但孩子在生活上不太善于收拾，学习时也总是注意力分散，思想不容易集中，完成作业自觉性不够，需要家长守着。 \n家长希望老师多给孩子鼓励，作业时多盯紧她，家长也会积极配合老师帮助孩子改正缺点，养成良好的学习习惯。 \n \n 3.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，喜欢体育活动，在活动中有不俗的表现。但是这孩子却非常的粗心。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。劳逸结合，积极参加体育锻炼和适当地实践活动。做完作业后，最大的兴趣就是看课外书，父母如果强加一些练习给他，他就非常的不情愿。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n4.家访记录： \n    该生在校表现较好，能尊敬老师，团结同学，按要求完成各项任务，但是该孩子学习基础很差，各科学习都相当吃力，上课也经常开小差，作业不能独立完成。 \n该生在年龄上比其他学生要小的多，因此学习比较吃力，相对有些难度的习题他就无从下手。不过该孩子平时都能按时完成各科作业，其爸爸每天也会耐心地辅导她，渐渐地她对学习也产生了兴趣。 \n    家长对学校和老师的工作很满意，感谢老师们为孩子的耐心付出，希望在今后能继续加强对孩子的学习的辅导，让孩子能缩小与同学的差距。   \n5.家访记录： \n    该生性格内向、文静，能尊重老师、团结同学。在学习方面，学习态度端正，学习基础较好，但课外知识积累不够。 \n该生在家能帮助父母做一些力所能及的事。不过父母对其学习不够重视，不会着重培养她的爱好、兴趣。虽然她很努力学习，成绩也优异，但是思维不够活跃。 \n     家长表示一定积极支持学校和老师的工作，配合老师共同管理好孩子的学习和生活。   \n6.家访记录： \n\n                \n            \n\n        \n    "

        }

    ],

    url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63e0c4dbc85da553b7a9d4d5"),

    containJudge: false,

    desc: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[4]/div[2]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n\n        \n            \n                \n                    小学教师家访记录内容整理 \n \n1.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，但是这孩子却非常的粗心，受到一点打击就会掉眼泪，内心比较脆弱。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。在家与妈妈相处的时间较多，不经常与周围的孩子玩耍，可能内心脆弱与这个有关。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n2.家访记录： \n    该孩子在校是个有礼貌的孩子，但脾气较暴躁，虽然脑袋灵活，但学习习惯不是很好，比较拖拉。 \n孩子的父母很负责，对孩子的学习抓的很紧，但孩子在生活上不太善于收拾，学习时也总是注意力分散，思想不容易集中，完成作业自觉性不够，需要家长守着。 \n家长希望老师多给孩子鼓励，作业时多盯紧她，家长也会积极配合老师帮助孩子改正缺点，养成良好的学习习惯。 \n \n 3.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，喜欢体育活动，在活动中有不俗的表现。但是这孩子却非常的粗心。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。劳逸结合，积极参加体育锻炼和适当地实践活动。做完作业后，最大的兴趣就是看课外书，父母如果强加一些练习给他，他就非常的不情愿。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n4.家访记录： \n    该生在校表现较好，能尊敬老师，团结同学，按要求完成各项任务，但是该孩子学习基础很差，各科学习都相当吃力，上课也经常开小差，作业不能独立完成。 \n该生在年龄上比其他学生要小的多，因此学习比较吃力，相对有些难度的习题他就无从下手。不过该孩子平时都能按时完成各科作业，其爸爸每天也会耐心地辅导她，渐渐地她对学习也产生了兴趣。 \n    家长对学校和老师的工作很满意，感谢老师们为孩子的耐心付出，希望在今后能继续加强对孩子的学习的辅导，让孩子能缩小与同学的差距。   \n5.家访记录： \n    该生性格内向、文静，能尊重老师、团结同学。在学习方面，学习态度端正，学习基础较好，但课外知识积累不够。 \n该生在家能帮助父母做一些力所能及的事。不过父母对其学习不够重视，不会着重培养她的爱好、兴趣。虽然她很努力学习，成绩也优异，但是思维不够活跃。 \n     家长表示一定积极支持学校和老师的工作，配合老师共同管理好孩子的学习和生活。   \n6.家访记录： \n\n                \n            \n\n        \n    "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[2]/div[2]/div[4]/div[1]/div[1]/div[3]/div[2]/div[1]/canvas[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

        }

    ],

    links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    name: "小学教师家访记录",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "\n\n        \n            \n                \n                    小学教师家访记录内容整理 \n \n1.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，但是这孩子却非常的粗心，受到一点打击就会掉眼泪，内心比较脆弱。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。在家与妈妈相处的时间较多，不经常与周围的孩子玩耍，可能内心脆弱与这个有关。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n2.家访记录： \n    该孩子在校是个有礼貌的孩子，但脾气较暴躁，虽然脑袋灵活，但学习习惯不是很好，比较拖拉。 \n孩子的父母很负责，对孩子的学习抓的很紧，但孩子在生活上不太善于收拾，学习时也总是注意力分散，思想不容易集中，完成作业自觉性不够，需要家长守着。 \n家长希望老师多给孩子鼓励，作业时多盯紧她，家长也会积极配合老师帮助孩子改正缺点，养成良好的学习习惯。 \n \n 3.家访记录： \n     该孩子在校表现较很好，上进心很强，学习成绩优异，上课能积极回答问题，喜欢体育活动，在活动中有不俗的表现。但是这孩子却非常的粗心。 \n该生在家尊重长辈，关心他人。主动为父母做一些力所能及的事情，也适当地做一些家务。在学习方面比较主动，主动完成各科作业。劳逸结合，积极参加体育锻炼和适当地实践活动。做完作业后，最大的兴趣就是看课外书，父母如果强加一些练习给他，他就非常的不情愿。 \n    家长对孩子在学校的健康成长很欣慰，认为孩子在学校各方面都得到了锻炼，希望学校今后也能多组织各种活动，让孩子们能从活动中得到锻炼，培养孩子健康人格。   \n4.家访记录： \n    该生在校表现较好，能尊敬老师，团结同学，按要求完成各项任务，但是该孩子学习基础很差，各科学习都相当吃力，上课也经常开小差，作业不能独立完成。 \n该生在年龄上比其他学生要小的多，因此学习比较吃力，相对有些难度的习题他就无从下手。不过该孩子平时都能按时完成各科作业，其爸爸每天也会耐心地辅导她，渐渐地她对学习也产生了兴趣。 \n    家长对学校和老师的工作很满意，感谢老师们为孩子的耐心付出，希望在今后能继续加强对孩子的学习的辅导，让孩子能缩小与同学的差距。   \n5.家访记录： \n    该生性格内向、文静，能尊重老师、团结同学。在学习方面，学习态度端正，学习基础较好，但课外知识积累不够。 \n该生在家能帮助父母做一些力所能及的事。不过父母对其学习不够重视，不会着重培养她的爱好、兴趣。虽然她很努力学习，成绩也优异，但是思维不够活跃。 \n     家长表示一定积极支持学校和老师的工作，配合老师共同管理好孩子的学习和生活。   \n6.家访记录： \n\n                \n            \n\n        \n    "

        },

        {

            id: NumberInt("1"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: ""

        }

    ],

    url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63e0c9ebc85da553b7a9d4d7"),

    containJudge: false,

    desc: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[4]/div[1]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "内容推荐小学家访记录大全100篇标准版.doc小学家访记录大全100篇免费下载，爱问旗下办公文档资料分享平台，支持在线下载，提供企业各类章程/制度/计划/方案等范本模板，小学家访记录大全100篇，任意编辑打印，提升办公效率!广告查看全文 "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

        }

    ],

    links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    name: "小学教师家访记录",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "内容推荐小学家访记录大全100篇标准版.doc小学家访记录大全100篇免费下载，爱问旗下办公文档资料分享平台，支持在线下载，提供企业各类章程/制度/计划/方案等范本模板，小学家访记录大全100篇，任意编辑打印，提升办公效率!广告查看全文 "

        }

    ],

    url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63e103f8869cb52a8a8f6eb2"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "test"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5"),

                NumberInt("6")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200 真正的 METRIX 测试棒(4 盒 50 件)有效期至 2024 年 6 月或更好"

                            },

                            {

                                num: NumberInt("1"),

                                value: "任天堂 WII 游戏 批量 您选择 购买 2 获得 1 50% 关闭游戏已测试 批量 2"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Saliva Drug Test 3 in 1 Testing Kit Home Oral Test Cannabis Cocaine Heroin Kits"

                            },

                            {

                                num: NumberInt("3"),

                                value: "300 真正的 METRIX 测试棒(6 盒 50 件)有效期至 2024 年 6 月或更好"

                            },

                            {

                                num: NumberInt("4"),

                                value: "任天堂 64 n64 原装视频游戏墨盒 * 正品/清洁/测试 *"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Various Artists Vinyl: Check: New Signals and Recordings to Test (Schallplatte)"

                            },

                            {

                                num: NumberInt("6"),

                                value: "雅达利 2600 游戏机 （ 多件 ） 清洁测试标签变化自选 favs 组合 S & H"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Freestyle Lite 100 试纸 * * 美国卖家 * * 免运费"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Gendermaker 性别预言家测试。男孩或女孩婴儿性别预测测试。"

                            },

                            {

                                num: NumberInt("9"),

                                value: "任天堂 Wii 游戏 R-z 测试巨大的选择散装折扣"

                            },

                            {

                                num: NumberInt("10"),

                                value: "100 x Urine Test Strips 10 Parameter Urine Reagent Tests Diabetes, UTI, pH &More"

                            },

                            {

                                num: NumberInt("11"),

                                value: "任天堂 DS 游戏-各种 测试"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Contour Next 试纸 血糖 50 每盒有效期至 2024 年 01 月 最快发货"

                            },

                            {

                                num: NumberInt("13"),

                                value: "Drug Testing Kit Home Urine Strip Tests for Cannabis Cocaine Opiate Speed + more"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Sculptnation TEST BOOST Max 男式睾酮力量肌肉性力量"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Blood Type Test Kit Home Blood Group Testing Kit A, B, O Rhesus D Eldoncard - CE"

                            },

                            {

                                num: NumberInt("16"),

                                value: "任天堂 DS 和 3DS 游戏系列您挑选 批量 更新 2/4"

                            },

                            {

                                num: NumberInt("17"),

                                value: "600 真正的 METRIX 测试棒(12 盒 50 件)有效期至 2024 年 6 月或更好"

                            },

                            {

                                num: NumberInt("18"),

                                value: "NEW STOCK! - Skylanders Imaginators Figures | Crystals | Chests - TESTED - RESET"

                            },

                            {

                                num: NumberInt("19"),

                                value: "30 Pregnancy Test Strips Ultra Early 10mIU HCG Urine Home Testing Kit One Step"

                            },

                            {

                                num: NumberInt("20"),

                                value: "TESTARTIKEL - BITTE NICHT KAUFEN"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Ovulation and Pregnancy Test Strips Ultra Early Home Urine Tests One Step Kit"

                            },

                            {

                                num: NumberInt("22"),

                                value: "ClearClick 视频到数字转换器 2.0 第二代,二手已测试工作正常"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Fishlund PE 编织鱼线 6 -300 磅测试 4 8 股耐磨"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Blood Glucose Sugar Test Strips - SD Codefree - Various Pack Sizes Available"

                            },

                            {

                                num: NumberInt("25"),

                                value: "索尼 PlayStation 2 ps2 完整带盒游戏完整已测试免运费挑选和选择"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Test Cart (Vectrex)"

                            },

                            {

                                num: NumberInt("27"),

                                value: "PlayStation 2 (ps2) 游戏已测试 ！ 挑选和选择! 许多伟大的游戏 ！ 更新 10/1"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Test Bank 病理生理学 8 版 McCance护理学习指南iPDF"

                            },

                            {

                                num: NumberInt("29"),

                                value: "One Step Underactive Thyroid TSH Blood Test - For Hypothyroidism"

                            },

                            {

                                num: NumberInt("30"),

                                value: "30pcs 4mm 可堆叠香蕉型插头测试引线套件带鳄鱼夹背部探头"

                            },

                            {

                                num: NumberInt("31"),

                                value: "80 pH Test Strips Litmus Test Paper Full Range 1-14 pH Acidic Alkaline Indicator"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Mess Test Tapes: Pegel W&F Azimut Dolby Level Frequenzgang Kopfhöhen calibration"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Kirby's Dream Land 2 GBC 游戏卡 适用于 GameBoy Color 16 位游戏已测试并保存"

                            },

                            {

                                num: NumberInt("34"),

                                value: "任天堂 64 扩展 Pak nus-007 n64 高分辨率包测试清洗 Zelda"

                            },

                            {

                                num: NumberInt("35"),

                                value: "任天堂 Gameboy Advance 墨盒测试"

                            },

                            {

                                num: NumberInt("36"),

                                value: "任天堂 DS Lite 控制台带充电器自选颜色美国卖家已测试正常工作"

                            },

                            {

                                num: NumberInt("37"),

                                value: "#23。 旧经典 DVD #2 批量挑选 4 美元平装运送"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Contour Next 100 试纸 * * 美国卖家 * * 免运费"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Male Fertility Sperm Concentration Test, Active Count Kit - One Step"

                            },

                            {

                                num: NumberInt("40"),

                                value: "XBOX One 游戏!! 经过所有测试,状况良好! 许多很棒的头衔!"

                            },

                            {

                                num: NumberInt("41"),

                                value: "OBD2 Breakout Box OBDII 协议探测器 CAN 测试箱汽车突破测试仪 "

                            },

                            {

                                num: NumberInt("42"),

                                value: "H-M 便宜游戏 (PlayStation 2) ps2 圆盘只测试"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Prima PSA Home Prostate Disorder Test - CE Marked - Results In 10 Mins"

                            },

                            {

                                num: NumberInt("44"),

                                value: "戴尔 Latitude E5450 14 英寸笔记本电脑英特尔酷睿 i5 8GB 500GB 硬盘 Windows 10 - 已测试"

                            },

                            {

                                num: NumberInt("45"),

                                value: "索尼 PlayStation 3 控制台 ps3 Slim 黑色捆绑出售物品控制器和线测试"

                            },

                            {

                                num: NumberInt("46"),

                                value: "新物品刊登Doctor Who BBC EDA/PDA Books"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Johnny Marr Bernard Sumner 电子 - Getting Away With It 测试按压乙烯基"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Colin Macleod Test Pressing Vinyl: Hold Fast"

                            },

                            {

                                num: NumberInt("49"),

                                value: "TEST [PC] Steam DIGITAL Key"

                            },

                            {

                                num: NumberInt("50"),

                                value: "D-G 便宜游戏 (PlayStation 2) ps2 圆盘只测试"

                            },

                            {

                                num: NumberInt("51"),

                                value: "雅达利 2600 游戏收藏已清洁测试工作陷阱 Frogger Adventure"

                            },

                            {

                                num: NumberInt("52"),

                                value: "One Touch Verio 50 条试纸 * * 美国卖家 * * 免运费"

                            },

                            {

                                num: NumberInt("53"),

                                value: "NES 游戏 A-G (任天堂 NES) 测试清洗和抛光墨盒只有"

                            },

                            {

                                num: NumberInt("54"),

                                value: "SEGA Genesis 游戏 S-Z 测试"

                            },

                            {

                                num: NumberInt("55"),

                                value: "100条真正的Metrix血糖糖尿病试纸有效期至2024年5月31日"

                            },

                            {

                                num: NumberInt("56"),

                                value: "kirby 任天堂 GameBoy GBA 测试 korokoro kagami 镜子 Kirby's Adventure"

                            },

                            {

                                num: NumberInt("57"),

                                value: "4 x First Response Ultra Early Result Pregnancy Test Kits 2 Packs of 2 Tests"

                            },

                            {

                                num: NumberInt("58"),

                                value: "SMD IC 测试钩夹迷你抓取器跳线探头适用于逻辑分析仪"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Coeliac Test Celiac Disease Wheat Gluten Intolerance Allergy Food Kit"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "test",

            value: "test"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("6"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "New Crawler Task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "200 真正的 METRIX 测试棒(4 盒 50 件)有效期至 2024 年 6 月或更好"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63e2155b869cb52a8a8f6ebc"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[5]/div[1]/ul[1]/li",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Favorites"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Home"

                            },

                            {

                                num: NumberInt("2"),

                                value: "ElectronicsExpand: ElectronicsMost popular categoriesSmartphones and accessoriesVideo games and consolesComputers and tabletsCameras and photosCamera dronesRefurbishedSmart homeMore categoriesAppleSamsungPortable audio and headphonesEmerging brandsSmart watchesDealsSell on eBay"

                            },

                            {

                                num: NumberInt("3"),

                                value: "MotorsExpand: MotorsCarAuto and truck partsTools and suppliesTurbo chargersClothing and merchandiseShock absorbersElectronic and GPSAir intakeVintage piecesMotorcycle and moreMotorcycle partsBody and frameEngines and partsAccessoriesExhausts and systemsRimsDealsSell on eBay"

                            },

                            {

                                num: NumberInt("4"),

                                value: "FashionExpand: FashionMost popular categoriesFootwearWomen's clothingFootwear for womenMen's clothingMen's footwearWatchesJewelryMore categoriesAccessories for menAccessories for womenBags and wallets for womenMens sunglassesWomens sunglasessSneakersDealsSell on eBay"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Collectibles and ArtExpand: Collectibles and ArtMost popular categoriesCollectiblesArtAction figuresCartoon charactersMovie and TV charactersDiecastMusical memorabiliaMore categoriesSports memorabiliaTrading card gamesAntiquesComicsFunko popStar WarsDealsSell on eBay"

                            },

                            {

                                num: NumberInt("6"),

                                value: "SportsExpand: SportsMost popular categoriesCyclingFitness, running and yogaFitness TechFishingCampingScootersTeam sportsMore categoriesWatersportsWinter sportsBox and MMASwimmingGPS & Running WatchesGarminDealsSell on eBay"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Health & BeautyExpand: Health & BeautyMost popular categoriesBeautyMakeupHealthK-BeautyManicure and pedicureHair productsSkin productsOrthopedic productsMore categoriesVitamins and food supplementsShaving and waxingBath and personal hygieneOral hygieneMassagersDealsSell on eBay"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Industrial equipmentExpand: Industrial equipmentMost popular categoriesDental healthcareElectronic equipment and suppliesMetallurgy and manufacturingMotors and industrial automationHeavy equipment partsLight industrial toolsInspection, measurement and testing equipmentMore categoriesPacking and shippingOffice supplies and equipmentPrinting and graphic artsRestaurants and food serviceMaintenance and safetyRetail and servicesDealsSell on eBay"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Home & GardenExpand: Home & GardenMost popular categoriesWorkshop Tools and EquipmentPatio, garden and outdoorsHome improvementKitchen, dining and barLamps, lights and fansInterior decorationHome organizationHome appliancesMore categoriesToysPetsCraftsArt suppliesMusical instrumentsJewelry and beadsDealsSell on eBay"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Deals"

                            },

                            {

                                num: NumberInt("11"),

                                value: "SellExpand: SellHow to create a listingJoin our growth programSeller centerSeller updatesSeller customer serviceeBay managed paymentsLearn to selleBay storeseBay feesSelling limits"

                            },

                            {

                                num: NumberInt("12"),

                                value: "More Expand: MoreElectronicsMotorsFashionCollectibles and ArtSportsHealth & BeautyIndustrial equipmentHome & GardenDealsSell"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "123"

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("4"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "123",

            value: "123"

        }

    ],

    links: "https://www.ebay.com",

    name: "New Crawler Task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "Favorites"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63e52ca5dcb6508b71d51b14"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("9"),

                NumberInt("13")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4"),

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "//*[contains(@class, \"current\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: true,

                xpath: "//*[contains(@class, \"current\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5"),

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("0"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("3"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2021-11-25 15:50:06"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "来源：最高人民法院"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　【基本案情】"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　【裁判结果】"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　【典型意义】"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para9_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[6]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("3"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "标题",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　【基本案情】　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。　　【裁判结果】　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。　　【典型意义】　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。            "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "时间",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "来源",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2021-11-25 15:50:06"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "内容",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "来源：最高人民法院"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("3"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para14_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \n    \t\t首页 >审判 > 典型案例\n            \n            \n                \n                石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案\n                \n            \n\t\t\t \n            2021-11-25 15:50:06   |   来源：最高人民法院   \n            \n            \n                                               \n            \n            \t　　　【基本案情】　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。　　【裁判结果】　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。　　【典型意义】　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。            \n             \n\t\t\t\n\t\t\t\n\t\t\t\n            \n\t\t\t\t\n                 责任编辑：于子平\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n                        \n            \n            \t\n                \t相关新闻：\n                    \n                                             \t碌曲县人民检察院诉碌曲县水务水电局行政公益诉讼案子女不履行赡养义务可作为公益诉讼立案受理吗？潮州饶平法院宣判一起刑附民公益诉讼案\n中国生物多样性保护与绿色发展基金会诉秦皇岛方圆包装玻璃有限公司大气环境责任纠...岳阳法检两院环境公益诉讼座谈会在君山召开检方规范个人信息保护公益诉讼案件办理重庆江津法院一审宣判一起涉古树公益诉讼案                    \n                \n                \n                \n            \n            \n            \n             \n             \n\t\t\t\t\t\t“黑物流”刘晓强等人敲..\n\t\t\t\t\t\t程海明等人敲诈勒索企业..\n\t\t\t\t\t\t华士中等人火车站敲诈勒..\n\t\t\t\t\t\t王维刚等人电子市场“软..\n\t\t\t\t\t\t房屋“黑中介”刘康等人..\n\t\t\t\t\t\t陈海涛等人组织、领导、..                \n            \n        "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para16_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n                \n                石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案\n                \n            "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para17_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2021-11-25 15:50:06   |   来源：最高人民法院   "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para18_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　【基本案情】　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。　　【裁判结果】　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。　　【典型意义】　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。            "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("9"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("13"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("14"),

                NumberInt("15")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[2]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("3")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("14"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[2]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("15"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("17"),

                NumberInt("16")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("16"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: 0.5,

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("17"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("18"),

                NumberInt("19")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("18"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("19"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para10_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para9_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18   |   来源：最高人民法院   "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　（一）基本案情"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　（二）裁判结果"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　（三）典型意义"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[6]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[7]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]/p[8]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: " "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("9"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("15"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法院",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para10_text",

            desc: "",

            type: "string",

            exampleValue: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

        },

        {

            id: NumberInt("1"),

            name: "para9_text",

            desc: "",

            type: "string",

            exampleValue: "2020-07-27 16:44:18   |   来源：最高人民法院   "

        },

        {

            id: NumberInt("2"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "　　（一）基本案情"

        },

        {

            id: NumberInt("3"),

            name: "para3_text",

            desc: "",

            type: "string",

            exampleValue: "　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。"

        },

        {

            id: NumberInt("4"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: "　　（二）裁判结果"

        },

        {

            id: NumberInt("5"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: "　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。"

        },

        {

            id: NumberInt("6"),

            name: "para6_text",

            desc: "",

            type: "string",

            exampleValue: "　　（三）典型意义"

        },

        {

            id: NumberInt("7"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。"

        },

        {

            id: NumberInt("8"),

            name: "para7_text",

            desc: "",

            type: "string",

            exampleValue: ""

        },

        {

            id: NumberInt("9"),

            name: "para8_text",

            desc: "",

            type: "string",

            exampleValue: " "

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63eca628c85da553b7a9d502"),

    containJudge: false,

    desc: "https://modelzoo.co/",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("15"),

                url: "https://modelzoo.co/",

                links: "https://modelzoo.co/",

                scrollType: "2",

                scrollCount: NumberInt("2")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[1]/div[1]/div[1]/div[3]/div/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_linktext",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "OpenPose 24000OpenPose represents the first real-time multi-person system to jointly detect human body, hand, and facial keypoints (in total 130 keypoints) on single images.\nCaffeCV"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Mask R-CNN 21600This is an implementation of Mask R-CNN on Python 3, Keras, and TensorFlow. The model generates bounding boxes and segmentation masks for each instance of an object in the image. It's based on Feature Pyramid Network (FPN) and a ResNet101 backbone.\nKerasCV"

                            },

                            {

                                num: NumberInt("2"),

                                value: "detectron2 20700Detectron2 is FAIR's next-generation research platform for object detection and segmentation.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("3"),

                                value: "ray 20200A fast and simple framework for building and running distributed applications. Ray is packaged with RLlib, a scalable reinforcement learning library, and Tune, a scalable hyperparameter tuning library. ray.io\nPyTorchRL"

                            },

                            {

                                num: NumberInt("4"),

                                value: "MMDetection 19500MMDetection is an open source object detection toolbox, a part of the OpenMMLab project.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("5"),

                                value: "pytorch-CycleGAN-and-pix2pix 17400PyTorch implementation for both unpaired and paired image-to-image translation.\nPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Awesome pytorch list 12983A comprehensive list of pytorch related content on github,such as different models,implementations,helper libraries,tutorials etc.PyTorchCVNLPGenerativeRLUnsupervisedAudioGraphSelf-SupervisedHealth"

                            },

                            {

                                num: NumberInt("7"),

                                value: "StyleGAN 12400StyleGAN — Official TensorFlow Implementation (https://arxiv.org/abs/1812.04948) with support for multi-GPU training.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("8"),

                                value: "PyTorch-GAN 11900PyTorch implementations of Generative Adversarial Networks.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("9"),

                                value: "best of ml python 10966 A ranked list of awesome machine learning Python libraries. Updated weekly.JAXCVNLPGenerativeRLUnsupervisedAudioGraphSelf-SupervisedHealth"

                            },

                            {

                                num: NumberInt("10"),

                                value: "FastPhotoStyle 10800A Closed-form Solution to Photorealistic Image Stylization\nPyTorchCV"

                            },

                            {

                                num: NumberInt("11"),

                                value: "albumentations 10100Fast image augmentation library.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("12"),

                                value: "MathJax 8905Beautiful and accessible math in all browsersJAXNLPAudio"

                            },

                            {

                                num: NumberInt("13"),

                                value: "maskrcnn-benchmark 8800Fast, modular reference implementation of Instance Segmentation and Object Detection algorithms in PyTorch.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("14"),

                                value: "vid2vid 8000Pytorch implementation of our method for high-resolution (e.g. 2048x1024) photorealistic video-to-video translation.\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("15"),

                                value: "annotated_deep_learning_paper_implementations 7994 50! Implementations/tutorials of deep learning papers with side-by-side notes ; including transformers (original, xl, switch, feedback, vit, ...), optimizers (adam, adabelief, ...), gans(cyclegan, stylegan2, ...),  reinforcement learning (ppo, dqn), capsnet, distillation, ... PyTorchCVNLPGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("16"),

                                value: "tensorboard-pytorch 7300This module saves PyTorch tensors in tensorboard format for inspection. Currently supports scalar, image, audio, histogram features in tensorboard.\nPyTorchCVAudio"

                            },

                            {

                                num: NumberInt("17"),

                                value: "deep-image-prior 7200Image restoration with neural networks but without learning.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("18"),

                                value: "DCGAN-tensorflow 7000Tensorflow implementation of Deep Convolutional Generative Adversarial Networks which is a stabilize Generative Adversarial Networks.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("19"),

                                value: "trax 6985Trax  Deep Learning with Clear Code and SpeedJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("20"),

                                value: "faster-rcnn.pytorch 6900This project is a faster faster R-CNN implementation, aimed to accelerating the training of faster R-CNN object detection models. \nPyTorchCV"

                            },

                            {

                                num: NumberInt("21"),

                                value: "YOLO TensorFlow ++ 6000TensorFlow implementation of 'YOLO: Real-Time Object Detection', with training and an actual support for real-time running on mobile devices.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("22"),

                                value: "TTS 5900Deep learning for Text2Speech\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Progressive Growing of GANs for Improved Quality, Stability, and Variation 5800We describe a new training methodology for generative adversarial networks. The key idea is to grow both the generator and discriminator progressively: starting from a low resolution, we add new layers that model increasingly fine details as training progresses.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("24"),

                                value: "pix2pixHD 5700Synthesizing and manipulating 2048x1024 images with conditional GANs tcwang0509.github.io/pix2pixHD \nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("25"),

                                value: "Open-source (MIT) Neural Machine Translation (NMT) System 5600This is a PytorchPyTorchNLP"

                            },

                            {

                                num: NumberInt("26"),

                                value: "einops 5311Deep learning operations reinvented (for pytorch, tensorflow, jax and others)JAXCVNLPGenerative"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Deep Reinforcement Learning for Keras 5300Keras-rl implements some state-of-the art deep reinforcement learning algorithms in Python and seamlessly integrates with the deep learning library Keras.\nKerasRL"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Pytorch UNet 5285PyTorch implementation of the U-Net for image semantic segmentation with high quality imagesPyTorchCVHealth"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Wavenet 5200This is a TensorFlow implementation of the WaveNet generative neural network architecture for audio generation.\nTensorFlowAudio"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Yet Another EfficientDet Pytorch 5031The pytorch re-implement of the official efficientdet with SOTA performance in real time and pretrained weights.PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("31"),

                                value: "External Attention pytorch 5010 Pytorch implementation of various Attention Mechanisms, MLP, Re-parameter, Convolution, which is helpful to further understand papers.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("32"),

                                value: "stargan 5009StarGAN - Official PyTorch Implementation (CVPR 2018)PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("33"),

                                value: "StarGAN 5000StarGAN: Unified Generative Adversarial Networks for Multi-Domain Image-to-Image Tranlsation.\nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("34"),

                                value: "espnet 5000End-to-End Speech Processing Toolkit espnet.github.io/espnet\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("35"),

                                value: "Augmentor 4700Image augmentation library in Python for machine learning. http://augmentor.readthedocs.io\nPyTorchCV"

                            },

                            {

                                num: NumberInt("36"),

                                value: "sketch code 4633Keras model to generate HTML code from hand-drawn website mockups. Implements an image captioning architecture to drawn source images.TensorFlowCVNLP"

                            },

                            {

                                num: NumberInt("37"),

                                value: "semantic-segmentation-pytorch 4300Pytorch implementation for Semantic Segmentation/Scene Parsing on MIT ADE20K dataset\nPyTorchCV"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Deep-Reinforcement-Learning-Algorithms-with-PyTorch 4300This repository contains PyTorch implementations of deep reinforcement learning algorithms.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("39"),

                                value: "semantic segmentation pytorch 4294Pytorch implementation for Semantic Segmentation/Scene Parsing on MIT ADE20K datasetPyTorchCV"

                            },

                            {

                                num: NumberInt("40"),

                                value: "pytorch YOLOv4 3939PyTorch ,ONNX and TensorRT implementation of YOLOv4PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("41"),

                                value: "pytorch seq2seq 3762Tutorials on implementing a few sequence-to-sequence (seq2seq) models with PyTorch and TorchText.PyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("42"),

                                value: "AnimeGAN 3710A Tensorflow implementation of AnimeGAN for fast photo animation  ! This is the Open source of the paper AnimeGAN: a novel lightweight GAN for photo animation, which uses the GAN framwork to transform real-world photos into anime images.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Colornet 3600Neural Network to colorize grayscale images\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("44"),

                                value: "MMSegmentation 3600MMSegmentation is a semantic segmentation toolbox and benchmark, a part of the OpenMMLab project.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Image analogies 3500Generate image analogies using neural matching and blending.\nKerasCV"

                            },

                            {

                                num: NumberInt("46"),

                                value: "stable baselines3 3380PyTorch version of Stable Baselines, reliable implementations of reinforcement learning algorithms. PyTorchNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("47"),

                                value: "flax 3286Flax is a neural network library for JAX that is designed for flexibility.JAXCVNLPAudioGraph"

                            },

                            {

                                num: NumberInt("48"),

                                value: "pytorch semseg 3218Semantic Segmentation Architectures Implemented in PyTorchPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Fully Convolutional Networks for Semantic Segmentation 3200This is the reference implementation of the models and code for the fully convolutional networks (FCNs) in the PAMI FCN and CVPR FCN papers:CaffeCV"

                            },

                            {

                                num: NumberInt("50"),

                                value: "tensorwatch 3200Debugging, monitoring and visualization for Deep Learning and Reinforcement Learning from Microsoft Research.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("51"),

                                value: "PyTorch-VAE 3200A Collection of Variational Autoencoders (VAE) in PyTorch.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("52"),

                                value: "pytorch yolo v3 3177A PyTorch implementation of the YOLO v3 object detection algorithmPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("53"),

                                value: "immutables 3127Annotation processor to create immutable objects and builders. Feels like Guava's immutable collections but for regular value objects. JSON, Jackson, Gson, JAX-RS integrations includedJAXNLP"

                            },

                            {

                                num: NumberInt("54"),

                                value: "MMEditing 3100MMEditing is a image and video editing toolbox, a part of the OpenMMLab project.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("55"),

                                value: "WassersteinGAN 3000WassersteinGAN in pytorch. \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("56"),

                                value: "stylegan2 pytorch 2938Simplest working implementation of Stylegan2, state of the art generative adversarial network, in Pytorch. Enabling everyone to experience disentanglementPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Colorful Image Colorization 2900Colorful Image ColorizationCaffeCV"

                            },

                            {

                                num: NumberInt("58"),

                                value: "MUSE 2900Multilingual Unsupervised and Supervised Embeddings\nPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("59"),

                                value: "EAST 2866A tensorflow implementation of EAST text detectorTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("60"),

                                value: "stargan v2 2855StarGAN v2 - Official PyTorch Implementation (CVPR 2020)PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("61"),

                                value: "DeepNLP models Pytorch 2817Pytorch implementations of various Deep NLP models in cs-224n(Stanford Univ)PyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("62"),

                                value: "Chatbot 2800Implementation of \"A neural conversational model\"\nTensorFlowNLP"

                            },

                            {

                                num: NumberInt("63"),

                                value: "pytorch-a2c-ppo-acktr 2800PyTorch implementation of Advantage Actor Critic (A2C), Proximal Policy Optimization (PPO) and Scalable trust-region method for deep reinforcement learning using Kronecker-factored approximation (ACKTR).\nPyTorchRL"

                            },

                            {

                                num: NumberInt("64"),

                                value: "tensorflow internals 2794It is open source ebook about TensorFlow kernel and implementation mechanism.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("65"),

                                value: "pytorch a2c ppo acktr gail 2783PyTorch implementation of Advantage Actor Critic (A2C), Proximal Policy Optimization (PPO), Scalable trust-region method for deep reinforcement learning using Kronecker-factored approximation (ACKTR) and Generative Adversarial Imitation Learning (GAIL).PyTorchCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("66"),

                                value: "Super SloMo 2777PyTorch implementation of Super SloMo by Jiang et al.PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("67"),

                                value: "alpha zero general 2775A clean implementation based on AlphaZero for any game in any framework + tutorial + Othello/Gobang/TicTacToe/Connect4 and morePyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("68"),

                                value: "DeepRL 2732Modularized Implementation of Deep RL Algorithms in PyTorchPyTorchRL"

                            },

                            {

                                num: NumberInt("69"),

                                value: "SRGAN 2700Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network\nTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("70"),

                                value: "AlphaZero_Gomoku 2669An implementation of the AlphaZero algorithm for Gomoku (also called Gobang or Five in a Row) PyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("71"),

                                value: "PyTorch StudioGAN 2558StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation.PyTorchCVGenerativeAudio"

                            },

                            {

                                num: NumberInt("72"),

                                value: "BigGAN-PyTorch 2500The author's officially unofficial PyTorch BigGAN implementation.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("73"),

                                value: "image-classification-mobile 2500Collection of classification models pretrained on the ImageNet-1K.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("74"),

                                value: "Popular Image Segmentation Models  2500FCN, Segnet, U-Net etc. \nKerasCV"

                            },

                            {

                                num: NumberInt("75"),

                                value: "Semantic Segmentation Suite 2434Semantic Segmentation Suite in TensorFlow. Implement, train, and test new Semantic Segmentation models easily!TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("76"),

                                value: "yolov3 tf2 2415YoloV3 Implemented in Tensorflow 2.0TensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("77"),

                                value: "Faster-RCNN 2400This is an experimental Tensorflow implementation of Faster RCNN - a convnet for object detection with a region proposal network. For details about R-CNN please refer to the paper Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks by Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("78"),

                                value: "CRAFT pytorch 2346Official implementation of Character Region Awareness for Text Detection (CRAFT)PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("79"),

                                value: "DQN-tensorflow 2300TensorFlow implementation of DeepMind's 'Human-Level Control through Deep Reinforcement Learning' with OpenAI Gym by Devsisters.com\nTensorFlowRL"

                            },

                            {

                                num: NumberInt("80"),

                                value: "MMDetection3D 2300MMDetection3D is OpenMMLab's next-generation platform for general 3D object detection, a part of the OpenMMLab project.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("81"),

                                value: "VIBE 2241Official implementation of CVPR2020 paper \"VIBE: Video Inference for Human Body Pose and Shape Estimation\"PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("82"),

                                value: "pytorch-kaldi 2200Pytorch-kaldi is a project for developing state-of-the-art DNN/RNN hybrid speech recognition systems. The DNN part is managed by pytorch, while feature extraction, label computation, and decoding are performed with the kaldi toolkit.\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("83"),

                                value: "DeepRL Agents 2169A set of Deep Reinforcement Learning Agents implemented in Tensorflow.TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("84"),

                                value: "Deep reinforcement learning with pytorch 2140PyTorch implementation of DQN, AC,  ACER, A2C, A3C, PG,  DDPG, TRPO, PPO, SAC, TD3 and ....PyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("85"),

                                value: "3DDFA_V2 2131The official PyTorch implementation of Towards Fast, Accurate and Stable 3D Dense Face Alignment, ECCV 2020.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("86"),

                                value: "DeblurGAN 2100Pytorch implementation of the paper DeblurGAN: Blind Motion Deblurring Using Conditional Adversarial Networks.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("87"),

                                value: "tensorflow yolov4 tflite 2049YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tfliteTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("88"),

                                value: "Tacotron 2 2037DeepMind's Tacotron-2 Tensorflow implementationTensorFlowCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("89"),

                                value: "UNet family 2032Paper and implementation of UNet-related model. PyTorchCVGenerativeGraphHealth"

                            },

                            {

                                num: NumberInt("90"),

                                value: "dm haiku 2029JAX-based neural network libraryJAXCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("91"),

                                value: "pyGAT 2019Pytorch implementation of the Graph Attention Network model by Velikovi et. al (2017, https://arxiv.org/abs/1710.10903)PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("92"),

                                value: "waveglow 2000A Flow-based Generative Network for Speech Synthesis.\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("93"),

                                value: "rlpyt 2000Reinforcement Learning in PyTorch\nPyTorchRL"

                            },

                            {

                                num: NumberInt("94"),

                                value: "senet.pytorch 1902PyTorch implementation of SENetPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("95"),

                                value: "deepspeech2 1900Implementation of DeepSpeech2 using Baidu Warp-CTC. Creates a network based on the DeepSpeech2 architecture, trained with the CTC activation function.\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("96"),

                                value: "EDSR-PyTorch 1900PyTorch version of the paper 'Enhanced Deep Residual Networks for Single Image Super-Resolution' (CVPRW 2017)\nPyTorchCV"

                            },

                            {

                                num: NumberInt("97"),

                                value: "An End-to-End Trainable Neural Network for Image-based Sequence Recognition and Its Application to Scene Text Recognition 1900This software implements the Convolutional Recurrent Neural Network (CRNN), a combination of CNN, RNN and CTC loss for image-based sequence recognition tasks, such as scene text recognition and OCR.PyTorchCV"

                            },

                            {

                                num: NumberInt("98"),

                                value: "Chess Reinforcement Learning 1900Chess reinforcement learning by AlphaGo Zero methods.\nKerasRL"

                            },

                            {

                                num: NumberInt("99"),

                                value: "lanenet lane detection 1850Unofficial implemention of lanenet model for real time lane detection using deep neural network model https://maybeshewill-cv.github.io/lanenet-lane-detection/TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("100"),

                                value: "Image Super Resolution via Iterative Refinement 1821Unofficial implementation of Image Super-Resolution via Iterative Refinement by PytorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("101"),

                                value: "pytorch retinanet 1818Pytorch implementation of RetinaNet object detection.PyTorchCV"

                            },

                            {

                                num: NumberInt("102"),

                                value: "UNIT 1800PyTorch Implementation of our Coupled VAE-GAN algorithm for Unsupervised Image-to-Image Translation\nPyTorchCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("103"),

                                value: "Neural Sequence labeling model 1800Sequence labeling models are quite popular in many NLP tasks, such as Named Entity Recognition (NER), part-of-speech (POS) tagging and word segmentation.PyTorchCVNLPAudio"

                            },

                            {

                                num: NumberInt("104"),

                                value: "yolov7 1761Implementation of paper - YOLOv7: Trainable bag-of-freebies sets new state-of-the-art for real-time object detectorsPyTorchCV"

                            },

                            {

                                num: NumberInt("105"),

                                value: "Lip Reading 1700Cross Audio-Visual Recognition using 3D Architectures in TensorFlow\nTensorFlowAudio"

                            },

                            {

                                num: NumberInt("106"),

                                value: "YOLO TensorFlow 1700Implementation of 'YOLO : Real-Time Object Detection'\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("107"),

                                value: "deepvoice3_pytorch 1700PyTorch implementation of convolutional networks-based text-to-speech synthesis models\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("108"),

                                value: "audio 1700Simple audio I/O for pytorch.\nPyTorchAudio"

                            },

                            {

                                num: NumberInt("109"),

                                value: "gandissect 1700Pytorch-based tools for visualizing and understanding the neurons of a GAN. gandissect.csail.mit.edu \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("110"),

                                value: "tabnet 1679PyTorch implementation of TabNet paper : https://arxiv.org/pdf/1908.07442.pdfPyTorchNLPUnsupervisedSelf-Supervised"

                            },

                            {

                                num: NumberInt("111"),

                                value: "capsule networks 1648A PyTorch implementation of the NIPS 2017 paper \"Dynamic Routing Between Capsules\".PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("112"),

                                value: "impersonator 1637PyTorch implementation of our ICCV 2019 paper:  Liquid Warping GAN: A Unified Framework for Human Motion Imitation, Appearance Transfer and Novel View SynthesisPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("113"),

                                value: "faster rcnn 1600This is a PyTorch implementation of Faster RCNN. This project is mainly based on py-faster-rcnn and TFFRCNN.For details about R-CNN please refer to the paper Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks by Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun. \nPyTorchCV"

                            },

                            {

                                num: NumberInt("114"),

                                value: "pytorch-semantic-segmentation 1600PyTorch for Semantic Segmentation.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("115"),

                                value: "deep rl tensorflow 1568TensorFlow implementation of Deep Reinforcement Learning papersTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("116"),

                                value: "yolor 1555implementation of paper - You Only Learn One Representation: Unified Network for Multiple Tasks (https://arxiv.org/abs/2105.04206)PyTorchCV"

                            },

                            {

                                num: NumberInt("117"),

                                value: "Pointnet_Pointnet2_pytorch 1533PointNet and PointNet++ implemented by pytorch (pure python) and on ModelNet, ShapeNet and S3DIS.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("118"),

                                value: "YOLOv3_TensorFlow 1529Complete YOLO v3 TensorFlow implementation. Support training on your own dataset.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("119"),

                                value: "lightweight human pose estimation.pytorch 1506Fast and accurate human pose estimation in PyTorch. Contains implementation of \"Real-time 2D Multi-Person Pose Estimation on CPU: Lightweight OpenPose\" paper.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("120"),

                                value: "pointnet.pytorch 1500Pytorch implementation for \"PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation\" https://arxiv.org/abs/1612.00593  \nPyTorchCV"

                            },

                            {

                                num: NumberInt("121"),

                                value: "pyannote-audio 1500Neural building blocks for speaker diarization: speech activity detection, speaker change detection, speaker embedding\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("122"),

                                value: "UnsupervisedMT 1500Phrase-Based & Neural Unsupervised Machine Translation.\nPyTorchNLPUnsupervised"

                            },

                            {

                                num: NumberInt("123"),

                                value: "NVIDIA/semantic-segmentation 1500A PyTorch Implementation of Improving Semantic Segmentation via Video Propagation and Label Relaxation, In CVPR2019. \nPyTorchCV"

                            },

                            {

                                num: NumberInt("124"),

                                value: "fast autoaugment 1482Official Implementation of 'Fast AutoAugment' in PyTorch.PyTorchCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("125"),

                                value: "GANotebooks 1460wgan, wgan2(improved, gp), infogan, and dcgan implementation in  lasagne, keras, pytorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("126"),

                                value: "SimpleHTR 1443Handwritten Text Recognition (HTR) system implemented with TensorFlow.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("127"),

                                value: "numpyro 1439Probabilistic programming with NumPy powered by JAX for autograd and JIT compilation to GPU/TPU/CPU.JAXNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("128"),

                                value: "Non local_pytorch 1432Implementation of Non-local Block.PyTorchHealth"

                            },

                            {

                                num: NumberInt("129"),

                                value: "EfficientDet.Pytorch 1427Implementation EfficientDet: Scalable and Efficient Object Detection in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("130"),

                                value: "MathJax src 1426MathJax source code for version 3 and beyondJAXNLP"

                            },

                            {

                                num: NumberInt("131"),

                                value: "pytorch-seq2seq 1400A framework for sequence-to-sequence (seq2seq) models implemented in PyTorch.  \nPyTorchNLP"

                            },

                            {

                                num: NumberInt("132"),

                                value: "ClassyVision 1400An end-to-end PyTorch framework for image and video classification.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("133"),

                                value: "SimCLR 1374PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual RepresentationsPyTorchNLPUnsupervisedSelf-Supervised"

                            },

                            {

                                num: NumberInt("134"),

                                value: "knowledge distillation pytorch 1362A PyTorch implementation for exploring deep and shallow knowledge distillation (KD) experiments with flexibilityPyTorchGenerative"

                            },

                            {

                                num: NumberInt("135"),

                                value: "big_transfer 1350Official repository for the \"Big Transfer (BiT): General Visual Representation Learning\" paper.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("136"),

                                value: "pytorch cpp 1327C++ Implementation of PyTorch Tutorials for EveryonePyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("137"),

                                value: "DeepOSM 1300Train TensorFlow neural nets with OpenStreetMap features and satellite imagery.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("138"),

                                value: "wgan-gp 1300A pytorch implementation of Paper \"Improved Training of Wasserstein GANs\".\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("139"),

                                value: "Rainbow 1300Rainbow: Combining Improvements in Deep Reinforcement Learning \nPyTorchRL"

                            },

                            {

                                num: NumberInt("140"),

                                value: "3d ken burns 1280an implementation of 3D Ken Burns Effect from a Single Image using PyTorchPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("141"),

                                value: "FCN.tensorflow 1264Tensorflow implementation of Fully Convolutional Networks for Semantic Segmentation (http://fcn.berkeleyvision.org)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("142"),

                                value: "Bayesian Neural Networks 1262Pytorch implementations of Bayes By Backprop, MC Dropout, SGLD, the Local Reparametrization Trick, KF-Laplace, SG-HMC and morePyTorchGenerative"

                            },

                            {

                                num: NumberInt("143"),

                                value: "SSD 1260High quality, fast, modular reference implementation of SSD in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("144"),

                                value: "super resolution 1259Tensorflow 2.x based implementation of EDSR, WDSR and SRGAN for single image super-resolutionTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("145"),

                                value: "pytorch ssd 1252MobileNetV1, MobileNetV2, VGG based SSD/SSD-lite implementation in Pytorch 1.0 / Pytorch 0.4. Out-of-box support for retraining on Open Images dataset. ONNX and Caffe2 support. Experiment Ideas like CoordConv.PyTorchCV"

                            },

                            {

                                num: NumberInt("146"),

                                value: "QRec 1236QRec: A Python Framework for quick implementation of recommender systems (TensorFlow Based)TensorFlowGenerativeGraphSelf-Supervised"

                            },

                            {

                                num: NumberInt("147"),

                                value: "neuraltalk2-pytorch 1200Image captioning model in pytorch(finetunable cnn in branch with_finetune)\nPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("148"),

                                value: "AnimeGAN 1200A simple PyTorch Implementation of Generative Adversarial Networks, focusing on anime face drawing. \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("149"),

                                value: "CycleGAN TensorFlow 1163An implementation of CycleGan using TensorFlowTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("150"),

                                value: "pytorch openpose 1161pytorch implementation of openpose including Hand and Body Pose Estimation.PyTorchCV"

                            },

                            {

                                num: NumberInt("151"),

                                value: "one pixel attack keras 1148Keras implementation of \"One pixel attack for fooling deep neural networks\" using differential evolution on Cifar10 and ImageNetTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("152"),

                                value: "scenic 1134Scenic: A Jax Library for Computer Vision Research and BeyondJAXCVGenerativeAudioHealth"

                            },

                            {

                                num: NumberInt("153"),

                                value: "Image OutPainting 1122 Keras Implementation of Painting outside the boxTensorFlowCV"

                            },

                            {

                                num: NumberInt("154"),

                                value: "tensorflow fcn 1111An Implementation of Fully Convolutional Networks in Tensorflow.TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("155"),

                                value: "SLM-Lab 1100Modular Deep Reinforcement Learning framework in PyTorch.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("156"),

                                value: "open_clip 1060An open source implementation of CLIP.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("157"),

                                value: "pytorch_image_classification 1052PyTorch implementation of image classification models for CIFAR-10/CIFAR-100/MNIST/FashionMNIST/Kuzushiji-MNIST/ImageNetPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("158"),

                                value: "functorch 1049functorch is JAX-like composable function transforms for PyTorch.JAXNLP"

                            },

                            {

                                num: NumberInt("159"),

                                value: "Pointnet2_PyTorch 1047PyTorch implementation of Pointnet2/Pointnet++PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("160"),

                                value: "Tensorflow Programs and Tutorials 1041Implementations of CNNs, RNNs, GANs, etcTensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("161"),

                                value: "yolov4 deepsort 1015Object tracking implemented with YOLOv4, DeepSort, and TensorFlow.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("162"),

                                value: "R-FCN 1000R-FCN: Object Detection via Region-based Fully Convolutional NetworksCaffeCV"

                            },

                            {

                                num: NumberInt("163"),

                                value: "DiscoGAN 1000PyTorch implementation of \"Learning to Discover Cross-Domain Relations with Generative Adversarial Networks\"  \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("164"),

                                value: "sentiment-discovery 1000Unsupervised Language Modeling at scale for robust sentiment classification.\nPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("165"),

                                value: "AdverTorch 1000A Toolbox for Adversarial Robustness (attack/defense/training) Research\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("166"),

                                value: "async-RL 1000Tensorflow + Keras + OpenAI Gym implementation of 1-step Q Learning from \"Asynchronous Methods for Deep Reinforcement Learning\"\nKerasRL"

                            },

                            {

                                num: NumberInt("167"),

                                value: "ChainerRL 1000ChainerRL is a deep reinforcement learning library built on top of Chainer.\nChainerRL"

                            },

                            {

                                num: NumberInt("168"),

                                value: "Asynchronous Methods for Deep Reinforcement Learning 994This is a PyTorch implementation of Asynchronous Advantage Actor Critic (A3C) from \"Asynchronous Methods for Deep Reinforcement Learning\".PyTorchRL"

                            },

                            {

                                num: NumberInt("169"),

                                value: "QANet 992A Tensorflow implementation of QANet for machine reading comprehensionTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("170"),

                                value: "sepconv slomo 975an implementation of Video Frame Interpolation via Adaptive Separable Convolution using PyTorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("171"),

                                value: "Deep Learning TensorFlow 967Ready to use implementations of various Deep Learning algorithms using TensorFlow.TensorFlowNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("172"),

                                value: "variational autoencoder 967Variational autoencoder implemented in tensorflow and pytorch (including inverse autoregressive flow) PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("173"),

                                value: "jraph 966A Graph Neural Network Library in JaxJAXNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("174"),

                                value: "uncertainty baselines 955High-quality implementations of standard and SOTA methods on a variety of tasks.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("175"),

                                value: "pytorch pretrained BigGAN 935A PyTorch implementation of BigGAN with pretrained weights and conversion scripts.PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("176"),

                                value: "deeplab pytorch 934PyTorch implementation of DeepLab v2 on COCO-Stuff / PASCAL VOCPyTorchCV"

                            },

                            {

                                num: NumberInt("177"),

                                value: "BiSeNet 933Add bisenetv2.  My implementation of BiSeNetPyTorchCV"

                            },

                            {

                                num: NumberInt("178"),

                                value: "SReC 924PyTorch Implementation of \"Lossless Image Compression through Super-Resolution\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("179"),

                                value: "BEGAN tensorflow 923Tensorflow implementation of \"BEGAN: Boundary Equilibrium Generative Adversarial Networks\"TensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("180"),

                                value: "tf_ner 923Simple and Efficient Tensorflow implementations of NER models with tf.estimator and tf.dataTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("181"),

                                value: "Ultrasound nerve segmentation 914This tutorial shows how to use Keras library to build.md deep neural network for ultrasound image nerve segmentation.KerasCVAudio"

                            },

                            {

                                num: NumberInt("182"),

                                value: "chainer-DCGAN 914Deep Convolutional Generative Adversarial Network (DCGAN)\nChainerGenerative"

                            },

                            {

                                num: NumberInt("183"),

                                value: "spatial transformer network 911A Tensorflow implementation of Spatial Transformer NetworksTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("184"),

                                value: "TransformerTTS 911 Transformer TTS: Implementation of a non-autoregressive Transformer based neural network for text to speech.TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("185"),

                                value: "conv emotion 911This repo contains implementation of different architectures for emotion recognition in conversations.PyTorchNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("186"),

                                value: "show attend and tell 899TensorFlow Implementation of \"Show, Attend and Tell\" TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("187"),

                                value: "Res2Net PretrainedModels 898(ImageNet pretrained models) The official pytorch implemention of the TPAMI paper \"Res2Net: A New Multi-scale Backbone Architecture\"PyTorchCV"

                            },

                            {

                                num: NumberInt("188"),

                                value: "Show, Attend and Tell 897Attention Based Image Caption Generator\nTensorFlowCVNLP"

                            },

                            {

                                num: NumberInt("189"),

                                value: "espresso 890Espresso: A Fast End-to-End Neural Speech Recognition Toolkit\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("190"),

                                value: "tensorflow yolo v3 889Implementation of YOLO v3 object detector in Tensorflow (TF-Slim)TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("191"),

                                value: "DeepRL Tutorials 885Contains high quality implementations of Deep Reinforcement Learning algorithms written in PyTorchPyTorchRL"

                            },

                            {

                                num: NumberInt("192"),

                                value: "GAN_stability 876Code for paper \"Which Training Methods for GANs do actually Converge? (ICML 2018)\"\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("193"),

                                value: "loop 875A method to generate speech across multiple speakers\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("194"),

                                value: "adversarial attacks pytorch 872PyTorch implementation of adversarial attacks.PyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("195"),

                                value: "CNNGestureRecognizer 867Gesture recognition via CNN. Implemented in Keras + Tensorflow/Theano + OpenCVTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("196"),

                                value: "domain transfer network 863TensorFlow Implementation of Unsupervised Cross-Domain Image Generation TensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("197"),

                                value: "Domain Transfer Network 859Implementation of Unsupervised Cross-Domain Image Generation\nTensorFlowCVUnsupervised"

                            },

                            {

                                num: NumberInt("198"),

                                value: "PConv Keras 855Unofficial implementation of \"Image Inpainting for Irregular Holes Using Partial Convolutions\". Try at: www.fixmyphoto.aiTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("199"),

                                value: "self-critical.pytorch 853Unofficial pytorch implementation for Self-critical Sequence Training for Image Captioning. \nPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("200"),

                                value: "MixNMatch 845Pytorch implementation of MixNMatchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("201"),

                                value: "BERT keras 828Keras implementation of BERT with pre-trained weightsTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("202"),

                                value: "SRGAN 828A PyTorch implementation of SRGAN based on CVPR 2017 paper \"Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("203"),

                                value: "cleanrl 821High-quality single file implementation of Deep Reinforcement Learning algorithms with research-friendly features (PPO, DQN, C51, DDPG, TD3, SAC)PyTorchNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("204"),

                                value: "keras vggface 812VGGFace implementation with Keras FrameworkTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("205"),

                                value: "PyTorch RL 811PyTorch implementation of Deep Reinforcement Learning: Policy Gradient methods (TRPO, PPO, A2C) and Generative Adversarial Imitation Learning (GAIL). Fast Fisher vector product TRPO.PyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("206"),

                                value: "Seq2seq-Chatbot 805Chatbot in 200 lines of code\nTensorFlowNLP"

                            },

                            {

                                num: NumberInt("207"),

                                value: "deeplab_v3 803Tensorflow Implementation of the Semantic Segmentation DeepLab_V3 CNNTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("208"),

                                value: "DEXTR-PyTorch 803Deep Extreme Cut http://www.vision.ee.ethz.ch/~cvlsegmentation/dextr\nPyTorchCV"

                            },

                            {

                                num: NumberInt("209"),

                                value: "PyTorch CycleGAN 802A clean and readable Pytorch implementation of CycleGANPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("210"),

                                value: "jetson-reinforcement 799Deep reinforcement learning libraries for NVIDIA Jetson TX1/TX2 with PyTorch, OpenAI Gym, and Gazebo robotics simulator.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("211"),

                                value: "graph_nets 799PyTorch Implementation and Explanation of Graph Representation Learning papers: DeepWalk, GCN, GraphSAGE, ChebNet & GAT.PyTorchUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("212"),

                                value: "saliency 798Framework-agnostic implementation for state-of-the-art saliency methods (XRAI, BlurIG, SmoothGrad, and more).TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("213"),

                                value: "tps_stn_pytorch 797PyTorch implementation of Spatial Transformer Network (STN) with Thin Plate Spline (TPS)PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("214"),

                                value: "stackGAN-v2 792Pytorch implementation for reproducing StackGAN_v2 results in the paper StackGAN++: Realistic Image Synthesis with Stacked Generative Adversarial Networks by Han Zhang, Tao Xu, Hongsheng Li, Shaoting Zhang, Xiaogang Wang, Xiaolei Huang, Dimitris Metaxas.\nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("215"),

                                value: "pytorch_resnet_cifar10 791Proper implementation of ResNet-s for CIFAR10/100 in pytorch that matches description of the original paper.PyTorchCV"

                            },

                            {

                                num: NumberInt("216"),

                                value: "tf coriander 785OpenCL 1.2 implementation for TensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("217"),

                                value: "yolo_tensorflow 784Tensorflow implementation of YOLO, including training and test phase.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("218"),

                                value: "tffm 783TensorFlow implementation of an arbitrary order Factorization MachineTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("219"),

                                value: "tensorflow yolo 780tensorflow implementation of 'YOLO : Real-Time Object Detection'(train and test)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("220"),

                                value: "pytorch-rl 780Deep Reinforcement Learning with pytorch & visdom  \nPyTorchRL"

                            },

                            {

                                num: NumberInt("221"),

                                value: "optax 780Optax is a gradient processing and optimization library for JAX.JAXNLPGenerative"

                            },

                            {

                                num: NumberInt("222"),

                                value: "athena 774an open-source implementation of sequence-to-sequence based speech processing engineTensorFlowNLPGenerativeUnsupervisedAudioGraphSelf-Supervised"

                            },

                            {

                                num: NumberInt("223"),

                                value: "two stream action recognition 771Using two stream architecture to implement a classic action recognition method on UCF101 datasetPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("224"),

                                value: "pytorch AdaIN 767Unofficial pytorch implementation of 'Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization' [Huang+, ICCV2017]PyTorchCV"

                            },

                            {

                                num: NumberInt("225"),

                                value: "benchmark_VAE 767Unifying Generative Autoencoder implementations in PythonPyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("226"),

                                value: "bert for tf2 765A Keras TensorFlow 2.0 implementation of BERT, ALBERT and adapter-BERT.TensorFlowCVGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("227"),

                                value: "SSD 765SSD is an unified framework for object detection with a single network.MXNetCV"

                            },

                            {

                                num: NumberInt("228"),

                                value: "official DiscoGAN implementation 751Official implementation of \"Learning to Discover Cross-Domain Relations with Generative Adversarial Networks\".  \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("229"),

                                value: "FaderNetworks 750Fader Networks: Manipulating Images by Sliding Attributes - NIPS 2017\nPyTorchCV"

                            },

                            {

                                num: NumberInt("230"),

                                value: "pggan pytorch 750:fire::fire: PyTorch implementation of \"Progressive growing of GANs (PGGAN)\" :fire::fire:PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("231"),

                                value: "tf rnn attention 749Tensorflow implementation of attention mechanism for text classification tasks.TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("232"),

                                value: "SENet Tensorflow 740Simple Tensorflow implementation of \"Squeeze and Excitation Networks\" using Cifar10 (ResNeXt, Inception-v4, Inception-resnet-v2)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("233"),

                                value: "gangealing 740Official PyTorch Implementation of GAN-Supervised Dense Visual Alignment (CVPR 2022 Oral)PyTorchCVNLPGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("234"),

                                value: "pytorch segmentation toolbox 736PyTorch Implementations for DeeplabV3 and PSPNetPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("235"),

                                value: "swagger maven plugin 720JAX-RS & SpringMVC supported maven build.md plugin, helps you generate Swagger JSON and API document in build.md phase.JAXNLPGenerative"

                            },

                            {

                                num: NumberInt("236"),

                                value: "grad cam pytorch 715PyTorch implementation of Grad-CAM, vanilla/guided backpropagation, deconvnet, and occlusion sensitivity mapsPyTorchCV"

                            },

                            {

                                num: NumberInt("237"),

                                value: "pytorch lr finder 711A learning rate range test implementation in PyTorchPyTorchGraph"

                            },

                            {

                                num: NumberInt("238"),

                                value: "CycleGAN tensorflow 701Tensorflow implementation for learning an image-to-image translation without input-output pairs. https://arxiv.org/pdf/1703.10593.pdfTensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("239"),

                                value: "seq2seq 701This repository contains implementations of Sequence to Sequence (Seq2Seq) models in PyTorch  \nPyTorchNLP"

                            },

                            {

                                num: NumberInt("240"),

                                value: "FastSpeech 696The Implementation of FastSpeech based on pytorch.PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("241"),

                                value: "neural image assessment 686Implementation of NIMA: Neural Image Assessment in KerasTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("242"),

                                value: "PPO PyTorch 683Minimal implementation of clipped objective Proximal Policy Optimization (PPO) in PyTorchPyTorchCVGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("243"),

                                value: "torchdistill 682A coding-free framework built on PyTorch for reproducible deep learning studies. 20 knowledge distillation methods presented at CVPR, ICLR, ECCV, NeurIPS, ICCV, etc are implemented so far.  Trained models, training logs and configurations are available for ensuring the reproducibiliy and benchmark.PyTorchCVNLPGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("244"),

                                value: "RandWireNN 681Implementation of: \"Exploring Randomly Wired Neural Networks for Image Recognition\".\nPyTorchCV"

                            },

                            {

                                num: NumberInt("245"),

                                value: "DBNet.pytorch 680A pytorch re-implementation of Real-time Scene Text Detection with Differentiable BinarizationPyTorchCV"

                            },

                            {

                                num: NumberInt("246"),

                                value: "Faster RCNN 676Region Proposal Network solves object detection as a regression problem MXNetCV"

                            },

                            {

                                num: NumberInt("247"),

                                value: "awesome jax 675JAX - A curated list of resources https://github.com/google/jaxJAXCVGenerativeRLUnsupervisedGraphSelf-SupervisedHealth"

                            },

                            {

                                num: NumberInt("248"),

                                value: "Bert Multi Label Text Classification 672This repo contains a PyTorch implementation of a pretrained BERT model for multi-label text classification.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("249"),

                                value: "pytorch-maml-rl 669Reinforcement Learning with Model-Agnostic Meta-Learning in Pytorch. \nPyTorchRL"

                            },

                            {

                                num: NumberInt("250"),

                                value: "Speech Transformer 669A PyTorch implementation of Speech Transformer, an End-to-End ASR with Transformer network on Mandarin Chinese.PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("251"),

                                value: "TensorSlow 667Re-implementation of TensorFlow in pure python, with an emphasis on code understandabilityTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("252"),

                                value: "semi-supervised-pytorch 662Implementations of different VAE-based semi-supervised and generative models in PyTorch. \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("253"),

                                value: "DCSCN Super Resolution 661This is a tensorflow implementation of \"Fast and Accurate Image Super Resolution by Deep CNN with Skip Connection and Network in Network\", a deep learning based Single-Image Super-Resolution (SISR) model. \nTensorFlowCV"

                            },

                            {

                                num: NumberInt("254"),

                                value: "sequence labeling BiLSTM CRF 658The classical BiLSTM-CRF model implemented in Tensorflow, for sequence labeling tasks. In Vex version, everything is configurable.TensorFlowCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("255"),

                                value: "pytorch original transformer 655My implementation of the original transformer model (Vaswani et al.). I've additionally included the playground.py file for visualizing otherwise seemingly hard concepts. Currently included IWSLT pretrained models.PyTorchCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("256"),

                                value: "rl book 650Source codes for the book \"Reinforcement Learning: Theory and Python Implementation\"PyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("257"),

                                value: "uvadlc_notebooks 650Repository of Jupyter notebook tutorials for teaching the Deep Learning Course at the University of Amsterdam (MSc AI), Fall 2021/Spring 2022JAXCVNLPGenerativeGraphSelf-Supervised"

                            },

                            {

                                num: NumberInt("258"),

                                value: "CIFAR ZOO 645PyTorch implementation of CNNs for CIFAR benchmarkPyTorchCV"

                            },

                            {

                                num: NumberInt("259"),

                                value: "NATSpeech 644A Non-Autoregressive Text-to-Speech (NAR-TTS) framework, including official PyTorch implementation of PortaSpeech (NeurIPS 2021) and DiffSpeech (AAAI 2022)PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("260"),

                                value: "tensor sensor 642The goal of this library is to generate more helpful exception messages for matrix algebra expressions for numpy, pytorch, jax, tensorflow, keras, fastai. JAXCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("261"),

                                value: "Class balanced loss pytorch 633Pytorch implementation of the paper \"Class-Balanced Loss Based on Effective Number of Samples\"PyTorchGenerative"

                            },

                            {

                                num: NumberInt("262"),

                                value: "deeplabv3 624PyTorch implementation of DeepLabV3, trained on the Cityscapes dataset.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("263"),

                                value: "speech 621PyTorch ASR Implementation.\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("264"),

                                value: "android-yolo 615Real-time object detection on Android using the YOLO network, powered by TensorFlow.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("265"),

                                value: "score_sde 599Official code for Score-Based Generative Modeling through Stochastic Differential Equations (ICLR 2021, Oral)JAXCVGenerativeRL"

                            },

                            {

                                num: NumberInt("266"),

                                value: "YOLOv3_PyTorch 596Full implementation of YOLOv3 in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("267"),

                                value: "3DMPPE_POSENET_RELEASE 592Official PyTorch implementation of \"Camera Distance-aware Top-down Approach for 3D Multi-person Pose Estimation from a Single RGB Image\", ICCV 2019PyTorchCV"

                            },

                            {

                                num: NumberInt("268"),

                                value: "TensorFlow VAE GAN DRAW 588A collection of generative methods implemented with TensorFlow (Deep Convolutional Generative Adversarial Networks (DCGAN), Variational Autoencoder (VAE) and DRAW: A Recurrent Neural Network For Image Generation).TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("269"),

                                value: "R Net 587Tensorflow Implementation of R-NetTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("270"),

                                value: "DNC tensorflow 585A TensorFlow implementation of DeepMind's Differential Neural Computers (DNC)TensorFlowNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("271"),

                                value: "efficientdet 585(Pretrained weights provided) EfficientDet: Scalable and Efficient Object Detection implementation by Signatrix GmbHPyTorchCV"

                            },

                            {

                                num: NumberInt("272"),

                                value: "text summarization tensorflow 584Tensorflow seq2seq Implementation of Text Summarization.TensorFlowNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("273"),

                                value: "WGAN tensorflow 583a tensorflow implementation of WGANTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("274"),

                                value: "mushroom 582Python library for Reinforcement Learning experiments.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("275"),

                                value: "densenet tensorflow 580DenseNet Implementation in TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("276"),

                                value: "vnet.pytorch 577A Pytorch implementation for V-Net: Fully Convolutional Neural Networks for Volumetric Medical Image Segmentation.    \nPyTorchCV"

                            },

                            {

                                num: NumberInt("277"),

                                value: "keras mmoe 573A TensorFlow Keras implementation of \"Modeling Task Relationships in Multi-task Learning with Multi-gate Mixture-of-Experts\" (KDD 2018)TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("278"),

                                value: "pytorch image classification 571Tutorials on how to implement a few key architectures for image classification using PyTorch and TorchVision.PyTorchCVRL"

                            },

                            {

                                num: NumberInt("279"),

                                value: "Hierarchical Attention Networks for Document Classification 568We know that documents have a hierarchical structure, words combine to form sentences and sentences combine to form documents.PyTorchNLP"

                            },

                            {

                                num: NumberInt("280"),

                                value: "pytorch nested unet 568PyTorch implementation of UNet++ (Nested U-Net).PyTorchCV"

                            },

                            {

                                num: NumberInt("281"),

                                value: "Pytorch SiamFC 562Pytorch implementation of \"Fully-Convolutional Siamese Networks for Object Tracking\"PyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("282"),

                                value: "autonomous-learning-library 559A PyTorch library for building deep reinforcement learning agents.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("283"),

                                value: "n beats 559Keras/Pytorch implementation of N-BEATS: Neural basis expansion analysis for interpretable time series forecasting.PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("284"),

                                value: "Detectron models for Object Detection 558(Disclaimer: this is work in progress and does not feature all the functionalities of detectron.PyTorchCV"

                            },

                            {

                                num: NumberInt("285"),

                                value: "GAN-CLS 557This is an experimental tensorflow implementation of synthesizing images.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("286"),

                                value: "AttGAN 556Tensorflow implementation of AttGAN - Arbitrary Facial Attribute Editing: Only Change What You Want\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("287"),

                                value: "PyTorch-progressive_growing_of_gans 554PyTorch implementation of Progressive Growing of GANs for Improved Quality, Stability, and Variation.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("288"),

                                value: "tensorflow value iteration networks 550TensorFlow implementation of the Value Iteration Networks (NIPS '16) paperTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("289"),

                                value: "detecto 549Detecto is a Python package that allows you to build.md fully-functioning computer vision and object detection models with just 5 lines of code.PyTorchCV"

                            },

                            {

                                num: NumberInt("290"),

                                value: "Multilabel timeseries classification with LSTM 547 Tensorflow implementation of paper: Learning to Diagnose with LSTM Recurrent Neural Networks.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("291"),

                                value: "SpecAugment 546A Implementation of SpecAugment with Tensorflow & Pytorch, introduced by Google BrainPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("292"),

                                value: "swin transformer pytorch 546Implementation of the Swin Transformer in PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("293"),

                                value: "ConvCRF 544This repository contains the reference implementation for our proposed Convolutional CRFs.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("294"),

                                value: "neural_sp 543End-to-end ASR/LM implementation with PyTorchPyTorchNLPAudioGraph"

                            },

                            {

                                num: NumberInt("295"),

                                value: "dropblock 543Implementation of DropBlock: A regularization method for convolutional networks in PyTorch.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("296"),

                                value: "reinforcement learning algorithms 543This repository contains most of pytorch implementation based classic deep reinforcement learning algorithms, including - DQN, DDQN, Dueling Network, DDPG, SAC, A2C, PPO, TRPO. (More algorithms are still in progress)PyTorchRL"

                            },

                            {

                                num: NumberInt("297"),

                                value: "deep transfer learning 542A collection of implementations of deep domain adaptation algorithmsPyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("298"),

                                value: "DANN 538pytorch implementation of Domain-Adversarial Training of Neural NetworksPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("299"),

                                value: "xlnet Pytorch 537Simple XLNet implementation with Pytorch WrapperPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("300"),

                                value: "pytorch deform conv v2 531PyTorch implementation of Deformable ConvNets v2 (Modulated Deformable Convolution)PyTorchCV"

                            },

                            {

                                num: NumberInt("301"),

                                value: "Sentence VAE 527PyTorch Re-Implementation of \"Generating Sentences from a Continuous Space\" by Bowman et al 2015 https://arxiv.org/abs/1511.06349PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("302"),

                                value: "EAST 525This is a pytorch re-implementation of EAST: An Efficient and Accurate Scene Text Detector.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("303"),

                                value: "Deep Metric Learning Baselines 521PyTorch Implementation for Deep Metric Learning PipelinesPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("304"),

                                value: "rl_a3c_pytorch 519Reinforcement learning with implementation of A3C LSTM for Atari 2600. \nPyTorchRL"

                            },

                            {

                                num: NumberInt("305"),

                                value: "indrnn 517TensorFlow implementation of Independently Recurrent Neural NetworksTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("306"),

                                value: "seq2seq.pytorch 517Sequence-to-Sequence learning using PyTorch\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("307"),

                                value: "pspnet-pytorch 516PyTorch implementation of PSPNet segmentation network\nPyTorchCV"

                            },

                            {

                                num: NumberInt("308"),

                                value: "jaxopt 516Hardware accelerated, batchable and differentiable optimizers in JAX.JAXNLP"

                            },

                            {

                                num: NumberInt("309"),

                                value: "how do vits work 510(ICLR 2022 Spotlight) Official PyTorch implementation of \"How Do Vision Transformers Work?\"PyTorchCV"

                            },

                            {

                                num: NumberInt("310"),

                                value: "Neural Caption Generator 508Implementation of \"Show and Tell\"\nTensorFlowNLP"

                            },

                            {

                                num: NumberInt("311"),

                                value: "T2F 507Text-to-Face generation using Deep Learning. This project combines two of the recent architectures StackGAN and ProGAN for synthesizing faces from textual descriptions.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("312"),

                                value: "Densenet Tensorflow 503Simple Tensorflow implementation of Densenet using Cifar10, MNISTTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("313"),

                                value: "Pytorch Medical Segmentation 501This repository is an unoffical PyTorch implementation of Medical segmentation in 2D and 3D.PyTorchCV"

                            },

                            {

                                num: NumberInt("314"),

                                value: "pytorch inpainting with partial conv 501Unofficial pytorch implementation of 'Image Inpainting for Irregular Holes Using Partial Convolutions' [Liu+, ECCV2018]PyTorchCV"

                            },

                            {

                                num: NumberInt("315"),

                                value: "BigGAN pytorch 500Pytorch implementation of LARGE SCALE GAN TRAINING FOR HIGH FIDELITY NATURAL IMAGE SYNTHESIS (BigGAN)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("316"),

                                value: "Transformer TTS 499A Pytorch Implementation of \"Neural Speech Synthesis with Transformer Network\"PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("317"),

                                value: "PyTorch_Speaker_Verification 499PyTorch implementation of \"Generalized End-to-End Loss for Speaker Verification\" by Wan, Li et al. PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("318"),

                                value: "brain-segmentation-pytorch 497U-Net implementation in PyTorch for FLAIR abnormality segmentation in brain MRI. \nPyTorchCV"

                            },

                            {

                                num: NumberInt("319"),

                                value: "cnn-vis 496Inspired by Google's recent Inceptionism blog post, cnn-vis is an open-source tool that lets you use convolutional neural networks to generate images.CaffeCV"

                            },

                            {

                                num: NumberInt("320"),

                                value: "tensorflow_PSENet 495This is a tensorflow re-implementation of PSENet: Shape Robust Text Detection with Progressive Scale Expansion Network.My blog:TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("321"),

                                value: "LPRNet_Pytorch 495Pytorch Implementation For LPRNet, A High Performance And Lightweight License Plate Recognition Framework. PyTorchCV"

                            },

                            {

                                num: NumberInt("322"),

                                value: "mtan 495The implementation of \"End-to-End Multi-Task Learning with Attention\" [CVPR 2019].PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("323"),

                                value: "text classification models tf 493Tensorflow implementations of Text Classification Models.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("324"),

                                value: "pytorch soft actor critic 493PyTorch implementation of soft actor criticPyTorchRL"

                            },

                            {

                                num: NumberInt("325"),

                                value: "panoptic deeplab 491This is Pytorch re-implementation of our CVPR 2020 paper \"Panoptic-DeepLab: A Simple, Strong, and Fast Baseline for Bottom-Up Panoptic Segmentation\" (https://arxiv.org/abs/1911.10194)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("326"),

                                value: "FixMatch pytorch 490Unofficial PyTorch implementation of \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("327"),

                                value: "DeepRL TensorFlow2 488 Simple implementations of various popular Deep Reinforcement Learning algorithms using TensorFlow2TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("328"),

                                value: "yolov4 custom functions 488A Wide Range of Custom Functions for YOLOv4, YOLOv4-tiny, YOLOv3, and YOLOv3-tiny Implemented in TensorFlow, TFLite, and TensorRT.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("329"),

                                value: "pro_gan_pytorch 486ProGAN package implemented as an extension of PyTorch nn.Module.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("330"),

                                value: "FloWaveNet 485A Pytorch implementation of \"FloWaveNet: A Generative Flow for Raw Audio\"PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("331"),

                                value: "tensorflow reinforce 483Implementations of Reinforcement Learning Models in TensorflowTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("332"),

                                value: "two stream pytorch 482PyTorch implementation of  two-stream networks for video action recognitionPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("333"),

                                value: "Conditional PixelCNN decoder 481Tensorflow implementation of Gated Conditional Pixel Convolutional Neural NetworkTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("334"),

                                value: "rnn nlu 478A TensorFlow implementation of Recurrent Neural Networks for Sequence Classification and Sequence LabelingTensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("335"),

                                value: "tfoptflow 477Optical Flow Prediction with TensorFlow. Implements \"PWC-Net: CNNs for Optical Flow Using Pyramid, Warping, and Cost Volume,\" by Deqing Sun et al. (CVPR 2018)TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("336"),

                                value: "SimCLR 477PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al.PyTorchCV"

                            },

                            {

                                num: NumberInt("337"),

                                value: "Faster RCNN+Focal Loss 476The code is unofficial version for focal loss for Dense Object Detection.MXNetCV"

                            },

                            {

                                num: NumberInt("338"),

                                value: "hourglasstensorlfow 474Tensorflow implementation of Stacked Hourglass Networks for Human Pose Estimation TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("339"),

                                value: "MonoDepth PyTorch 473Unofficial implementation of Unsupervised Monocular Depth Estimation neural network MonoDepth in PyTorchPyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("340"),

                                value: "tensorflow mnist VAE 472Tensorflow implementation of variational auto-encoder for MNISTTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("341"),

                                value: "tf.gans comparison 471Implementations of (theoretical) generative adversarial networks and comparison without cherry-pickingTensorFlowCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("342"),

                                value: "mac network 468Implementation for the paper \"Compositional Attention Networks for Machine Reasoning\" (Hudson and Manning, ICLR 2018)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("343"),

                                value: "deepMOT 465Official Implementation of How To Train Your Deep Multi-Object TrackerPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("344"),

                                value: "cuBERT 464Fast implementation of BERT inference directly on NVIDIA (CUDA, CUBLAS) and Intel MKLTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("345"),

                                value: "Deep SVDD PyTorch 463A PyTorch implementation of the Deep SVDD anomaly detection methodPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("346"),

                                value: "Conv TasNet 462A PyTorch implementation of Conv-TasNet described in \"TasNet: Surpassing Ideal Time-Frequency Masking for Speech Separation\" with Permutation Invariant Training (PIT).PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("347"),

                                value: "glow pytorch 461pytorch implementation of openai paper \"Glow: Generative Flow with Invertible 11 Convolutions\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("348"),

                                value: "pytorch_wavelets 461Pytorch implementation of 2D Discrete Wavelet (DWT) and Dual Tree Complex Wavelet Transforms (DTCWT) and a DTCWT based ScatterNetPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("349"),

                                value: "generative-models 460Annotated, understandable, and visually interpretable PyTorch implementations of: VAE, BIRVAE, NSGAN, MMGAN, WGAN, WGANGP, LSGAN, DRAGAN, BEGAN, RaGAN, InfoGAN, fGAN, FisherGAN. \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("350"),

                                value: "vegans 460A library providing various existing GANs in PyTorch.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("351"),

                                value: "pytorch A3C 460Simple A3C implementation with pytorch + multiprocessingPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("352"),

                                value: "Few Shot Patch Based Training 460The official implementation of our SIGGRAPH 2020 paper Interactive Video Stylization Using Few-Shot Patch-Based TrainingPyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("353"),

                                value: "pytorch cpn 454A PyTorch re-implementation of CPN (Cascaded Pyramid Network for Multi-Person Pose Estimation)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("354"),

                                value: "TP GAN 453Official TP-GAN Tensorflow implementation for paper \"Beyond Face Rotation: Global and Local Perception GAN for Photorealistic and Identity Preserving Frontal View Synthesis\"TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("355"),

                                value: "PSENet.pytorch 451A pytorch re-implementation of PSENet: Shape Robust Text Detection with Progressive Scale Expansion NetworkPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("356"),

                                value: "ganilla 446Official Pytorch implementation of GANILLAPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("357"),

                                value: "Multi Task Learning PyTorch 445PyTorch implementation of multi-task learning architectures, incl. MTI-Net (ECCV2020). PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("358"),

                                value: "recurrent visual attention 444A PyTorch Implementation of \"Recurrent Models of Visual Attention\"PyTorchCVRL"

                            },

                            {

                                num: NumberInt("359"),

                                value: "pointer network tensorflow 442TensorFlow implementation of \"Pointer Networks\"TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("360"),

                                value: "libtorch yolov3 442A Libtorch implementation of the YOLO v3 object detection algorithmPyTorchCV"

                            },

                            {

                                num: NumberInt("361"),

                                value: "rl_algorithms 442Structural implementation of RL key algorithmsPyTorchCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("362"),

                                value: "U-Net 441For Brain Tumor Segmentation\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("363"),

                                value: "faceshifter 441Unofficial PyTorch Implementation for FaceShifter (https://arxiv.org/abs/1912.13457)PyTorchCV"

                            },

                            {

                                num: NumberInt("364"),

                                value: "long range arena 441Long Range Arena for Benchmarking Efficient TransformersJAXCVNLPGenerative"

                            },

                            {

                                num: NumberInt("365"),

                                value: "deep_rl 440PyTorch implementations of deep reinforcement learning algorithmsPyTorchRLGraph"

                            },

                            {

                                num: NumberInt("366"),

                                value: "TensorFlow White Paper Notes 437Annotated notes and summaries of the TensorFlow white paper, along with SVG figures and links to documentation\nTensorFlowNLP"

                            },

                            {

                                num: NumberInt("367"),

                                value: "Human Segmentation PyTorch 437Human segmentation models, training/inference code, and trained weights, implemented in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("368"),

                                value: "mixup 435Implementation of the mixup training methodPyTorchGenerative"

                            },

                            {

                                num: NumberInt("369"),

                                value: "neural style audio tf 434TensorFlow implementation for audio neural style.TensorFlowCVGenerativeAudio"

                            },

                            {

                                num: NumberInt("370"),

                                value: "tensorflow char rnn 430Char-RNN implemented using TensorFlow. TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("371"),

                                value: "MusicGenreClassification 426Academic research in the field of Deep Learning (Deep Neural Networks) and Sound Processing, Tel Aviv University.TensorFlowAudio"

                            },

                            {

                                num: NumberInt("372"),

                                value: "mctx 426Monte Carlo tree search in JAXJAXRL"

                            },

                            {

                                num: NumberInt("373"),

                                value: "joint-vae 425Pytorch implementation of JointVAE, a framework for disentangling continuous and discrete factors of variation star2\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("374"),

                                value: "deep_learning_NLP 425Keras, PyTorch, and NumPy Implementations of Deep Learning Architectures for NLPPyTorchCVNLPGraph"

                            },

                            {

                                num: NumberInt("375"),

                                value: "rexnet 425Official Pytorch implementation of ReXNet (Rank eXpansion Network) with pretrained modelsPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("376"),

                                value: "pytorch MNIST CelebA GAN DCGAN 424Pytorch implementation of Generative Adversarial Networks (GAN) and Deep Convolutional Generative Adversarial Networks (DCGAN) for MNIST and CelebA datasetsPyTorchCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("377"),

                                value: "pytorch-cpp-rl 423PyTorch C++ Reinforcement Learning\nPyTorchRL"

                            },

                            {

                                num: NumberInt("378"),

                                value: "WassersteinGAN.tensorflow 418Tensorflow implementation of Wasserstein GAN - arxiv: https://arxiv.org/abs/1701.07875TensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("379"),

                                value: "ESPCN 418A PyTorch implementation of ESPCN based on CVPR 2016 paper \"Real-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional Neural Network\"PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("380"),

                                value: "rnn from scratch 414Implementing Recurrent Neural Network from ScratchTensorFlowGraph"

                            },

                            {

                                num: NumberInt("381"),

                                value: "/pytorch-SRResNet 414Pytorch implementation for Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network arXiv:1609.04802v2 \nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("382"),

                                value: "neural-combinatorial-rl-pytorch 407PyTorch implementation of Neural Combinatorial Optimization with Reinforcement Learning.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("383"),

                                value: "fast neural style 402 pytorch implementation of fast-neural-stylePyTorchCVGraph"

                            },

                            {

                                num: NumberInt("384"),

                                value: "vedaseg 401A semantic segmentation framework by pyotrch\nPyTorchCV"

                            },

                            {

                                num: NumberInt("385"),

                                value: "ggnn.pytorch 401A PyTorch Implementation of Gated Graph Sequence Neural Networks (GGNN)PyTorchGraph"

                            },

                            {

                                num: NumberInt("386"),

                                value: "gan-lib 400Various GANs implementation\nChainerGenerative"

                            },

                            {

                                num: NumberInt("387"),

                                value: "mnist-svhn-transfer 395PyTorch Implementation of CycleGAN and SGAN for Domain Transfer (Minimal).\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("388"),

                                value: "nmtpytorch 395Neural Machine Translation Framework in PyTorch.\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("389"),

                                value: "Improved Training of Wasserstein GANs 393This is a Pytorch implementation of gan_64x64.py from Improved Training of Wasserstein GANs.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("390"),

                                value: "ARAE 392Code for the paper \"Adversarially Regularized Autoencoders for Generating Discrete Structures\" by Zhao, Kim, Zhang, Rush and LeCun.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("391"),

                                value: "Fast Pytorch 391Pytorch Tutorial, Pytorch with Google Colab, Pytorch Implementations: CNN, RNN, DCGAN, Transfer Learning, Chatbot, Pytorch Sample CodesPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("392"),

                                value: "pytorch adda 383A PyTorch implementation for Adversarial Discriminative Domain AdaptationPyTorchGenerative"

                            },

                            {

                                num: NumberInt("393"),

                                value: "JAXL 382Asynchronous, non-blocking I/O, event based PHP library  for writing custom TCP/IP client and server implementations.  From it's previous versions, library inherits a full blown stable support  for XMPP protocol stack. In v3.0, support for HTTP protocol stack was  also added.JAXNLP"

                            },

                            {

                                num: NumberInt("394"),

                                value: "conformer 381PyTorch implementation of \"Conformer: Convolution-augmented Transformer for Speech Recognition\" (INTERSPEECH 2020)PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("395"),

                                value: "score_sde_pytorch 380PyTorch implementation for Score-Based Generative Modeling through Stochastic Differential Equations (ICLR 2021, Oral)PyTorchCVGenerativeRL"

                            },

                            {

                                num: NumberInt("396"),

                                value: "SimCLR 378A PyTorch implementation of SimCLR based on ICML 2020 paper \"A Simple Framework for Contrastive Learning of Visual Representations\"PyTorchCV"

                            },

                            {

                                num: NumberInt("397"),

                                value: "sparse to dense.pytorch 373ICRA 2018 \"Sparse-to-Dense: Depth Prediction from Sparse Depth Samples and a Single Image\" (PyTorch Implementation)PyTorchCVSelf-Supervised"

                            },

                            {

                                num: NumberInt("398"),

                                value: "piwise 372Pixel-wise segmentation on VOC2012 dataset using pytorch.  \nPyTorchCV"

                            },

                            {

                                num: NumberInt("399"),

                                value: "3DMPPE_ROOTNET_RELEASE 372Official PyTorch implementation of \"Camera Distance-aware Top-down Approach for 3D Multi-person Pose Estimation from a Single RGB Image\", ICCV 2019PyTorchCV"

                            },

                            {

                                num: NumberInt("400"),

                                value: "paragraph vectors 370:page_facing_up: A PyTorch implementation of Paragraph Vectors (doc2vec).PyTorchNLPGraph"

                            },

                            {

                                num: NumberInt("401"),

                                value: "lagom 368Lagom: A light PyTorch infrastructure to quickly prototype reinforcement learning algorithms.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("402"),

                                value: "pytorch vdsr 367VDSR (CVPR2016) pytorch implementation PyTorchCV"

                            },

                            {

                                num: NumberInt("403"),

                                value: "Neural-IMage-Assessment 366A PyTorch Implementation of Neural IMage Assessment. \nPyTorchCV"

                            },

                            {

                                num: NumberInt("404"),

                                value: "Siamese RPN pytorch 362This is a re-implementation of Siamese-RPN with pytorch, which is CVPR2018 spotlight.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("405"),

                                value: "pytorch ddpg 362Implementation of the Deep Deterministic Policy Gradient (DDPG) using PyTorchPyTorchCVRL"

                            },

                            {

                                num: NumberInt("406"),

                                value: "pix2pix-pytorch 359PyTorch implementation of \"Image-to-Image Translation Using Conditional Adversarial Networks\".   \nPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("407"),

                                value: "One Shot Object Detection 359Implementation of One-Shot Object Detection with Co-Attention and Co-Excitation in PytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("408"),

                                value: "video caption.pytorch 359pytorch implementation of video captioningPyTorchCVNLPRL"

                            },

                            {

                                num: NumberInt("409"),

                                value: "pytorch CortexNet 357PyTorch implementation of the CortexNet predictive modelPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("410"),

                                value: "dgcnn.pytorch 356A PyTorch implementation of Dynamic Graph CNN for Learning on Point Clouds (DGCNN)PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("411"),

                                value: "ADGAN 354The Implementation of paper \"Controllable Person Image Synthesis with Attribute-Decomposed GAN\" CVPR 2020 (Oral); Pose and Appearance Attributes Transfer;PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("412"),

                                value: "TTNet Real time Analysis System for Table Tennis Pytorch 354Unofficial implementation of \"TTNet: Real-time temporal and spatial video analysis of table tennis\" (CVPR 2020)PyTorchCV"

                            },

                            {

                                num: NumberInt("413"),

                                value: "DeepSIM 353Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\" (ICCV 2021 Oral)PyTorchCV"

                            },

                            {

                                num: NumberInt("414"),

                                value: "opencv_transforms 350OpenCV implementation of Torchvision's image augmentations\nPyTorchCV"

                            },

                            {

                                num: NumberInt("415"),

                                value: "pytorch_RVAE 348Recurrent Variational Autoencoder that generates sequential data implemented in pytorch.   \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("416"),

                                value: "pytorch_RVAE 348Recurrent Variational Autoencoder that generates sequential data implemented with pytorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("417"),

                                value: "pytorch MNIST CelebA cGAN cDCGAN 346Pytorch implementation of conditional Generative Adversarial Networks (cGAN) and conditional Deep Convolutional Generative Adversarial Networks (cDCGAN) for MNIST datasetPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("418"),

                                value: "PyTorch BYOL 346PyTorch implementation of Bootstrap Your Own Latent: A New Approach to Self-Supervised LearningPyTorchUnsupervisedSelf-Supervised"

                            },

                            {

                                num: NumberInt("419"),

                                value: "pytorch-trpo(Hessian-vector product version) 344This is a PyTorch implementation of \"Trust Region Policy Optimization (TRPO)\" with exact Hessian-vector product instead of finite differences approximation.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("420"),

                                value: "Text to Image Synthesis 344Pytorch implementation of Generative Adversarial Text-to-Image Synthesis paperPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("421"),

                                value: "pytorch faster rcnn 344pytorch based implementation faster rcnnPyTorchCV"

                            },

                            {

                                num: NumberInt("422"),

                                value: "pytorch segmentation 343PyTorch implementation for semantic segmentation (DeepLabV3+, UNet, etc.)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("423"),

                                value: "TokenLabeling 342Pytorch implementation of \"All Tokens Matter: Token Labeling for Training Better Vision Transformers\"PyTorchCV"

                            },

                            {

                                num: NumberInt("424"),

                                value: "Pytorch Correlation extension 341Custom implementation of Corrleation ModulePyTorchGenerative"

                            },

                            {

                                num: NumberInt("425"),

                                value: "adversarial examples pytorch 339Implementation of Papers on Adversarial ExamplesPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("426"),

                                value: "capsule_net_pytorch 339Readable implementation of a Capsule Network as described in \"Dynamic Routing Between Capsules\" [Hinton et. al.]PyTorchCV"

                            },

                            {

                                num: NumberInt("427"),

                                value: "SDEdit 338PyTorch implementation for SDEdit: Image Synthesis and Editing with Stochastic Differential EquationsPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("428"),

                                value: "jaxrl 338JAX (Flax) implementation of algorithms for Deep Reinforcement Learning with continuous action spaces. JAXCVNLPRL"

                            },

                            {

                                num: NumberInt("429"),

                                value: "GGHL 337This is the implementation of GGHL (A General Gaussian Heatmap Label Assignment for Arbitrary-Oriented Object Detection)PyTorchCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("430"),

                                value: "img_classification_pk_pytorch 336Quickly comparing your image classification models with the state-of-the-art models (such as DenseNet, ResNet, ...)\nPyTorchCV"

                            },

                            {

                                num: NumberInt("431"),

                                value: "pytorch softdtw cuda 334Fast CUDA implementation of (differentiable) soft dynamic time warping for PyTorch using NumbaPyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("432"),

                                value: "transformer 334Implementation of \"Attention Is All You Need\" using pytorchPyTorchNLP"

                            },

                            {

                                num: NumberInt("433"),

                                value: "Attention_ocr.pytorch 334This repository implements the the encoder and decoder model with attention model for OCRPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("434"),

                                value: "Revisiting_Single_Depth_Estimation 333official implementation of \"Revisiting Single Image Depth Estimation: Toward Higher Resolution Maps with Accurate Object Boundaries\"PyTorchCV"

                            },

                            {

                                num: NumberInt("435"),

                                value: "MS G3D 333[CVPR 2020 Oral] PyTorch implementation of \"Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition\"PyTorchGraph"

                            },

                            {

                                num: NumberInt("436"),

                                value: "pytorch DRL 331PyTorch implementations of various Deep Reinforcement Learning (DRL) algorithms for both single agent and multi-agent.PyTorchRL"

                            },

                            {

                                num: NumberInt("437"),

                                value: "Deep Neural Networks are Easily Fooled 327High Confidence Predictions for Unrecognizable Images\nPyTorchCV"

                            },

                            {

                                num: NumberInt("438"),

                                value: "shapenet 327PyTorch implementation of \"Super-Realtime Facial Landmark Detection and Shape Fitting by Deep Regression of Shape Model Parameters\" predicting facial landmarks with up to 400 FPSPyTorchCV"

                            },

                            {

                                num: NumberInt("439"),

                                value: "DeconvNet 323Learning Deconvolution Network for Semantic Segmentation\nCaffeCV"

                            },

                            {

                                num: NumberInt("440"),

                                value: "Speech Recognition 323Speech Recognition with the caffe deep learning frameworkCaffeNLPAudio"

                            },

                            {

                                num: NumberInt("441"),

                                value: "PyTorch SRGAN 323A modern PyTorch implementation of SRGANPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("442"),

                                value: "prog_gans_pytorch_inference 320PyTorch inference for \"Progressive Growing of GANs\" with CelebA snapshot.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("443"),

                                value: "torch ngp 320A pytorch CUDA extension implementation of instant-ngp (sdf and nerf), with a GUI.PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("444"),

                                value: "RobustBench 316A collection of robust models for RobustBench: a standardized adversarial robustness benchmark\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("445"),

                                value: "pytorch GANs 315My implementation of various GAN (generative adversarial networks) architectures like vanilla GAN (Goodfellow et al.), cGAN (Mirza et al.), DCGAN (Radford et al.), etc.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("446"),

                                value: "**Faster_RCNN_for_DOTA** 315This is the official repo of paper _DOTA: A Large-scale Dataset for Object Detection in Aerial Images_.MXNetCV"

                            },

                            {

                                num: NumberInt("447"),

                                value: "PyTorch ENet 314PyTorch implementation of ENetPyTorchCV"

                            },

                            {

                                num: NumberInt("448"),

                                value: "PNASNet.pytorch 313PyTorch implementation of PNASNet-5 on ImageNet. \nPyTorchCV"

                            },

                            {

                                num: NumberInt("449"),

                                value: "nfnets pytorch 312NFNets and Adaptive Gradient Clipping for SGD implemented in PyTorch. Find explanation at tourdeml.github.io/blog/PyTorchCV"

                            },

                            {

                                num: NumberInt("450"),

                                value: "machin 312Reinforcement learning library(framework) designed for PyTorch, implements DQN, DDPG, A2C, PPO, SAC, MADDPG, A3C, APEX, IMPALA ...PyTorchNLPGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("451"),

                                value: "pytorch vq vae 309PyTorch implementation of VQ-VAE by Aron van den Oord et al.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("452"),

                                value: "SelecSLS Pytorch 308Reference ImageNet implementation of SelecSLS CNN architecture proposed in the SIGGRAPH 2020 paper \"XNect: Real-time Multi-Person 3D Motion Capture with a Single RGB Camera\". The repository also includes code for pruning the model based on implicit sparsity emerging from adaptive gradient descent methods, as detailed in the CVPR 2019 paper \"On implicit filter level sparsity in Convolutional Neural Networks\".PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("453"),

                                value: "VQ VAE 307Minimalist implementation of VQ-VAE in PytorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("454"),

                                value: "PointRend PyTorch 305A PyTorch implementation of PointRend: Image Segmentation as RenderingPyTorchCV"

                            },

                            {

                                num: NumberInt("455"),

                                value: "DCGAN 304Deep Convolutional Generative Adversarial Networks\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("456"),

                                value: "softmax splatting 302an implementation of softmax splatting for differentiable forward warping using PyTorchPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("457"),

                                value: "Fast SCNN pytorch 302A PyTorch Implementation of Fast-SCNN: Fast Semantic Segmentation NetworkPyTorchCV"

                            },

                            {

                                num: NumberInt("458"),

                                value: "dd3d 302Official PyTorch implementation of DD3D: Is Pseudo-Lidar needed for Monocular 3D Object detection? (ICCV 2021), Dennis Park*, Rares Ambrus*, Vitor Guizilini, Jie Li, and Adrien Gaidon.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("459"),

                                value: "FMix 301Official implementation of 'FMix: Enhancing Mixed Sample Data Augmentation'PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("460"),

                                value: "Seg-Uncertainty 299Unsupervised Scene Adaptation with Memory Regularization in vivo, In IJCAI 2020.\nPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("461"),

                                value: "mot_neural_solver 299Official PyTorch implementation of \"Learning a Neural Solver for Multiple Object Tracking\" (CVPR 2020 Oral).PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("462"),

                                value: "DeLF pytorch 298PyTorch Implementation of \"Large-Scale Image Retrieval with Attentive Deep Local Features\"PyTorchCV"

                            },

                            {

                                num: NumberInt("463"),

                                value: "Total3DUnderstanding 297Implementation of CVPR'20 Oral: Total3DUnderstanding: Joint Layout, Object Pose and Mesh Reconstruction for Indoor Scenes from a Single ImagePyTorchCV"

                            },

                            {

                                num: NumberInt("464"),

                                value: "AI Art 296PyTorch (and PyTorch Lightning) implementation of Neural Style Transfer, Pix2Pix, CycleGAN, and Deep Dream!PyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("465"),

                                value: "ESRNN GPU 295PyTorch GPU implementation of the ES-RNN model for time series forecastingPyTorchGenerative"

                            },

                            {

                                num: NumberInt("466"),

                                value: "Loss_ToolBox PyTorch 294PyTorch Implementation of Focal Loss and Lovasz-Softmax LossPyTorchCV"

                            },

                            {

                                num: NumberInt("467"),

                                value: "Score CAM 292PyTorch implementation of Score-CAMPyTorchGenerative"

                            },

                            {

                                num: NumberInt("468"),

                                value: "s vae pytorch 291Pytorch implementation of Hyperspherical Variational Auto-EncodersPyTorchGenerative"

                            },

                            {

                                num: NumberInt("469"),

                                value: "get started with JAX 288The purpose of this repo is to make it easy to get started with JAX, Flax, and Haiku. It contains my \"Machine Learning with JAX\" series of tutorials (YouTube videos and Jupyter Notebooks) as well as the content I found useful while learning about the JAX ecosystem.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("470"),

                                value: "FLAME_PyTorch 287This is a implementation of the 3D FLAME model in PyTorchPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("471"),

                                value: "pytorch ddpg naf 285Implementation of algorithms for continuous control (DDPG and NAF).PyTorchRL"

                            },

                            {

                                num: NumberInt("472"),

                                value: "PytorchWaveNetVocoder 283WaveNet-Vocoder implementation with pytorch.PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("473"),

                                value: "pytorch_simple_CenterNet_45 282A simple pytorch implementation of CenterNet (Objects as Points)PyTorchCV"

                            },

                            {

                                num: NumberInt("474"),

                                value: "3D BoundingBox 281PyTorch implementation for 3D Bounding Box Estimation Using Deep Learning and GeometryPyTorchCV"

                            },

                            {

                                num: NumberInt("475"),

                                value: "DANN_py3 281python 3 pytorch implementation of DANNPyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("476"),

                                value: "AGE 280Code for paper \"Adversarial Generator-Encoder Networks\" by Dmitry Ulyanov, Andrea Vedaldi and Victor Lempitsky which can be found here \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("477"),

                                value: "Learning to Communicate with Deep Multi-Agent Reinforcement Learning 280Pytorch implementation of  Learning to Communicate with Deep Multi-Agent Reinforcement Learning paper.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("478"),

                                value: "GAN Tutorial 280Simple Implementation of many GAN models with PyTorch.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("479"),

                                value: "PyTorch Beam Search Decoding 279PyTorch implementation of beam search decoding for seq2seq modelsPyTorchNLP"

                            },

                            {

                                num: NumberInt("480"),

                                value: "Coupled Face Generation 274This is the open source repository for the Coupled Generative Adversarial Network (CoupledGAN or CoGAN) work.CaffeGenerative"

                            },

                            {

                                num: NumberInt("481"),

                                value: "Neural-IMage-Assessment 2 272A PyTorch Implementation of Neural IMage Assessment.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("482"),

                                value: "fastseg 272 PyTorch implementation of MobileNetV3 for real-time semantic segmentation, with pretrained weights & state-of-the-art performancePyTorchCVNLP"

                            },

                            {

                                num: NumberInt("483"),

                                value: "FullSubNet 271PyTorch implementation of \"FullSubNet: A Full-Band and Sub-Band Fusion Model for Real-Time Single-Channel Speech Enhancement.\"PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("484"),

                                value: "tacotron_pytorch 270PyTorch implementation of Tacotron speech synthesis model. \nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("485"),

                                value: "Wasserstein AutoEncoders 269PyTorch implementation of Wasserstein Auto-EncodersPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("486"),

                                value: "incremental_learning.pytorch 269A collection of incremental learning paper implementations including PODNet (ECCV20) and Ghost (CVPR-W21).PyTorchCV"

                            },

                            {

                                num: NumberInt("487"),

                                value: "MobileNetV3 Pytorch 267Implementing Searching for MobileNetV3 paper using PytorchPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("488"),

                                value: "MnasNet PyTorch 266A PyTorch implementation of Mnasnet: MnasNet: Platform-Aware Neural Architecture Search for Mobile.PyTorchCV"

                            },

                            {

                                num: NumberInt("489"),

                                value: "social lstm 265Social LSTM implementation in PyTorchPyTorchNLP"

                            },

                            {

                                num: NumberInt("490"),

                                value: "high fidelity generative compression 263Pytorch implementation of High-Fidelity Generative Image Compression + Routines for neural image compressionPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("491"),

                                value: "StyleGAN.pytorch 263A PyTorch implementation for StyleGAN with full features.PyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("492"),

                                value: "pytorch unet 262Tunable U-Net implementation in PyTorchPyTorchCVNLPHealth"

                            },

                            {

                                num: NumberInt("493"),

                                value: "RTM3D 261Unofficial PyTorch implementation of \"RTM3D: Real-time Monocular 3D Detection from Object Keypoints for Autonomous Driving\" (ECCV 2020)PyTorchCV"

                            },

                            {

                                num: NumberInt("494"),

                                value: "deform_conv_pytorch 260PyTorch Implementation of Deformable ConvolutionPyTorchGenerative"

                            },

                            {

                                num: NumberInt("495"),

                                value: "NeuralCompression 260A collection of tools for neural compression enthusiasts.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("496"),

                                value: "BEGAN-pytorch 259PyTorch implementation of BEGAN: Boundary Equilibrium Generative Adversarial Networks.  \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("497"),

                                value: "DORN_pytorch 257PyTorch implementation of Deep Ordinal Regression Network for Monocular Depth EstimationPyTorchCV"

                            },

                            {

                                num: NumberInt("498"),

                                value: "InfoGAN PyTorch 257PyTorch Implementation of InfoGANPyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("499"),

                                value: "rl_games 257RL implementationsPyTorchNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("500"),

                                value: "Proxy Anchor CVPR2020 255Official PyTorch Implementation of Proxy Anchor Loss for Deep Metric Learning, CVPR 2020PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("501"),

                                value: "Text Summarizer Pytorch 255Pytorch implementation of \"A Deep Reinforced Model for Abstractive Summarization\" paper and pointer generator networkPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("502"),

                                value: "SuperGo 255A student implementation of Alpha Go ZeroPyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("503"),

                                value: "Video Dataset Loading Pytorch 255Generic PyTorch dataset implementation to load and augment VIDEOS for deep learning training loops.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("504"),

                                value: "pna 254Implementation of Principal Neighbourhood Aggregation for Graph Neural Networks in PyTorch, DGL and PyTorch GeometricPyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("505"),

                                value: "DFL CNN 253This is a pytorch re-implementation of Learning a Discriminative Filter Bank Within a CNN for Fine-Grained RecognitionPyTorchCV"

                            },

                            {

                                num: NumberInt("506"),

                                value: "CNN-LSTM-CTC 253I realize three different models for text recognition, and all of them consist of CTC loss layer to realize no segmentation for text images.MXNetCV"

                            },

                            {

                                num: NumberInt("507"),

                                value: "pytorch LapSRN 252Pytorch implementation for LapSRN (CVPR2017)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("508"),

                                value: "samplernn-pytorch 250PyTorch implementation of SampleRNN: An Unconditional End-to-End Neural Audio Generation Model. \nPyTorchAudio"

                            },

                            {

                                num: NumberInt("509"),

                                value: "prototypical network pytorch 250A re-implementation of \"Prototypical Networks for Few-shot Learning\"PyTorchCV"

                            },

                            {

                                num: NumberInt("510"),

                                value: "siren 248PyTorch implementation of Sinusodial Representation networks (SIREN)PyTorchCV"

                            },

                            {

                                num: NumberInt("511"),

                                value: "nonauto-nmt 247PyTorch Implementation of \"Non-Autoregressive Neural Machine Translation\"\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("512"),

                                value: "wildcat.pytorch 247PyTorch implementation of \"WILDCAT: Weakly Supervised Learning of Deep ConvNets for Image Classification, Pointwise Localization and Segmentation\", CVPR 2017PyTorchCV"

                            },

                            {

                                num: NumberInt("513"),

                                value: "Neural machine translation between the writings of Shakespeare and modern English using TensorFlow 245This performs a monolingual translation, going from modern English to Shakespeare and vice-versa.\nTensorFlowNLP"

                            },

                            {

                                num: NumberInt("514"),

                                value: "GST Tacotron 245 A PyTorch implementation of Style Tokens: Unsupervised Style Modeling, Control and Transfer in End-to-End Speech SynthesisPyTorchNLPUnsupervisedAudio"

                            },

                            {

                                num: NumberInt("515"),

                                value: "StyleCariGAN 245[SIGGRAPH 2021] Official implementation of \"StyleCariGAN: Caricature Generation via StyleGAN Feature Map Modulation\"PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("516"),

                                value: "pyhpc benchmarks 245A suite of benchmarks for CPU and GPU performance of the most popular high-performance libraries for Python :rocket:JAXGenerative"

                            },

                            {

                                num: NumberInt("517"),

                                value: "RankSRGAN 244ICCV 2019 (oral) RankSRGAN: Generative Adversarial Networks with Ranker for Image Super-Resolution. PyTorch implementationPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("518"),

                                value: "ImageNet 244This implements training of popular model architectures, such as AlexNet, ResNet and VGG on the ImageNet dataset(Now we supported alexnet, vgg, resnet, squeezenet, densenet)PyTorchCV"

                            },

                            {

                                num: NumberInt("519"),

                                value: "PyTorch Image Retrieval 241A PyTorch framework for an image retrieval task including implementation of N-pair Loss (NIPS 2016) and Angular Loss (ICCV 2017).PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("520"),

                                value: "pytorch deepdream 240PyTorch implementation of DeepDream algorithm (Mordvintsev et al.). Additionally I've included playground.py to help you better understand basic concepts behind the algo.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("521"),

                                value: "SSD variants 240PyTorch implementation of several SSD based object detection algorithms.PyTorchCV"

                            },

                            {

                                num: NumberInt("522"),

                                value: "mandarin tts 240Chinese Mandarin tts text-to-speech   ()   , by fastspeech 2 , implemented in pytorch, using waveglow as vocoder,  with biaobei and aishell3 datasetsPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("523"),

                                value: "unet pytorch 239U-Net implementation for PyTorch based on https://arxiv.org/abs/1505.04597PyTorchCV"

                            },

                            {

                                num: NumberInt("524"),

                                value: "R C3D.pytorch 239R-C3D pytorch implementationPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("525"),

                                value: "adversarial-autoencoder 239Adversarial-autoencoder\nChainerGenerative"

                            },

                            {

                                num: NumberInt("526"),

                                value: "my awesome AI bookmarks 238Curated list of my reads, implementations and core concepts of Artificial Intelligence, Deep Learning, Machine Learning by best folk in the world.PyTorchCVNLPGenerativeRLUnsupervisedAudioGraph"

                            },

                            {

                                num: NumberInt("527"),

                                value: "pytorch_graph rel 237A PyTorch implementation of GraphRelPyTorchGraph"

                            },

                            {

                                num: NumberInt("528"),

                                value: "Deep SAD PyTorch 237A PyTorch implementation of Deep SAD, a deep Semi-supervised Anomaly Detection method.PyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("529"),

                                value: "mixture of experts 237PyTorch Re-Implementation of \"The Sparsely-Gated Mixture-of-Experts Layer\" by Noam Shazeer et al. https://arxiv.org/abs/1701.06538PyTorchGenerative"

                            },

                            {

                                num: NumberInt("530"),

                                value: "transformer pytorch 236Transformer implementation in PyTorch.PyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("531"),

                                value: "DeepLabv3.pytorch 235PyTorch implementation of DeepLabv3PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("532"),

                                value: "universal-triggers 230Universal Adversarial Triggers for Attacking and Analyzing NLP (EMNLP 2019)\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("533"),

                                value: "timeseries_fastai 230fastai V2 implementation of Timeseries classification papers.PyTorchCVNLPAudio"

                            },

                            {

                                num: NumberInt("534"),

                                value: "PortaSpeech 230PyTorch Implementation of PortaSpeech: Portable and High-Quality Generative Text-to-SpeechPyTorchNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("535"),

                                value: "pytorch_mpiigaze 229A PyTorch implementation of MPIIGaze and MPIIFaceGazePyTorchGenerative"

                            },

                            {

                                num: NumberInt("536"),

                                value: "fast neural style pytorch 227Fast Neural Style Transfer implementation in PyTorch :art: :art: :art:PyTorchCVGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("537"),

                                value: "DETReg 227Official implementation of the CVPR 2022 paper \"DETReg: Unsupervised Pretraining with Region Priors for Object Detection\".PyTorchCVGenerativeRLUnsupervisedAudioSelf-Supervised"

                            },

                            {

                                num: NumberInt("538"),

                                value: "pointMLP pytorch 227[ICLR 2022 poster] Official PyTorch implementation of \"Rethinking Network Design and Local Geometry in Point Cloud: A Simple Residual MLP Framework\"PyTorchCVAudio"

                            },

                            {

                                num: NumberInt("539"),

                                value: "routing transformer 226Fully featured implementation of Routing TransformerPyTorchSelf-Supervised"

                            },

                            {

                                num: NumberInt("540"),

                                value: "UniversalVocoding 226A PyTorch implementation of \"Robust Universal Neural Vocoding\"PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("541"),

                                value: "3DUNet Pytorch 2253DUNet implemented with pytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("542"),

                                value: "VQ VAE Speech 225PyTorch implementation of VQ-VAE + WaveNet by [Chorowski et al., 2019] and VQ-VAE on speech signals by [van den Oord et al., 2017]PyTorchNLPGenerativeUnsupervisedAudio"

                            },

                            {

                                num: NumberInt("543"),

                                value: "Lottery Ticket Hypothesis in Pytorch 225This repository contains a Pytorch implementation of the paper \"The Lottery Ticket Hypothesis: Finding Sparse, Trainable Neural Networks\" by Jonathan Frankle and Michael Carbin that can be easily adapted to any model/dataset.PyTorchGraph"

                            },

                            {

                                num: NumberInt("544"),

                                value: "SN GAN 224pyTorch implementation of Spectral Normalization for Generative Adversarial NetworksPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("545"),

                                value: "RetinaNet 224Focal loss for Dense Object DetectionMXNetCV"

                            },

                            {

                                num: NumberInt("546"),

                                value: "pytorch question answering 223Important paper implementations for Question Answering using PyTorchPyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("547"),

                                value: "easy neural ode 223Code for the paper \"Learning Differential Equations that are Easy to Solve\"JAXGenerative"

                            },

                            {

                                num: NumberInt("548"),

                                value: "stitchfix/fauxtograph 222Variational Auto-Encoder (VAE), Generative Adversarial Nets (GAN), VAE-GAN\nChainerGenerative"

                            },

                            {

                                num: NumberInt("549"),

                                value: "Open Source Chatbot with PyTorch 220Aim to build.md a Marvelous ChatBotPyTorchNLP"

                            },

                            {

                                num: NumberInt("550"),

                                value: "D3Feat 219[TensorFlow] Official implementation of CVPR'20 oral paper - D3Feat: Joint Learning of Dense Detection and Description of 3D Local Features https://arxiv.org/abs/2003.03164TensorFlowNLPGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("551"),

                                value: "tensorflow deeplab lfov 218DeepLab-LargeFOV implemented in tensorflowTensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("552"),

                                value: "GAN Sandbox 218Vanilla GAN implemented on top of keras/tensorflow enabling rapid experimentation & research. Branches correspond to implementations of stable GAN variations (i.e. ACGan, InfoGAN) and other promising variations of GANs like conditional and Wasserstein.TensorFlowCVNLPGenerativeHealth"

                            },

                            {

                                num: NumberInt("553"),

                                value: "OpenVINO YOLOV4 218This is implementation of YOLOv4,YOLOv4-relu,YOLOv4-tiny,YOLOv4-tiny-3l,Scaled-YOLOv4 and INT8 Quantization in OpenVINO2021.3TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("554"),

                                value: "Cross Lingual Voice Cloning 218Tacotron 2 - PyTorch implementation with faster-than-realtime inference modified to enable cross lingual voice cloning.PyTorchCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("555"),

                                value: "PPO for Beginners 218A simple and well styled PPO implementation. Based on my Medium series: https://medium.com/@eyyu/coding-ppo-from-scratch-with-pytorch-part-1-4-613dfc1b14c8.PyTorchNLPGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("556"),

                                value: "Holocron 218PyTorch implementations of recent Computer Vision tricks (ReXNet, RepVGG, Unet3p, YOLOv4, CIoU loss, AdaBelief, PolyLoss)PyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("557"),

                                value: "Sketch Generation with Drawing Process Guided by Vector Flow and Grayscale 218This is the official implementation of the AAAI 2021 accepted paper \"Sketch Generation with Drawing Process Guided by Vector Flow and Grayscale\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("558"),

                                value: "Conv TasNet 218Conv-TasNet: Surpassing Ideal Time-Frequency Magnitude Masking for Speech Separation Pytorch's ImplementPyTorchCVNLPAudio"

                            },

                            {

                                num: NumberInt("559"),

                                value: "FaceRec 217A Tensorflow implementation of Facial Recognition in PythonTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("560"),

                                value: "MagnetLoss PyTorch 216PyTorch implementation of a deep metric learning technique called \"Magnet Loss\" from Facebook AI Research (FAIR) in ICLR 2016.PyTorchCV"

                            },

                            {

                                num: NumberInt("561"),

                                value: "tfwss 215Weakly Supervised Segmentation with Tensorflow. Implements instance segmentation as described in Simple Does It: Weakly Supervised Instance and Semantic Segmentation, by Khoreva et al. (CVPR 2017).TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("562"),

                                value: "HAWQ 215Quantization library for PyTorch. Support low-precision and mixed-precision quantization, with hardware implementation through TVM.PyTorchCV"

                            },

                            {

                                num: NumberInt("563"),

                                value: "SinGAN 215Pytorch implementation of \"SinGAN: Learning a Generative Model from a Single Natural Image\"PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("564"),

                                value: "Very Deep Convolutional Networks for Large-Scale Image Recognition 214Some scripts to convert the VGG-16PyTorchCV"

                            },

                            {

                                num: NumberInt("565"),

                                value: "noise2noise pytorch 214PyTorch Implementation of Noise2Noise (Lehtinen et al., 2018)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("566"),

                                value: "siamese pytorch 213Implementation of Siamese Networks for image one-shot learning by PyTorch,  train and test model on dataset Omniglot PyTorchCV"

                            },

                            {

                                num: NumberInt("567"),

                                value: "CycleMLP 213[ICLR'22 Oral] Implementation of \"CycleMLP: A MLP-like Architecture for Dense Prediction\"PyTorchCV"

                            },

                            {

                                num: NumberInt("568"),

                                value: "gpt 2 tensorflow2.0 212OpenAI GPT2 pre-training and sequence prediction implementation in Tensorflow 2.0 TensorFlowGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("569"),

                                value: "s vae tf 211Tensorflow implementation of Hyperspherical Variational Auto-EncodersTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("570"),

                                value: "mobilenetv3 tensorflow 210Unofficial implementation of MobileNetV3 architecture described in paper Searching for MobileNetV3. TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("571"),

                                value: "nsfw resnet 210NSFW implement in pytorch&PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("572"),

                                value: "jax flows 210Normalizing Flows in JAX JAXNLPGenerative"

                            },

                            {

                                num: NumberInt("573"),

                                value: "deepmask pytorch 209PyTorch re-implementation of DeepMaskPyTorchCV"

                            },

                            {

                                num: NumberInt("574"),

                                value: "MobileNet V2 209A Complete and Simple Implementation of MobileNet-V2 in PyTorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("575"),

                                value: "lightweight_openpose 206A tensorflow implementation of Arxiv Paper \"Real-time 2D Multi-Person Pose Estimation on CPU: Lightweight OpenPose \"(https://arxiv.org/abs/1811.12004) TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("576"),

                                value: "torch_waveglow 205A PyTorch implementation of the WaveGlow: A Flow-based Generative Network for Speech Synthesis. \nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("577"),

                                value: "GLCIC PyTorch 205A High-Quality PyTorch Implementation of \"Globally and Locally Consistent Image Completion\".PyTorchCV"

                            },

                            {

                                num: NumberInt("578"),

                                value: "pyhf 205pure-Python HistFactory implementation with tensors and autodiffPyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("579"),

                                value: "Music Dance Video Synthesis 205[ACM MM 20 Oral] PyTorch implementation of Self-supervised Dance Video Synthesis Conditioned on Music PyTorchSelf-Supervised"

                            },

                            {

                                num: NumberInt("580"),

                                value: "arcface tf2 204ArcFace unofficial Implemented in Tensorflow 2.0+ (ResNet50, MobileNetV2). \"ArcFace: Additive Angular Margin Loss for Deep Face Recognition\" Published in CVPR 2019. With Colab.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("581"),

                                value: "OASIS 204Official implementation of the paper \"You Only Need Adversarial Supervision for Semantic Image Synthesis\" (ICLR 2021)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("582"),

                                value: "TENet 203Official Pytorch Implementation for Rethinking the Pipeline of Demosaicing, Denoising and Super-Resolution PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("583"),

                                value: "extending jax 203Extending JAX with custom C++ and CUDA codeJAXNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("584"),

                                value: "paac 201Open source implementation of the PAAC algorithm presented in Efficient Parallel Methods for Deep Reinforcement LearningTensorFlowCVGenerativeRL"

                            },

                            {

                                num: NumberInt("585"),

                                value: "tf2 yolov4 201A TensorFlow 2.0 implementation of YOLOv4: Optimal Speed and Accuracy of Object DetectionTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("586"),

                                value: "sinkhorn transformer 201Sinkhorn Transformer - Practical implementation of Sparse Sinkhorn AttentionPyTorchSelf-Supervised"

                            },

                            {

                                num: NumberInt("587"),

                                value: "SVHNClassifier 200A TensorFlow implementation of Multi-digit Number Recognition from Street View Imagery using Deep Convolutional Neural Networks (http://arxiv.org/pdf/1312.6082.pdf)TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("588"),

                                value: "tf insightface 200A better tensorflow implementation of deepinsight, aiming at smoothly production ready for cross-platforms. Currently only with inference, training code later.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("589"),

                                value: "Tacotron-pytorch 198Tacotron: Towards End-to-End Speech Synthesis.\nPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("590"),

                                value: "ARFlow 198The official PyTorch implementation of the paper \"Learning by Analogy: Reliable Supervision from Transformations for Unsupervised Optical Flow Estimation\".PyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("591"),

                                value: "yolo tf 197TensorFlow implementation of the YOLO (You Only Look Once)TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("592"),

                                value: "ddpg 197TensorFlow implementation of the DDPG algorithm from the paper Continuous Control with Deep Reinforcement Learning (ICLR 2016)TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("593"),

                                value: "tfdiffeq 197Tensorflow implementation of Ordinary Differential Equation Solvers with full GPU supportTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("594"),

                                value: "DiffAI 197A provable defense against adversarial examples and library for building compatible PyTorch models.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("595"),

                                value: "treex 197A Pytree Module system for Deep Learning in JAXJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("596"),

                                value: "MultiPoseNet.pytorch 196pytorch implementation of MultiPoseNet (ECCV 2018, Muhammed Kocabas et al.)PyTorchCV"

                            },

                            {

                                num: NumberInt("597"),

                                value: "NICE GAN pytorch 195Official PyTorch implementation of NICE-GAN:  Reusing Discriminators for Encoding: Towards Unsupervised Image-to-Image TranslationPyTorchCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("598"),

                                value: "gymnax 195RL Environments in JAX  JAXNLPRL"

                            },

                            {

                                num: NumberInt("599"),

                                value: "TensorFlow Xception 194TensorFlow implementation of the Xception Model by Franois CholletTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("600"),

                                value: "funsor 194Functional tensors for probabilistic programmingJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("601"),

                                value: "deep graph matching consensus 193Implementation of \"Deep Graph Matching Consensus\" in PyTorchPyTorchNLPGraph"

                            },

                            {

                                num: NumberInt("602"),

                                value: "Self Attentive tensorflow 192Tensorflow implementation of \"A Structured Self-Attentive Sentence Embedding\"TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("603"),

                                value: "bayesian neural network pytorch 192PyTorch implementation of bayesian neural network.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("604"),

                                value: "gail tf 191Tensorflow implementation of generative adversarial imitation learningTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("605"),

                                value: "unet 191Generic U-Net Tensorflow 2 implementation for semantic segmentationTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("606"),

                                value: "tensorflow mnist cnn 189MNIST classification using Convolutional NeuralNetwork. Various techniques such as data augmentation, dropout, batchnormalization, etc are implemented. TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("607"),

                                value: "Yolact_minimal 189Minimal PyTorch implementation of YOLACT.PyTorchCV"

                            },

                            {

                                num: NumberInt("608"),

                                value: "Hierarchical Actor Critic HAC PyTorch 189PyTorch implementation of Hierarchical Actor Critic (HAC) for OpenAI gym environmentsPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("609"),

                                value: "osgi jax rs connector 189An OSGi - JAX-RS 2.0 Connector, software repository available on the link belowJAXNLP"

                            },

                            {

                                num: NumberInt("610"),

                                value: "DeepMask object segmentation 188This is a Keras-based Python implementation of DeepMask- a complex deep neural network for learning object segmentation masks.KerasCV"

                            },

                            {

                                num: NumberInt("611"),

                                value: "robot grasp detection 187Detecting robot grasping positions with deep neural networks. The model is trained on Cornell Grasping Dataset. This is an implementation mainly based on the paper 'Real-Time Grasp Detection Using Convolutional Neural Networks' from Redmon and Angelova.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("612"),

                                value: "deep_image_prior 187An implementation of image reconstruction methods from Deep Image Prior (Ulyanov et al., 2017) in PyTorch.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("613"),

                                value: "Bilinear CNN TensorFlow 186This is an implementation of Bilinear CNN for fine grained visual recognition using TensorFlow.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("614"),

                                value: "pt dec 185PyTorch implementation of DEC (Deep Embedding Clustering)PyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("615"),

                                value: "BERT4Rec VAE Pytorch 185Pytorch implementation of BERT4Rec and Netflix VAE.PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("616"),

                                value: "DistanceGAN 183Pytorch implementation of \"One-Sided Unsupervised Domain Mapping\" NIPS 2017PyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("617"),

                                value: "cp vton plus 183Official implementation for \"CP-VTON+: Clothing Shape and Texture Preserving Image-Based Virtual Try-On\", CVPRW 2020PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("618"),

                                value: "MuZero 182A structured implementation of MuZeroTensorFlowCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("619"),

                                value: "GAN-weight-norm 182Code for \"On the Effects of Batch and Weight Normalization in Generative Adversarial Networks\"\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("620"),

                                value: "SceneChangeDet 182pytorch implementation of scene change detectionPyTorchCV"

                            },

                            {

                                num: NumberInt("621"),

                                value: "MIMO UNet 182MIMO-UNet - Official Pytorch ImplementationPyTorchCV"

                            },

                            {

                                num: NumberInt("622"),

                                value: "ott 182Optimal Transport tools implemented with the JAX framework, to get auto-diff, parallel and jit-able computations.JAXNLP"

                            },

                            {

                                num: NumberInt("623"),

                                value: "snli entailment 181attention model for entailment on SNLI corpus implemented in Tensorflow and KerasTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("624"),

                                value: "FOTS_TF 181This an implementation of FOTS with tensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("625"),

                                value: "scene_generation 181A PyTorch implementation of the paper: Specifying Object Attributes and Relations in Interactive Scene GenerationPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("626"),

                                value: "attentions 180PyTorch implementation of some attentions for Deep Learning Researchers. PyTorchCVNLPAudio"

                            },

                            {

                                num: NumberInt("627"),

                                value: "jaxnet 180Concise deep learning for JAXJAXGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("628"),

                                value: "Active Contour Loss 179Implementation of active contour loss functionTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("629"),

                                value: "attention is all you need paper 179Implementation of Vaswani, Ashish, et al. \"Attention is all you need.\" Advances in neural information processing systems. 2017.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("630"),

                                value: "prompt tuning 179Original Implementation of Prompt Tuning from Lester, et al, 2021JAXGenerative"

                            },

                            {

                                num: NumberInt("631"),

                                value: "tensorflow_stacked_denoising_autoencoder 178Implementation of the stacked denoising autoencoder in TensorflowTensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("632"),

                                value: "vision transformer 178Tensorflow implementation of the Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("633"),

                                value: "keras lmu 177Keras implementation of Legendre Memory UnitsTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("634"),

                                value: "CLUENER2020 177A PyTorch implementation of a BiLSTM\\BERT\\Roberta(+CRF) model for Named Entity Recognition.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("635"),

                                value: "facenet pytorch glint360k 177A PyTorch implementation of the 'FaceNet' paper for training a facial recognition model with Triplet Loss using the glint360k dataset. A pre-trained model using Triplet Loss is available for download.PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("636"),

                                value: "V2V PoseNet pytorch 176PyTorch implementation of V2V-PoseNet with IntegralPose/PoseFix lossPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("637"),

                                value: "Deeplab v2  ResNet 101  Tensorflow 175An (re-)implementation of DeepLab v2 (ResNet-101) in TensorFlow for semantic image segmentation on the PASCAL VOC 2012 dataset.TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("638"),

                                value: "adv_attack_capsnet 175Tensorflow Implementation of Adversarial Attack to Capsule NetworksTensorFlowCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("639"),

                                value: "6DRepNet 175Official Pytorch implementation of  6DRepNet: 6D Rotation representation for unconstrained head pose estimation.PyTorchCV"

                            },

                            {

                                num: NumberInt("640"),

                                value: "tensorflow rl 174Implementations of deep RL papers and random experimentationTensorFlowCVGenerativeRLUnsupervised"

                            },

                            {

                                num: NumberInt("641"),

                                value: "ntm 174TensorFlow implementation of Neural Turing Machines (NTM), with its application on one-shot learning (MANN)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("642"),

                                value: "pytorch classification uncertainty 174This repo contains a PyTorch implementation of the paper: \"Evidential Deep Learning to Quantify Classification Uncertainty\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("643"),

                                value: "few_shot_meta_learning 174Implementations of many meta-learning algorithms to solve the few-shot learning problem in PytorchPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("644"),

                                value: "tensorflow MNIST GAN DCGAN 173Tensorflow implementation of Generative Adversarial Networks (GAN) and Deep Convolutional Generative Adversarial Netwokrs for MNIST dataset.TensorFlowCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("645"),

                                value: "A Convolutional Recurrent Neural Network for Real Time Speech Enhancement 173A minimum unofficial implementation of the \"A Convolutional Recurrent Neural Network for Real-Time Speech Enhancement\" (CRN) using PyTorchPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("646"),

                                value: "faststyle 172Tensorflow implementation of fast neural style transfer.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("647"),

                                value: "multihead siamese nets 172Implementation of Siamese Neural Networks built upon multihead attention mechanism for text semantic similarity task. TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("648"),

                                value: "conv tasnet 172A PyTorch implementation of \"TasNet: Surpassing Ideal Time-Frequency Masking for Speech Separation\" (see recipes in aps framework https://github.com/funcwj/aps)PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("649"),

                                value: "SVHNClassifier 171A PyTorch implementation of Multi-digit Number Recognition from Street View Imagery using Deep Convolutional Neural Networks.  \nPyTorchCV"

                            },

                            {

                                num: NumberInt("650"),

                                value: "vgae_pytorch 171This repository implements variational graph auto encoder by Thomas Kipf. PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("651"),

                                value: "AdaFM 171CVPR2019 (oral) Modulating Image Restoration with Continual Levels via Adaptive Feature Modification Layers (AdaFM). PyTorch implementationPyTorchCV"

                            },

                            {

                                num: NumberInt("652"),

                                value: "pytorch gan collections 171PyTorch implementation of DCGAN, WGAN-GP and SNGAN. PyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("653"),

                                value: "GMVAE 171Implementation of Gaussian Mixture Variational Autoencoder (GMVAE) for Unsupervised ClusteringPyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("654"),

                                value: "pytorch_deephash 171Pytorch implementation of Deep Learning of Binary Hash Codes for Fast Image Retrieval, CVPRW 2015PyTorchCV"

                            },

                            {

                                num: NumberInt("655"),

                                value: "Pro GNN 171Implementation of the KDD 2020 paper \"Graph Structure Learning for Robust Graph Neural Networks\"PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("656"),

                                value: "tf Faster RCNN 170TensorFlow implementation of Faster R-CNNTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("657"),

                                value: "fast weights 170Implementation of the paper [Using Fast Weights to Attend to the Recent Past](https://arxiv.org/abs/1610.06258)TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("658"),

                                value: "Eye Tracker 170Implemented and improved the iTracker model proposed in the paper \"Eye Tracking for Everyone\"TensorFlowCV"

                            },

                            {

                                num: NumberInt("659"),

                                value: "capsnet traffic sign classifier 169A Tensorflow implementation of CapsNet(Capsules Net) apply on german traffic sign datasetTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("660"),

                                value: "VDCNN 169Implementation of Very Deep Convolutional Neural Network for Text ClassificationTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("661"),

                                value: "VITON HD 169Official PyTorch implementation of \"VITON-HD: High-Resolution Virtual Try-On via Misalignment-Aware Normalization\" (CVPR 2021)PyTorchCV"

                            },

                            {

                                num: NumberInt("662"),

                                value: "Mask_Guided_Portrait_Editing 169pytorch implementation of \"Mask-Guided Portrait Editing with Conditional GANs\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("663"),

                                value: "DSS pytorch 169:star: PyTorch implement of Deeply Supervised Salient Object Detection with Short ConnectionPyTorchCV"

                            },

                            {

                                num: NumberInt("664"),

                                value: "generative_adversarial_networks_101 168Keras implementations of Generative Adversarial Networks. GANs, DCGAN, CGAN, CCGAN, WGAN and LSGAN models with MNIST and CIFAR-10 datasets.TensorFlowGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("665"),

                                value: "PKD for BERT Model Compression 168pytorch implementation for Patient Knowledge Distillation for BERT Model CompressionPyTorchGenerative"

                            },

                            {

                                num: NumberInt("666"),

                                value: "PercepNet 167(Work In Progress) Unofficial implementation of PercepNet: A Perceptually-Motivated Approach for Low-Complexity, Real-Time Enhancement of Fullband SpeechPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("667"),

                                value: "reptile pytorch 167A PyTorch implementation of OpenAI's REPTILE algorithmPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("668"),

                                value: "Pix2Pix Film 166An implementation of Pix2Pix in Tensorflow for use with frames from filmsTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("669"),

                                value: "instance segmentation with discriminative loss tensorflow 166Tensorflow implementation of \"Semantic Instance Segmentation with a Discriminative Loss Function\"TensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("670"),

                                value: "MAML TensorFlow 166Faster and elegant TensorFlow Implementation of paper: Model-Agnostic Meta-Learning for Fast Adaptation of Deep NetworksTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("671"),

                                value: "Palette Image to Image Diffusion Models 166Unofficial implementation of Palette: Image-to-Image Diffusion Models by PytorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("672"),

                                value: "visual interaction networks pytorch 165This's an implementation of deepmind Visual Interaction Networks paper using pytorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("673"),

                                value: "neural processes 164Pytorch implementation of Neural Processes for functions and images :fireworks:PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("674"),

                                value: "imagenet 163TensorFlow implementation of AlexNet and its training and testing on ImageNet ILSVRC 2012 datasetTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("675"),

                                value: "Deep-Image-Analogy-PyTorch 163A python implementation of Deep-Image-Analogy based on pytorch.\nPyTorchCV"

                            },

                            {

                                num: NumberInt("676"),

                                value: "Listen Attend Spell 163A PyTorch implementation of Listen, Attend and Spell (LAS), an End-to-End ASR framework.PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("677"),

                                value: "lsoftmax pytorch 163The Pytorch Implementation of L-SoftmaxPyTorchGenerative"

                            },

                            {

                                num: NumberInt("678"),

                                value: "keras_unet_plus_plus 163keras implementation of unet plus plusPyTorchCV"

                            },

                            {

                                num: NumberInt("679"),

                                value: "capsule net pytorch 163[NO MAINTENANCE INTENDED] A PyTorch implementation of CapsNet architecture in the NIPS 2017 paper \"Dynamic Routing Between Capsules\".PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("680"),

                                value: "jaxon 163Streaming JSON parser for ElixirJAXNLP"

                            },

                            {

                                num: NumberInt("681"),

                                value: "ShuffleNetV2 pytorch 162Implementation of ShuffleNetV2 for pytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("682"),

                                value: "KerasPersonLab 161Keras-tensorflow implementation of PersonLab (https://arxiv.org/abs/1803.08225)TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("683"),

                                value: "keras adamw 161Keras/TF implementation of AdamW, SGDW, NadamW, Warm Restarts, and Learning Rate multipliersTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("684"),

                                value: "wgan gp 161Pytorch implementation of Wasserstein GANs with Gradient PenaltyPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("685"),

                                value: "FQ GAN 161Official implementation of FQ-GANPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("686"),

                                value: "Fast RCNN 160My implementation of Fast-RCNN tensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("687"),

                                value: "CCNet Pure Pytorch 160Criss-Cross Attention (2d&3d) for Semantic Segmentation in pure Pytorch with a faster and more precise implementation.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("688"),

                                value: "mdistiller 160A Knowledge Distillation Toolbox. The official implementation of https://arxiv.org/abs/2203.08679PyTorchCV"

                            },

                            {

                                num: NumberInt("689"),

                                value: "GradCache 160Run Effective Large Batch Contrastive Learning Beyond GPU/TPU Memory ConstraintJAXGraph"

                            },

                            {

                                num: NumberInt("690"),

                                value: "pytorch-seq2seq-intent-parsing 159Intent parsing and slot filling in PyTorch with seq2seq + attention\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("691"),

                                value: "DNN based_source_separation 159A PyTorch implementation of DNN-based source separation.PyTorchCVNLPRLAudio"

                            },

                            {

                                num: NumberInt("692"),

                                value: "LeNet 5 159PyTorch implementation of LeNet-5 with live visualizationPyTorchNLPGraph"

                            },

                            {

                                num: NumberInt("693"),

                                value: "Hash Embeddings 159PyTorch implementation of Hash Embeddings (NIPS 2017). Submission to the NIPS Implementation Challenge.PyTorchHealth"

                            },

                            {

                                num: NumberInt("694"),

                                value: "easy faster rcnn.pytorch 159An easy implementation of Faster R-CNN (https://arxiv.org/pdf/1506.01497.pdf) in PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("695"),

                                value: "regnet 159Pytorch implementation of network design paradigm described in the paper \"Designing Network Design Spaces\"PyTorchCV"

                            },

                            {

                                num: NumberInt("696"),

                                value: "pix2pixBEGAN.pytorch 159A pytorch implementation of pix2pix + BEGAN (Boundary Equilibrium Generative Adversarial Networks)PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("697"),

                                value: "Soft Actor Critic and Extensions 159PyTorch implementation of Soft-Actor-Critic and Prioritized Experience Replay (PER) + Emphasizing Recent Experience (ERE) + Munchausen RL + D2RL and parallel Environments. PyTorchRL"

                            },

                            {

                                num: NumberInt("698"),

                                value: "tf dcgan 158DCGAN implementation by TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("699"),

                                value: "Pytorch-DPPO 158Pytorch implementation of Distributed Proximal Policy Optimization: arxiv.org/abs/1707.02286\nPyTorchRL"

                            },

                            {

                                num: NumberInt("700"),

                                value: "TDNN 158Time delay neural network (TDNN) implementation in Pytorch using unfold methodPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("701"),

                                value: "DTA.pytorch 158Official implementation of Drop to Adapt: Learning Discriminative Features for Unsupervised Domain Adaptation presented at ICCV 2019.PyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("702"),

                                value: "adversarial-patch 156PyTorch implementation of adversarial patch. \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("703"),

                                value: "Complex YOLOv3 156PyTorch implementation of Complex-YOLO paper with YoloV3PyTorchCV"

                            },

                            {

                                num: NumberInt("704"),

                                value: "FastSpeech2 156PyTorch Implementation of FastSpeech 2 :  Fast and High-Quality End-to-End Text to SpeechPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("705"),

                                value: "INQ pytorch 156A PyTorch implementation of \"Incremental Network Quantization: Towards Lossless CNNs with Low-Precision Weights\"PyTorchCV"

                            },

                            {

                                num: NumberInt("706"),

                                value: "mildlyoverfitted 155Paper implementations from scratch and machine learning tutorialsPyTorchGenerative"

                            },

                            {

                                num: NumberInt("707"),

                                value: "pytorch dual learning 155Implementation of Dual Learning NMT on PyTorchPyTorchNLPRL"

                            },

                            {

                                num: NumberInt("708"),

                                value: "multidim positional encoding 155An implementation of 1D, 2D, and 3D positional encoding in Pytorch and TensorFlowPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("709"),

                                value: "Interaction networks_tensorflow 154Tensorflow Implementation of Interaction Networks for Learning about Objects, Relations and PhysicsTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("710"),

                                value: "tfvos 154Semi-Supervised Video Object Segmentation (VOS) with Tensorflow. Includes implementation of *MaskRNN: Instance Level Video Object Segmentation (NIPS 2017)* as part of the NIPS Paper Implementation Challenge. TensorFlowCVGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("711"),

                                value: "xcenternet 154Fast anchor free Object Detection based on CenterNet (Objects As Points) and TTFNet (Training-Time-Friendly Network). Implemented in TensorFlow 2.4+.TensorFlowCVGenerativeGraphHealth"

                            },

                            {

                                num: NumberInt("712"),

                                value: "pytorch layoutnet 154Pytorch implementation of LayoutNet.PyTorchCV"

                            },

                            {

                                num: NumberInt("713"),

                                value: "houghnet 153[ECCV-20] Official PyTorch implementation of HoughNet, a voting-based object detector.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("714"),

                                value: "Adversarial Semisupervised Semantic Segmentation 153Pytorch Implementation of \"Adversarial Learning For Semi-Supervised Semantic Segmentation\" for ICLR 2018 Reproducibility ChallengePyTorchCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("715"),

                                value: "UFO 153Official PyTorch implementation of the A Unified Transformer Framework for Co-Segmentation, Co-Saliency Detection and Video Salient Object Detection.PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("716"),

                                value: "progressive_growing_of_gans_tensorflow 152Tensorflow implementation of PROGRESSIVE GROWING OF GANS FOR IMPROVED QUALITY, STABILITY, AND VARIATIONTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("717"),

                                value: "Faster RCNN_Tensorflow 152This is a tensorflow re-implementation of Faster R-CNN: Towards Real-Time ObjectDetection with Region Proposal Networks.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("718"),

                                value: "pytorch image comp rnn 152PyTorch implementation of Full Resolution Image Compression with Recurrent Neural NetworksPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("719"),

                                value: "NGCF PyTorch 151PyTorch Implementation for Neural Graph Collaborative FilteringPyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("720"),

                                value: "meta learning lstm pytorch 151pytorch implementation of Optimization as a Model for Few-shot LearningPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("721"),

                                value: "IR Net 151This project is the PyTorch implementation of our accepted CVPR 2020 paper : forward and backward information retention for accurate binary neural networks.PyTorchCV"

                            },

                            {

                                num: NumberInt("722"),

                                value: "focal loss 150TensorFlow implementation of focal lossTensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("723"),

                                value: "torchcrepe 150Pytorch implementation of the CREPE pitch trackerPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("724"),

                                value: "soft intro vae pytorch 150[CVPR 2021 Oral] Official PyTorch implementation of Soft-IntroVAE from the paper \"Soft-IntroVAE: Analyzing and Improving Introspective Variational Autoencoders\"PyTorchCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("725"),

                                value: "role2vec 150A scalable Gensim implementation of \"Learning Role-based Graph Embeddings\" (IJCAI 2018).PyTorchGraph"

                            },

                            {

                                num: NumberInt("726"),

                                value: "unsupervised depth completion visual inertial odometry 149Tensorflow implementation of Unsupervised Depth Completion from Visual Inertial Odometry (in RA-L January 2020 & ICRA 2020)TensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("727"),

                                value: "twitter sentiment cnn 149An implementation in TensorFlow of a convolutional neural network (CNN) to perform sentiment classification on tweets.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("728"),

                                value: "sunets 149PyTorch Implementation of Stacked U-Nets (SUNets)PyTorchCV"

                            },

                            {

                                num: NumberInt("729"),

                                value: "AlphaGAN Matting 149This project is an unofficial implementation of AlphaGAN: Generative adversarial networks for natural image matting published at the BMVC 2018PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("730"),

                                value: "hififace 148Unofficial PyTorch Implementation for HifiFace (https://arxiv.org/abs/2106.09965)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("731"),

                                value: "pytorch pos tagging 148A tutorial on how to implement models for part-of-speech tagging using PyTorch and TorchText.PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("732"),

                                value: "tensorflow mnist CVAE 147Tensorflow implementation of conditional variational auto-encoder for MNISTTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("733"),

                                value: "video2tfrecord 147Easily convert RGB video data (e.g. .avi) to the TensorFlow tfrecords file format for training e.g. a NN in TensorFlow. This implementation allows to limit the number of frames per video to be stored in the tfrecords.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("734"),

                                value: "video super resolution 147 a collection of classic tensorflow & pytorch cnn models' implementationPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("735"),

                                value: "phasen 147A unofficial Pytorch implementation of Microsoft's PHASENPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("736"),

                                value: "DBCNN PyTorch 147An experimental Pytorch implementation of Blind Image Quality Assessment Using A Deep Bilinear Convolutional Neural NetworkPyTorchCV"

                            },

                            {

                                num: NumberInt("737"),

                                value: "perceiver io 147A PyTorch implementation of DeepMind's Perceiver IO with PyTorch Lightning scripts for distributed trainingPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("738"),

                                value: "DAGAN 146Fast Compressed Sensing MRI Reconstruction\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("739"),

                                value: "rcnn text classification 146Tensorflow Implementation of \"Recurrent Convolutional Neural Network for Text Classification\" (AAAI 2015)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("740"),

                                value: "Semantic Image Synthesis via Adversarial Learning 146A PyTorch implementation of the paper \"Semantic Image Synthesis via Adversarial Learning\" in ICCV 2017. \nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("741"),

                                value: "CapsNet 146A PyTorch implementation of CapsNet based on NIPS 2017 paper \"Dynamic Routing Between Capsules\"PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("742"),

                                value: "RfDNet 146Implementation of CVPR'21: RfD-Net: Point Scene Understanding by Semantic Instance ReconstructionPyTorchCV"

                            },

                            {

                                num: NumberInt("743"),

                                value: "pointnet 146PyTorch implementation of \"PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation\" https://arxiv.org/abs/1612.00593PyTorchCV"

                            },

                            {

                                num: NumberInt("744"),

                                value: "protest detection violence estimation 146Implementation of the model used in the paper Protest Activity Detection and Perceived Violence Estimation from Social Media Images (ACM Multimedia 2017)PyTorchCV"

                            },

                            {

                                num: NumberInt("745"),

                                value: "RDN TensorFlow 145A TensorFlow implementation of CVPR 2018 paper \"Residual Dense Network for Image Super-Resolution\".TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("746"),

                                value: "DeepLab v3 plus cityscapes 145mIOU=80.02 on cityscapes. My implementation of deeplabv3+ (also know as 'Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation' based on the dataset of cityscapes).PyTorchCV"

                            },

                            {

                                num: NumberInt("747"),

                                value: "keras coordconv 144Keras implementation of CoordConv for all Convolution layersTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("748"),

                                value: "conversation tensorflow 144TensorFlow implementation of Conversation ModelsTensorFlowNLPGenerativeGraphHealth"

                            },

                            {

                                num: NumberInt("749"),

                                value: "graph2vec_tf 144This repository contains the \"tensorflow\" implementation of our paper \"graph2vec: Learning distributed representations of graphs\".TensorFlowGenerativeGraphHealth"

                            },

                            {

                                num: NumberInt("750"),

                                value: "tensorflow yolo3 143tensorflow implementation of yolov3TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("751"),

                                value: "SRGAN PyTorch 143A simple and complete implementation of super-resolution paper.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("752"),

                                value: "tensorflow pix2pix 142A lightweight pix2pix Tensorflow implementation.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("753"),

                                value: "maxl 142The implementation of \"Self-Supervised Generalisation with Meta Auxiliary Learning\" [NeurIPS 2019].PyTorchCVSelf-Supervised"

                            },

                            {

                                num: NumberInt("754"),

                                value: "Aspect-level-sentiment 141Code and dataset for ACL2018 paper \"Exploiting Document Knowledge for Aspect-level Sentiment Classification\"\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("755"),

                                value: "CodeSLAM 141Implementation of CodeSLAM  Learning a Compact, Optimisable Representation for Dense Visual SLAM paper (https://arxiv.org/pdf/1804.00874.pdf)PyTorchCV"

                            },

                            {

                                num: NumberInt("756"),

                                value: "SAM DETR 140Official PyTorch Implementation of SAM-DETR (CVPR 2022)PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("757"),

                                value: "pytorch_sac_ae 140PyTorch implementation of Soft Actor-Critic + Autoencoder(SAC+AE) PyTorchCVRL"

                            },

                            {

                                num: NumberInt("758"),

                                value: "LipNet PyTorch 140The state-of-art PyTorch implementation of the method described in the paper \"LipNet: End-to-End Sentence-level Lipreading\" (https://arxiv.org/abs/1611.01599)PyTorchCV"

                            },

                            {

                                num: NumberInt("759"),

                                value: "GraphRec_PyTorch 140A PyTorch implementation of Graph Neural Networks for Social Recommendation (GraphRec)PyTorchGraph"

                            },

                            {

                                num: NumberInt("760"),

                                value: "jaxlie 140Rigid transforms via Lie groups, in JAX!JAXNLP"

                            },

                            {

                                num: NumberInt("761"),

                                value: "SoundNet tensorflow 139TensorFlow implementation of \"SoundNet\".TensorFlowGenerativeAudio"

                            },

                            {

                                num: NumberInt("762"),

                                value: "NeuralPull 139Implementation of ICML'2021:Neural-Pull: Learning Signed Distance Functions from Point Clouds by Learning to Pull Space onto SurfacesTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("763"),

                                value: "OneShotTranslation 139Pytorch implementation of \"One-Shot Unsupervised Cross Domain Translation\" NIPS 2018PyTorchCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("764"),

                                value: "DeepLabv3_MobileNetv2_PyTorch 139A PyTorch Implementation of MobileNetv2+DeepLabv3PyTorchCVGenerativeRL"

                            },

                            {

                                num: NumberInt("765"),

                                value: "UCTransNet 139Implementation of our AAAI'22 work: 'UCTransNet: Rethinking the Skip Connections in U-Net from a Channel-wise Perspective with Transformer'.PyTorchCV"

                            },

                            {

                                num: NumberInt("766"),

                                value: "flax 139general purpose programming language, in the vein of C++JAXNLP"

                            },

                            {

                                num: NumberInt("767"),

                                value: "reinforcement_learning 138Implementation of selected reinforcement learning algorithms in Tensorflow. A3C, DDPG, REINFORCE, DQN, etc.TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("768"),

                                value: "rest.vertx 138A JAX-RS like annotation processor for vert.x verticals and moreJAXGenerative"

                            },

                            {

                                num: NumberInt("769"),

                                value: "SampleRNN 137Tensorflow implementation of SampleRNNTensorFlowGenerativeAudio"

                            },

                            {

                                num: NumberInt("770"),

                                value: "Fast Transformer 137An implementation of Fastformer: Additive Attention Can Be All You Need, a Transformer Variant in TensorFlowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("771"),

                                value: "deep clustering 136A tensorflow implementation for  Deep clustering: Discriminative embeddings for segmentation and separation TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("772"),

                                value: "Keras_insightface 136Insightface Keras implementationTensorFlowCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("773"),

                                value: "Parallel Tacotron2 136PyTorch Implementation of Google's Parallel Tacotron 2: A Non-Autoregressive Neural TTS Model with Differentiable Duration ModelingPyTorchNLPUnsupervisedAudioGraph"

                            },

                            {

                                num: NumberInt("774"),

                                value: "bert relation classification 136A pytorch implementation of BERT-based relation classificationPyTorchGenerative"

                            },

                            {

                                num: NumberInt("775"),

                                value: "visual attribution 136Pytorch Implementation of recent visual attribution methods for model interpretabilityPyTorchCV"

                            },

                            {

                                num: NumberInt("776"),

                                value: "BVAE TTS 136Official implementation of BVAE-TTSPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("777"),

                                value: "MnemonicReader 136A PyTorch implementation of Mnemonic Reader for the Machine Comprehension taskPyTorchNLP"

                            },

                            {

                                num: NumberInt("778"),

                                value: "maskgit 136Official Jax Implementation of MaskGITJAXCV"

                            },

                            {

                                num: NumberInt("779"),

                                value: "dilation tensorflow 135A native Tensorflow implementation of semantic segmentation according to Multi-Scale Context Aggregation by Dilated Convolutions (2016). Optionally uses the pretrained weights by the authors.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("780"),

                                value: "pytorch cutpaste 135unoffical and work in progress PyTorch implementation of CutPastePyTorchCVNLPGenerativeAudioSelf-Supervised"

                            },

                            {

                                num: NumberInt("781"),

                                value: "pytorch smoothgrad 135SmoothGrad implementation in PyTorch PyTorchCV"

                            },

                            {

                                num: NumberInt("782"),

                                value: "snail pytorch 134Implementation of \"A Simple Neural Attentive Meta-Learner\" (SNAIL, https://arxiv.org/pdf/1707.03141.pdf) in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("783"),

                                value: "GDWCT 133Official PyTorch implementation of GDWCT (CVPR 2019, oral)PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("784"),

                                value: "deep auto punctuation 133a pytorch implementation of auto-punctuation learned character by characterPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("785"),

                                value: "SSD pytorch 133SSD: Single Shot MultiBox Detector pytorch implementation focusing on simplicityPyTorchCV"

                            },

                            {

                                num: NumberInt("786"),

                                value: "Feature Selective Anchor Free Module for Single Shot Object Detection 133A PyTorch Implementation of Feature Selective Anchor-Free Module for Single-Shot Object Detection (CVPR'19)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("787"),

                                value: "Medical Report Generation 133A pytorch implementation of On the Automatic Generation of Medical Imaging Reports.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("788"),

                                value: "360SD Net 132Pytorch implementation of ICRA 2020 paper \"360 Stereo Depth Estimation with Learnable Cost Volume\"PyTorchCV"

                            },

                            {

                                num: NumberInt("789"),

                                value: "**MobileNetV2**(TVM Supported) 132This is a MXNet implementation of MobileNetV2 architecture as described in the paper Inverted Residuals and Linear Bottlenecks: Mobile Networks for Classification, Detection and Segmentation.MXNetCV"

                            },

                            {

                                num: NumberInt("790"),

                                value: "InvDN 130Implementation for the paper: Invertible Denoising Network: A Light Solution for Real Noise Removal (CVPR2021).PyTorchCV"

                            },

                            {

                                num: NumberInt("791"),

                                value: "WS_DAN_PyTorch 130PyTorch Implementation Of WS-DAN(See Better Before Looking Closer: Weakly Supervised Data Augmentation Network for Fine-Grained Visual Classification)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("792"),

                                value: "adamwr 130Implements https://arxiv.org/abs/1711.05101 AdamW optimizer, cosine learning rate scheduler and \"Cyclical Learning Rates for Training Neural Networks\" https://arxiv.org/abs/1506.01186 for PyTorch frameworkPyTorchRL"

                            },

                            {

                                num: NumberInt("793"),

                                value: "bandit-nmt 129This is code repo for our EMNLP 2017 paper \"Reinforcement Learning for Bandit Neural Machine Translation with Simulated Human Feedback\", which implements the A2C algorithm on top of a neural encoder-decoder model and benchmarks the combination under simulated noisy rewards.\nPyTorchNLPRL"

                            },

                            {

                                num: NumberInt("794"),

                                value: "deeplearning.ai pytorch 129PyTorch Implementations of Coursera's Deep Learning(deeplearning.ai) SpecializationPyTorchGenerative"

                            },

                            {

                                num: NumberInt("795"),

                                value: "normalizing flows 129PyTorch implementation of normalizing flow modelsPyTorchGenerative"

                            },

                            {

                                num: NumberInt("796"),

                                value: "PyTorch Pyramid Feature Attention Network for Saliency Detection 129 PyTorch implementation of the CVPR 2019 paper Pyramid Feature Attention Network for Saliency DetectionPyTorchCV"

                            },

                            {

                                num: NumberInt("797"),

                                value: "IFAN 129[CVPR 2021] Official PyTorch Implementation for \"Iterative Filter Adaptive Network for Single Image Defocus Deblurring\"PyTorchCV"

                            },

                            {

                                num: NumberInt("798"),

                                value: "neuron-selectivity-transfer 129This code is a re-implementation of the imagenet classification experiments in the paper Like What You Like: Knowledge Distill via Neuron Selectivity TransferMXNetCV"

                            },

                            {

                                num: NumberInt("799"),

                                value: "rebias 128Official Pytorch implementation of ReBias (Learning De-biased Representations with Biased Representations), ICML 2020PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("800"),

                                value: "StarGAN Voice Conversion 2 128A pytorch implementation of StarGAN-VC2PyTorchGenerative"

                            },

                            {

                                num: NumberInt("801"),

                                value: "MFF pytorch 128Motion Fused Frames implementation in PyTorch, codes and pretrained models.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("802"),

                                value: "EEGNet 128[Old version] PyTorch implementation of EEGNet: A Compact Convolutional Network for EEG-based Brain-Computer Interfaces - https://arxiv.org/pdf/1611.08024.pdfPyTorchNLP"

                            },

                            {

                                num: NumberInt("803"),

                                value: "AUNets 128Pytorch implementation of Multi-View Dynamic Facial Action Unit Detection, Image and Vision Computing (2018)PyTorchCVGenerativeHealth"

                            },

                            {

                                num: NumberInt("804"),

                                value: "Factorized TDNN 128PyTorch implementation of the Factorized TDNN (TDNN-F) from \"Semi-Orthogonal Low-Rank Matrix Factorization for Deep Neural Networks\" and KaldiPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("805"),

                                value: "moco 126Unofficial implementation with pytorch DistributedDataParallel for \"MoCo: Momentum Contrast for Unsupervised Visual Representation Learning\"PyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("806"),

                                value: "torch ac 126Recurrent and multi-process PyTorch implementation of deep reinforcement Actor-Critic algorithms A2C and PPOPyTorchCVRL"

                            },

                            {

                                num: NumberInt("807"),

                                value: "pygoturn 126PyTorch implementation of GOTURN object tracker: Learning to Track at 100 FPS with Deep Regression Networks (ECCV 2016)PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("808"),

                                value: "EveryPixelMatters 126Implementation of ECCV 2020 paper \"Every Pixel Matters: Center-aware Feature Alignment for Domain Adaptive Object Detector\"PyTorchCV"

                            },

                            {

                                num: NumberInt("809"),

                                value: "flaxmodels 126Pretrained models for Jax/Flax: StyleGAN2, GPT2, VGG, ResNet, etc.JAXCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("810"),

                                value: "Siam NestedUNet 125The pytorch implementation for \"SNUNet-CD: A Densely Connected Siamese Network for Change Detection of VHR Images\"PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("811"),

                                value: "Hierarchical Attention Network 125Implementation of Hierarchical Attention Networks in PyTorchPyTorchNLP"

                            },

                            {

                                num: NumberInt("812"),

                                value: "RecSys_PyTorch 125PyTorch implementations of Top-N recommendation, collaborative filtering recommenders.PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("813"),

                                value: "Single Human Parsing LIP 125PSPNet implemented in PyTorch for single-person human parsing task, evaluating on Look Into Person (LIP) dataset.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("814"),

                                value: "mtad gat pytorch 125PyTorch implementation of MTAD-GAT (Multivariate Time-Series Anomaly Detection via Graph Attention Networks) by Zhao et. al (2020, https://arxiv.org/abs/2009.02040).PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("815"),

                                value: "Bert_OCR.pytorch 124Unofficial PyTorch implementation of 2D Attentional Irregular Scene Text RecognizerPyTorchCV"

                            },

                            {

                                num: NumberInt("816"),

                                value: "RepSurf 124[CVPR 2022 Oral] Official implementation for \"Surface Representation for Point Clouds\"PyTorchCV"

                            },

                            {

                                num: NumberInt("817"),

                                value: "CBAM tensorflow 123CBAM implementation on TensowFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("818"),

                                value: "pytorch_spline_conv 123Implementation of the Spline-Based Convolution Operator of SplineCNN in PyTorchPyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("819"),

                                value: "ViewAL 123[CVPR'20] Implementation for the paper \"ViewAL: Active Learning with Viewpoint Entropy for Semantic Segmentation\"PyTorchCV"

                            },

                            {

                                num: NumberInt("820"),

                                value: "tree math 123Mathematical operations for JAX pytreesJAXGenerative"

                            },

                            {

                                num: NumberInt("821"),

                                value: "SASRec.pytorch 122PyTorch(1.6+) implementation of https://github.com/kang205/SASRecPyTorchGenerative"

                            },

                            {

                                num: NumberInt("822"),

                                value: "MXNMT 122This is an implementation of seq2seq with attention for neural machine translation with MXNet.MXNetNLP"

                            },

                            {

                                num: NumberInt("823"),

                                value: "Mnemonic Descent Method 121Tensorflow implementation of \"Mnemonic Descent Method: A recurrent process applied for end-to-end face alignment\"\nTensorFlowNLP"

                            },

                            {

                                num: NumberInt("824"),

                                value: "OpenAI CLIP 121Simple implementation of OpenAI CLIP model in PyTorch.PyTorchCVNLPGraph"

                            },

                            {

                                num: NumberInt("825"),

                                value: "chainer_examples 121Machine Translation, word segmentation, and language model\nChainerCVNLP"

                            },

                            {

                                num: NumberInt("826"),

                                value: "CipherGAN 120TensorFlow implementation of CipherGANTensorFlowGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("827"),

                                value: "captionGen 120Generate captions for an image using PyTorch.  \nPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("828"),

                                value: "Visualizing CNNs for monocular depth estimation 119official implementation of \"Visualization of Convolutional Neural Networks for Monocular Depth Estimation\"PyTorchCV"

                            },

                            {

                                num: NumberInt("829"),

                                value: "latent pose reenactment 119The authors' implementation of the \"Neural Head Reenactment with Latent Pose Descriptors\" (CVPR 2020) paper.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("830"),

                                value: "sightseq 119Computer vision tools for fairseq, containing PyTorch implementation of text recognition and object detectionPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("831"),

                                value: "jaxfg 119Factor graphs and nonlinear optimization for JAXJAXGenerativeGraphHealth"

                            },

                            {

                                num: NumberInt("832"),

                                value: "deeply recursive cnn tf 118Test implementation of Deeply-Recursive Convolutional Network for Image Super-ResolutionTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("833"),

                                value: "FaceDetector 118A re-implementation of mtcnn. Joint training, tutorial and deployment together.PyTorchCV"

                            },

                            {

                                num: NumberInt("834"),

                                value: "PerceptualGAN 118Pytorch implementation of Image Manipulation with Perceptual Discriminators paperPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("835"),

                                value: "Keras OneClassAnomalyDetection 118[5 FPS - 150 FPS] Learning Deep Features for One-Class Classification (AnomalyDetection). Corresponds RaspberryPi3. Convert to Tensorflow, ONNX, Caffe, PyTorch. Implementation by Python + OpenVINO/Tensorflow Lite.PyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("836"),

                                value: "Carla_iLQR_MPC 118Implementation of the real-time MPC based on iLQR in Carla simulatorJAXCVNLP"

                            },

                            {

                                num: NumberInt("837"),

                                value: "DRIT Tensorflow 117Simple Tensorflow implementation of \"Diverse Image-to-Image Translation via Disentangled Representations\" (ECCV 2018 Oral)TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("838"),

                                value: "rnn text classification tf 117Tensorflow Implementation of Recurrent Neural Network (Vanilla, LSTM, GRU) for Text ClassificationTensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("839"),

                                value: "M NMF 117An implementation of  \"Community Preserving Network Embedding\" (AAAI 2017)TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("840"),

                                value: "virtual adversarial training 117Pytorch implementation of Virtual Adversarial TrainingPyTorchGenerative"

                            },

                            {

                                num: NumberInt("841"),

                                value: "univnet 117Unofficial PyTorch Implementation of UnivNet Vocoder (https://arxiv.org/abs/2106.07889)PyTorchNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("842"),

                                value: "MaskTrack 117Implementation of MaskTrack method which is the baseline of several state-of-the-art video object segmentation methods in PytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("843"),

                                value: "MuseMorphose 117PyTorch implementation of MuseMorphose, a Transformer-based model for music style transfer.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("844"),

                                value: "WaDIQaM 117[unofficial] Pytorch implementation of WaDIQaM in TIP2018, Bosse S. et al. (Deep neural networks for no-reference and full-reference image quality assessment)PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("845"),

                                value: "minDiffusion 117Self-contained, minimalistic implementation of diffusion models with Pytorch.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("846"),

                                value: "bayeSDE 117Code for \"Infinitely Deep Bayesian Neural Networks with Stochastic Differential Equations\"JAXCVNLP"

                            },

                            {

                                num: NumberInt("847"),

                                value: "pyg_autoscale 116Implementation of \"GNNAutoScale: Scalable and Expressive Graph Neural Networks via Historical Embeddings\" in PyTorchPyTorchGraph"

                            },

                            {

                                num: NumberInt("848"),

                                value: "StreamingSpeakerDiarization 116Lightweight python library for speaker diarization in real time implemented in pytorchPyTorchCVNLPAudio"

                            },

                            {

                                num: NumberInt("849"),

                                value: "l2p 116Learning to Prompt (L2P) for Continual Learning @ CVPR22JAXCV"

                            },

                            {

                                num: NumberInt("850"),

                                value: "DCNets 115 Implementation for  in CVPR'18.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("851"),

                                value: "person reid 115Tensorflow implementation of \"An Improved Deep Learning Architecture for Person Re-Identification\"TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("852"),

                                value: "DSFD tensorflow 115a tensorflow implement dsfd  face detectorTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("853"),

                                value: "WaveVAE 115A Pytorch implementation of WaveVAE (\"Parallel Neural Text-to-Speech\")PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("854"),

                                value: "image similarity using deep ranking 115   PyTorch implementation of \"Learning Fine-grained Image Similarity with Deep Ranking\" (arXiv:1404.4661)PyTorchCV"

                            },

                            {

                                num: NumberInt("855"),

                                value: "FasterRCNN pytorch 115FasterRCNN is implemented in VGG, ResNet and FPN base. PyTorchCV"

                            },

                            {

                                num: NumberInt("856"),

                                value: "DR GAN by pytorch 115An implement of Disentangled Representation Learning GAN for Pose-Invariant Face RecognitionPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("857"),

                                value: "famos 114Pytorch implementation of the paper \"Copy the Old or Paint Anew? An Adversarial Framework for (non-) Parametric Image Stylization\" available at http://arxiv.org/abs/1811.09236.\nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("858"),

                                value: "Tacotron2 PyTorch 114Yet another PyTorch implementation of Tacotron 2 with reduction factor and faster training speed.PyTorchCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("859"),

                                value: "tf layer norm 113TensorFlow implementation of normalizations such as Layer Normalization, HyperNetworks.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("860"),

                                value: "paysage 113Unsupervised learning and generative models in python/pytorch.\nPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("861"),

                                value: "pytorch psetae 113PyTorch implementation of the model presented in \"Satellite Image Time Series Classification with Pixel-Set Encoders and Temporal Self-Attention\"PyTorchCV"

                            },

                            {

                                num: NumberInt("862"),

                                value: "DocEE 112 A toolkit for document-level event extraction, containing some SOTA model implementations.PyTorchNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("863"),

                                value: "efficientnet jax 112EfficientNet, MobileNetV3, MobileNetV2, MixNet, etc in JAX w/ Flax Linen and ObjaxJAXCVGenerative"

                            },

                            {

                                num: NumberInt("864"),

                                value: "portrait matting unet flask 111Portrait Mating  implementation in UNet with PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("865"),

                                value: "ChangeFormer 111Official PyTorch implementation of our IGARSS'22 paper: A Transformer-Based Siamese Network for Change DetectionPyTorchCVNLPRLAudio"

                            },

                            {

                                num: NumberInt("866"),

                                value: "3D BoundingBox 111PyTorch implementation for 3D Bounding Box Estimation Using Deep Learning and GeometryPyTorchGenerative"

                            },

                            {

                                num: NumberInt("867"),

                                value: "indrnn pytorch 111pytorch implementation of Independently Recurrent Neural Networks https://arxiv.org/abs/1803.04831PyTorchGenerative"

                            },

                            {

                                num: NumberInt("868"),

                                value: "Deep Alignment Network tensorflow 110A re-implementation of Deep-Alignment-Network using TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("869"),

                                value: "back2future.pytorch 110This is a Pytorch implementation of Janai, J., Güney, F., Ranjan, A., Black, M. and Geiger, A., Unsupervised Learning of Multi-Frame Optical Flow with Occlusions. ECCV 2018.\nPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("870"),

                                value: "WaveFlow 110A PyTorch implementation of \"WaveFlow: A Compact Flow-based Model for Raw Audio\"PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("871"),

                                value: "multi person tracker 110Simple Multi Person Tracker implementation in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("872"),

                                value: "MANO 110A PyTorch Implementation of MANO hand model.PyTorchCVNLPGraph"

                            },

                            {

                                num: NumberInt("873"),

                                value: "dialogue understanding 110This repository contains PyTorch implementation for the baseline models from the paper Utterance-level Dialogue Understanding: An Empirical StudyPyTorchCV"

                            },

                            {

                                num: NumberInt("874"),

                                value: "Image Embedding Learning (Gluon:star 110Apache MXNet (incubating) is a deep learning framework designed for both efficiency and flexibility.MXNetCV"

                            },

                            {

                                num: NumberInt("875"),

                                value: "pytorch detect to track 109A pytorch implementation of Detect and Track (https://arxiv.org/abs/1710.03958)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("876"),

                                value: "AgentFormer 109[ICCV 2021] Official PyTorch Implementation of \"AgentFormer: Agent-Aware Transformers for Socio-Temporal Multi-Agent Forecasting\".PyTorchGenerative"

                            },

                            {

                                num: NumberInt("877"),

                                value: "QATM_pytorch 109Pytorch Implementation of QATM:Quality-Aware Template Matching For Deep LearningPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("878"),

                                value: "Efficient VDVAE 109Official Pytorch and JAX implementation of \"Efficient-VDVAE: Less is more\"PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("879"),

                                value: "A Convolutional Neural Network Cascade for Face Detection 108TensorFlow implementation of \"A Convolutional Neural Network Cascade for Face Detection\", CVPR 2015TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("880"),

                                value: "BSConv 108Reference implementation for Blueprint Separable Convolutions (CVPR 2020)PyTorchCV"

                            },

                            {

                                num: NumberInt("881"),

                                value: "Samsung DRL Code 108A repository for implementation of deep reinforcement learning lectured at SamsungPyTorchRL"

                            },

                            {

                                num: NumberInt("882"),

                                value: "Restoring Extremely Dark Images In Real Time 108The project is the official implementation of our CVPR 2021 paper, \"Restoring Extremely Dark Images in Real Time\"PyTorchCV"

                            },

                            {

                                num: NumberInt("883"),

                                value: "pytorch lightning gans 108Collection of PyTorch Lightning implementations of Generative Adversarial Network varieties presented in research papers.PyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("884"),

                                value: "yolo v4 tf.keras 107A simple tf.keras implementation of YOLO v4TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("885"),

                                value: "torch_backbones 107Unofficial implementations of some classical  CNN backbones with pytorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("886"),

                                value: "RGCN 107Pytorch implementation of a RGCN Link Prediction ModelPyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("887"),

                                value: "pytorch_shake_shake 107A PyTorch implementation of shake-shakePyTorchCV"

                            },

                            {

                                num: NumberInt("888"),

                                value: "Tacotron pytorch 107A Pytorch Implementation of Tacotron: End-to-end Text-to-speech Deep-Learning ModelPyTorchCVNLPAudio"

                            },

                            {

                                num: NumberInt("889"),

                                value: "StyleSpeech 107PyTorch Implementation of Meta-StyleSpeech : Multi-Speaker Adaptive Text-to-Speech GenerationPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("890"),

                                value: "ViTGAN 107A PyTorch implementation of ViTGAN based on paper ViTGAN: Training GANs with Vision Transformers.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("891"),

                                value: "jax_cosmo 107A differentiable cosmology library in JAXJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("892"),

                                value: "evaluating_bdl 106Official implementation of \"Evaluating Scalable Bayesian Deep Learning Methods for Robust Computer Vision\", CVPR Workshops 2020.PyTorchCVNLPSelf-Supervised"

                            },

                            {

                                num: NumberInt("893"),

                                value: "Pytorch Image Translation GANs 106Pytorch implementations of most popular image-translation GANs, including Pixel2Pixel, CycleGAN and StarGAN.PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("894"),

                                value: "lffont 106Official PyTorch implementation of LF-Font (Few-shot Font Generation with Localized Style Representations and Factorization) AAAI 2021PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("895"),

                                value: "jax_verify 106Neural network verification in JAXJAXNLP"

                            },

                            {

                                num: NumberInt("896"),

                                value: "VSR DUF Reimplement 105It is a re-implementation of paper named \"Deep Video Super-Resolution Network Using Dynamic Upsampling Filters Without Explicit Motion Compensation\" called VSR-DUF model. There are both training codes and test codes about VSR-DUF based tensorflow.TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("897"),

                                value: "CBAM tensorflow slim 105CBAM implementation on TensorFlow SlimTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("898"),

                                value: "DSQ 105pytorch implementation of \"Differentiable Soft Quantization: Bridging Full-Precision and Low-Bit Neural Networks\"PyTorchCV"

                            },

                            {

                                num: NumberInt("899"),

                                value: "stagewise knowledge distillation 105Code implementation of Data Efficient Stagewise Knowledge Distillation paper.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("900"),

                                value: "CapsNet_guide_PyTorch 105A tutorial-style implementation of CapsNet in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("901"),

                                value: "DDC transfer learning 105A simple implementation of Deep Domain Confusion: Maximizing for Domain InvariancePyTorchGenerative"

                            },

                            {

                                num: NumberInt("902"),

                                value: "personlab tf 104implementation of PersonLab(https://arxiv.org/abs/1803.08225) using TF-slimTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("903"),

                                value: "unified gan tensorflow 104A Tensorflow implementation of GAN, WGAN and WGAN with gradient penalty.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("904"),

                                value: "Recursive CNNs 104Implementation of my paper \"Real-time Document Localization in Natural Images by Recursive Application of a CNN.\"PyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("905"),

                                value: "Cost Aggregation transformers 104Official implementation of CATsPyTorchCVAudio"

                            },

                            {

                                num: NumberInt("906"),

                                value: "local relational nets 104A Pytorch implementation for the paper Local Relational Networks for Image Recognition (https://arxiv.org/pdf/1904.11491.pdf)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("907"),

                                value: "StereoNet 103A customized implementation of the paper \"StereoNet: guided hierarchical refinement for real-time edge-aware depth prediction\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("908"),

                                value: "Neural Process Family 103Code for the Neural Processes website and replication of 4 papers on NPs. Pytorch implementation. PyTorchCV"

                            },

                            {

                                num: NumberInt("909"),

                                value: "pytorch polygon rnn 103Pytorch implementation of Polygon-RNN(http://www.cs.toronto.edu/polyrnn/poly_cvpr17/)PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("910"),

                                value: "AutoEncoder Based Communication System 102Tensorflow Implementation and result of Auto-encoder Based Communication System From Research Paper : \"An Introduction to Deep Learning for the Physical Layer\" http://ieeexplore.ieee.org/document/8054694/TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("911"),

                                value: "VIB pytorch 102Pytorch implementation of Deep Variational Information BottleneckPyTorchGenerative"

                            },

                            {

                                num: NumberInt("912"),

                                value: "DST CBC 102Implementation of our paper \"DMT: Dynamic Mutual Training for Semi-Supervised Learning\"PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("913"),

                                value: "movenet.pytorch 102 A Pytorch implementation of MoveNet from Google. Include training code and pre-trained model.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("914"),

                                value: "panoptic reconstruction 102Official implementation of the NeurIPS 2021 paper \"Panoptic 3D Scene Reconstruction from a Single RGB Image\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("915"),

                                value: "PNASNet.TF 101TensorFlow implementation of PNASNet-5 on ImageNetTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("916"),

                                value: "CoGAN tensorflow 101Implement Coupled Generative Adversarial Networks in TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("917"),

                                value: "MNasNet Keras Tensorflow 101A Tensorflow Keras implementation (Graph and eager execution) of Mnasnet: MnasNet: Platform-Aware Neural Architecture Search for Mobile. TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("918"),

                                value: "pytorch_DoReFaNet 101A pytorch implementation of DoReFa-NetPyTorchCV"

                            },

                            {

                                num: NumberInt("919"),

                                value: "pytorch_pose_proposal_networks 101Pytorch implementation of pose proposal networksPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("920"),

                                value: "Zero DCE 101Pytorch implementation of paper \"Zero Reference low-light image enhancement\"PyTorchCV"

                            },

                            {

                                num: NumberInt("921"),

                                value: "yolov5_deepsort_tensorrt 101This repo uses YOLOv5 and DeepSORT to implement object tracking algorithm. Also using TensorRTX to transform model to engine, and deploying all code on the NVIDIA Xavier with TensorRT further.PyTorchCVAudio"

                            },

                            {

                                num: NumberInt("922"),

                                value: "pytorch_mppi 101Model Predictive Path Integral (MPPI) with approximate dynamics implemented in pytorchPyTorchNLPRL"

                            },

                            {

                                num: NumberInt("923"),

                                value: "TensorFlow NEAT 100TensorFlow Eager implementation of NEAT and Adaptive HyperNEATTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("924"),

                                value: "pytorch_image_classifier 100Minimal But Practical Image Classifier Pipline Using Pytorch, Finetune on ResNet18, Got 99% Accuracy on Own Small Datasets.  \nPyTorchCV"

                            },

                            {

                                num: NumberInt("925"),

                                value: "CorrPM 100Pytorch implementation of CVPR2020 paper \"Correlating Edge, Pose with Parsing\"PyTorchCV"

                            },

                            {

                                num: NumberInt("926"),

                                value: "Pytorch Basic GANs 100Simple Pytorch implementations of most used Generative Adversarial Network (GAN) varieties.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("927"),

                                value: "jackson jaxrs providers 100Multi-module project that contains Jackson-based \"old\" JAX-RS (ones under `javax.ws.rs`) providers for JSON, XML, YAML, Smile, CBOR formatsJAXNLPGenerativeHealth"

                            },

                            {

                                num: NumberInt("928"),

                                value: "segmentation 99Tensorflow implementation  : U-net and FCN with global convolution TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("929"),

                                value: "ppo 99Proximal Policy Optimization implementation with TensorFlowTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("930"),

                                value: "pytorch PCN 99Pytorch implementation of PCNPyTorchCV"

                            },

                            {

                                num: NumberInt("931"),

                                value: "SEGAN 99A PyTorch implementation of SEGAN based on INTERSPEECH 2017 paper \"SEGAN: Speech Enhancement Generative Adversarial Network\"PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("932"),

                                value: "D3Feat.pytorch 99[PyTorch] Official Implementation of CVPR'20 oral paper - D3Feat: Joint Learning of Dense Detection and Description of 3D Local Features https://arxiv.org/abs/2003.03164PyTorchGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("933"),

                                value: "DiffGAN TTS 99PyTorch Implementation of DiffGAN-TTS: High-Fidelity and Efficient Text-to-Speech with Denoising Diffusion GANsPyTorchNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("934"),

                                value: "TF SegNet 98SegNet-like network implemented in TensorFlow to use for segmenting aerial imagesTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("935"),

                                value: "BicycleGAN pytorch 98Pytorch implementation of BicycleGAN with implementation detailsPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("936"),

                                value: "pytorch dann 98A PyTorch implementation for Unsupervised Domain Adaptation by BackpropagationPyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("937"),

                                value: "incremental learning 98Pytorch implementation of ACCV18 paper \"Revisiting Distillation and Incremental Classifier Learning.\" PyTorchGenerative"

                            },

                            {

                                num: NumberInt("938"),

                                value: "RFC 98[NeurIPS 2020] Official PyTorch Implementation of \"Residual Force Control for Agile Human Behavior Imitation and Extended Motion Synthesis\". NeurIPS 2020.PyTorchRL"

                            },

                            {

                                num: NumberInt("939"),

                                value: "ICNet pytorch 98ICNet implemented by pytorch, for real-time semantic segmentation on high-resolution images, mIOU=71.0 on cityscapes, single inference time is 19ms, FPS is 52.6.PyTorchCV"

                            },

                            {

                                num: NumberInt("940"),

                                value: "tf_texture_net 97TensorFlow implementation of DmitryUlyanov/texture_netsTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("941"),

                                value: "DiffSinger 97PyTorch implementation of DiffSinger: Singing Voice Synthesis via Shallow Diffusion Mechanism (focused on DiffSpeech)PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("942"),

                                value: "Jittor MLP 97Unofficial Implementation of MLP-Mixer, gMLP, resMLP, Vision Permutator, S2MLP, S2MLPv2, RaftMLP, HireMLP, ConvMLP, AS-MLP, SparseMLP, ConvMixer, SwinMLP, RepMLPNet, WaveMLP, MorphMLP, DynaMixer, MS-MLP, Sequencer2D in Jittor and PyTorch! Now, Rearrange and Reduce in einops.layers.jittor are support!! trunc_normal_ is supported for Jittor!! MLP Paper is uploaded!PyTorchCV"

                            },

                            {

                                num: NumberInt("943"),

                                value: "rl examples 96Examples of published reinforcement learning algorithms in recent literature implemented in TensorFlowTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("944"),

                                value: "insightface 96implementation of insightface by using TensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("945"),

                                value: "dialog nlu 96Tensorflow and Keras implementation of the state of the art researches in Dialog System NLUTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("946"),

                                value: "Categorical DQN 96A PyTorch Implementation of Categorical DQN from A Distributional Perspective on Reinforcement Learning.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("947"),

                                value: "efficientnet pytorch 96A PyTorch implementation of \"EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks\".PyTorchGenerative"

                            },

                            {

                                num: NumberInt("948"),

                                value: "pytorch res2net 96PyTorch implementation of Res2NetPyTorchCV"

                            },

                            {

                                num: NumberInt("949"),

                                value: "Tacotron 96A PyTorch implementation of Location-Relative Attention Mechanisms For Robust Long-Form Speech SynthesisPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("950"),

                                value: "100 Days of ML Code 96A 100 Day ML Challenge to learn and implement ML/DL concepts ranging from the basics of Machine Learning to advanced Deep Learning.PyTorchCVNLPGenerativeRLUnsupervisedGraphHealth"

                            },

                            {

                                num: NumberInt("951"),

                                value: "tfvaegan 96[ECCV 2020] Official Pytorch implementation for \"Latent Embedding Feedback and Discriminative Features for Zero-Shot Classification\". SOTA results for ZSL and GZSLPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("952"),

                                value: "pytorch_violet 96A PyTorch implementation of VIOLETPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("953"),

                                value: "swagger gradle plugin 96JAX-RS & SpringMVC supported gradle build.md plugin to generate Swagger documentationJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("954"),

                                value: "jaxb xew plugin 96JAXB @XmlElementWrapper PluginJAXNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("955"),

                                value: "NVIDIA/unsupervised-video-interpolation 95A PyTorch Implementation of Unsupervised Video Interpolation Using Cycle Consistency, In ICCV 2019. \nPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("956"),

                                value: "GPT2 95PyTorch Implementation of OpenAI GPT-2PyTorchNLPUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("957"),

                                value: "segan pytorch 95SEGAN pytorch implementation https://arxiv.org/abs/1703.09452PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("958"),

                                value: "SpineNet Pytorch 95This project is a kind of implementation of SpineNet(CVPR 2020) using mmdetection.PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("959"),

                                value: "wasserstein-gan 95WGAN\nChainerGenerative"

                            },

                            {

                                num: NumberInt("960"),

                                value: "seq2seq chatbot 94A sequence2sequence chatbot implementation with TensorFlow.TensorFlowNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("961"),

                                value: "OrganSegRSTN_PyTorch 94PyTorch implementation of OrganSegRSTN - CVPR 2018PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("962"),

                                value: "Pytorch_AdaIN 94Pytorch implementation from scratch of [Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization [Huang+, ICCV2017]]PyTorchCV"

                            },

                            {

                                num: NumberInt("963"),

                                value: "PyTorch Darknet53 94PyTorch implementation of Darknet53PyTorchCV"

                            },

                            {

                                num: NumberInt("964"),

                                value: "distbelief 94Implementing Google's DistBelief paperPyTorchGraph"

                            },

                            {

                                num: NumberInt("965"),

                                value: "MEVA 94Official implementation of ACCV 2020 paper \"3D Human Motion Estimation via Motion Compression and Refinement\" (Identical repo to https://github.com/KlabCMU/MEVA, will be kept in sync)PyTorchGenerative"

                            },

                            {

                                num: NumberInt("966"),

                                value: "Visual-Feature-Attribution-Using-Wasserstein-GANs-Pytorch 93Implementation of Visual Feature Attribution using Wasserstein GANs (arxiv.org/abs/1711.08998) in PyTorch.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("967"),

                                value: "ge2e speaker verification 93Pytorch implementation of \"Generalized End-to-End Loss for Speaker Verification\"PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("968"),

                                value: "speaker recognition papers 92Share some recent speaker recognition papers and their implementations.TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("969"),

                                value: "C2AE Multilabel Classification 92Tensorflow implementation for the paper 'Learning Deep Latent Spaces for Multi-Label Classfications' in AAAI 2017TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("970"),

                                value: "biogans 92Implementation supporting the ICCV 2017 paper \"GANs for Biological Image Synthesis\". \nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("971"),

                                value: "pytorch pix2pix 92Pytorch implementation of pix2pix for various datasets.PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("972"),

                                value: "easy fpn.pytorch 92An easy implementation of FPN (https://arxiv.org/pdf/1612.03144.pdf) in PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("973"),

                                value: "simclr pytorch 92PyTorch implementation of SimCLR: supports multi-GPU training and closely reproduces resultsPyTorchCVSelf-Supervised"

                            },

                            {

                                num: NumberInt("974"),

                                value: "jaxb2 basics 92Useful plugins and tools for JAXB2.JAXNLP"

                            },

                            {

                                num: NumberInt("975"),

                                value: "fast wavenet.pytorch 91A PyTorch implementation of fast-wavenetPyTorchGenerative"

                            },

                            {

                                num: NumberInt("976"),

                                value: "metrics 91IS, FID score Pytorch and TF implementation, TF implementation is a wrapper of the official ones.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("977"),

                                value: "DBnet lite.pytorch 91A pytorch re-implementation of Real-time Scene Text Detection with Differentiable BinarizationPyTorchCV"

                            },

                            {

                                num: NumberInt("978"),

                                value: "MDVC 91PyTorch implementation of Multi-modal Dense Video Captioning (CVPR 2020 Workshops)PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("979"),

                                value: "shiro jersey 91Support for securing Jersey JAX-RS applications with Apache Shiro.JAXNLP"

                            },

                            {

                                num: NumberInt("980"),

                                value: "tensorflow cifar 10 90Cifar-10 CNN implementation using TensorFlow library with 20% error.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("981"),

                                value: "STResNet 90A TensorFlow Implementation of Deep Spatio-Temporal Residual Networks (ST-ResNet): https://arxiv.org/abs/1610.00081TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("982"),

                                value: "Voice synthesis 90This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices.TensorFlowNLPAudio"

                            },

                            {

                                num: NumberInt("983"),

                                value: "Color_Transfer_Histogram_Analogy 90[CGI 2020] The Official PyTorch Implementation for \"Deep Color Transfer using Histogram Analogy\"PyTorchCV"

                            },

                            {

                                num: NumberInt("984"),

                                value: "Pruning_filters_for_efficient_convnets 90PyTorch implementation of \"Pruning Filters For Efficient ConvNets\"PyTorchGraph"

                            },

                            {

                                num: NumberInt("985"),

                                value: "overlapping community detection 90Implementation of \"Overlapping Community Detection with Graph Neural Networks\" PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("986"),

                                value: "gpt2 dialogue generation pytorch 90The PyTorch implementation of fine-tuning the GPT-2(Generative Pre-Training 2) for dialogue generation.PyTorchNLPUnsupervised"

                            },

                            {

                                num: NumberInt("987"),

                                value: "dmfont 90Official PyTorch implementation of DM-Font (ECCV 2020)PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("988"),

                                value: "viton gan 90Original implementation of the paper \"VITON-GAN: Virtual Try-on Image Generator Trained with Adversarial Loss\" by Shion Honda.PyTorchCVGenerativeGraphSelf-Supervised"

                            },

                            {

                                num: NumberInt("989"),

                                value: "PyTorchDiscreteFlows 90Discrete Normalizing Flows implemented in PyTorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("990"),

                                value: "magi 90Reinforcement learning library in JAX.JAXNLPGenerative"

                            },

                            {

                                num: NumberInt("991"),

                                value: "Improved CycleGAN 89Unpaired Image to Image Translation\nTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("992"),

                                value: "tf recsys 89tf-recsys contains collaborative filtering (CF) model based on famous SVD and SVD++ algorithm. Both of them are implemented by tensorflow in order to utilize GPU acceleration.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("993"),

                                value: "text gan tensorflow 89TensorFlow GAN implementation using Gumbel SoftmaxTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("994"),

                                value: "Generating Devanagari Using DRAW 89PyTorch implementation of DRAW: A Recurrent Neural Network For Image Generation trained on Devanagari dataset.PyTorchCV"

                            },

                            {

                                num: NumberInt("995"),

                                value: "MR GAN 89Official PyTorch implementation of Harmonizing Maximum Likelihood with GANs for Multimodal Conditional Generation (ICLR 2019)PyTorchGenerative"

                            },

                            {

                                num: NumberInt("996"),

                                value: "eigenvectors from eigenvalues 89PyTorch implementation comparison of old and new method of determining eigenvectors from eigenvalues.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("997"),

                                value: "rax 89Rax is a Learning-to-Rank library written in JAX.JAXNLP"

                            },

                            {

                                num: NumberInt("998"),

                                value: "TensorFlow MIL 88TF Implementation of Multiple Instance Learning FCN.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("999"),

                                value: "tensorflow mnist AAE 88Tensorflow implementation of adversarial auto-encoder for MNISTTensorFlowCVGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("1000"),

                                value: "listen attend and spell 88Tensorflow implementation of \"Listen, Attend and Spell\" authored by William Chan. This project utilizes input pipeline and estimator API of Tensorflow, which makes the training and evaluation truly end-to-end.TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1001"),

                                value: "d4pg pytorch 88PyTorch implementation of Distributed Distributional Deterministic Policy Gradients (https://arxiv.org/abs/1804.08617)PyTorchRL"

                            },

                            {

                                num: NumberInt("1002"),

                                value: "R YOLOv4 88This is a PyTorch-based R-YOLOv4 implementation which combines YOLOv4 model and loss function from R3Det for arbitrary oriented object detection.PyTorchCVAudio"

                            },

                            {

                                num: NumberInt("1003"),

                                value: "SQDDPG 88This is a framework for the research on multi-agent reinforcement learning and the implementation of the experiments in the paper titled by ''Shapley Q-value: A Local Reward Approach to Solve Global Reward Games''.PyTorchNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1004"),

                                value: "zoo 87Reference implementations of popular Binarized Neural NetworksTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1005"),

                                value: "sc2aibot 87Implementing reinforcement-learning algorithms for pysc2 -environmentTensorFlowNLPGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("1006"),

                                value: "d2l java 87The Java implementation of Dive into Deep Learning (D2L.ai)PyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("1007"),

                                value: "BERT chinese text classification pytorch 87This repo contains a PyTorch implementation of a pretrained BERT model  for text classification.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1008"),

                                value: "CNNIQAplusplus 87[unofficial] PyTorch Implementation of image quality assessment methods: IQA-CNN++ in ICIP2015 and IQA-CNN in CVPR2014PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1009"),

                                value: "Keras ICNet 86Keras implementation of Real-Time Semantic Segmentation on High-Resolution ImagesTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1010"),

                                value: "inpainting gmcnn keras 86Keras implementation of \"Image Inpainting via Generative Multi-column Convolutional Neural Networks\" paper published at NIPS 2018 TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1011"),

                                value: "Recurrent Independent Mechanisms 86Implementation of the paper Recurrent Independent Mechanisms (https://arxiv.org/pdf/1909.10893.pdf)PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1012"),

                                value: "imitation_learning 86PyTorch implementation of some reinforcement learning algorithms: A2C, PPO, Behavioral Cloning from Observation (BCO), GAIL.PyTorchCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1013"),

                                value: "multitask CycleGAN 86Pytorch implementation of multitask CycleGAN with auxiliary classification lossPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1014"),

                                value: "TMNet 86The official pytorch implemention of the CVPR paper \"Temporal Modulation Network for Controllable Space-Time Video Super-Resolution\".PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1015"),

                                value: "quickNAT_pytorch 86PyTorch Implementation of QuickNAT and Bayesian QuickNAT, a fast brain MRI segmentation framework with segmentation Quality control using structure-wise uncertaintyPyTorchCV"

                            },

                            {

                                num: NumberInt("1016"),

                                value: "jax unirep 86Reimplementation of the UniRep protein featurization model.JAXNLPGenerativeHealth"

                            },

                            {

                                num: NumberInt("1017"),

                                value: "jax models 86Unofficial JAX implementations of deep learning research papersJAXCV"

                            },

                            {

                                num: NumberInt("1018"),

                                value: "ENAS Keras 85Keras implementation of Efficient Neural Architecture SearchTensorFlowCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1019"),

                                value: "bert in production 85A collection of resources on using BERT (https://arxiv.org/abs/1810.04805 ) and related Language Models in production environments.TensorFlowNLPGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("1020"),

                                value: "notebooks 85Implement, demonstrate, reproduce and extend the results of the Risk articles 'Differential Machine Learning' (2020) and 'PCA with a Difference' (2021) by Huge and Savine, and cover implementation details left out from the papers.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1021"),

                                value: "Matrix Capsules EM PyTorch 85A PyTorch Implementation of Matrix Capsules with EM RoutingPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1022"),

                                value: "Pytorch conditional GANs 85Implementation of Conditional Generative Adversarial Networks in PyTorchPyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1023"),

                                value: "swae pytorch 85Implementation of the Sliced Wasserstein Autoencoder using PyTorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1024"),

                                value: "DeepLab_v3_plus 85This is an ongoing re-implementation of DeepLab_v3_plus on pytorch which is trained on VOC2012 and use ResNet101 for backbone. PyTorchCV"

                            },

                            {

                                num: NumberInt("1025"),

                                value: "upt 85Official PyTorch implementation for CVPR2022 paper \"Efficient Two-Stage Detection of HumanObject Interactions with a Novel UnaryPairwise Transformer\"PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1026"),

                                value: "simple equivariant gnn 85A short and easy PyTorch implementation of E(n) Equivariant Graph Neural NetworksPyTorchGraph"

                            },

                            {

                                num: NumberInt("1027"),

                                value: "MobileNetV2(Gluon:star 85This is a Gluon implementation of MobileNetV2 architecture as described in the paper Inverted Residuals and Linear Bottlenecks: Mobile Networks for Classification, Detection and Segmentation.MXNetCV"

                            },

                            {

                                num: NumberInt("1028"),

                                value: "koclip 85KoCLIP: Korean port of OpenAI CLIP, in FlaxJAXCVNLPGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("1029"),

                                value: "pytorch UNet 842D and 3D UNet implementation in PyTorch.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1030"),

                                value: "face_parsing 84Official Pytorch implementation of 'RoI Tanh-polar Transformer Network for Face Parsing in the Wild.'PyTorchCV"

                            },

                            {

                                num: NumberInt("1031"),

                                value: "max deeplab 84Unofficial implementation of MaX-DeepLab for Instance SegmentationPyTorchCV"

                            },

                            {

                                num: NumberInt("1032"),

                                value: "ppdet 84[BMVC-20] Official PyTorch implementation of PPDet.PyTorchCV"

                            },

                            {

                                num: NumberInt("1033"),

                                value: "TransCenter 84This is the official implementation of TransCenter. The code  and pretrained models are now available here: https://gitlab.inria.fr/yixu/TransCenter_official.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1034"),

                                value: "SCOT 84CVPR 2020, Semantic Correspondence as an Optimal Transport Problem, Pytorch Implementation. PyTorchCV"

                            },

                            {

                                num: NumberInt("1035"),

                                value: "sparse-structure-selection 84This code is a re-implementation of the imagenet classification experiments in the paper Data-Driven Sparse Structure Selection for Deep Neural NetworksMXNetCV"

                            },

                            {

                                num: NumberInt("1036"),

                                value: "Unsupervised Object Counting 83Implementation of \"Attend, Infer, Repeat\"\nTensorFlowUnsupervised"

                            },

                            {

                                num: NumberInt("1037"),

                                value: "TextBoxes_plusplus_Tensorflow 83Textboxes_plusplus implementation with Tensorflow (python)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1038"),

                                value: "SAR_TF 83This is an implementation of Show, Attend and Read with tensorflowTensorFlowCV"

                            },

                            {

                                num: NumberInt("1039"),

                                value: "MobileNetV3 pytorch 83Implementation of MobileNetV3 in pytorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1040"),

                                value: "mlp singer 83Official implementation of MLP Singer: Towards Rapid Parallel Korean Singing Voice Synthesis (IEEE MLSP 2021)PyTorchCVGenerativeAudio"

                            },

                            {

                                num: NumberInt("1041"),

                                value: "KFAC Pytorch 83Pytorch implementation of KFAC and E-KFAC (Natural Gradient).PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1042"),

                                value: "FFTNet 83FFTNet vocoder implementationPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1043"),

                                value: "mxfont 83Official PyTorch implementation of MX-Font (Multiple Heads are Better than One: Few-shot Font Generation with Multiple Localized Experts) ICCV 2021PyTorchCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1044"),

                                value: "PVDNet 83[TOG 2021] Official PyTorch Implementation for \"Recurrent Video Deblurring with Blur-Invariant Motion Estimation and Pixel Volumes\"PyTorchCVNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1045"),

                                value: "spectral density 83Hessian spectral density estimation in TF and JaxJAXGenerative"

                            },

                            {

                                num: NumberInt("1046"),

                                value: "MIRNet 82Tensorflow implementation of MIRNet for Low-light image enhancementTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1047"),

                                value: "YOLO_v2 82The implementation of YOLO v2 with TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1048"),

                                value: "srntt pytorch 82A PyTorch implementation of SRNTT, which is a novel RefSR method.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1049"),

                                value: "DCMH 82PyTorch implementation for paper \"Deep Cross-Modal Hashing\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1050"),

                                value: "DGN 82Implementation of Directional Graph Networks in PyTorch and DGLPyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("1051"),

                                value: "yolox pytorch 82a Pytorch easy re-implement of \"YOLOX: Exceeding YOLO Series in 2021\"PyTorchCV"

                            },

                            {

                                num: NumberInt("1052"),

                                value: "**deepspeech** 82This example based on DeepSpeech2 of Baidu helps you to build.md Speech-To-Text (STT) models at scale usingMXNetNLPAudio"

                            },

                            {

                                num: NumberInt("1053"),

                                value: "DiscoGAN Tensorflow 81An implementation of DiscoGAN in tensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1054"),

                                value: "neural processes 81PyTorch implementation of Neural ProcessesPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1055"),

                                value: "MixNet PyTorch 81A PyTorch Implementation of MixNetPyTorchCV"

                            },

                            {

                                num: NumberInt("1056"),

                                value: "TRACER 81TRACER: Extreme Attention Guided Salient Object Tracing Network (AAAI 2022) implementation in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1057"),

                                value: "Deep Learning 80Study and implementation about deep learning models, architectures, applications and frameworksTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1058"),

                                value: "hierarchical attention networks 80 TensorFlow implementation of the paper \"Hierarchical Attention Networks for Document Classification\"TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1059"),

                                value: "imitation learning 80Autonomous driving: Tensorflow implementation of the paper \"End-to-end Driving via Conditional Imitation Learning\"TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1060"),

                                value: "CogDL TensorFlow 80CogDL-TensorFlow: The TensorFlow Implementation of CogDL. With Support from Professor Jie Tang.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1061"),

                                value: "Feed Forward Style Transfer 80TensorFlow implementation of real-time style transfer using feed-forward generation. This builds on the original style-transfer algorithm and allows for common personal computers to transform images.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1062"),

                                value: "TensorFlow2.0_SSD 80A tensorflow_2.0 implementation of SSD (Single Shot MultiBox Detector) .TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1063"),

                                value: "tf dropblock 80TensorFlow implementation of DropBlockTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1064"),

                                value: "Fast Neural Style for Image Style Transform by Pytorch 80Fast Neural Style for Image Style Transform by Pytorch .\nPyTorchCV"

                            },

                            {

                                num: NumberInt("1065"),

                                value: "Pytorch Poetry Generation 80is a repurposing of http://pytorch.org/: an early release beta software (developed by a consortium led by Facebook and NIVIDIA), a deep learning software that puts Python first.PyTorchNLP"

                            },

                            {

                                num: NumberInt("1066"),

                                value: "bicubic_pytorch 80A PyTorch implementation of widely-used bicubic interpolation, which is fully compatible with MATLAB.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1067"),

                                value: "CGD 80A PyTorch implementation of CGD based on the paper \"Combination of Multiple Global Descriptors for Image Retrieval\"PyTorchCV"

                            },

                            {

                                num: NumberInt("1068"),

                                value: "capsule pytorch 80A pytorch implementation of CapsNet for text classification  (subject-and-sentiment-analysis)PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1069"),

                                value: "RelationNetworks CLEVR 80A pytorch implementation for \"A simple neural network module for relational reasoning\", working on the CLEVR datasetPyTorchCVRL"

                            },

                            {

                                num: NumberInt("1070"),

                                value: "rltf 79Reinforcement Learning implementations and research prototyping in TensorFlowTensorFlowNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1071"),

                                value: "FCOS.Pytorch 79fcos implementation in pytorch1.xPyTorchCV"

                            },

                            {

                                num: NumberInt("1072"),

                                value: "Total_Variation_Loss.pytorch 79pytorch implementation of tv lossPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1073"),

                                value: "TasNet 79A PyTorch implementation of Time-domain Audio Separation Network (TasNet) with Permutation Invariant Training (PIT) for speech separation.PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1074"),

                                value: "COVIDNet 79PyTorch implementation of COVID-Net https://github.com/lindawangg/COVID-NetPyTorchCVNLPGraph"

                            },

                            {

                                num: NumberInt("1075"),

                                value: "Billion scale semi supervised learning 79Implementing Billion-scale semi-supervised learning for image classification using PytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1076"),

                                value: "DCLS SR 79Official PyTorch implementation of the paper \"Deep Constrained Least Squares for Blind Image Super-Resolution\", CVPR 2022.PyTorchCV"

                            },

                            {

                                num: NumberInt("1077"),

                                value: "tabular dl num embeddings 79The official implementation of the paper \"On Embeddings for Numerical Features in Tabular Deep Learning\"PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1078"),

                                value: "R NET in Tensorflow 78R-NET implementation in TensorFlow.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1079"),

                                value: "vae_vpflows 78Code in PyTorch for the convex combination linear IAF and the Householder Flow, J.M. Tomczak & M. Welling https://jmtomczak.github.io/deebmed.html \nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1080"),

                                value: "MetaFormer 78A PyTorch implementation of \"MetaFormer: A Unified Meta Framework for Fine-Grained Recognition\". A reference PyTorch implementation of CoAtNet: Marrying Convolution and Attention for All Data SizesPyTorchCV"

                            },

                            {

                                num: NumberInt("1081"),

                                value: "AGAIN VC 78This is the official implementation of the paper AGAIN-VC: A One-shot Voice Conversion using Activation Guidance and Adaptive Instance Normalization.PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1082"),

                                value: "editts 78Official implementation of EdiTTS: Score-based Editing for Controllable Text-to-SpeechPyTorchNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1083"),

                                value: "Griffin_lim 77A TensorFlow implementation of Griffin-Lim algorithmTensorFlowGenerativeAudio"

                            },

                            {

                                num: NumberInt("1084"),

                                value: "TagSpace tensorflow 77Tensorflow implementation of Facebook TagSpaceTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1085"),

                                value: "CNN Sentence Classification 77A tensorflow implementation of Convolutional Neural Networks for Sentence ClassificationTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1086"),

                                value: "Deep Knowledge Tracing 77An implementation of the Deep Knowledge Tracing (DKT) using Tensorflow 2.0TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1087"),

                                value: "pregel 77Tensorflow implementation of Graph Convolutional NetworkTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1088"),

                                value: "SimCLR in TensorFlow 2 77(Minimally) implements SimCLR (https://arxiv.org/abs/2002.05709) in TensorFlow 2.TensorFlowCVGenerativeRLUnsupervisedSelf-Supervised"

                            },

                            {

                                num: NumberInt("1089"),

                                value: "Speech_driven_gesture_generation_with_autoencoder 77This is the official implementation for IVA '19 paper \"Analyzing Input and Output Representations for Speech-Driven Gesture Generation\".TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1090"),

                                value: "deep transfer 77PyTorch implementation of \"Universal Style Transfer via Feature Trasforms\" PyTorchCV"

                            },

                            {

                                num: NumberInt("1091"),

                                value: "quantile regression dqn pytorch 77A short and easy implementation of Quantile Regression DQN | Distributional Reinforcement LearningPyTorchRL"

                            },

                            {

                                num: NumberInt("1092"),

                                value: "gaze estimation 77A deep learning based gaze estimation framework implemented with PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1093"),

                                value: "voice filter 77A unofficial Pytorch implementation of Google's VoiceFilterPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1094"),

                                value: "skip thought tf 76An implementation of skip-thought vectors in TensorflowTensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1095"),

                                value: "ESIM 76TensorFlow implementation of the ESIM model (Enhanced LTSM for natural language inference)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1096"),

                                value: "ASNE 76A sparsity aware and memory efficient implementation of \"Attributed Social Network Embedding\" (TKDE 2018).TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1097"),

                                value: "tf hrnet 76tensorflow implementation for \"High-Resolution Representations for Labeling Pixels and Regions\"TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1098"),

                                value: "TensorANFIS 76A Tensorflow implementation of the Adaptive Neuro-Based Fuzzy Inference System (ANFIS)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1099"),

                                value: "translagent 76Code for Emergent Translation in Multi-Agent Communication.\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("1100"),

                                value: "AI writer_Data2Doc 76PyTorch Implementation of NBA game summary generator.PyTorchNLP"

                            },

                            {

                                num: NumberInt("1101"),

                                value: "FMPN FER 76Official PyTorch Implementation of 'Facial Motion Prior Networks for Facial Expression Recognition', VCIP 2019, OralPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1102"),

                                value: "MaskFlownet Pytorch 76Pytorch implementation of MaskFlownetPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1103"),

                                value: "SuperMix 76Pytorch implementation of CVPR2021 paper: SuperMix: Supervising the Mixing Data AugmentationPyTorchCV"

                            },

                            {

                                num: NumberInt("1104"),

                                value: "pytorch noreward rl 76pytorch implementation of Curiosity-driven Exploration by Self-supervised PredictionPyTorchSelf-Supervised"

                            },

                            {

                                num: NumberInt("1105"),

                                value: "Faster rcnn 76My implementation of Faster-RCNN Pytorch PyTorchCV"

                            },

                            {

                                num: NumberInt("1106"),

                                value: "deep ranking 76Learning Fine-grained Image Similarity with Deep Ranking is a novel application of neural networks, where the authors use a new multi scale architecture combined with a triplet loss to create a neural network that is able to perform image search. This repository is a simplified implementation of the samePyTorchCV"

                            },

                            {

                                num: NumberInt("1107"),

                                value: "PyTorch FilterResponseNormalizationLayer 76PyTorch implementation of \"Filter Response Normalization Layer: Eliminating Batch Dependence in the Training of Deep Neural Networks\"PyTorchCV"

                            },

                            {

                                num: NumberInt("1108"),

                                value: "knowledge_evolution 76(CVPR-Oral 2021) PyTorch implementation of Knowledge Evolution approach and Split-NetsPyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("1109"),

                                value: "Keras RFCN 75RFCN implement based on Keras&TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1110"),

                                value: "tf2 eager yolo3 75Yolo-v3 model was implemented with tf2 eager style. I also implemented the eager model's training function and applied it to other datasets (digit detector, vehicle detector).TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1111"),

                                value: "Tensorflow implementation of LCNN 75A Tensorflow implementation of \"A Light CNN for Deep Face Representation with Noisy Labels\"TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1112"),

                                value: "PSMNet 75A Pytorch implementation of Pyramid Stereo Matching NetworkPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1113"),

                                value: "Speech Emotion Classification with PyTorch 75This repository contains PyTorch implementation of 4 different models for classification of emotions of the speech.PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1114"),

                                value: "Vessel wgan pytorch 75An implementation ofRetinal Vessel Segmentation in Fundoscopic Images with Generative Adversarial NetworksPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1115"),

                                value: "DeepPhotoStyle_pytorch 75PyTorch implementation of  \"Deep Photo Style Transfer\" PyTorchCV"

                            },

                            {

                                num: NumberInt("1116"),

                                value: "CrossViT pytorch 75Implementation of CrossViT: Cross-Attention Multi-Scale Vision Transformer for Image ClassificationPyTorchCV"

                            },

                            {

                                num: NumberInt("1117"),

                                value: "SqueezeNet Neural Style Pytorch 75Lightweight implementation of neural style in Pytorch with SqueezeNetPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1118"),

                                value: "Pytorch Attention Guided CycleGAN 75Pytorch implementation of Unsupervised Attention-guided Image-to-Image Translation. PyTorchCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1119"),

                                value: "Multiclass Semantic Segmentation CamVid 74Tensorflow 2 implementation of complete pipeline for multiclass image semantic segmentation using UNet, SegNet and FCN32 architectures on Cambridge-driving Labeled Video Database (CamVid) dataset. TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1120"),

                                value: "pytorch neat 74A pytorch implementation of the NEAT (NeuroEvolution of Augmenting Topologies) algorithmPyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("1121"),

                                value: "LeNet5 MNIST PyTorch 74 The simplest implementation of LeNet5 with mnist in PyTorch. Accuracy: ~99%PyTorchNLP"

                            },

                            {

                                num: NumberInt("1122"),

                                value: "pytorch HED 74An implementation of HED in pytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1123"),

                                value: "Recurrent Environment Simulators 73Deepmind Recurrent Environment Simulators paper implementation in tensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1124"),

                                value: "TensorflowLite UNet 73Implementation of UNet by Tensorflow Lite. Semantic segmentation without using GPU with RaspberryPi + Python. In order to maximize the learning efficiency of the model, this learns only the \"Person\" class of VOC2012. And Comparison with ENet.TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1125"),

                                value: "DeblurGAN tf 73Tensorflow implementation of DeblurGAN(Blind Motion Deblurring Using Conditional Adversarial Networks)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1126"),

                                value: "PGD pytorch 73A pytorch implementation of \"Towards Deep Learning Models Resistant to Adversarial Attacks\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1127"),

                                value: "dctts pytorch 73The pytorch implementation of DC-TTSPyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1128"),

                                value: "models 73Merlin Models is a collection of deep learning recommender system model reference implementationsPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1129"),

                                value: "MolCLR 73Implementation of \"Molecular Contrastive Learning of Representations via Graph Neural Networks\" in PyTorch GeometricPyTorchGraph"

                            },

                            {

                                num: NumberInt("1130"),

                                value: "Convolutional Pose Machine tf 72Convolutional Pose Machine tensorflow implementationTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1131"),

                                value: "tensorflow maml 72TensorFlow 2.0 implementation of MAML.TensorFlowCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1132"),

                                value: "SwAV TF 72TensorFlow implementation of \"Unsupervised Learning of Visual Features by Contrasting Cluster Assignments\".TensorFlowGenerativeRLUnsupervisedSelf-Supervised"

                            },

                            {

                                num: NumberInt("1133"),

                                value: "tf monodepth2 72Tensorflow implementation(unofficial) of \"Digging into Self-Supervised Monocular Depth Prediction\"TensorFlowCVGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("1134"),

                                value: "Inceptionv4_and_Inception ResNetv2.PyTorch 72A PyTorch implementation of Inception-v4 and Inception-ResNet-v2.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1135"),

                                value: "gail_gym 72Implementation of Generatve Adversarial Imitation Learning (GAIL) for classic environments from OpenAI Gym. PyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("1136"),

                                value: "RecVAE 72The official PyTorch implementation of the paper \"RecVAE: A New Variational Autoencoder for Top-N Recommendations with Implicit Feedback\"PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1137"),

                                value: "DLow 72[ECCV 2020] Official PyTorch Implementation of \"DLow: Diversifying Latent Flows for Diverse Human Motion Prediction\". ECCV 2020.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1138"),

                                value: "jax resnet 72Implementations and checkpoints for ResNet, Wide ResNet, ResNeXt, ResNet-D, and ResNeSt in JAX (Flax).JAXCV"

                            },

                            {

                                num: NumberInt("1139"),

                                value: "crowd counting using tensorflow 71Tensorflow implementation of crowd counting using CNNs from overhead surveillance cameras.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1140"),

                                value: "shufflenet v2 tensorflow 71Tensorflow ShuffleNet v2 implementationTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1141"),

                                value: "PyTorch Image Classification with Kaggle Dogs vs Cats Dataset 71Classifies an image as containing either a dog or a cat (using Kaggle's public dataset), but could easily be extended to other image classification problems.PyTorchCV"

                            },

                            {

                                num: NumberInt("1142"),

                                value: "torch_DCEC 71Pytorch Deep Clustering with Convolutional Autoencoders implementationPyTorchCV"

                            },

                            {

                                num: NumberInt("1143"),

                                value: "SRGAN PyTorch 71A PyTorch implementation of SRGAN specific for Anime Super Resolution based on \"Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network\". And another PyTorch WGAN-gp implementation of SRGAN referring to \"Improved Training of Wasserstein GANs\".PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1144"),

                                value: "3D UNet PyTorch Implementation 71The implementation of 3D-UNet using PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1145"),

                                value: "TENE 71A sparsity aware implementation of \"Enhanced Network Embedding with Text Information\" (ICPR 2018). PyTorchNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1146"),

                                value: "PoseStylizer 71PyTorch implementation of Generating Person Images with Appearance-aware Pose Stylizer (IJCAI 2020)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1147"),

                                value: "contiguous succotash 71Recurrent Variational Autoencoder with Dilated Convolutions that generates sequential data implemented in pytorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1148"),

                                value: "higgs 71A modern WebSite and Web services framework with built in Async events, HTTP server,client and WebSocket server,client, all powered by Netty with Jersey/JAX-RS, Shiro, Handlebars and JacksonJAXCVNLP"

                            },

                            {

                                num: NumberInt("1149"),

                                value: "im2im 70Unsupervised Image to Image Translation with Generative Adversarial Networks\nTensorFlowCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1150"),

                                value: "hred attention tensorflow 70An extension on the Hierachical Recurrent Encoder-Decoder for Generative Context-Aware Query Suggestion, our implementation is in Tensorflow and uses an attention mechanism.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1151"),

                                value: "Pytorch RL CPP 70A Repository with C++ implementations of Reinforcement Learning Algorithms (Pytorch)TensorFlowCVRL"

                            },

                            {

                                num: NumberInt("1152"),

                                value: "alpha zero 70AlphaZero implementation for Othello, Connect-Four and Tic-Tac-Toe based on \"Mastering the game of Go without human knowledge\" and \"Mastering Chess and Shogi by Self-Play with a General Reinforcement Learning Algorithm\" by DeepMind.TensorFlowNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1153"),

                                value: "SiamCRNN 70[TGRS 2020] Official Tensorflow implementation for Change Detection in Multisource VHR Images via Deep Siamese Convolutional Multiple-Layers Recurrent Neural NetworkTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1154"),

                                value: "ganimation 70Pytorch implementation of GANimation with pretrained weights.PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1155"),

                                value: "adversarial pose pytorch 70A PyTorch implementation of adversarial pose estimation for multi-personPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1156"),

                                value: "pytorch SRDenseNet 70Pytorch implementation for SRDenseNet (ICCV2017)PyTorchCV"

                            },

                            {

                                num: NumberInt("1157"),

                                value: "genesis 70Official PyTorch implementation of GENESIS and GENESIS-V2PyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1158"),

                                value: "nasnet pytorch 70A neat pytorch implementation of nasnet and the ported weights from tensorflowPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1159"),

                                value: "Conditioned Source Separation LaSAFT 70A PyTorch implementation of the paper: \"LaSAFT: Latent Source Attentive Frequency Transformation for Conditioned Source Separation\" (ICASSP 2021)PyTorchNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1160"),

                                value: "Real ESRGAN 70PyTorch implementation of Real-ESRGAN modelPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1161"),

                                value: "Policy Gradient Methods 70Implementation of Algorithms from the Policy Gradient Family. Currently includes: A2C, A3C, DDPG, TD3, SACPyTorchRL"

                            },

                            {

                                num: NumberInt("1162"),

                                value: "tgan 70Temporal Generative Adversarial Nets\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1163"),

                                value: "pointnet2 tensorflow2 69Pointnet++ modules implemented as tensorflow 2 keras layers.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1164"),

                                value: "Vision Transformer Keras Tensorflow Pytorch Examples 69Tensorflow implementation of the Vision Transformer (An Image is Worth 16x16 Words: TransformerPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1165"),

                                value: "One_Cycle_Policy 69Pytorch notebook with One Cycle Policy implementation (https://arxiv.org/abs/1803.09820)PyTorchRL"

                            },

                            {

                                num: NumberInt("1166"),

                                value: "pytorch_basic_nmt 69A simple yet strong implementation of neural machine translation in pytorchPyTorchNLP"

                            },

                            {

                                num: NumberInt("1167"),

                                value: "pytorch a3c mujoco 69Implement A3C for Mujoco gym envsPyTorchRL"

                            },

                            {

                                num: NumberInt("1168"),

                                value: "CeiT pytorch 69Implementation of Convolutional enhanced image TransformerPyTorchCV"

                            },

                            {

                                num: NumberInt("1169"),

                                value: "XMUNMT 68An implementation of RNNsearch using TensorFlowTensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1170"),

                                value: "Deep Association Learning 68Tensorflow Implementation on Paper [BMVC2018]Deep Association Learning for Unsupervised Video Person Re-identificationTensorFlowCVGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("1171"),

                                value: "WSDM2018_HyperQA 68Reference Implementation for WSDM 2018 Paper \"Hyperbolic Representation Learning for Fast and Efficient Neural Question Answering\"TensorFlowGraph"

                            },

                            {

                                num: NumberInt("1172"),

                                value: "Awesome Segmentations 68Lots of semantic image segmentation implementations in Tensorflow/KerasTensorFlowCVGenerativeHealth"

                            },

                            {

                                num: NumberInt("1173"),

                                value: "SegNetCMR 68A Tensorflow implementation of SegNet for cardiac MRI segmentationTensorFlowCVNLPGenerativeHealth"

                            },

                            {

                                num: NumberInt("1174"),

                                value: "video_generator 68This is implementation of convolutional variational autoencoder in TensorFlow library and it will be used for video generation.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1175"),

                                value: "symmetrical synthesis 68Official Tensorflow implementation of \"Symmetrical Synthesis for Deep Metric Learning\" (AAAI 2020)TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1176"),

                                value: "embracenet 68Robust multimodal integration method implemented in PyTorch and TensorFlowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1177"),

                                value: "3d cnn action recognition 68Implementation of Action Recognition using 3D Convnet on UCF-101 dataset. TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1178"),

                                value: "VAE Gumbel Softmax 68An implementation of a Variational-Autoencoder using the Gumbel-Softmax reparametrization trick in TensorFlow (tested on r1.5 CPU and GPU) in ICLR 2017.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1179"),

                                value: "hit gan 68Tensorflow implementation for \"Improved Transformer for High-Resolution GANs\" (NeurIPS 2021).TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1180"),

                                value: "VoxelMorph PyTorch 68An unofficial PyTorch implementation of VoxelMorph- An unsupervised 3D deformable image registration methodPyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1181"),

                                value: "permutohedral_lattice 67Permutohedral Lattice C++/CUDA implementation + TensorFlow Op (CPU/GPU)TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1182"),

                                value: "DeepLabV3 Plus 67Tensorflow 2.3.0 implementation of DeepLabV3-PlusTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1183"),

                                value: "wavegan pytorch 67Pytorch Implementation of wavegan model to generate audio PyTorchCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1184"),

                                value: "mmtm 67Implementation of CVPR 2020 paper \"MMTM: Multimodal Transfer Module for CNN Fusion\"PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1185"),

                                value: "Document Image Unwarping pytorch 67Pytorch implementation and extension of \"DocUnet: Document Image Unwarping via A Stacked U-Net\"PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1186"),

                                value: "DREML 67PyTorch implementation of Deep Randomized Ensembles for Metric Learning(ECCV2018)PyTorchCV"

                            },

                            {

                                num: NumberInt("1187"),

                                value: "MetaAF 67Control adaptive filters with neural networks.JAXGenerativeAudioSelf-SupervisedHealth"

                            },

                            {

                                num: NumberInt("1188"),

                                value: "YOLOv3 66YOLOv3 Implementation in TensorFlow 1.1XTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1189"),

                                value: "dfi tensorflow 66Implementation of Deep Feature Interpolation in Tensorflow using a VGG19 modelTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1190"),

                                value: "videogan 66Implementation of \"Generating Videos with Scene Dynamics\" in TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1191"),

                                value: "affinity loss 66Unofficial implementation of \"Max-margin Class Imbalanced Learning with Gaussian Affinity\"TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1192"),

                                value: "maskrcnn modanet 66A Mask R-CNN Keras implementation with Modanet annotations on the Paperdoll datasetTensorFlowCV"

                            },

                            {

                                num: NumberInt("1193"),

                                value: "DSMSCN 66[MultiTemp 2019] Official Tensorflow implementation for Change Detection in Multi-temporal VHR Images Based on Deep Siamese Multi-scale Convolutional Neural Networks.TensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1194"),

                                value: "DrowsyDriverDetection 66This is a project implementing Computer Vision and Deep Learning concepts to detect drowsiness of a driver and sound an alarm if drowsy.TensorFlowGenerativeAudio"

                            },

                            {

                                num: NumberInt("1195"),

                                value: "openpose pytorch 66PyTorch implementation of the OpenPosePyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1196"),

                                value: "FOTS.pytorch 66an unofficial implementation of FOTS: Fast Oriented Text Spotting with a Unified NetworkPyTorchCV"

                            },

                            {

                                num: NumberInt("1197"),

                                value: "DSC PyTorch 66A PyTorch implementation of \"Direction-Aware Spatial Context Features for Shadow Detection\" CVPR'18 | T-PAMI'19PyTorchCV"

                            },

                            {

                                num: NumberInt("1198"),

                                value: "CASENet 66A Pytorch implementation of CASENet for the Cityscapes DatasetPyTorchCV"

                            },

                            {

                                num: NumberInt("1199"),

                                value: "vqgan jax 66JAX implementation of VQGANJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1200"),

                                value: "progen 66Implementation and replication of ProGen, Language Modeling for Protein Generation, in JaxJAXNLPHealth"

                            },

                            {

                                num: NumberInt("1201"),

                                value: "tensorflow som 65A multi-gpu implementation of the self-organizing map in TensorFlowTensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1202"),

                                value: "distributed_rl 65Pytorch implementation of distributed deep reinforcement learningPyTorchNLPRL"

                            },

                            {

                                num: NumberInt("1203"),

                                value: "ESRGAN PyTorch 65A simple implementation of esrgan, which uses the pytorch framework.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1204"),

                                value: "PyTorch Deep Image Steganography 65A PyTorch implementation of image steganography utilizing deep convolutional neural networksPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1205"),

                                value: "cyclegan qp 65Official PyTorch implementation of \"Artist Style Transfer Via Quadratic Potential\"PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1206"),

                                value: "plenoxels 65JAX implementation of PlenoxelsJAXCV"

                            },

                            {

                                num: NumberInt("1207"),

                                value: "cyclic learning rate 64Cyclic learning rate TensorFlow implementation.TensorFlowGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("1208"),

                                value: "keras sincnet 64Keras (tensorflow) implementation of SincNet (Mirco Ravanelli, Yoshua Bengio - https://github.com/mravanelli/SincNet)TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1209"),

                                value: "game2vec 64TensorFlow implementation of word2vec applied on https://www.kaggle.com/tamber/steam-video-games dataset, using both CBOW and Skip-gram.TensorFlowCVGenerativeAudio"

                            },

                            {

                                num: NumberInt("1210"),

                                value: "LiteSeg 64Pytorch implementation for LiteSegPyTorchCV"

                            },

                            {

                                num: NumberInt("1211"),

                                value: "Variational Autoencoder pytorch 64Implementation of a convolutional Variational-Autoencoder model in pytorch.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1212"),

                                value: "3PU_pytorch 64pytorch implementation of >>Patch-base progressive 3D Point Set Upsampling<<PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1213"),

                                value: "DeepClustering 64A pytorch implementation of the paper Unsupervised Deep Embedding for Clustering Analysis.PyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("1214"),

                                value: "rljax 64A collection of RL algorithms written in JAX.JAXCVRL"

                            },

                            {

                                num: NumberInt("1215"),

                                value: "score_flow 64Official code for \"Maximum Likelihood Training of Score-Based Diffusion Models\", NeurIPS 2021 (spotlight)JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1216"),

                                value: "PhotographicImageSynthesiswithCascadedRefinementNetworks-Pytorch 63Photographic Image Synthesis with Cascaded Refinement Networks - Pytorch Implementation\nPyTorchCV"

                            },

                            {

                                num: NumberInt("1217"),

                                value: "bottom up features 63Bottom-up features extractor implemented in PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("1218"),

                                value: "GatedPixelCNNPyTorch 63PyTorch implementation of \"Conditional Image Generation with PixelCNN Decoders\" by van den Oord et al. 2016PyTorchCV"

                            },

                            {

                                num: NumberInt("1219"),

                                value: "dgi 62TensorFlow implementation of Deep Graph InfomaxTensorFlowGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("1220"),

                                value: "Deep multimodal subspace clustering networks 62Tensorflow implementation of \"Deep Multimodal Subspace Clustering Networks\"TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1221"),

                                value: "rethinking bnn optimization 62Implementation for the paper \"Latent Weights Do Not Exist: Rethinking Binarized Neural Network Optimization\"TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1222"),

                                value: "breakout Deep Q Network 62Reinforcement Learning | tensorflow implementation of DQN, Dueling DQN and Double DQN performed on Atari BreakoutTensorFlowCVGenerativeRLGraph"

                            },

                            {

                                num: NumberInt("1223"),

                                value: "dtan 62Official PyTorch implementation for our NeurIPS 2019 paper, Diffeomorphic Temporal Alignment Nets. TensorFlow\\Keras  version is available at tf_legacy branch.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1224"),

                                value: "FunMatch Distillation 62TF2 implementation of knowledge distillation using the \"function matching\" hypothesis from https://arxiv.org/abs/2106.05237.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1225"),

                                value: "keras vision transformer 62The Tensorflow, Keras implementation of Swin-Transformer and Swin-UNETTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1226"),

                                value: "renet 62[ICCV'21] Official PyTorch implementation of Relational Embedding for Few-Shot Classification PyTorchCV"

                            },

                            {

                                num: NumberInt("1227"),

                                value: "dsnt 61An unofficial Tensorflow implementation of the DSNT layer, as taken from the paper \"Numerical Coordinate Regression with Convolutional Neural Networks\".TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1228"),

                                value: "tf adain 61TensorFlow implementation of the paper \"Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization\" by Xun Huang and Serge BelongieTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1229"),

                                value: "mtcnn pytorch 61pytorch implementation of  face detection algorithm  MTCNNPyTorchCV"

                            },

                            {

                                num: NumberInt("1230"),

                                value: "DeepVO 61Implementation of DeepVO (ICRA 2017)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1231"),

                                value: "DenseNet MURA PyTorch 61Implementation of DenseNet model on Standford's MURA dataset using PyTorchPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1232"),

                                value: "DistributedES 61Distributed implementation of popular evolutionary methodsPyTorchRL"

                            },

                            {

                                num: NumberInt("1233"),

                                value: "Transforming Autoencoder TF 60Tensorflow implementation of \"Transforming Autoencoders\" (Proposed by G.E.Hinton, et al.)TensorFlowNLPGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("1234"),

                                value: "capsulesEM 60A tensorflow implementation of Hinton's [matrix capsules with EM routing](https://openreview.net/pdf?id=HJWLfGWRb)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1235"),

                                value: "DeblurGAN tf 60Unofficial tensorflow (tf) implementation of DeblurGAN: Blind Motion Deblurring Using Conditional Adversarial NetworksTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1236"),

                                value: "tracking_via_colorizing 60Tensorflow implementation of CNN described in https://arxiv.org/abs/1806.09594TensorFlowCVGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("1237"),

                                value: "R CNN 60My implementation of RCNN for the Flower DatesTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1238"),

                                value: "skillful_nowcasting 60Implementation of DeepMind's Deep Generative Model of Radar (DGMR)  https://arxiv.org/abs/2104.00954PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1239"),

                                value: "neurips18_hierchical_image_manipulation 60Pytorch Implementation of NeurIPS'18 paper on Generative Image Manipulation with Hierarchical Semantic StructuresPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1240"),

                                value: "transformer 60Neutron: A pytorch based implementation of Transformer and its variants.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1241"),

                                value: "DCGAN PyTorch 60PyTorch Implementation of DCGAN trained on the CelebA dataset.PyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1242"),

                                value: "Dialog 59A PyTorch Implementation of japanese chatbot using BERT and Transformer's decoderPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1243"),

                                value: "chainer_caption_generation 59Show and Tell\nChainerNLP"

                            },

                            {

                                num: NumberInt("1244"),

                                value: "jaxb2 rich contract plugin 59Implements some JAXB plugins to generate advanced contract scenarios from XSDJAXNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1245"),

                                value: "kfac jax 59Second Order Optimization and Curvature Estimation with K-FAC in JAX.JAXCVNLPGraph"

                            },

                            {

                                num: NumberInt("1246"),

                                value: "nima 58Implementation of NIMA: Neural Image AssessmentTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1247"),

                                value: "LightRNN NIPS2016 Tensorflow_code 58The tensorflow implementation of NIPS2016 paper \"LightRNN: Memory and Computation-Efficient Recurrent Neural Networks\" (https://arxiv.org/abs/1610.09893)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1248"),

                                value: "entity network 58Tensorflow implementation of \"Tracking the World State with Recurrent Entity Networks\" [https://arxiv.org/abs/1612.03969] by Henaff, Weston, Szlam, Bordes, and LeCun.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1249"),

                                value: "SENet tensorflow slim 58SENet implementation on TensorFlow SlimTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1250"),

                                value: "tensorflow maxout 58Maxout Networks TensorFlow implementation presented in https://arxiv.org/abs/1302.4389TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1251"),

                                value: "pytorch consistency regularization 58PyTorch implementation of consistency regularization methods for semi-supervised learningPyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1252"),

                                value: "FCRN_pytorch 58Pytorch Implementation of Deeper Depth Prediction with Fully Convolutional Residual NetworksPyTorchNLP"

                            },

                            {

                                num: NumberInt("1253"),

                                value: "PCC pytorch 58A pytorch implementation of the paper \"Prediction, Consistency, Curvature: Representation Learning for Locally-Linear Control\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1254"),

                                value: "rescu 58A lightweight json Rest client utility for JAX-RSJAXNLP"

                            },

                            {

                                num: NumberInt("1255"),

                                value: "QDax 58Accelerated Quality-DiversityJAXNLPRL"

                            },

                            {

                                num: NumberInt("1256"),

                                value: "DiscoGAN TF 57Tensorflow Implementation of DiscoGANTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1257"),

                                value: "detr_tensorflow 57A Tensorflow implementation of the DETR object detection architecture.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1258"),

                                value: "abae pytorch 57PyTorch implementation of 'An Unsupervised Neural Attention Model for Aspect Extraction' by He et al. ACL2017'PyTorchUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("1259"),

                                value: "XCloud 57Official Code for Paper  (arXiv1912.10344)PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1260"),

                                value: "SpineNet Pytorch 57SpineNet - mmdetection (Pytorch) ImplementationPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1261"),

                                value: "cloob training 57CLOOB training (JAX) and inference (JAX and PyTorch)JAXCV"

                            },

                            {

                                num: NumberInt("1262"),

                                value: "TorchLRP 56A PyTorch 1.6 implementation of Layer-Wise Relevance Propagation (LRP). PyTorchCV"

                            },

                            {

                                num: NumberInt("1263"),

                                value: "Representation Learning for Information Extraction 56Pytorch implementation of Paper by Google Research - Representation Learning for Information Extraction from Form-like Documents.PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1264"),

                                value: "CycleGAN 56PyTorch implementation of CycleGANPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1265"),

                                value: "mmd/jmmd/adaBN 56Unsupervised transfer learning for image classification written in mxnet.MXNetCVUnsupervised"

                            },

                            {

                                num: NumberInt("1266"),

                                value: "soap spring boot cxf 56Sample Project for producing & testing a SOAP-WSDL-driven Service with Spring Boot, Apache CXF & JAX-WSJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1267"),

                                value: "jax rl 56JAX implementations of core Deep RL algorithmsJAXNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1268"),

                                value: "MassFace 55MassFace: an effecient implementation using triplet loss for face recognitionTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1269"),

                                value: "dcnn_textvae 55TensorFlow implementation of \"Improved Variational Autoencoders for Text Modeling using Dilated Convolutions\"TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1270"),

                                value: "vae_captioning 55Implementation of Diverse and Accurate Image Description Using a Variational Auto-Encoder with an Additive Gaussian Encoding SpaceTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1271"),

                                value: "din 55keras implementation about Deep Interest NetworkTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1272"),

                                value: "gsoc wav2vec2 55GSoC'2021 | TensorFlow implementation of Wav2Vec2TensorFlowNLPGenerativeAudioSelf-Supervised"

                            },

                            {

                                num: NumberInt("1273"),

                                value: "ppo_pytorch_cpp 55This is an implementation of the proximal policy optimization algorithm for the C++ API of Pytorch.\nPyTorchRL"

                            },

                            {

                                num: NumberInt("1274"),

                                value: "maxim pytorch 55[CVPR 2022 Oral] PyTorch re-implementation for \"MAXIM: Multi-Axis MLP for Image Processing\", with *training code*. Official Jax repo: https://github.com/google-research/maximJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1275"),

                                value: "DispNet TensorFlow 54TensorFlow implementation of DispNet by Zhijian Jiang.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1276"),

                                value: "Unet Tensorflow 54Tensorflow implement of U-NetTensorFlowCVGenerativeHealth"

                            },

                            {

                                num: NumberInt("1277"),

                                value: "resemul 54A TensorFlow+Keras implementation of \"Sample-level CNN Architectures for Music Auto-tagging Using Raw Waveforms\"TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1278"),

                                value: "Super SloMo tf2 54Tensorflow 2 implementation of Super SloMo paperTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1279"),

                                value: "google_evolution 54This implements one of result networks from Large-scale evolution of image classifiers by Esteban Real, et. al. \nPyTorchCV"

                            },

                            {

                                num: NumberInt("1280"),

                                value: "graphx conv 54Official implementation of GraphX-ConvolutionPyTorchGraph"

                            },

                            {

                                num: NumberInt("1281"),

                                value: "pytorch animeGAN 54Pytorch implementation of AnimeGAN for fast photo animationPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1282"),

                                value: "Deterministic GAIL PyTorch 54PyTorch implementation of Deterministic Generative Adversarial Imitation Learning (GAIL) for Off Policy learningPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("1283"),

                                value: "alexnet pytorch 54Pytorch Implementation of AlexNetPyTorchCV"

                            },

                            {

                                num: NumberInt("1284"),

                                value: "fcos 54An unofficial implementation of FCOS in Pytorch: 37.3-resnet50-700pxPyTorchCV"

                            },

                            {

                                num: NumberInt("1285"),

                                value: "Reinforment Implementation on a Quadruped 53Reinforment Implementation on a Quadruped using DDPG(tensorflow), ROS, Gazebo, real quadruped robot.TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1286"),

                                value: "img2imgGAN 53Implementation of the paper : \"Toward Multimodal Image-to-Image Translation\"TensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1287"),

                                value: "crnn tensorflow 53This software implements the Convolutional Recurrent Neural Network (CRNN) in tensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1288"),

                                value: "ifl tpp 53Implementation of \"Intensity-Free Learning of Temporal Point Processes\" (Spotlight @ ICLR 2020)PyTorchGraph"

                            },

                            {

                                num: NumberInt("1289"),

                                value: "centernet lightning 53Implementation of CenterNet and FairMOT with PyTorch LightningPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1290"),

                                value: "chainer-dfi 53Deep Feature Interpolation for Image Content Changes\nChainerCV"

                            },

                            {

                                num: NumberInt("1291"),

                                value: "Y AE 52Official Tensorflow implementation of the paper \"Y-Autoencoders: disentangling latent representations via sequential-encoding\", Pattern Recognition Letters (2020)TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1292"),

                                value: "Parallel Wavenet 52It is a Tutorial, not a complete implementTensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1293"),

                                value: "Improving RNN recommendation model 52Applied weight tying technique to RNN based recommendation model. Implemented with Tensorflow and Keras.TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1294"),

                                value: "dec tensorflow 52Tensorflow implementation of \"Unsupervised Deep Embedding for Clustering Analysis\"TensorFlowGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1295"),

                                value: "distributed_reinforcement_learning 52implementation of distributed reinforcement learning with distributed tensorflowTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1296"),

                                value: "RolX 52An alternative implementation of Recursive Feature and Role Extraction (KDD11 & KDD12)TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1297"),

                                value: "Temporal Ensembling for Semi Supervised Learning 52Implementation of Temporal Ensembling for Semi-Supervised Learning by Laine et al. with tensorflow eager executionTensorFlowCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1298"),

                                value: "CBAM TensorFlow2.0 52CBAM(Convolutional Block Attention Module) implementation on TensowFlow2.0TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1299"),

                                value: "code2seq 52PyTorch's implementation of the code2seq model.PyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("1300"),

                                value: "SKNet PyTorch 52Nearly Perfect & Easily Understandable PyTorch Implementation of SKNetPyTorchCV"

                            },

                            {

                                num: NumberInt("1301"),

                                value: "X Punctuator 52A PyTorch implementation of a punctuation prediction system using (B)LSTM, which automatically adds suitable punctuation into text without punctuation.PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1302"),

                                value: "neural style pytorch 52Neural Style implementation in PyTorch!  :art:PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1303"),

                                value: "LSGAN 52LSGAN\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1304"),

                                value: "PSENet Tensorflow 51TensorFlow implementation of PSENet text detector (Shape Robust Text Detection with Progressive Scale Expansion Networkt)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1305"),

                                value: "TensorFlow ESPCN 51TensorFlow implementation of the Efficient Sub-Pixel Convolutional Neural Network TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1306"),

                                value: "Adaptive-segmentation-mask-attack (ASMA) 51A pytorch implementation of the MICCAI2019 paper \"Impact of Adversarial Examples on Deep Learning Models for Biomedical Image Segmentation\".\nPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1307"),

                                value: "deepdyn 51pytorch implementation of paper https://www.frontiersin.org/articles/10.3389/fcomp.2020.00035/fullPyTorchCVHealth"

                            },

                            {

                                num: NumberInt("1308"),

                                value: "pspnet pytorch 51PyTorch implementation of PSPNetPyTorchCV"

                            },

                            {

                                num: NumberInt("1309"),

                                value: "retinanet.pytorch 51RetinaNet implementation in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1310"),

                                value: "VGG16 PyTorch 51VGG16 Net implementation from PyTorch Examples scripts for ImageNet datasetPyTorchCV"

                            },

                            {

                                num: NumberInt("1311"),

                                value: "mxnet-seq2seq 51This project implements the sequence to sequence learning with mxnet for open-domain chatbotMXNetNLP"

                            },

                            {

                                num: NumberInt("1312"),

                                value: "crest 51Command-line API modeled after JAX-RS (Command REST)JAXCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1313"),

                                value: "SST Tensorflow 50Tensorflow Implementation of the Paper \"SST: Single-Stream Temporal Action Proposals\" in CVPR 2017.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1314"),

                                value: "deep nlp 50Tensorflow Tutorial files and Implementations of various Deep NLP and CV Models.TensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1315"),

                                value: "CommNet BiCnet 50CommNet and BiCnet implementation in tensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1316"),

                                value: "tf quaternion 50An implementation of quaternions for and written in tensorflow. Fully differentiable.TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1317"),

                                value: "FOTS_OCR 50TensorFlow Implementation of FOTS, Fast Oriented Text Spotting with a Unified Network.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1318"),

                                value: "YOLOv5 tf 50YOLOv5 implementation using TensorFlow 2TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1319"),

                                value: "two step task 50Implementation of the two-step-task as described in \"Prefrontal cortex as a meta-reinforcement learning system\" and \"Learning to Reinforcement Learn\".TensorFlowRL"

                            },

                            {

                                num: NumberInt("1320"),

                                value: "Swin Transformer Tensorflow 50Unofficial implementation of \"Swin Transformer: Hierarchical Vision Transformer using Shifted Windows\" (https://arxiv.org/abs/2103.14030)TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1321"),

                                value: "gpt 2xy 50GPT-2 User Interface based on HuggingFace's Pytorch ImplementationPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1322"),

                                value: "ERNIE text classification pytorch 50This repo contains a PyTorch implementation of a pretrained ERNIE model  for text classification.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1323"),

                                value: "MolDQN pytorch 50A PyTorch Implementation of \"Optimization of Molecules via Deep Reinforcement Learning\".PyTorchCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1324"),

                                value: "densenet 50A PyTorch Implementation of \"Densely Connected Convolutional Networks\"PyTorchCV"

                            },

                            {

                                num: NumberInt("1325"),

                                value: "c rnn gan.pytorch 50PyTorch implementation of C-RNN-GAN for Music GenerationPyTorchGenerativeAudio"

                            },

                            {

                                num: NumberInt("1326"),

                                value: "pytorch gan metrics 50Pytorch implementation of common GAN metricsPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1327"),

                                value: "vision 503D Vision functions with end-to-end support for deep learning developers, written in Ivy.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1328"),

                                value: "keras seq2seq example 49Toy Keras implementation of a seq2seq model with examples.TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1329"),

                                value: "MLP Mixer CIFAR10 49Implements MLP-Mixer (https://arxiv.org/abs/2105.01601) with the CIFAR-10 dataset.  TensorFlowCV"

                            },

                            {

                                num: NumberInt("1330"),

                                value: "pose estimation detection 49Implementation of openpose with tensorflow & openCV for estimation of human poses & classification.TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1331"),

                                value: "deepVO 49:video_camera: Tensorflow implementation of RCCN visual odometry by Wang et al.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1332"),

                                value: "Keras augmentation layer 49Keras implementation of layer which performs augmentations of images using GPU.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1333"),

                                value: "Tensorflow_ML_Algorithms 49Implementations of machine learning algorithms in Tensorflow: MLP, RNN, autoencoder, PageRank, KNN, K-Means, logistic regression, and OLS regressionTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1334"),

                                value: "VAL 49Tensorflow Implementation on Paper [CVPR2020]Image Search with Text Feedback by Visiolinguistic Attention LearningTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1335"),

                                value: "Sharpness Aware Minimization TensorFlow 49Implements sharpness-aware minimization (https://arxiv.org/abs/2010.01412) in TensorFlow 2. TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1336"),

                                value: "PPO 49PyTorch implementation of Proximal Policy OptimizationPyTorchRLGraph"

                            },

                            {

                                num: NumberInt("1337"),

                                value: "simple pytorch 3dgan 49A simple and unofficial 3D-GAN implementation using PyTorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1338"),

                                value: "pytorch arda 49A PyTorch implementation for Adversarial Representation Learning for Domain AdaptationPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1339"),

                                value: "tf a3c gpu 48Tensorflow implementation of A3C algorithmTensorFlowCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1340"),

                                value: "fdp modelserver 48An umbrella project for multiple implementations of model servingTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1341"),

                                value: "fcn8s_tensorflow 48A TensorFlow implementation of FCN-8sTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1342"),

                                value: "Dense_BiLSTM 48Tensorflow Implementation of Densely Connected Bidirectional LSTM with Applications to Sentence ClassificationTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1343"),

                                value: "tensorflow chatbot chinese 48 | tensorflow implementation of seq2seq model with bahdanau attention and Word2Vec pretrained embeddingTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1344"),

                                value: "tensorflow mnist MLP batch_normalization weight_initializers 48MNIST classification using Multi-Layer Perceptron (MLP) with 2 hidden layers. Some weight-initializers and batch-normalization are implemented.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1345"),

                                value: "Semantic segmentation with MobileNetV3 48TensorFlow (Keras) implementation of MobileNetV3 and its segmentation headTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1346"),

                                value: "MTL Homoscedastic Uncertainty 48Multi Task Learning Implementation with Homoscedastic Uncertainty in TensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1347"),

                                value: "CSL YOLO 48A state of the art of new lightweight YOLO model implemented by TensorFlow 2.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1348"),

                                value: "kerod 48DETR - Faster RCNN implementation in tensorflow 2TensorFlowCVNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1349"),

                                value: "tesla stocks prediction 48The implementation of LSTM in TensorFlow used for the stock prediction.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1350"),

                                value: "eco dqn 48Implementation of ECO-DQN as reported in \"Exploratory Combinatorial Optimization with Reinforcement Learning\".PyTorchRLGraph"

                            },

                            {

                                num: NumberInt("1351"),

                                value: "yolo3_tensorflow 47yolo3 implement by tensorflow including mobilenet_v1, mobilenet_v2TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1352"),

                                value: "attention augmented conv 47Implementation from the paper Attention Augmented Convolutional Networks in Tensorflow (https://arxiv.org/pdf/1904.09925v1.pdf)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1353"),

                                value: "MAML tf 47Tensorflow Implementation of MAMLTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1354"),

                                value: "bi tbcnn 47Bilateral Neural Network implementation in TensorflowTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1355"),

                                value: "sample cnn 47A TensorFlow implementation of \"Sample-level Deep Convolutional Neural Networks for Music Auto-tagging Using Raw Waveforms\"TensorFlowGenerativeAudio"

                            },

                            {

                                num: NumberInt("1356"),

                                value: "Simple does it weakly supervised instance and semantic segmentation 47Weakly Supervised Segmentation by Tensorflow. Implements semantic segmentation in Simple Does It: Weakly Supervised Instance and Semantic Segmentation, by Khoreva et al. (CVPR 2017).TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1357"),

                                value: "relation network 47Tensorflow Implementation of Relation Networks for the bAbI QA Task, detailed in \"A Simple Neural Network Module for Relational Reasoning,\" [https://arxiv.org/abs/1706.01427] by Santoro et. al.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1358"),

                                value: "Siamese Sentence Similarity 47Keras and Tensorflow implementation of Siamese Recurrent Architectures for Learning Sentence SimilarityTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1359"),

                                value: "bytenet 47Pytorch implementation of bytenet from \"Neural Machine Translation in Linear Time\" paper\nPyTorchNLP"

                            },

                            {

                                num: NumberInt("1360"),

                                value: "CVDD PyTorch 47A PyTorch implementation of Context Vector Data Description (CVDD), a method for Anomaly Detection on text.PyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("1361"),

                                value: "ENet SAD_Pytorch 47Pytorch implementation of \"Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1362"),

                                value: "tvnet_pytorch 47Tvnet implemented in pytorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1363"),

                                value: "semantic segmentation pytorch 47Pytorch implementation of FCN, UNet, PSPNet, and various encoder models.PyTorchCVGenerativeHealth"

                            },

                            {

                                num: NumberInt("1364"),

                                value: "jax rs pac4j 47Security library for JAX-RS and JerseyJAXNLP"

                            },

                            {

                                num: NumberInt("1365"),

                                value: "fast dpsgd 47Code for fast dpsgd implementations in JAX/TFJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1366"),

                                value: "distribution_shift_framework 47This repository contains the code of the distribution shift framework presented in A Fine-Grained Analysis on Distribution Shift (Wiles et al., 2022).JAXCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1367"),

                                value: "tf word2vec 46TensorFlow implementation of word2vecTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1368"),

                                value: "FCN GoogLeNet 46GoogLeNet implementation of Fully Convolutional Networks for Semantic Segmentation in TensorFlowTensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1369"),

                                value: "rcan tensorflow 46Image Super-Resolution Using Very Deep Residual Channel Attention Networks Implementation in TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1370"),

                                value: "faceboxes tensorflow 46 a tensorflow  implement faceboxesTensorFlowCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1371"),

                                value: "ml in tf 46Get started with Machine Learning in TensorFlow with a selection of good reads and implemented examples!TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1372"),

                                value: "VQ VAE 46Pytorch Implementation of \"Neural Discrete Representation Learning\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1373"),

                                value: "DCGAN 46PyTorch implementation of DCGANPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1374"),

                                value: "deep dream pytorch 46Pytorch implementation of DeepDream on VGG16 NetworkPyTorchCV"

                            },

                            {

                                num: NumberInt("1375"),

                                value: "pytorch transformer kor eng 46Transformer Implementation using PyTorch for Neural Machine Translation (Korean to English)PyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("1376"),

                                value: "PyTorchSteerablePyramid 46PyTorch implementation of the Complex Steerable PyramidPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1377"),

                                value: "madam 46 Pytorch and Jax code for the Madam optimiser.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1378"),

                                value: "MC CNN python 45a python implementation of MC-CNNTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1379"),

                                value: "deepspeech 45A PyTorch implementation of DeepSpeech and DeepSpeech2.PyTorchCVNLPAudio"

                            },

                            {

                                num: NumberInt("1380"),

                                value: "attention ocr 45A pytorch implementation of the attention based ocrPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1381"),

                                value: "mnasnet pytorch 45A PyTorch implementation of MNASNETPyTorchCVGenerativeAudio"

                            },

                            {

                                num: NumberInt("1382"),

                                value: "language modeling 44This is machine learning model that is trained to predict next word in the sequence. Model is defined in keras and then converted to tensorflow-js model for the web, check the web implementation atTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1383"),

                                value: "minimal_wgan 44A minimal implementation of Wasserstein GANTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1384"),

                                value: "LSGAN TF 44Simple implementation of Least Squares Generative Adversarial NetworksTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1385"),

                                value: "FGSM pytorch 44A pytorch implementation of \"Explaining and harnessing adversarial examples\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1386"),

                                value: "universal vocoder 44A PyTorch implementation of the universal neural vocoderPyTorchAudio"

                            },

                            {

                                num: NumberInt("1387"),

                                value: "pytorch_implementation_of_Yolov1 44yolov1 tutorial-like implementationPyTorchCV"

                            },

                            {

                                num: NumberInt("1388"),

                                value: "pytorch atda 44A PyTorch implementation for Asymmetric Tri-training for Unsupervised Domain AdaptationPyTorchUnsupervised"

                            },

                            {

                                num: NumberInt("1389"),

                                value: "quasi rnn 44A PyTorch Implementation of \"Quasi-Recurrent Neural Networks\"PyTorchNLP"

                            },

                            {

                                num: NumberInt("1390"),

                                value: "Monolingual and Multilingual Image Captioning 44This is the source code that accompanies Multilingual Image Description with Neural Sequence Models .KerasCVNLP"

                            },

                            {

                                num: NumberInt("1391"),

                                value: "jax_privacy 44Algorithms for Privacy-Preserving Machine Learning in JAXJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1392"),

                                value: "AVO-pytorch 43Implementation of Adversarial Variational Optimization in PyTorch.\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1393"),

                                value: "KGCN pytorch 43KGCN pytorch model implementationPyTorchGraph"

                            },

                            {

                                num: NumberInt("1394"),

                                value: "birdnet2 43Official Pytorch implementation of Birdnet+PyTorchCV"

                            },

                            {

                                num: NumberInt("1395"),

                                value: "cartoon gan 43Implementation of cartoon GAN [Chen et al., CVPR18] with pytorchPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1396"),

                                value: "RNNSearch 43An implementation of attention-based neural machine translation using PytorchPyTorchNLP"

                            },

                            {

                                num: NumberInt("1397"),

                                value: "cDCGAN 43PyTorch implementation of Conditional Deep Convolutional Generative Adversarial Networks (cDCGAN)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1398"),

                                value: "mxnet-audio 43Implementation of music genre classification, audio-to-vec, song recommender, and music search in mxnetMXNetAudio"

                            },

                            {

                                num: NumberInt("1399"),

                                value: "pytorch glow 42PyTorch implementation of \"Glow: Generative Flow with Invertible 1x1 Convolutions\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1400"),

                                value: "STDN PyTorch 42Scale Transferrable Object Detection (STDN) implementation in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1401"),

                                value: "sae pytorch 42PyTorch Implementation of SAE from AtoZPyTorchCV"

                            },

                            {

                                num: NumberInt("1402"),

                                value: "Graphics code generating model using Processing 41sketchnet - processing code generatorPyTorchCV"

                            },

                            {

                                num: NumberInt("1403"),

                                value: "pytorch prnet 41pytorch implementation of PRNet, with weight transferedPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1404"),

                                value: "ibc 41A PyTorch implementation of Implicit Behavioral CloningPyTorchRL"

                            },

                            {

                                num: NumberInt("1405"),

                                value: "android jaxb 41Android doesn't support JAXB. Use this library to generate SimpleXML annotated classes from XML Schema. Works well with Android.JAXNLP"

                            },

                            {

                                num: NumberInt("1406"),

                                value: "brave 41A JAX implementation of Broaden Your Views for Self-Supervised Video Learning, or BraVe for short.JAXNLPGenerativeAudioSelf-Supervised"

                            },

                            {

                                num: NumberInt("1407"),

                                value: "audax 41A home for audio ML in JAX. Has common features, learnable frontends, pretrained supervised and self-supervised models.JAXCVNLPGenerativeAudioSelf-Supervised"

                            },

                            {

                                num: NumberInt("1408"),

                                value: "pytorch rdpg 40PyTorch Implementation of the RDPG (Recurrent Deterministic Policy Gradient)PyTorchRL"

                            },

                            {

                                num: NumberInt("1409"),

                                value: "pytorch ricap 40PyTorch implementation of RICAP (Random Image Cropping And Patching) PyTorchCV"

                            },

                            {

                                num: NumberInt("1410"),

                                value: "DNN HSMM 40pytorch implementation of DNN-HSMM for TTSPyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1411"),

                                value: "SeqGAN PyTorch 40Implementation of Sequence Generative Adversarial Nets with Policy Gradient in PyTorchPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("1412"),

                                value: "raml jaxrs codegen 40Tools to enable RAML-first development in JAX-RS projectsJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1413"),

                                value: "fedpa 40Federated posterior averaging implemented in JAXJAXGenerative"

                            },

                            {

                                num: NumberInt("1414"),

                                value: "vdvae jax 40Very deep VAEs in JAX/FlaxJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1415"),

                                value: "Asynchronous Advantage Actor-Critic in PyTorch 39This is PyTorch implementation of A3C as described in Asynchronous Methods for Deep Reinforcement Learning. Since PyTorch has a easy method to control shared memory within multiprocess, we can easily implement asynchronous method like A3C.    \nPyTorchRL"

                            },

                            {

                                num: NumberInt("1416"),

                                value: "Hierarchical Attention Network for Document Classification 39A faster and up to date implementation is in my other repoPyTorchNLP"

                            },

                            {

                                num: NumberInt("1417"),

                                value: "pytorch_ppo_rl 39Pytorch implementation of intrinsic curiosity module with proximal policy optimizationPyTorchRLSelf-Supervised"

                            },

                            {

                                num: NumberInt("1418"),

                                value: "DomainTransferNetwork.pytorch 39A pytorch implementation of the Domain Transfer Network (DTN), Unsupervised Cross-Domain Image GenerationPyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1419"),

                                value: "pytorch CycleGAN 39Pytorch implementation of CycleGAN.PyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1420"),

                                value: "metro jax ws 39metro-jax-wsJAXGenerativeRL"

                            },

                            {

                                num: NumberInt("1421"),

                                value: "DeblurGAN pytorch 38An easy-to-read implementation of DeblurGANPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1422"),

                                value: "binary nets 38PyTorch implementation of binary neural networksPyTorchCV"

                            },

                            {

                                num: NumberInt("1423"),

                                value: "pytorch gym 38Implementation of the Deep Deterministic Policy Gradient(DDPG) in bullet Gym using pytorchPyTorchRL"

                            },

                            {

                                num: NumberInt("1424"),

                                value: "deep photo enhancer 38the Pytorch implementation of Deep Photo EnhancerPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1425"),

                                value: "torch scae 38PyTorch implementation of Stacked Capsule Auto-EncodersPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1426"),

                                value: "dhmc jax 38Discontinuous Hamiltonian Monte Carlo in JAXJAXGenerative"

                            },

                            {

                                num: NumberInt("1427"),

                                value: "Detectx Yolo V3 37Yolo-V3 implementation from scratch in pytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1428"),

                                value: "Musculoskeletal Radiographs Abnormality Classifier 37An implementation of MURA Dataset Towards Radiologist-Level Abnormality Detection in Musculoskeletal RadiographsPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1429"),

                                value: "gated attention reader 37Tensorflow/Pytorch implementation of Gated Attention ReaderPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1430"),

                                value: "timegan pytorch 37This repository is a non-official implementation of TimeGAN (Yoon et al., NIPS2019) using PyTorch.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1431"),

                                value: "TigerControl 37Google AI Princeton control frameworkJAXNLPRL"

                            },

                            {

                                num: NumberInt("1432"),

                                value: "flaxvision 37A selection of neural network models ported from torchvision for JAX & Flax.JAXCV"

                            },

                            {

                                num: NumberInt("1433"),

                                value: "AEGeAN 36Deeper DCGAN with AE stabilization\nPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1434"),

                                value: "pytorch_VAE_CVAE 36pytorch implementation Variational Autoencoder and Conditional Variational AutoencoderPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1435"),

                                value: "BlazeFace_Person.pytorch 36Unofficial Pytorch implementation of :fire:BlazeFace:fire:PyTorchCV"

                            },

                            {

                                num: NumberInt("1436"),

                                value: "omd 36JAX code for the paper \"Control-Oriented Model-Based Reinforcement Learning with Implicit Differentiation\"JAXRLGraph"

                            },

                            {

                                num: NumberInt("1437"),

                                value: "unrolled gans 35PyTorch Implementation of Unrolled Generative Adversarial NetworksPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1438"),

                                value: "pytorch_DANN 35PyTorch implementation of DANNPyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1439"),

                                value: "NASBench PyTorch 35A PyTorch implementation of NASBenchPyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("1440"),

                                value: "t5 flax gcp 35Tutorial to pretrain & fine-tune a  Flax T5 model on a TPUv3-8 with GCPJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1441"),

                                value: "pytorch_vsum ptr gan 34A PyTorch implementation of VSumPtrGANPyTorchNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1442"),

                                value: "semi supervised paper implementation 34Reproduce some methods in semi-supervised papers.PyTorchGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("1443"),

                                value: "GANs for 1D Signal 34implementation of several GANs with pytorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1444"),

                                value: "pytorch vae 34A minimal pytorch implementation of VAE, IWAE, MIWAEPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1445"),

                                value: "PlaneRecNet 34This is an official implementation for \"PlaneRecNet\" (BMVC 2021).PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1446"),

                                value: "dks 34Multi-framework implementation of Deep Kernel Shaping and Tailored Activation Transformations, which are methods that modify neural network models (and their initializations) to make them easier to train.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1447"),

                                value: "wax ml 34A Python library for machine-learning and feedback loops on streaming dataJAXNLPGenerativeRLAudioGraph"

                            },

                            {

                                num: NumberInt("1448"),

                                value: "jax variational diffwave 34Jax/Flax implementation of Variational-DiffWave.JAXNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1449"),

                                value: "infinite_ae_cf 34-AE model's implementation in JAX. Kernel-only method outperforms complicated SoTA models with a closed-form solution and a single hyper-parameter.JAXGenerative"

                            },

                            {

                                num: NumberInt("1450"),

                                value: "odcnn 33implementation of improved musical onset detection with cnnPyTorchAudio"

                            },

                            {

                                num: NumberInt("1451"),

                                value: "TwinBert 33pytorch implementation of the TwinBert paper PyTorchNLP"

                            },

                            {

                                num: NumberInt("1452"),

                                value: "imagenet-vgg 33VGG\nChainerCV"

                            },

                            {

                                num: NumberInt("1453"),

                                value: "improved-gan 33code for the paperChainerGenerative"

                            },

                            {

                                num: NumberInt("1454"),

                                value: "gym 33Fully differentiable RL environments, written in Ivy.JAXCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1455"),

                                value: "Simple Generative Adversarial Networks 32Run the sample code by typing:PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1456"),

                                value: "AlexNet PyTorch 32An PyTorch implementation AlexNet.Simple, easy to use and efficientPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1457"),

                                value: "Pytorch metrics 32Implementation of Evaluation Metrics for PytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1458"),

                                value: "jax finufft 32JAX bindings to the Flatiron Institute Non-uniform Fast Fourier Transform (FINUFFT) libraryJAXGenerative"

                            },

                            {

                                num: NumberInt("1459"),

                                value: "vit vqgan 32JAX implementation ViT-VQGANJAXGenerative"

                            },

                            {

                                num: NumberInt("1460"),

                                value: "A2C 31PyTorch implementation of Advantage Actor-Critic (A2C)PyTorchRL"

                            },

                            {

                                num: NumberInt("1461"),

                                value: "DRCN 31Pytorch implementation of Deep Reconstruction Classification NetworksPyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("1462"),

                                value: "chainer-Variational-AutoEncoder 31Variational autoencoder (VAE)\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1463"),

                                value: "efax 31Exponential families for JAXJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1464"),

                                value: "ppo_jax 31Jax implementation of Proximal Policy Optimization (PPO) specifically tuned for Procgen, with benchmarked results and saved model weights on all environments.JAXGenerativeRL"

                            },

                            {

                                num: NumberInt("1465"),

                                value: "PixelCNN 30PyTorch implementation of gated PixelCNNPyTorchCV"

                            },

                            {

                                num: NumberInt("1466"),

                                value: "gail pytorch 29A simple implementation of Generative Adversarial Imitation Learning with PyTorchPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("1467"),

                                value: "Deep Compression.Pytorch 29Unofficial Pytorch implementation of Deep Compression in CIFAR10PyTorchCV"

                            },

                            {

                                num: NumberInt("1468"),

                                value: "TryOnGAN 29TryOnGAN: Unofficial ImplementationPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1469"),

                                value: "**dspnet** 29This repositary contains an implementation of the paper Driving Scene Perception Network: Real-time Joint Detection, Depth Estimation and Semantic Segmentation .MXNetCV"

                            },

                            {

                                num: NumberInt("1470"),

                                value: "multilabel 29This is the implement of the multilabel image classificaton in MXNet.MXNetCV"

                            },

                            {

                                num: NumberInt("1471"),

                                value: "VAE 29Variational AutoEncoder\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1472"),

                                value: "chef transformer 29Chef Transformer  .JAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1473"),

                                value: "ERFNet PyTorch 28A PyTorch implementation for ERFNet on Pascal VOC data.PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1474"),

                                value: "Overlap_Local_SGD 28Implementation of (overlap) local SGD in PytorchPyTorchNLP"

                            },

                            {

                                num: NumberInt("1475"),

                                value: "ViT jax2tf 28This repository hosts code for converting the original Vision Transformer models (JAX) to TensorFlow. JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1476"),

                                value: "ShinRL 28ShinRL: A Library for Evaluating RL Algorithms from Theoretical and Practical Perspectives (Deep RL Workshop 2021)JAXCVRL"

                            },

                            {

                                num: NumberInt("1477"),

                                value: "deq jax 28[NeurIPS'19] Deep Equilibrium Models Jax ImplementationJAXGenerative"

                            },

                            {

                                num: NumberInt("1478"),

                                value: "PyTorch Cascaded Pyramid Network 27a pytorch implementation of CPNPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1479"),

                                value: "chainer-gan-denoising-feature-matching 27Generative Adversarial Networks with Denoising Feature Matching\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1480"),

                                value: "rl_with_resets 27JAX implementation of deep RL agents with resets from the paper \"The Primacy Bias in Deep Reinforcement Learning\"JAXGenerativeRL"

                            },

                            {

                                num: NumberInt("1481"),

                                value: "ddpg pytorch 26PyTorch implementation of DDPG for continuous control tasks.PyTorchRL"

                            },

                            {

                                num: NumberInt("1482"),

                                value: "rest 26Seam REST is a lightweight module that aims to provide additional integration with technologies within the Java EE platform as well as third party technologies. Seam REST is independent of CDI and JAX-RS implementations and thus fully portable between Java EE 6 environments. JAXNLP"

                            },

                            {

                                num: NumberInt("1483"),

                                value: "reactive wizard 26Reactive non-blocking web applications made really easy with JAX-RS and RxJava.JAXHealth"

                            },

                            {

                                num: NumberInt("1484"),

                                value: "yolov3 pytorch 25A pytorch implementation of yolov3 PyTorchCV"

                            },

                            {

                                num: NumberInt("1485"),

                                value: "FocusLiteNN 25Official PyTorch and MATLAB implementations of our MICCAI 2020 paper \"FocusLiteNN: High Efficiency Focus Quality Assessment for Digital Pathology\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1486"),

                                value: "cwvae jax 25Clockwork VAEs in JAX/FlaxJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1487"),

                                value: "Image Captioning 24Implemented 3 different architectures to tackle the Image Caption problem, i.e, Merged Encoder-Decoder - Bahdanau Attention - TransformersTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1488"),

                                value: "flaxOptimizers 24A collection of optimizers, some arcane others well known, for Flax.JAXNLP"

                            },

                            {

                                num: NumberInt("1489"),

                                value: "Deep Feature Interporlation Face Attribute manipulation Glasses Remove Youth2Senior etc. TensorFlow 23A simple implementation of the paper 'Deep Feature Interpolation for Image Content Changes'TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1490"),

                                value: "traj pred irl 23Official implementation codes of \"Regularizing neural networks for future trajectory prediction via IRL framework\"TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1491"),

                                value: "manifold_mixup 23Tensorflow implementation of the Manifold Mixup machine learning research paperTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1492"),

                                value: "face detection flask nginx gunicorn docker 23This is a minimal implementation of face-detection models using flask, gunicorn, nginx, docker, and docker-composeTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1493"),

                                value: "DCGAN Pytorch 23A Pytorch implementation of \"Deep Convolutional Generative Adversarial Networks\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1494"),

                                value: "nonlinear IB PyTorch 23Pytorch Implementation of the Nonlinear Information BottleneckPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1495"),

                                value: "SqeezeNet 23Top-1 Acc=61.0% on ImageNet, without any sacrificing compared with SqueezeNet v1.1.MXNetCV"

                            },

                            {

                                num: NumberInt("1496"),

                                value: "AdversarialAutoEncoder 23Adversarial Autoencoder [arXiv:1511.05644] implemented with MXNet.MXNetGenerative"

                            },

                            {

                                num: NumberInt("1497"),

                                value: "ADDA 23Adversarial Discriminative Domain Adaptation\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1498"),

                                value: "undertow cdi jaxrs 23An Implementation integrating JAX-RS (RestEasy) with CDI (Weld) on a fast embedded servlet container (Undertow)JAXGenerative"

                            },

                            {

                                num: NumberInt("1499"),

                                value: "jax gcn 23Graph Convolutional Networks in JAXJAXGraph"

                            },

                            {

                                num: NumberInt("1500"),

                                value: "sabertooth 23Standalone pre-training recipe with JAX+FlaxJAXCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1501"),

                                value: "ECG Arrhythmia Classification in 2D CNN 22This is an implementation based on this paper, \"ECG arrhythmia classification using a 2-D convolutional neural network\", Tae Joon Jun et al., CVPR 2018.\" with some personal modificationsTensorFlowCV"

                            },

                            {

                                num: NumberInt("1502"),

                                value: "matching networks tf 22Implementation of Matching Networks for One Shot Learning in TensorFlow 2.0TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1503"),

                                value: "CACM 22Pytorch implementation of CACM (WSDM'20)PyTorchNLP"

                            },

                            {

                                num: NumberInt("1504"),

                                value: "Ultrasound nerve segmentation 22Kaggle ultrasound nerve segmentation challenge using Keras.KerasCVAudio"

                            },

                            {

                                num: NumberInt("1505"),

                                value: "MathJaxView 22A library to render MathJax offline in Android devicesJAXNLP"

                            },

                            {

                                num: NumberInt("1506"),

                                value: "roberta base mr 22RoBERTa Marathi Language model trained from scratch during huggingface  x  flax community weekJAXNLPSelf-Supervised"

                            },

                            {

                                num: NumberInt("1507"),

                                value: "alexnet 21custom implementation alexnet with tensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1508"),

                                value: "las 21tf 2.0 implementation of Listen, attend and spellTensorFlowNLPAudio"

                            },

                            {

                                num: NumberInt("1509"),

                                value: "crossgrad 21This repository contains implementation of CROSSGRAD (https://openreview.net/forum?id=r1Dx7fbCW) and DAN (https://arxiv.org/abs/1505.07818).TensorFlowCV"

                            },

                            {

                                num: NumberInt("1510"),

                                value: "DeepDomainAdaptation 21Tensorflow deep learning based domain adaptation model implementations with experiment of estimate MNIST by SVHN data (SVHN -> MNIST): DANN (domain-adversarial neural network), Deep JDOT (joint distribution optimal transportation)TensorFlowGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1511"),

                                value: "TENet kws 21Tensorflow implementation of \"Small-Footprint Keyword Spotting with Multi-Scale Temporal Convolution\"(INTERSPEECH 2020)TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1512"),

                                value: "vibration_gan 21Implement GANs to generate time-series signals for imbalanced learning problem. The experiments are conducted using CWRU bearing data.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1513"),

                                value: "tf_keras_gradcamplusplus 21tensorflow.keras implementation of gradcam and gradcam++TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1514"),

                                value: "Deep Learning Algorithms Implementation 21Implementations of (Deep Learning + Machine Learning) AlgorithmsPyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("1515"),

                                value: "PAAC.pytorch 21Pytorch implementation of the PAAC algorithm presented in Efficient Parallel Methods for Deep Reinforcement Learning https://arxiv.org/abs/1705.04862PyTorchRLGraph"

                            },

                            {

                                num: NumberInt("1516"),

                                value: "SEC 21This is a reimplementation of the paper \"Seed, Expand and Constrain: Three Principles for Weakly-Supervised Image MXNetCV"

                            },

                            {

                                num: NumberInt("1517"),

                                value: "jax comln 21Code for \"Continuous-Time Meta-Learning with Forward Mode Differentiation\" (ICLR 2022)JAXGenerative"

                            },

                            {

                                num: NumberInt("1518"),

                                value: "jax dag gflownet 21Code for \"Bayesian Structure Learning with Generative Flow Networks\"JAXGenerativeGraph"

                            },

                            {

                                num: NumberInt("1519"),

                                value: "soft attention image captioning 20tensorflow implementation of show, attend and tell (ICML'15)TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1520"),

                                value: "handwritten sequence tensorflow 20Tensorflow implementation of handwritten sequence of small letters recognition.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1521"),

                                value: "Tensorflow lite kotlin samples 20This repo contains the kotlin implementation of TensorflowLite Example Android AppsTensorFlowCVNLPGenerativeRLAudio"

                            },

                            {

                                num: NumberInt("1522"),

                                value: "Deep Gaussian Process 20 Implementation of doubly stochastic deep Gaussian Process using GPflow and TensorFlow 2.0TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1523"),

                                value: "Weight Normalization 20Complete implementation of Weight Normalization: A Simple Reparameterization to Accelerate Training of Deep Neural Networks articleTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1524"),

                                value: "Kervolution 20Kervolution implementation using TF2.0TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1525"),

                                value: "tf CNN CASIA HWDB 20A tensorflow implementation of recognition of handwritten Chinese characters.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1526"),

                                value: "cmorlet tensorflow 20A TensorFlow implementation of the Continous Wavelet Transform based on the complex Morlet wavelet.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1527"),

                                value: "tensorstyle 20Fast image style transfer implemented with TensorFlow.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1528"),

                                value: "tacotron 20PyTorch implementation of Tacotron and Tacotron2PyTorchCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1529"),

                                value: "Transformer Implementations 20Library - Vanilla, ViT, DeiT, BERT, GPTPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1530"),

                                value: "flax sentence embeddings 20Shared code for training sentence embeddings with Flax / JAXJAXNLP"

                            },

                            {

                                num: NumberInt("1531"),

                                value: "MathJax siunitx 20MathJax extension that emulates the great LaTeX package `siunitx` by Joseph WrightJAXCVNLP"

                            },

                            {

                                num: NumberInt("1532"),

                                value: "tf_CapsNet 19A tensorflow implementation for CapsNetTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1533"),

                                value: "recurrent attention model 19A TensorFlow implementation of the recurrent models of visual attentionTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1534"),

                                value: "SiamRPN TF 19A TensorFlow implementation of SiamRPNTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1535"),

                                value: "paican 19Implementation of \"Bayesian Robust Attributed Graph Clustering: Joint Learning of Partial Anomalies and Group Structure\".TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1536"),

                                value: "MeuralPaint 19TensorFlow implementation of CNN fast neural style transfer    TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1537"),

                                value: "class activation mapping 19tensorflow implementation of cnn localization project by CSAIL@MIT (CVPR'16)TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1538"),

                                value: "han 19TensorFlow implementation of Z. Hu et al. \"Listening to Chaotic Whispers: A Deep Learning Framework for News-oriented Stock Trend Prediction\", WSDM 2018TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1539"),

                                value: "tf madgrad 19A tf.keras implementation of Facebook AI's MadGrad optimization algorithmTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1540"),

                                value: "ali g 19Implementation of the ALI-G algorithm (PyTorch, Tensorflow)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1541"),

                                value: "cross modal hasing playground 19Python implementation of cross-modal hashing algorithmsTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1542"),

                                value: "SimCLR tensorflow 19TensorFlow Implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual RepresentationsTensorFlowNLPGenerativeUnsupervisedSelf-Supervised"

                            },

                            {

                                num: NumberInt("1543"),

                                value: "Remote Sensing Analysis 19Implementing a remote sensing object detector using Tensorflow object detection APITensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1544"),

                                value: "softmax_triplet_loss 19(WACV 2020) Tensorflow implementation of Boosting Standard Classification Architectures Through a Ranking RegularizerTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1545"),

                                value: "MANN meta learning 19A tensorflow implement of Memory-Augmented Neural NetworkTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1546"),

                                value: "full reimplementation of unet 19This is a full implementation of UNet using TensorFlow low level API, high level API and KerasTensorFlowCVGenerativeHealth"

                            },

                            {

                                num: NumberInt("1547"),

                                value: "Anomaly_Detect_LSTM_VAE 19Keras implementation of LSTM-VAE model for anomaly detectionTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1548"),

                                value: "VariationalNeuralAnnealing 19A variational implementation of classical and quantum annealing using recurrent neural networks for the purpose of solving optimization problems. TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1549"),

                                value: "pytorch_EDANet 19implementation EDANet by pytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1550"),

                                value: "self critical 19PyTorch implementation of paper: \"Self-critical Sequence Training for Image Captioning\"PyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1551"),

                                value: "jaxmpp 19Java XMPP client libraryJAXNLP"

                            },

                            {

                                num: NumberInt("1552"),

                                value: "ninjax 19General Modules for JAXJAXGenerativeGraph"

                            },

                            {

                                num: NumberInt("1553"),

                                value: "min dalle flax 19This contains the Flax model of min(DALLE) and code for converting it to PyTorchJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1554"),

                                value: "Lip2Word 18End-to-end pipeline for lip reading at the word level using a tensorflow CNN implementation.TensorFlowNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1555"),

                                value: "Diffeomorphic demons 18TensorFlow implementation of the diffeomorphic demons algorithm for medical image registrationTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1556"),

                                value: "tf invertible resnet 18A TensorFlow implementation of Invertible Residual NetworksTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1557"),

                                value: "PokeGAN 18A tensorflow/keras implementation of StyleGAN to generate images of new Pokemon.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1558"),

                                value: "Android Machine Learning With TensorFlow 18Tensor Flow implementation for Android TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1559"),

                                value: "GenZoo 18A repository providing implementations of generative models in various frameworks.TensorFlowCVNLPGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("1560"),

                                value: "maml tensorflow 18This repository implements the paper, Model-Agnostic Meta-Leanring for Fast Adaptation of Deep Networks.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1561"),

                                value: "Denoised Smoothing TF 18Minimal implementation of Denoised Smoothing (https://arxiv.org/abs/2003.01908) in TensorFlow. TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1562"),

                                value: "ResNet 50 101 152 18This is an implementation of ResNet-50/101/152.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1563"),

                                value: "Autoregressive models 18Tensorflow 2.0 implementation of Deep Autoregressive ModelsTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1564"),

                                value: "DeepLabV3Plus Tf2.x 18A Tensorflow implementation of Deep Lab V3 Plus from scratch.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1565"),

                                value: "translearn 18Code implementation of the paper \"With Great Training Comes Great Vulnerability: Practical Attacks against Transfer Learning\", at USENIX Security 2018TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1566"),

                                value: "semisupervised_timeseries_infogan 18A tensorflow implementation of informative generative adversarial network (InfoGAN ) to one dimensional ( 1D ) time series data with a supervised loss function. So it's called semisupervised Info GAN.TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1567"),

                                value: "yolov3 pytorch 18YOLOV3 pytorch implementation as a python packagePyTorchCV"

                            },

                            {

                                num: NumberInt("1568"),

                                value: "TP GAN 18TP-GAN Pytorch implementationPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1569"),

                                value: "MXSeq2Seq(Gluon:star 18python seq2seq.pyMXNetNLP"

                            },

                            {

                                num: NumberInt("1570"),

                                value: "fastjson jaxrs json provider 18a JAX-RS entity provider for https://github.com/alibaba/fastjsonJAXNLP"

                            },

                            {

                                num: NumberInt("1571"),

                                value: "xcauto 18Arbitrary order exchange-correlation functional derivatives using JAX.JAXGraph"

                            },

                            {

                                num: NumberInt("1572"),

                                value: "jaxrs beanvalidation javaee6 18Integrate Bean Validation with JAX-RS and internationalize error messages using JBoss' proprietary implementations.JAXGenerative"

                            },

                            {

                                num: NumberInt("1573"),

                                value: "multilingual vqa 18Repository for Multilingual-VQA task created during HuggingFace JAX/Flax community week.JAXCVNLPGenerativeUnsupervisedHealth"

                            },

                            {

                                num: NumberInt("1574"),

                                value: "TF OT Sinkhorn 17Tensorflow implementation of optimal transport (OT) with Sinkhorn algorithm.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1575"),

                                value: "TF_NIMA 17Implementation of  technical image quality model based on Google's research paper \"NIMA: Neural Image Assessment\". TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1576"),

                                value: "StarGAN Tensorflow 17Implementation of StarGAN in TensorflowTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1577"),

                                value: "dnn dependency parser 17TensorFlow implementation of A Fast and Accurate Dependency Parser using Neural NetworksTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1578"),

                                value: "large scale OT mapping TF 17Tensorflow Implementation of \"Large-scale Optimal Transport and Mapping Estimation\"(ICLR2018/NIPS 2017 OTML)TensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1579"),

                                value: "deepQA 17a Deep learning based chatbot implemented by Tensorflow with beam search (forked from Conchylicultor/DeepQA)TensorFlowNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1580"),

                                value: "Punctuation Restoration 17A TensorFlow Implementation of Punctuation Restoration.TensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1581"),

                                value: "image_colorization_gan_tf2.0 17A TensorFlow2.0 implementation of https://arxiv.org/abs/1803.05400TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1582"),

                                value: "yolo_v1_v2_tensorflow 17Simple implementation of yolo v1 and yolo v2 by TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1583"),

                                value: "binary VAE 17A minimal implementation of a VAE with BinConcrete (relaxed Bernoulli) latent distribution in TensorFlow.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1584"),

                                value: "DCGAN CIFAR10 17A implementation of DCGAN (Deep Convolutional Generative Adversarial Networks) for CIFAR10 image TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1585"),

                                value: "MINE 17Keras implementation (only for tensorflow backend) of MINE: Mutual Information Neural EstimationTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1586"),

                                value: "metric_learning 17Metric Learning TF 2.0+Keras Algorithm Implementations for Facial RecognitionTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1587"),

                                value: "pytorch super resolution implementations 17Image super-resolution implementationsPyTorchCV"

                            },

                            {

                                num: NumberInt("1588"),

                                value: "nalu.pytorch 17Implementation of NALU & NAC (https://arxiv.org/abs/1808.00508 | DeepMind) in PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("1589"),

                                value: "minijax 17Minimalist implementation of JAX-RS and JSR 330JAXGenerative"

                            },

                            {

                                num: NumberInt("1590"),

                                value: "variational dropout 16TensorFlow implementation of the method from Variational Dropout Sparsifies Deep Neural Networks, Molchanov et al. (2017)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1591"),

                                value: "LinkNet_tensorflow 16TensorFlow implementation of LinkNetTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1592"),

                                value: "supervised embedding model 16Implementation of Supervised embedding models from [Learning End-to-End Goal-Oriented Dialog] paper.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1593"),

                                value: "cnn lstm for link prediction 16Keras implementation of path-based link prediction model for knowledge graph completionTensorFlowGraph"

                            },

                            {

                                num: NumberInt("1594"),

                                value: "S2VT seq2seq video captioning attention 16S2VT (seq2seq) video captioning with bahdanau & luong attention implementation in Tensorflow TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1595"),

                                value: "MemAE TF2 16TensorFlow implementation of \"Memorizing Normality to Detect Anomaly: Memory-augmented Deep Autoencoder for Unsupervised Anomaly Detection\"TensorFlowGenerativeUnsupervisedGraph"

                            },

                            {

                                num: NumberInt("1596"),

                                value: "logistic_lda 16Basic tensorflow implementation of logistic latent Dirichlet allocationTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1597"),

                                value: "SimpNet Tensorflow 16A Tensorflow Implementation of the SimpNet Convolutional Neural Network ArchitectureTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1598"),

                                value: "MachineLearning 16Implementations of machine learning algorithm by Python 3TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1599"),

                                value: "Im2LaTeX 16An implementation of the Show, Attend and Tell paper in Tensorflow, for the OpenAI Im2LaTeX suggested problemTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1600"),

                                value: "transformer_network_tensorflow 16Tensorflow implementation of transformer network from \"Attention is all you need\" Paper. Also use cases of it!TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1601"),

                                value: "CapsNet tensorflow jupyter 16A simple tensorflow implementation of CapsNet (by Dr. G. Hinton), based on my understanding. This repository is built with an aim to simplify the concept, implement and understand it.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1602"),

                                value: "SphereFace TensorFlow 16A TensorFlow implementation for SphereFace!The code can be trained on LFW.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1603"),

                                value: "tf_EEGNet 16It's a tensorflow implemention for EEGNetTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1604"),

                                value: "StackGAN 16StackGAN++ implementation in TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1605"),

                                value: "ResNeXt_TensorFlow2 16A tensorflow2 implementation of ResNeXt(ResNeXt50, ResNeXt101).TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1606"),

                                value: "GAN Tensorflow 16An implementation of GAN using TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1607"),

                                value: "TF_EnhanceDPED 16Tensorflow implement of image enhancement base on dped dataset and join PRIM2018 Challenge on Perceptual Image Enhancement on Smartphones (Track B: Image Enhancement). and use image quality assessment model to guide image enhancement to make the enhanced image subjective effect better !TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1608"),

                                value: "pytorch_resnet 16A PyTorch implementation of ResNetPyTorchCV"

                            },

                            {

                                num: NumberInt("1609"),

                                value: "LFW_Siamese_Pytorch 16This project uses the Labeled Faces in the Wild (LFW) dataset, and the goal is to train variants of deep architectures to learn when a pair of images of faces is the same person or not. It is a pytorch implementation of Siamese network with 19 layers.PyTorchCV"

                            },

                            {

                                num: NumberInt("1610"),

                                value: "FocalLoss(CUDA) 16the focal loss in Aritcal Focal Loss for Dense Object DetectionMXNetCV"

                            },

                            {

                                num: NumberInt("1611"),

                                value: "LSGAN 16Least Squares Generative Adversarial Network implemented in Chainer\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1612"),

                                value: "seq2seq speech 16Repository for fine-tuning Transformers  based seq2seq speech models in JAX/Flax.JAXNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1613"),

                                value: "jax lensing 16A JAX package for weak gravitational lensingJAXGenerative"

                            },

                            {

                                num: NumberInt("1614"),

                                value: "deeperwin 16DeepErwin is a python 3.8+ package that implements and optimizes JAX 2.x wave function models for numerical solutions to the multi-electron Schrdinger equation. DeepErwin supports weight-sharing when optimizing  wave functions for multiple nuclear geometries and the usage of pre-trained neural network weights to accelerate optimization.JAXNLP"

                            },

                            {

                                num: NumberInt("1615"),

                                value: "Keras GAN Library 15Implementation of GAN papers on Keras.TensorFlowGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1616"),

                                value: "alexnet architecture.tensorflow 15Unofficial TensorFlow implementation of \"AlexNet\" architecture.TensorFlowCV"

                            },

                            {

                                num: NumberInt("1617"),

                                value: "MRCNN 15TensorFlow Implementation of Manifold Regularized Convolutional Neural Networks.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1618"),

                                value: "DHSGAN 15Official tensorflow implementation of \"DHSGAN: An End to End Dehazing Network for Fog and Smoke\"TensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1619"),

                                value: "MyAlphaGoZeroOnConnect4 15My Simple Implementation of AlphaGo Zero on Connect4TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1620"),

                                value: "im2p 15Tensorflow implementation of paper: A Hierarchical Approach for Generating Descriptive Image ParagraphsTensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1621"),

                                value: "SOA_DORN_TF 15Tensorflow implementation of Deep Ordinal Regression Network for Monocular Depth EstimationTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1622"),

                                value: "DAML 15Original Implementation of Improving Domain-Adapted Sentiment Classification by Deep Adversarial Mutual Learning publicized in AAAI-2020TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1623"),

                                value: "Style Transfer Algorithm 15TensorFlow implementation of \"A Neural Algorithm of Artistic Style\" using total variation denoising as a regularizer. Apply artistic style to an image given some artwork as a source.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1624"),

                                value: "pytorch implementation 15Pytorch implementation(LeNet, VGGNet, GAN, UNet, Mask R-CNN, ...)PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1625"),

                                value: "reMUDE 15(re)Implementation of Learning Multi-level Dependencies for Robust Word RecognitionPyTorchNLPGenerative"

                            },

                            {

                                num: NumberInt("1626"),

                                value: "WADL first REST Webservice CXF Example 15A simple example how to implement a REST Webservice with Java based CXF and JAX-RSJAXNLP"

                            },

                            {

                                num: NumberInt("1627"),

                                value: "sonno 15Sonno is a lightweight PHP framework based loosely on Jersey, a Java ReST framework reference implementation of the JAX-RS specification.JAXNLP"

                            },

                            {

                                num: NumberInt("1628"),

                                value: "JAX ResNet CIFAR10 15Simple CIFAR10 ResNet example with JAX.JAXGenerative"

                            },

                            {

                                num: NumberInt("1629"),

                                value: "parallel non linear gaussian smoothers 15Companion code in JAX for the paper Parallel Iterated Extended and Sigma-Point Kalman Smoothers.JAXNLPAudio"

                            },

                            {

                                num: NumberInt("1630"),

                                value: "maml_flax 15Model Agnostic Meta Learning (MAML) implemented in Flax, the neural network library for JAX.JAXGenerative"

                            },

                            {

                                num: NumberInt("1631"),

                                value: "minGPT 15minGPT in JAXJAXCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1632"),

                                value: "haikumodels 15Pretrained models for Jax/Haiku; MobileNet, ResNet, VGG, Xception.JAXCV"

                            },

                            {

                                num: NumberInt("1633"),

                                value: "VGAN Tensorflow 14Tensorflow implementation for MIT \"Generating Videos with Scene Dynamics\" by Vondrick et al.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1634"),

                                value: "DeepLearningImplementations 14This is a repository of implementations of deep learning papers, along with mini projects and experiments.TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1635"),

                                value: "fbpconv_tf 14tensorflow implementation for FBPConvNetTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1636"),

                                value: "CoordConv Implementation 14TensorFlow implementation of CoordConv Layer introduced by UBERTensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1637"),

                                value: "ResNet 14Tensorflow ResNet implementation on cifar10TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1638"),

                                value: "Dynamic Coattention Network for SQuAD 14Tensorflow implementation of DCN for question answering on the Stanford Question Answering Dataset (SQuAD) TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1639"),

                                value: "Object and facial detection in python 14This repo contains, training material, dlib implementation, tensorflow implementation and an own made complete system implementation with a parse-controller.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1640"),

                                value: "hindsight_experience_replay 14A tensorflow implementation of hindsight experience replayTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1641"),

                                value: "DLinCV 14posenet+LSTM implementation with Keras& TensorFlowTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1642"),

                                value: "Center Loss 14This is an implementation of the Center Loss article (2016).TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1643"),

                                value: "support vector machine 14An implementation of the L2-SVM for breast cancer detection using the Wisconsin diagnostic dataset. TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1644"),

                                value: "Efficient_ImageNet_Classification 14An efficient implementation for ImageNet classificationPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1645"),

                                value: "jaxws samples 14Small example projects using JAX-WS technologies.JAXNLP"

                            },

                            {

                                num: NumberInt("1646"),

                                value: "problem details 14Problem Details [RFC-7807] Java API, TCK, and implementations for JAX-RS and Spring BootJAXCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1647"),

                                value: "pax 14A stateful pytree library for training neural networks.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1648"),

                                value: "medclip 14Fine-tuning a CLIP model on the ROCO medical datasetJAXCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1649"),

                                value: "AdaHessianJax 14Jax implementation of the AdaHessian optimizerJAXNLP"

                            },

                            {

                                num: NumberInt("1650"),

                                value: "JAX GalSim 14JAX port of GalSim, for parallelized, GPU accelerated, and differentiable galaxy image simulations.JAXCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1651"),

                                value: "pytorch_paper_implementations 13Deep Learning Paper Implementations in PyTorchPyTorchCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1652"),

                                value: "amortized_svgd 13A pytorch implementation of Amortized Stein Variational Gradient Descent/ Stein GANPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1653"),

                                value: "PSCapsNet 13A PyTorch implementation of Parameter-sharing Capsule Network based on the paper \"Evaluating Generalization Ability of Convolutional Neural Networks and Capsule Networks for Image Classification via Top-2 Classification\"PyTorchCV"

                            },

                            {

                                num: NumberInt("1654"),

                                value: "SMAPGAN 13Implement of Paper \"SMAPGAN: Generative Adversarial Network-Based Semi-Supervised Styled Map Tile Generation Method\" at TGRS.PyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1655"),

                                value: "pynmt 13a simple and complete pytorch implementation of neural machine translation systemPyTorchNLP"

                            },

                            {

                                num: NumberInt("1656"),

                                value: "multi-task 13This is the implement of the multi-task image classificaton in MXNet MXNetCV"

                            },

                            {

                                num: NumberInt("1657"),

                                value: "flax_nerf 13Unofficial implementation of NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis, using Flax with the Linen APIJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1658"),

                                value: "MLPMixer jax2tf 13This repository hosts code for converting the original MLP Mixer models (JAX) to TensorFlow.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1659"),

                                value: "diffqcqp 12Implementations of QP/QCQP solvers using ADMM algorithm PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1660"),

                                value: "hover net 12PyTorch implementation of HoverNet as described in https://arxiv.org/abs/1812.06499PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1661"),

                                value: "Pytorch_AdversarialAttacks 12Pytorch implementation with segmentation model and adversarial attacks PyTorchCVGenerativeHealth"

                            },

                            {

                                num: NumberInt("1662"),

                                value: "cmn4recosys 12Collaborative Memory Networks for Recommendation Systems, implementation in PyTorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1663"),

                                value: "authlete java jaxrs 12Authlete library for JAX-RS (Java) to implement an authorization server supporting OAuth 2.0 & OpenID ConnectJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1664"),

                                value: "s4 jax 12Following research on S4 in jaxJAXGenerativeAudio"

                            },

                            {

                                num: NumberInt("1665"),

                                value: "jersey http2 jetty connector 12JAX-RS HTTP/2 Jetty Connector for Java 8+JAXGenerative"

                            },

                            {

                                num: NumberInt("1666"),

                                value: "BiT jax2tf 12This repository hosts the code to port NumPy model weights of BiT-ResNets to TensorFlow SavedModel format.JAXGenerative"

                            },

                            {

                                num: NumberInt("1667"),

                                value: "omega 12A number of agents (PPO, MuZero) with a Perceiver-based NN architecture that can be trained to achieve goals in nethack/minihack environments.JAXRL"

                            },

                            {

                                num: NumberInt("1668"),

                                value: "progan flax 12Flax (JAX) implementation of Progressive Growing of GANs for Improved Quality, Stability, and VariationJAXGenerative"

                            },

                            {

                                num: NumberInt("1669"),

                                value: "Rouge L Tensorflow 11ROUGE L metric implementation using tensorflow opsTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1670"),

                                value: "lr momentum scheduler 11Pytorch implementation of arbitrary learning rate and momentum schedules, including the One Cycle PolicyPyTorchNLPRL"

                            },

                            {

                                num: NumberInt("1671"),

                                value: "sst 11My implementation (PyTorch) for the paper SST: Single-Stream Temporal Action Proposals (http://vision.stanford.edu/pdf/buch2017cvpr.pdf).PyTorchCV"

                            },

                            {

                                num: NumberInt("1672"),

                                value: "pytorch peleenet 11Simple Code Implementation of \"PeleeNet\" architecture in \"Pelee Paper\" using PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("1673"),

                                value: "L-GM-Loss 11My implement of Rethinking Feature Distribution for Loss Functions in Image Classification using MXNet/GluonMXNetCV"

                            },

                            {

                                num: NumberInt("1674"),

                                value: "spring hibernate jersey 11Spring3 Hibernate4 JAX-RS REST services exampleJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1675"),

                                value: "guide microprofile opentracing 11A guide on how to enable and customize tracing of JAX-RS and non-JAX-RS methods by using MicroProfile OpenTracing: https://openliberty.io/guides/microprofile-opentracing.htmlJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1676"),

                                value: "patching jax rs 11Presents a method for supporting partial resource modifications in JAX-RS applications.JAXNLPRL"

                            },

                            {

                                num: NumberInt("1677"),

                                value: "http matchers 11Matchers to test your web service via the standard Java API for RESTful Services (JAX-RS)JAXGenerative"

                            },

                            {

                                num: NumberInt("1678"),

                                value: "minGPT flax 11GPT implementation in FlaxJAXNLP"

                            },

                            {

                                num: NumberInt("1679"),

                                value: "MlAgents 10This repository contains the implementation of deep reinforcement learning algorithms to solve various unity The Environments.PyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("1680"),

                                value: "PatchVAE 10PyTorch implementation of \"PatchVAE: Learning Local Latent Codes for Recognition\" to appear in CVPR 2020PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1681"),

                                value: "IRLS_using_DL_frameworks 10IRLS(Iterative re-weighted least square)  for Logistic Regression, implemented using tensorflow2.0/pytorchPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1682"),

                                value: "GAN_tutorial 10Vanilla GAN and WGAN implementations in PyTorch on the FashionMNIST datasetPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1683"),

                                value: "NPID 10A PyTorch implementation of NPID based on CVPR 2018 paper \"Unsupervised Feature Learning via Non-Parametric Instance Discrimination\"PyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("1684"),

                                value: "discovering reinforcement learning algorithms 10A Jax/Stax implementation of the general meta learning paper: Oh, J., Hessel, M., Czarnecki, W.M., Xu, Z., van Hasselt, H.P., Singh, S. and Silver, D., 2020. Discovering reinforcement learning algorithms. Advances in Neural Information Processing Systems, 33.JAXRL"

                            },

                            {

                                num: NumberInt("1685"),

                                value: "swagger4jaxrs 10This is a Grails plugin that adds Swagger support to document REST APIs of any Grails projects that use the Grails JAX-RS (JSR 311) plugin.JAXNLP"

                            },

                            {

                                num: NumberInt("1686"),

                                value: "AndroidJAXBLib 10AndroidJAXBLibJAXGenerative"

                            },

                            {

                                num: NumberInt("1687"),

                                value: "jive sdk java jersey 10This is an implementation of the Jive SDK written in Java, implemented for JEE6 using Jersey (JAX RS 2.0), Spring Core 3.2.5 and JSP.JAXNLP"

                            },

                            {

                                num: NumberInt("1688"),

                                value: "jax chacha prng 10A cryptographically-secure pseudo-random number generator for JAX based on the 20 round ChaCha cipher.JAXNLPGraph"

                            },

                            {

                                num: NumberInt("1689"),

                                value: "jax gat 10JAX implementation of Graph Attention NetworksJAXGraph"

                            },

                            {

                                num: NumberInt("1690"),

                                value: "siren jax 10Unofficial implementation of Siren with Jax for image representation.JAXCV"

                            },

                            {

                                num: NumberInt("1691"),

                                value: "fastpbrl 10Vectorization techniques for fast population-based training.JAXCVRL"

                            },

                            {

                                num: NumberInt("1692"),

                                value: "GANJax 10Implementation of different GAN in JAX/Haiku.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1693"),

                                value: "alphago 9Reference implementation of DeepMinds AlphaGo based on \"Deep Learning and the Game of Go\"TensorFlowNLPRL"

                            },

                            {

                                num: NumberInt("1694"),

                                value: "voice filter 9Unofficial Tensorflow/Keras implementation of Google AI VoiceFilterTensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1695"),

                                value: "PhotoWCT 9Unofficial implementation of \"A Closed-form Solution to Photorealistic Image Stylization\"TensorFlowCV"

                            },

                            {

                                num: NumberInt("1696"),

                                value: "GAN tensorflow 9This's a re-implementation of generative adversarial networks using tensorflow.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1697"),

                                value: "lda2vec pytorch 9lda2vec pytorch implementationPyTorchNLP"

                            },

                            {

                                num: NumberInt("1698"),

                                value: "TranSearch 9Implementation for our MM'18 paper --- Multi-modal Preference Modeling for Product Search.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1699"),

                                value: "VAE Pytorch 9Implementation of Variational Autoencoder in PytorchPyTorchCVGenerativeAudio"

                            },

                            {

                                num: NumberInt("1700"),

                                value: "chainer_superresolution 9Image super-resolution\nChainerCV"

                            },

                            {

                                num: NumberInt("1701"),

                                value: "jaxb delegate plugin 9Enhances generated JAXB classes with arbitrary methods in Java or other programming languagesJAXNLP"

                            },

                            {

                                num: NumberInt("1702"),

                                value: "yahtzotron 9The friendly robot that beats you in Yahtzee   JAXRL"

                            },

                            {

                                num: NumberInt("1703"),

                                value: "flaxo 9Educational platform for git-based programming courses.JAXNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1704"),

                                value: "EfficientDet tensorflow2 8A Tensorflow2.x implementation of EfficientDetTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1705"),

                                value: "random wired nn tensorflow 8Tensorflow implementation of \"Exploring Randomly Wired Neural Networks for Image Recognition\"TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1706"),

                                value: "language detection speech using dnn 8This is the implementation of a DNN in tensorflow for language detection in an audio fileTensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1707"),

                                value: "bayesian neural networks 8Edward implementation of Bayesian Neural NetworksTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1708"),

                                value: "ABCNN 8TensorFlow Implementation of ABCNN (ABCNN: Attention-Based Convolutional Neural Network for Modeling Sentence Pairs)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1709"),

                                value: "multi process UNREAL 8Multi-processing implementation of \"Reinforcement Learning with Unsupervised Auxiliary Tasks\"(UNREAL) with tensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1710"),

                                value: "pyrrha pynode 8Python node implementation for Pyrrha version of Pandora BoxchainTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1711"),

                                value: "HOG 8HOG implementation for pedestrian detection.TensorFlowCV"

                            },

                            {

                                num: NumberInt("1712"),

                                value: "custom pooling 8A few unconventional pooling layers implemented in Pytorch Or TensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1713"),

                                value: "superconv 8TensorFlow/Keras implementation of the paper: 'Super-Convergence: Very Fast Training of Neural Networks Using Large Learning Rates'TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1714"),

                                value: "sam tf 8TensorFlow implementation of \"Sample-efficient Imitation Learning via Generative Adversarial Nets\"TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1715"),

                                value: "GANs Slides Code Paper 8Tutorial introduction slides to GANs. Code implementations and links of relevant papers.TensorFlowGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1716"),

                                value: "tf neural style 8TensorFlow implementation of the paper \"A Neural Algorithm of Artistic Style\" by Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1717"),

                                value: "Machine Learning 8My Implementation of Machine Learning models TensorFlowHealth"

                            },

                            {

                                num: NumberInt("1718"),

                                value: "semantic style transfer 8Tensorflow implementation of semantic style transfer based on guided Gram MatricesTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1719"),

                                value: "Phaser 8BCDI phase retrieval module written in Python 3.x. GPU implementation done using Tensorflow 2.1, with an older library available that uses Tensorflow 1.x.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1720"),

                                value: "mountain car continuous 8Implementations of solutions to the continuous mountain car problem. Using OpenAI Gym and Tensorflow 1.1.TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1721"),

                                value: "CycleGAN_TF2.2_multiGPU 8Modified CycleGAN implemented in Tensorflow 2.2 with custom training loop for CPU, vCPU, GPU or multi GPU environments.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1722"),

                                value: "viraal 8PyTorch implementation of VirAAL: Virtual Adversarial Active Learning (https://arxiv.org/abs/2005.07287)PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1723"),

                                value: "Pointcloud based Row Detection using ShellNet and PyTorch 8PyTorch implementation of ShellNet, which is used for pointcloud-based row detection. ROS integration for robots is available.PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1724"),

                                value: "mdn_pyro 8Implementation of a Mixture Density Network in the deep probabilistic programming language Pyro.PyTorchNLP"

                            },

                            {

                                num: NumberInt("1725"),

                                value: "lightning semi supervised learning 8Implementation of semi-supervised learning using PyTorch LightningPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1726"),

                                value: "semantic robustness 8implementation of the paper: \"Towards Analyzing Semantic Robustness of Deep Neural Networks\" (ECCV 2020 workshop)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1727"),

                                value: "Neural Image Caption 8This is a simple implementaion of paper Neural Image Caption based on mxnet.MXNetCVNLP"

                            },

                            {

                                num: NumberInt("1728"),

                                value: "unrolled-gan 8Unrolled-ga\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1729"),

                                value: "fn jrestless example 8Run JAX-RS applications on Fn using JRestless JAXCV"

                            },

                            {

                                num: NumberInt("1730"),

                                value: "cql jax 8Conservative Q Learning in JAX.JAXGenerativeRL"

                            },

                            {

                                num: NumberInt("1731"),

                                value: "vit flax 8Implementation of Vision Transformers in FlaxJAXNLP"

                            },

                            {

                                num: NumberInt("1732"),

                                value: "jax fid 8FID computation in Jax/Flax.JAXCV"

                            },

                            {

                                num: NumberInt("1733"),

                                value: "jax skip gram negative sampling 8A Jax implementation of word2vec's skip-gram model with negative sampling as described in Mikolov et al., 2013JAXNLP"

                            },

                            {

                                num: NumberInt("1734"),

                                value: "Flax 8Create and manage fibers in C++JAXNLP"

                            },

                            {

                                num: NumberInt("1735"),

                                value: "ASU Net 7ASU-Net: Attention to Scale with U-Net for Semantic Segmentation (Implemented with TensorFlow)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1736"),

                                value: "Hotdog Not Hotdog 7Personal implementation of HBO Silicon Valley's app Hotdog or Not HotdogTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1737"),

                                value: "TinyImageNet Benchmarks 7Benchmarking various Computer Vision models on TinyImageNet DatasetTensorFlowCV"

                            },

                            {

                                num: NumberInt("1738"),

                                value: "image captioning 7Image Caption Generator implemented using Tensorflow and Keras in a Python Jupyter Notebook. The goal is to describe the content of an image by using a CNN and RNN. TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1739"),

                                value: "WassersteinGAN Tensorflow 7Tensorflow implementation of WGAN (Wasserstein Generative Adversarial Networks)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1740"),

                                value: "lstm tensorflow 7Implementation of Long Short Term Memory networks in TensorflowTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1741"),

                                value: "Capsule_Network_Tensorflow 7Capsule Network implementation in TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1742"),

                                value: "pixelrnn 7Implementation of a, simple, recurrent neural network used for a image classification.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1743"),

                                value: "ShuffleNetV2_tensorflow 7a tensorflow based implementation of ShuffleNetV2 on the Tiny ImageNet datasetTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1744"),

                                value: "adversarialconvex 7Tensorflow implementation for generating adversarial examples using convex programmingTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1745"),

                                value: "videogan_tensorflow 7Implementation of VideoGAN in TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1746"),

                                value: "tf gans 7Tensorflow implementation of Generative Adversarial NetworksTensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1747"),

                                value: "modular_SSD_tensorflow 7Modularized SSD implementation in TensorFlow. Inspiration: Speed/accuracy trade-offs for modern convolutional object detectors.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1748"),

                                value: "InfoGAN Tensorflow 7InfoGAN implementation using tensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1749"),

                                value: "gan_basic 7An implementation of GANs in tensorflow for understanding basic generative adversarial networks. GANs, DCGANs, WGANs and Encoder.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1750"),

                                value: "Document Image Unwarping tensorflow 7Tensorflow implementation and extension of DocUnet: Document Image Unwarping via A Stacked U-NetTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1751"),

                                value: "deep posemachine 7This is an deep learning implementation in tensorpackTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1752"),

                                value: "SSD 7Tensorflow implementation of SSD (Single Shot Multibox Detector) TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1753"),

                                value: "shake shake tensorflow 7Simple Code Implementation of \"Shake-Shake Regularization using TensorFlow.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1754"),

                                value: "SuperPointPretrainCpp_TensorFlow 7SuperPoint with pretrain model and implement in Tensorflow C++TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1755"),

                                value: "U Net 7Tensorflow implementation of U-Net for Segmentation of neuronal structures in EM stacksTensorFlowCVGenerativeHealth"

                            },

                            {

                                num: NumberInt("1756"),

                                value: "Dynamic Memory Network Plus 7Implementation of Dynamic Memory Network Plus for Question-Answering. Tested on Induction tasks of bAbi 10K dataset. TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1757"),

                                value: "feature eng 7Implements classes for feature engineering including one for Singular Spectrum Analysis (SSA) decomposition, SSA prediction or an heuristic function of an input dataset that may be used as training signal.TensorFlowNLP"

                            },

                            {

                                num: NumberInt("1758"),

                                value: "1D_GAN 7Tensorflow implementation of 1D Generative Adversarial NetworkTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1759"),

                                value: "MnasNet 7A TensorFlow 2.0 implementation of MnasNet: Platform-Aware Neural Architecture Search for Mobile.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1760"),

                                value: "PyTorch Linear GAN 7A PyTorch notebook and implementation of a normal linear GANPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1761"),

                                value: "RDGAN 7RDGAN(Rebalancing Data Generative Adversarial Network) implementation.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1762"),

                                value: "SpatialTransformer 7Implementation of Spatial Transformer Networks in Pytorch.PyTorchNLP"

                            },

                            {

                                num: NumberInt("1763"),

                                value: "skeleton based action recognition 7This repository provides implementation of a baseline method and our proposed methods for efficient Skeleton-based Human Action Recognition. PyTorchCVNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1764"),

                                value: "Image colorization 7This is an attempt to implement Pix2pix network using Python and MXNetMXNetCV"

                            },

                            {

                                num: NumberInt("1765"),

                                value: "retrieval chatbot 7This repo use mxnet to implement baselines for retrieval chatbotMXNetNLP"

                            },

                            {

                                num: NumberInt("1766"),

                                value: "began 7BEGAN\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1767"),

                                value: "jax dreamer 7Dreamer on JAXJAXRL"

                            },

                            {

                                num: NumberInt("1768"),

                                value: "coodoo listing 7JavaEE JPA/JAX-RS Listing FrameworkJAXGenerative"

                            },

                            {

                                num: NumberInt("1769"),

                                value: "micronaut jaxrs 7Support for the JAX-RS API in MicronautJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1770"),

                                value: "holon jaxrs 7Holon Platform JAX-RS integration module, including RestClient implementation, Swagger/OpenAPI integration and Spring Boot auto-configuration for Jersey and RestEasyJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1771"),

                                value: "jax_transformations3d 7Implementation of transformations.py that is JAX compatibleJAXNLP"

                            },

                            {

                                num: NumberInt("1772"),

                                value: "jax enhance 7minimal library for image super-resolution implemented in jaxJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1773"),

                                value: "tme 7Taylor moment expansion in Python (JaX and SymPy) and MatlabJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1774"),

                                value: "SOM 6This is python implementation for Kohonen Self Organizing map using numpy and tensorTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1775"),

                                value: "Neural Style Transfer Tensorflow Keras 6Tensorflow(using keras pretrained model) implementation of 'Image Style Transfer Using Convolutional Neural Networks'TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1776"),

                                value: "arbitrary style transfer 6Tensorflow 2 implementation of Arbitrary Style Transfer in Real-time with Adaptive Instance NormalizationTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1777"),

                                value: "VAE GAN Autoencoding Beyond Pixels Using a Similarity Metric 6Simple Tensorflow implementation of the paper Autoencoding Beyond Pixels Using a Similarity MetricTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1778"),

                                value: "neural style 6TensorFlow implementation of \"A Neural Algorithm of Artistic Style\" by Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1779"),

                                value: "sequence labeling 6Sequence Labeling implemented by BiLSTM using TensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1780"),

                                value: "Image Classification 6Implement a few key architectures for image classification by using neural networkTensorFlowCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1781"),

                                value: "Deeplabv3plus Tensorflow 6A Tensorflow implementation of Deeplabv3+ trained on VOC2012.TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1782"),

                                value: "CoTeaching 6A TensorFlow implementation of \"Co-teaching: Robust Training of Deep Neural Networks with Extremely Noisy Labels\"TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1783"),

                                value: "DeepLearning Papers Implementation 6Deep learning Papers Implementation using Tensorflow-kerasTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1784"),

                                value: "tf transformer 6A Tensorflow implementation of Transformer in version 1.12TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1785"),

                                value: "PSMNet.tf 6Tensorflow implementation for PSMNetTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1786"),

                                value: "style_transfer 6Implementation of Gatys, Leon A., Alexander S. Ecker, and Matthias Bethge. 2016. Image Style Transfer Using Convolutional Neural Networks.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1787"),

                                value: "3dbpconv 6tensorflow implementation for 3D BPConvNetTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1788"),

                                value: "Inception Module Tensorflow 6Tensorflow implementation of Inception ModuleTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1789"),

                                value: "tf transliteration 6TensorFlow implementation of Google i18n Transliteration ModelTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1790"),

                                value: "pix2pix tensorflow 6pix2pix tensorflow implementationTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1791"),

                                value: "categorical variational autoencoder 6Keras, Tensorflow eager execution implementation of Categorical Variational AutoencoderTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1792"),

                                value: "FactorVAE 6A TensorFlow implementation of FactorVAE, proposed in \"Disentangling by Factorising\" by Kim et al.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1793"),

                                value: "tf glow tts 6Tensorflow implementation of Glow-TTSTensorFlowNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1794"),

                                value: "Voice Authentication CNN 6Voice authentication system implementation using PythonTensorFlowAudio"

                            },

                            {

                                num: NumberInt("1795"),

                                value: "tensorflow CVAE 6Implementation of the Conditional Variational Auto-Encoder (CVAE) in TensorflowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1796"),

                                value: "GridMask_Tensorflow 6non-official implementation of GridMask data augmentation with tensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1797"),

                                value: "text flask 6A web implementation of text detection and recognitionTensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1798"),

                                value: "Sparse Auto Encoder 6implementation of the paper \"k-sparse autoencoders.\"TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1799"),

                                value: "tensorflow DTN 6A Tensorflow implementation of Domain Transfer Network.TensorFlowCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1800"),

                                value: "nec_tensorflow 6Custom implementation of Deepmind's Neural Episodic Control.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1801"),

                                value: "RNN pixel prediction 6In-painting: Implement LSTM based pixel prediction to predict the missing pixel in an imageTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1802"),

                                value: "tf ft 6Implementation on tensorflow fine tuning of generic CNN based modelTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1803"),

                                value: "dqn 6This repository contains a python implementation of a Deep Q-Network (DQN) for Atari gameplay using tensorflow.TensorFlowCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1804"),

                                value: "X ray images classification with Keras TensorFlow 6ConvNet (CNN) implementation to classify x-ray medical images TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1805"),

                                value: "AdaptiveAttention 6pytorch implementation of adaptive attention : Knowing when to lookPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1806"),

                                value: "ali mnist 6Simple PyTorch implementation of Adversarially Learned InferencePyTorchGenerative"

                            },

                            {

                                num: NumberInt("1807"),

                                value: "depth_eigen 6An implementation of https://arxiv.org/abs/1406.2283 in PyTorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("1808"),

                                value: "skip gram negative sampling 6A PyTorch Implementation of the Skipgram Negative Sampling Word2Vec Model as Described in Mikolov et al.PyTorchNLP"

                            },

                            {

                                num: NumberInt("1809"),

                                value: "pytorch fcn 6 Fully Convolutional Networks Implemented in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1810"),

                                value: "charades algorithms 6Train and Read Charades Dataset, implemented on Python and PyTorch, on WindowsPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1811"),

                                value: "text2image(Gluon:star 6Text to Image Synthesis in MXNETMXNetCV"

                            },

                            {

                                num: NumberInt("1812"),

                                value: "mxnet_kaldi 6This is the speech demo from mxnet, but for some reason, they removed this demo.MXNetNLPAudio"

                            },

                            {

                                num: NumberInt("1813"),

                                value: "vrp attention jax 6Reimplementation of the paper \"Attention, Learn to Solve Routing Problems!\" in jax/flax.JAXGenerative"

                            },

                            {

                                num: NumberInt("1814"),

                                value: "jax meta learning 6Simple, extensible implementations of some meta-learning algorithms in JaxJAXRL"

                            },

                            {

                                num: NumberInt("1815"),

                                value: "MLP Mixer 6Minimal Flax implementation of MLP-Mixer from \"MLP-Mixer: An all-MLP Architecture for Vision\" (https://arxiv.org/abs/2105.01601)JAXCV"

                            },

                            {

                                num: NumberInt("1816"),

                                value: "jax workshop 6JAX workshop for Simo Srkk's groupJAXGenerativeGraph"

                            },

                            {

                                num: NumberInt("1817"),

                                value: "grax 6Graph Networks with JaxJAXNLPGraph"

                            },

                            {

                                num: NumberInt("1818"),

                                value: "jax rs linker 6Compile-time resource link resolution for JAX-RSJAXNLP"

                            },

                            {

                                num: NumberInt("1819"),

                                value: "windmill api 6The Windmill REST API is a Java EE 8 implementation written in Java 8 using JAX-RS. The codebase is about 7.5k LOC.JAXNLPGraph"

                            },

                            {

                                num: NumberInt("1820"),

                                value: "deep illusion 6Adversarial attack toolbox for Pytorch, Tensorflow, and JaxJAXCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1821"),

                                value: "DeepQLearning 6small experiments with agents learning atari games, implemented in jax/numpyJAXRL"

                            },

                            {

                                num: NumberInt("1822"),

                                value: "Vision Transformer Pytorch Lightning 6Pytorch Lightning implementation of Vision Transformer with support for loading checkpoints saved in official Flax implementation. JAXCV"

                            },

                            {

                                num: NumberInt("1823"),

                                value: "HeroCrabPlugin 6HeroCrabPlugin is an authoritative network messaging framework for games developed with Flax Engine.JAXNLPGraph"

                            },

                            {

                                num: NumberInt("1824"),

                                value: "dbn_tf 5Deep belief network implemented using tensorflow.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1825"),

                                value: "Tensorflow_project_template 5This is a Tensorflow implemention of VGG 16TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1826"),

                                value: "rlntm tensorflow 5(In development) Tensorflow implementation of RL-NTMTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1827"),

                                value: "CapsNet 5Tensorflow implementation of capsule network (CapsNet) for traffic prediction.TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1828"),

                                value: "yolov3 5TensorFlow implementation of YOLOv3TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1829"),

                                value: "StarGAN Tensorflow 5Tensorflow implement of StarGANTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1830"),

                                value: "CNN_Implementations 5Data and Trained models can be downloaded from https://goo.gl/7PrKD2TensorFlowCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1831"),

                                value: "chatbot_al 5An implementation of Chatbot using Adversarial Learning and Reinforcement Learning based on TensorFlow framework.TensorFlowNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1832"),

                                value: "pytfBusterNet 5Keras Implementation of BusterNet with TPU TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1833"),

                                value: "ESIM 5Tensorflow implementation of ESIM model described in paper Enhanced LSTM for Natural Language InferenceTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1834"),

                                value: "tensorflow pix2pix 5Tensorflow implementation of pix2pix for various datasets.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1835"),

                                value: "actor critic 5Implementation of A2C and ACKTR in TensorFlow.TensorFlowNLPGenerativeRL"

                            },

                            {

                                num: NumberInt("1836"),

                                value: "CycleGAN Tensorflow 5A Tensorflow implementation of CycleGAN using Eager Execution, tf.keras.layers, and tf.data.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1837"),

                                value: "convolutional draw 5Tensorflow implementation of Convolutional DRAW by Gregor et al. (2016)TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1838"),

                                value: "scrnn tensorflow 5Tensorflow implementation of SCRNN cellTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1839"),

                                value: "CapsNet python tensorflow 5This is python TensorFlow implementation of [Dynamic Routing Between Capsules](https://arxiv.org/pdf/1710.09829.pdf) ()TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1840"),

                                value: "deep convolutional highway network 5This is the implementation of Highway version of Deep convolutional network, based on https://arxiv.org/pdf/1505.00387.pdf.TensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1841"),

                                value: "MAMNet Tensorflow 2 5Tensorflow 2.0 implementation of MAMNetTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1842"),

                                value: "arch deepspeech 5Arch Linux packages to install CPU versions of Mozilla's Deep Speech implementationTensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1843"),

                                value: "dl_stereo_matching 5A Tensorflow implementation of the models described in the paper \"Efficient Deep Learning for Stereo Matching\"TensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1844"),

                                value: "toyRNNText 5This is a toy implementation of RNNText on zhihu tag classification dataset.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1845"),

                                value: "Deep Q Network using Tensorflow 5This repository contains Deep Q-Networks and Double DQN implementation in tensorflow for Open AI Gym environments.TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1846"),

                                value: "Fully convolutional networks TF 5A TensorFlow implementation of Fully Convolutional Networks (by http://fcn.berkeleyvision.org) which can be used for any segmentation dataset with any number of classesTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1847"),

                                value: "ddpg_agent 5Tensorflow implementation of the DDPG algorithmTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1848"),

                                value: "residual network 5The implementation of ResNet using Tensorflow. This implementation is based on this paper:  https://arxiv.org/pdf/1603.05027.pdfTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1849"),

                                value: "nifi deepspeech 5Using Mozilla TensorFlow implementation of Baidu's Deep SpeechTensorFlowCVNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1850"),

                                value: "YOLOv4 Swift for TensorFlow 5Exact Implementation of YOLOv4 in Swift for TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1851"),

                                value: "Neural_Turing_Machine 5A Neural Turing Machine implemented in TensorFlow 2.0 alphaTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1852"),

                                value: "deepdream 5Simple implementation of the DeepDream algorithm in TensorFlowTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1853"),

                                value: "Neural Machine Translation 5Tensorflow 2.0 implementation of Neural Machine Translation using Transformer ModelTensorFlowNLPGenerative"

                            },

                            {

                                num: NumberInt("1854"),

                                value: "QNN 5Implementation of a quantum neural network using Strawberry Fields and TensorFlowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1855"),

                                value: "Faster RCNN RPN 5Region Proposal Network (RPN) of Faster R-CNN implementation in Python and Tensorflow 1.8 with explanations.TensorFlowCV"

                            },

                            {

                                num: NumberInt("1856"),

                                value: "WSSDCNN 5The unofficial implementation of Weakly- and Self-Supervised Learning for Content-Aware Deep Image Retargeting via TensorFlowTensorFlowCVGenerativeSelf-Supervised"

                            },

                            {

                                num: NumberInt("1857"),

                                value: "asynchronous_1step 5TensorFlow implementation of the two 1-step methods from \"Asynchronous Deep Reinforcement Learning Methods\" by Mnih et. al., 2016 for OpenAIs Gym-environment.TensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1858"),

                                value: "Image2Image_Translation 5Tensorflow implementation of StarGAN. Feature translation between images using Generative Adversarial Networks (GANs). It allows to modify a physical characteristic such as the hair color.TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1859"),

                                value: "Attention Chatbot 5Chatbot for Twitter Customer Support. A Seq2seq Neural Network with Multiplicative Attention mechanism implemented in TensorFlow 2.TensorFlowNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1860"),

                                value: "Quick NLP 5A collection of feedforward NLP models that combine self attention and convolution implemented in TensorFlow with simplicity modifiability in mindTensorFlowGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1861"),

                                value: "SkipGram Model 5Implemented the skip-gram model for Word2Vec, complete with data pre-processing and a sweet word embedding visualizer in tensorboardTensorFlowGenerativeGraph"

                            },

                            {

                                num: NumberInt("1862"),

                                value: "tdnn_tensorflow 5tdnn (time delay neural network) tensorflow implementationTensorFlowNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1863"),

                                value: "vdsr 5TensorFlow implementation of VDSRTensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1864"),

                                value: "image captioning 5Implementation of a Multimodal Neural Network for Image Captioning in Tensorflow.TensorFlowCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1865"),

                                value: "Paper Implementations 5Pytorch implementations of popular Deep Learning papersPyTorchCV"

                            },

                            {

                                num: NumberInt("1866"),

                                value: "Text Normalization in pyTorch 5pyTorch implementation for Text Normalization ChallengePyTorchNLP"

                            },

                            {

                                num: NumberInt("1867"),

                                value: "LSGAN with PyTorch 5PyTorch implementation of the  Least Squares Generative Adversarial NetworksPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1868"),

                                value: "etos tts 5Deep Learning TTS, Based on PyTorch Implementation of Tacotron: A Fully End-To-End Text-To-Speech Synthesis Model. PyTorchNLPAudio"

                            },

                            {

                                num: NumberInt("1869"),

                                value: "detection experiments 5Playground of various object detection models implemented in PyTorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1870"),

                                value: "neural style 5Py-Torch implementation of neural style algorithm(Style-transfer)PyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1871"),

                                value: "pytorch DISN 5Pytorch Implementation of DISN: Deep Implicit Surface Network for High-quality Single-view 3D Reconstruction (Xu et al., 2019)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1872"),

                                value: "DL Playground 5A modular implementation of some popular papers and architectures in deep learning.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1873"),

                                value: "SRCNN 5This repo reproduces a prototype of the classical algorithm for Single Image Super resolution (SISR) with convolutional neural network based on MXNET.MXNetCV"

                            },

                            {

                                num: NumberInt("1874"),

                                value: "chainer-srcnn 5Image super-resolution\nChainerCV"

                            },

                            {

                                num: NumberInt("1875"),

                                value: "JaxCQL 5Conservative Q learning in JaxJAXGenerative"

                            },

                            {

                                num: NumberInt("1876"),

                                value: "jaxb 5JRuby scripting of Java Architecture for XML Binding classesJAXNLP"

                            },

                            {

                                num: NumberInt("1877"),

                                value: "vkJAX 5JAX interpreter for VulkanJAXCV"

                            },

                            {

                                num: NumberInt("1878"),

                                value: "glow_jax 5An implementation of the Glow generative model in jax and flaxJAXGenerative"

                            },

                            {

                                num: NumberInt("1879"),

                                value: "bart base jax 5JAX implementation of the BART modelJAXNLPGenerative"

                            },

                            {

                                num: NumberInt("1880"),

                                value: "bottleneck transformer flax 5A JAX/Flax implementation of Bottleneck Transformers for Visual RecognitionJAXCV"

                            },

                            {

                                num: NumberInt("1881"),

                                value: "mech 5Mechanics functions with end-to-end support for deep learning developers, written in Ivy.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1882"),

                                value: "rl_with_jax 5clear single-file JAX implementations of common RL algorithmsJAXRL"

                            },

                            {

                                num: NumberInt("1883"),

                                value: "stylegan2.jax 5Re-implementation of StyleGan2 in JAXJAXGenerative"

                            },

                            {

                                num: NumberInt("1884"),

                                value: "RBM 4Implementation for RBM - Restricted Bolzmann Machine for Collaborative FilteringTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1885"),

                                value: "Show and Tell 4Tensorflow implementation of \"Show and Tell\"TensorFlowCVNLPGenerative"

                            },

                            {

                                num: NumberInt("1886"),

                                value: "RGB_to_GRAYSCALE_Autoencoder  4This an implementation of Undercomplete Autoencoder which converts an RGB image to an GRAY scale image. TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1887"),

                                value: "VDSR TensorFlow 4TensorFlow implementation of \"Accurate Image Super-Resolution Using Very Deep Convolutional Network\" (CVPR 2016)TensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1888"),

                                value: "tensor_fcn 4Tensorflow implementation of Fully Convolutional Networks for Semantic SegmentationTensorFlowCVGenerative"

                            },

                            {

                                num: NumberInt("1889"),

                                value: "Learning Chaos 4Unofficial Python implementation of the DQN (Mnih et al., 2015) with tensorflowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1890"),

                                value: "Cartpole OpenAI Tensorflow 4A Tensorflow implementation of a Actor Mimic RL agent to balance a Cartpole from OpenAI GymTensorFlowGenerativeRL"

                            },

                            {

                                num: NumberInt("1891"),

                                value: "I3D_Master 4implementation of  Inflated 3D ConvNet  in TensorFlowTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1892"),

                                value: "speechdenoising 4This repo has a Tensorflow implementation of speech denoising with an API service as well. TensorFlowNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1893"),

                                value: "text siamese network 4Text Siamese Network provides a CNN based implementation of Siamese Network to solve Quora duplicate questions identification problem.TensorFlowGenerativeHealth"

                            },

                            {

                                num: NumberInt("1894"),

                                value: "InfoGAN_Tensorflow2.0 4Quick Tensorflow 2.0 implementation of InfoGAN trained on MNIST.TensorFlowGenerative"

                            },

                            {

                                num: NumberInt("1895"),

                                value: "Dive into Machine Learning 4Machine learning implementationTensorFlowCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1896"),

                                value: "cVAE in pytorch 4implementation of convolutional VAE in pytorchPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1897"),

                                value: "pytorch Tiny Darknet 4 PyTorch implementation of the Tiny Darknet Image Classification algorithm PyTorchCV"

                            },

                            {

                                num: NumberInt("1898"),

                                value: "improved ContentDisentanglement 4PyTorch implementation of \"Emerging Disentanglement in Auto-Encoder Based Unsupervised Image Content Transfer\" - tuned versionPyTorchCVUnsupervised"

                            },

                            {

                                num: NumberInt("1899"),

                                value: "bayes by backprop 4Implementing Bayes by Backprop with PyTorch. Applied on time-series prediction.PyTorchGenerativeGraph"

                            },

                            {

                                num: NumberInt("1900"),

                                value: "Spectral Stein Gradient 4PyTorch Implementation of the Spectral Stein Gradient EstimatorPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1901"),

                                value: "PyTorch RNNs 4Implementation of RNN variants from scratch in PyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1902"),

                                value: "Disentangling_by_Factorising 4PyTorch Implementation of Disentangling by Factorising, Variational Auto EncodersPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1903"),

                                value: "DDR 4This repository is the demo implementation of [Deep Dimension Reduction for Supervised Representation Learning]. PyTorchCV"

                            },

                            {

                                num: NumberInt("1904"),

                                value: "centernet detection kitti 4This project implemented CenterNet for 2D object detection and tested on the KITTI dataset.PyTorchCV"

                            },

                            {

                                num: NumberInt("1905"),

                                value: "SSD+FPN 4SSD is an unified framework for object detection with a single network.MXNetCV"

                            },

                            {

                                num: NumberInt("1906"),

                                value: "jax nn template 4Deep Learning Template with JAXJAXGenerative"

                            },

                            {

                                num: NumberInt("1907"),

                                value: "tensorf jax 4Unofficial implementation of Tensorial Radiance Fields (Chen & Xu 22)JAXCV"

                            },

                            {

                                num: NumberInt("1908"),

                                value: "jax reactor 4Differentiable and hardware accelerated chemical kinetics simulations in python using JAXJAXGenerative"

                            },

                            {

                                num: NumberInt("1909"),

                                value: "unet jax 4Image segmentation with a U-Net-like architecture based on https://keras.io/examples/vision/oxford_pets_image_segmentation/JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1910"),

                                value: "openapi jaxb 4OpenApi annotation in XSD -> DTO generationJAXNLP"

                            },

                            {

                                num: NumberInt("1911"),

                                value: "JAX RS JPA CRUD 4Provides extendable classes to create JAX-RS CRUD Web Services tied to JPA entity classesJAXGenerative"

                            },

                            {

                                num: NumberInt("1912"),

                                value: "SpringBootEcommerceApiJersey 4Ecommerce Api application built with Spring Boot + JAX-RS JerseyJAXCVGenerativeRL"

                            },

                            {

                                num: NumberInt("1913"),

                                value: "rsmvc 4Prototype for a MVC web framework based on JAX-RSJAXNLP"

                            },

                            {

                                num: NumberInt("1914"),

                                value: "JAX RL 4JAX implementations of various deep reinforcement learning algorithms.JAXRL"

                            },

                            {

                                num: NumberInt("1915"),

                                value: "svgd jax 4Stein Variational Gradient Descent, Implemented in JaxJAXGenerative"

                            },

                            {

                                num: NumberInt("1916"),

                                value: "sxml jaxp 4Clojure library for using SXML-inspired XML respresentations with JAXP.JAXCVNLPAudio"

                            },

                            {

                                num: NumberInt("1917"),

                                value: "jaxb format plugin 4Plugin for the JAXB (Java API for XML Binding) Schema-to-Source compiler (XJC) that generates code to format instances of generated classes via an XPath expressionJAXNLPGraph"

                            },

                            {

                                num: NumberInt("1918"),

                                value: "swin_transformer_v2_jax 4This project compares the performance of Swin-Transformer v2 implemented in JAX and PyTorch.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1919"),

                                value: "pathfinder 4JAX implementation of \"Pathfinder: Parallel quasi-Newton variational inference\"JAXGenerative"

                            },

                            {

                                num: NumberInt("1920"),

                                value: "dynaql 4A GraphQL Client in Java (inspired by JAX-RS Client)JAXCVNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("1921"),

                                value: "sympais 4Symbolic Parallel Adaptive Importance Sampling for Probabilistic Program Analysis in JAXJAXCVNLPGenerativeAudioGraph"

                            },

                            {

                                num: NumberInt("1922"),

                                value: "trajectory optimisation in learned multimodal dynamical systems 4Trajectory optimisation in learned multimodal dynamical systems via latent-space collocation - JAX.JAXGenerative"

                            },

                            {

                                num: NumberInt("1923"),

                                value: "lift json jsr311 provider 4JSR-311 / JAX-RS Provider for using Lift-Json to map between Json and Scala Case ClassesJAXNLP"

                            },

                            {

                                num: NumberInt("1924"),

                                value: "Trust Region Policy Optimization 3My implementation of TRPOPyTorchRL"

                            },

                            {

                                num: NumberInt("1925"),

                                value: "EfficientNet PyTorch 3A PyTorch implementation of EfficientNetPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1926"),

                                value: "dcgan celeba 3PyTorch Implementation of DCGAN (on CelebA dataset)PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1927"),

                                value: "speech2face 3A PyTorch implementation of MIT CSAIL's Speech2Face research paper from IEEE CVPR 2019PyTorchCVNLPAudioGraph"

                            },

                            {

                                num: NumberInt("1928"),

                                value: "pytorch implementations 3Pytorch implementation examples of Neural Networks etcPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1929"),

                                value: "nnutils 3CPU & CUDA implementation of several neural network utilsPyTorchCV"

                            },

                            {

                                num: NumberInt("1930"),

                                value: "DRN PyTorch 3PyTorch implementation of Dilated Residual Networks for semantic image segmentationPyTorchCVNLP"

                            },

                            {

                                num: NumberInt("1931"),

                                value: "dcgan 3A PyTorch implementation of \"Deep Convolutional Generative Adversarial Networks\" with Multiple Discriminator.PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1932"),

                                value: "ColorizeDepthNet 3PyTorch implementation for Colorization of Depth Map via DisentanglementPyTorchCV"

                            },

                            {

                                num: NumberInt("1933"),

                                value: "unet pytorch 3pytorch implementation of basic unetPyTorchCV"

                            },

                            {

                                num: NumberInt("1934"),

                                value: "meta_learning 3Implementation of Meta Learning AlgorithmPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("1935"),

                                value: "disturblabel pytorch 3PyTorch implementation of DisturbLabelPyTorchCV"

                            },

                            {

                                num: NumberInt("1936"),

                                value: "deepdeblur 3Unofficial PyTorch implementation of DeepDeblurPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1937"),

                                value: "SNGAN 3A Pytorch implementation of \"Spectral Normalization for Generative Adversarial Networks\"PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1938"),

                                value: "MobileNetV2 3Implementation of MobileNetV2 with pyTorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1939"),

                                value: "VDSR pytorch tf2 3VDSR implementation with PyTorch and Tensorflow 2PyTorchGenerative"

                            },

                            {

                                num: NumberInt("1940"),

                                value: "yolov3 3An implementation of yolov3 using pytorch.PyTorchCV"

                            },

                            {

                                num: NumberInt("1941"),

                                value: "openpose pytorch 3openpose implementation in pytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1942"),

                                value: "DenseNet pytorch 3Implementation of DenseNets Using PyTorchPyTorchGraph"

                            },

                            {

                                num: NumberInt("1943"),

                                value: "deep coloring 3This is a PyTorch implementation of the paper Colorful Image ColorizationPyTorchCV"

                            },

                            {

                                num: NumberInt("1944"),

                                value: "Mobilenet CustomData 3This is a pytorch version of mobilenet implemented by Jupyter Notebook, the dataset consists of imagenet dataset and custom dataset.PyTorchCV"

                            },

                            {

                                num: NumberInt("1945"),

                                value: "neural style 3Style transfer implemented in pytorchPyTorchCV"

                            },

                            {

                                num: NumberInt("1946"),

                                value: "CapsuleNet 3a pytorch implementation of CapsuleNetPyTorchCV"

                            },

                            {

                                num: NumberInt("1947"),

                                value: "scene_text_segmentation 3Pytorch implementation for pixel-wise scene text segmentation based on DeepLabV3+ PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1948"),

                                value: "VST 3Video Summarization Transformer: Implementation in PyTorch of the Transformer model for video summarisationPyTorchCVNLPRLUnsupervised"

                            },

                            {

                                num: NumberInt("1949"),

                                value: "deep learning cnn 3Convolutional Neural Network implementation from scratch in PyTorch on a big image datasetPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1950"),

                                value: "pt splitter 3 PyTorch implementation of Splitter graph node embeddingsPyTorchGraph"

                            },

                            {

                                num: NumberInt("1951"),

                                value: "Self Attention GAN master_pytorch 3 Pytorch implementation of Self-Attention Generative Adversarial Networks (SAGAN) of non-cuda user s and its also used by cuda user.PyTorchCVGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1952"),

                                value: "NSCUPA pytorch 3(Deprecated) Pytorch implementation of Neural Sentiment Classification with User & Product AttentionPyTorchCVGraph"

                            },

                            {

                                num: NumberInt("1953"),

                                value: "forces 3PyTorch implementation of \"What happens if...\" Learning to Predict the Effect of Forces in Images, ECCV'16PyTorchCV"

                            },

                            {

                                num: NumberInt("1954"),

                                value: "caps em routing cifar 3The code implements Hinton's matrix capsule with em routing for Cifar-10 datasetPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1955"),

                                value: "image_colorization 3SAGAN implementation in pytorch for image colorization task. PyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1956"),

                                value: "AlphaDraughts 3A PyTorch implementation of AlphaGo Zero applied to DraughtsPyTorchGraph"

                            },

                            {

                                num: NumberInt("1957"),

                                value: "Pytorch in NLP research 3a list of implementations using Pytorch in NLP researchPyTorchGraph"

                            },

                            {

                                num: NumberInt("1958"),

                                value: "Deep Reinforcement Learning 3Deep Reinforcement Learning - Implementations and Theory: A path to masteryPyTorchGenerativeRL"

                            },

                            {

                                num: NumberInt("1959"),

                                value: "MinGrid Improved RL Methods 3Applying curiosity and curriculum to MinGrid from gym using an RL implementation with PPO.PyTorchRLGraphSelf-Supervised"

                            },

                            {

                                num: NumberInt("1960"),

                                value: "pytorch unsupervised domain adatation 3Pytorch implementation of unsupervised domain adaptation methods for deep transfer learning PyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1961"),

                                value: "TD3 Pytorch 3Using Pytorch to implement TD3 and play with bipedalPyTorchNLP"

                            },

                            {

                                num: NumberInt("1962"),

                                value: "Image Style Transfer 3TensorFlow 1.1.x and PyTorch 1.4 implementationPyTorchCVGenerative"

                            },

                            {

                                num: NumberInt("1963"),

                                value: "Indices Net 3Own implementation of the Indices-Net model proposed in [Xue et al, 2017]. This code was written as a baseline to compare with my own model presented in STACOM 2018 [Debus and Ferrante, 2018]. PyTorchCV"

                            },

                            {

                                num: NumberInt("1964"),

                                value: "translatR 3Lightweight tools for translation tasks with mxnet R.MXNetNLP"

                            },

                            {

                                num: NumberInt("1965"),

                                value: "chainer-gan-trainer 3Chainer GAN Trainer\nChainerGenerative"

                            },

                            {

                                num: NumberInt("1966"),

                                value: "gradle java rest api 3This plugin generates Java REST APIs for Micronaut, Spring and JAX-RS from a JSON specificationJAXGenerative"

                            },

                            {

                                num: NumberInt("1967"),

                                value: "jaxdl 3JAX (Flax) Deep Learning LibraryJAXRLGraph"

                            },

                            {

                                num: NumberInt("1968"),

                                value: "jaxdb 3JAX-DB (Java Architecture Extension for [Relational] Database Binding) is a framework that cohesively binds the Java Application Layer to a Vendor Agnostic RDBMS Layer.JAXGenerative"

                            },

                            {

                                num: NumberInt("1969"),

                                value: "jackson jakarta rs providers 3Multi-module project that contains Jackson-based \"new\" Jakarta-RS (nee \"JAX-RS\" -- ones under `jakarta.ws.rs`) providers for JSON, XML, YAML, Smile, CBOR formatsJAXNLP"

                            },

                            {

                                num: NumberInt("1970"),

                                value: "jax anchors 3Anchors JAX is a simple Python package fully implemented with JAX to simplify the generation of anchors for object detection modelsJAXCV"

                            },

                            {

                                num: NumberInt("1971"),

                                value: "jax rs labs 3JAX-RS: Java API for RESTful Web Services is a Java programming language API spec that provides support in creating web services according to the Representational State Transfer architectural pattern.JAXGenerative"

                            },

                            {

                                num: NumberInt("1972"),

                                value: "siren flax 3SIREN neural networks in FlaxJAXCV"

                            },

                            {

                                num: NumberInt("1973"),

                                value: "a2c jax 3jax + flax - based implementation of a2cJAXRL"

                            },

                            {

                                num: NumberInt("1974"),

                                value: "learning drl 3I'm learning a deep reinforcement learning with jax and flax which is numpy on steroids.JAXRL"

                            },

                            {

                                num: NumberInt("1975"),

                                value: "hyper nn 3Easy Hypernetworks in Pytorch and JaxJAXRL"

                            },

                            {

                                num: NumberInt("1976"),

                                value: "player_zoo 2Deep reinforcement learning implementationsPyTorchCVRL"

                            },

                            {

                                num: NumberInt("1977"),

                                value: "pt_unet 2pytorch unet implementationPyTorchCV"

                            },

                            {

                                num: NumberInt("1978"),

                                value: "semantic segmentation 2hrnet pytorch implementationPyTorchCV"

                            },

                            {

                                num: NumberInt("1979"),

                                value: "Generative_Adversarial_Networks 2Implements a GAN in PyTorchPyTorchGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("1980"),

                                value: "PPO PyTorch 2Implementation of Proximal Policy Optimization(PPO)PyTorchRL"

                            },

                            {

                                num: NumberInt("1981"),

                                value: "Variational Autoencoder Pytorch 2Implementation of the variational autoencoder with PyTorch and FastaiPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1982"),

                                value: "Hierarchical Question-Imagee Co-Attention 2This is MXNet implementation of Hierarchical Question-Image Co-Attention for Visual Question Answering(https://arxiv.org/abs/1606.00061)MXNetCV"

                            },

                            {

                                num: NumberInt("1983"),

                                value: "lpips j 2Minimal JAX/Flax port of `lpips` supporting `vgg16`, with pre-trained weights stored in the  Hugging Face hub.JAXGenerative"

                            },

                            {

                                num: NumberInt("1984"),

                                value: "flaxOptimizersBenchmark 2Benchmarking code to evaluate Flax optimizersJAXCVGenerative"

                            },

                            {

                                num: NumberInt("1985"),

                                value: "flax 2A flux implementation to be used with ReactJSJAXGenerative"

                            },

                            {

                                num: NumberInt("1986"),

                                value: "speech jax 2Speech in Flax/JAXJAXNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("1987"),

                                value: "nerf_jax_flax_practice 2Practice repository for jax and flax implementing NeRF: Representing Scenes as Neural Radiance Fields  JAXGenerative"

                            },

                            {

                                num: NumberInt("1988"),

                                value: "PaLM flax 2Implementation of the SOTA Transformer architecture from PaLM - Scaling Language Modeling with Pathways in JAX/FlaxJAXGenerative"

                            },

                            {

                                num: NumberInt("1989"),

                                value: "gMLP 2Flax implementation of gMLP from \"Pay Attention to MLPs\" (https://arxiv.org/abs/2105.08050)JAXCV"

                            },

                            {

                                num: NumberInt("1990"),

                                value: "xpag 2a modular reinforcement learning library with JAX agentsJAXNLPRL"

                            },

                            {

                                num: NumberInt("1991"),

                                value: "NeRF 2Implementation of NeRF in JAX, based on Google Research's codebase with W&B LoggingJAXCV"

                            },

                            {

                                num: NumberInt("1992"),

                                value: "h former 2H-Former is a VAE for generating in-between fonts (or combining fonts). Its encoder uses a Point net and transformer to compute a code vector of glyph. Its decoder is composed of multiple independent decoders which act on a code vector to reconstruct a point cloud representing a glpyh.JAXCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("1993"),

                                value: "flax u2net 2JAX/Flax implementation of U-2 Net for salient object detection.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("1994"),

                                value: "EBGAN CelebA 1Pytorch implementation of Energy Based GAN for CelebA datasetPyTorchGenerative"

                            },

                            {

                                num: NumberInt("1995"),

                                value: "Evolutionary Reinforcement Learning for OpenAI Gym 1Implementation of Augmented-Random-Search for OpenAI Gym environmentsPyTorchRL"

                            },

                            {

                                num: NumberInt("1996"),

                                value: "pytorch_sac 1Pytorch implementation of Soft Actor-Critic algorithmPyTorchRL"

                            },

                            {

                                num: NumberInt("1997"),

                                value: "flax 1Fully featured and easy to use ECS library for rustJAXGenerativeHealth"

                            },

                            {

                                num: NumberInt("1998"),

                                value: "protein_bert_jax 1ProteinBERT for Huggingface JAX/Flax community weekJAXNLPHealth"

                            },

                            {

                                num: NumberInt("1999"),

                                value: "set_transformer 1Amortized clustering with a set transformer in JAX/Flax.JAXCVGenerative"

                            },

                            {

                                num: NumberInt("2000"),

                                value: "nedem 1Neural implicit digital elevation modelJAXCV"

                            },

                            {

                                num: NumberInt("2001"),

                                value: "flax extra 1The package provides extra flexibility to Flax using ideas originated at Trax.JAXCVNLPGenerativeAudio"

                            },

                            {

                                num: NumberInt("2002"),

                                value: "ResMLP Flax 1Minimal Flax implementation of \"ResMLP: Feedforward networks for image classification with data-efficient training\" (https://arxiv.org/abs/2105.03404)JAXCV"

                            },

                            {

                                num: NumberInt("2003"),

                                value: "implementation deep learningImplementation of deep learning modelsPyTorchCVGenerativeGraph"

                            },

                            {

                                num: NumberInt("2004"),

                                value: "Zero DCEA Jax/Flax implementation of TIP 2021 paper \"Learning to Enhance Low-Light Image via Zero-Reference Deep Curve Estimation\"JAXCVNLP"

                            },

                            {

                                num: NumberInt("2005"),

                                value: "TF_TORCH_JAXThis repository will be recording my week long private programming session. I am planning to present 5 diffenent projects starting from simple classification problems to complex NLP modeling in all three frameworks(Tensorflow,Torch,Jax/Flax)JAXGenerative"

                            },

                            {

                                num: NumberInt("2006"),

                                value: "DeepViT flaxImplementation of Deep Vision Transformer in FlaxJAXCV"

                            },

                            {

                                num: NumberInt("2007"),

                                value: "fourier neural operator flaxAn unofficial implementation of the Fourier Neural Operator in FlaxJAXRL"

                            },

                            {

                                num: NumberInt("2008"),

                                value: "Flax_T5_Pre trainingT5 Pre-training Using Transformers and FlaxJAXGenerative"

                            },

                            {

                                num: NumberInt("2009"),

                                value: "ml params flaxFlaxatop JAXimplementation of ml-params CLI APIJAXGenerative"

                            },

                            {

                                num: NumberInt("2010"),

                                value: "jax ddimJax/Flax implementation of Denoising Diffusion Implicit ModelsJAXGenerative"

                            },

                            {

                                num: NumberInt("2011"),

                                value: "jax rl finetuningFinetuning Large Language Models via RL (with Flax/Jax)JAXRL"

                            },

                            {

                                num: NumberInt("2012"),

                                value: "Human body segmentationImage segmentation project, implemented in Pytorch, and JAX written in python.JAXCV"

                            },

                            {

                                num: NumberInt("2013"),

                                value: "Simple RL JaxSome bare bones implementations of standard reinforcement learning algorithms that use Flax/JaxJAXRL"

                            },

                            {

                                num: NumberInt("2014"),

                                value: "AdversarialCryptoProtecting communications with adversarial neural cryptography.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("2015"),

                                value: "AdversarialTextSemi-supervised sequence learning with adversarial training.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("2016"),

                                value: "AttentionOCRA model for real-world image text extraction.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("2017"),

                                value: "AudiosetModels and supporting code for use with AudioSet.\nTensorFlowAudio"

                            },

                            {

                                num: NumberInt("2018"),

                                value: "BrainCoderProgram synthesis with reinforcement learning.\nTensorFlowRL"

                            },

                            {

                                num: NumberInt("2019"),

                                value: "CognitiveMappinGANPlanningImplementation of a spatial memory based mapping and planning architecture for visual navigation.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("2020"),

                                value: "CompressionCompressing and decompressing images using a pre-trained Residual GRU network.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("2021"),

                                value: "DeepSpeechAutomatic speech recognition.\nTensorFlowNLPAudio"

                            },

                            {

                                num: NumberInt("2022"),

                                value: "DeepLabDeep labeling for semantic image segmentation.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("2023"),

                                value: "DELFDeep local features for image matching and retrieval.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("2024"),

                                value: "GANGenerative adversarial networks.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("2025"),

                                value: "Im2txtImage-to-text neural network for image captioning.\nTensorFlowCVNLP"

                            },

                            {

                                num: NumberInt("2026"),

                                value: "LearningUnsupervisedLearningA meta-learned unsupervised learning update rule.\nTensorFlowUnsupervised"

                            },

                            {

                                num: NumberInt("2027"),

                                value: "LFADSSequential variational autoencoder for analyzing neuroscience data.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("2028"),

                                value: "MaskGANText generation with GANs.\nTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("2029"),

                                value: "ObjectDetectionLocalizing and identifying multiple objects in a single image.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("2030"),

                                value: "PCLRLCode for several reinforcement learning algorithms, including Path Consistency Learning.\nTensorFlowRL"

                            },

                            {

                                num: NumberInt("2031"),

                                value: "SLIMImage classification models in TF-Slim.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("2032"),

                                value: "StreetIdentify the name of a street (in France) from an image using a Deep RNN.\nTensorFlowCV"

                            },

                            {

                                num: NumberInt("2033"),

                                value: "Vid2depthLearning depth and ego-motion unsupervised from raw monocular video.\nTensorFlowUnsupervised"

                            },

                            {

                                num: NumberInt("2034"),

                                value: "Policy GradientFor Playing Atari Ping Pong\nTensorFlowRL"

                            },

                            {

                                num: NumberInt("2035"),

                                value: "Fully Convolutional Networks for Semantic Segmentation (FCNs)These models are described in the paper:    Fully Convolutional Models for Semantic Segmentation    Jonathan Long, Evan Shelhamer, Trevor Darrell    CVPR 2015    arXiv:1411.4038Details, model definitions, pre-trained weights, and code are public on github: https://github.com/shelhamer/fcn.berkeleyvision.org.These models are compatible with Caffe master, unlike earlier FCNs that required a pre-release branch (note: this reference edition of the models is still in progress and not all of the models have yet been ported to master).CaffeCV"

                            },

                            {

                                num: NumberInt("2036"),

                                value: "Deep Learning of Binary Hash Codes for Fast Image RetrievalWe present an effective deep learning framework to create the hash-like binary codes for fast image retrieval.CaffeCV"

                            },

                            {

                                num: NumberInt("2037"),

                                value: "GoogLeNet_cars on car model classificationGoogLeNet_cars is the GoogLeNet model pre-trained on ImageNet classification task and fine-tuned on 431 car models in CompCars dataset.CaffeCV"

                            },

                            {

                                num: NumberInt("2038"),

                                value: "SegNet and Bayesian SegNetSegNet is a real-time semantic segmentation architecture for scene understanding.CaffeCV"

                            },

                            {

                                num: NumberInt("2039"),

                                value: "Emotion Recognition in the Wild via Convolutional Neural Networks and Mapped Binary PatternsWe provide models for facial emotion classification for different image representation obtained using mapped binary patterns.CaffeCV"

                            },

                            {

                                num: NumberInt("2040"),

                                value: "ResNetsThis repository contains the original models (ResNet-50, ResNet-101, and ResNet-152) described in the paper \"Deep Residual Learning for Image Recognition\" (http://arxiv.org/abs/1512.03385).CaffeCV"

                            },

                            {

                                num: NumberInt("2041"),

                                value: "CNN Object Proposal Models for Salient Object DetectionCNN models for the following CVPR'16 paper:     Unconstrained Salient Object Detection via Proposal Subset Optimization    J.CaffeCV"

                            },

                            {

                                num: NumberInt("2042"),

                                value: "Deep HandWe provide pretrained CNN models of our CVPR'16 paper (Oral):     Deep Hand: How to Train a CNN on 1 Million Hand Images When Your Data Is Continuous and Weakly Labelled    O.CaffeCV"

                            },

                            {

                                num: NumberInt("2043"),

                                value: "Inception-BN full ImageNet modelInception-v2 model trained on full ImageNet dataset with 14,197,087 images in 21,841 classes.CaffeCV"

                            },

                            {

                                num: NumberInt("2044"),

                                value: "DeepYeast11-layer convolutional neural network trained on two-channel microscopy images of yeast cells carrying fluorescent proteins with different subcellular localizations.[Web] [Paper] [Model]CaffeCV"

                            },

                            {

                                num: NumberInt("2045"),

                                value: "ImageNet pre-trained models with batch normalizationCNN models pre-trained on 1000 ImageNet categories.CaffeCV"

                            },

                            {

                                num: NumberInt("2046"),

                                value: "ResNet-101 for regressing 3D morphable face models (3DMM) from single imagesThis project page  contains a ResNet-101 deep network model for 3DMM regression (3D shape and texture)The download includes both the network itself and the parameters required to map the 3DMM parameters regressed by the network back to 3D shapes(e.g., the basis vectors for the face shape and the average face shape).CaffeCV"

                            },

                            {

                                num: NumberInt("2047"),

                                value: "Cascaded Fully Convolutional Networks for Biomedical Image SegmentationThese models segment liver and liver tumor in CT volumes using the UNET architecture proposed by Ronnerberger et al.CaffeCV"

                            },

                            {

                                num: NumberInt("2048"),

                                value: "Deep Networks for Earth ObservationThese models have been trained to perform semantic segmentation on aerial images, as proposed by Audebert et al.CaffeCV"

                            },

                            {

                                num: NumberInt("2049"),

                                value: "Supervised Learning of Semantics-Preserving Hash via Deep Convolutional Neural NetworksWe present a simple yet effective supervised deep hash approach that constructs binary hash codes from labeled data for large-scale image search.CaffeCV"

                            },

                            {

                                num: NumberInt("2050"),

                                value: "BVLC AlexNetThis model is a replication of the model described in the AlexNet publication.\nCaffe2CV"

                            },

                            {

                                num: NumberInt("2051"),

                                value: "BVLC Reference CaffeNetThis model is the result of following the Caffe ImageNet model training instructions.\nCaffe2CV"

                            },

                            {

                                num: NumberInt("2052"),

                                value: "DetectronDetectron is Facebook AI Research's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.\nCaffe2CV"

                            },

                            {

                                num: NumberInt("2053"),

                                value: "ResNet-50An implementation of ResNet, deep residual learning for image recognition.\nCaffe2CV"

                            },

                            {

                                num: NumberInt("2054"),

                                value: "InfoGANKeras implementation of InfoGAN: Interpretable Representation Learning by Information Maximizing Generative Adversarial NetsKerasGenerative"

                            },

                            {

                                num: NumberInt("2055"),

                                value: "pix2pixKeras implementation of Image-to-Image Translation with Conditional Adversarial Networks by Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, Alexei A.KerasCVNLPGenerative"

                            },

                            {

                                num: NumberInt("2056"),

                                value: "Colorful Image colorizationB&W to color\nKerasCV"

                            },

                            {

                                num: NumberInt("2057"),

                                value: "Auxiliary Classifier GANImplementation of _Auxiliary Classifier Generative Adversarial Network_. Paper: https://arxiv.org/abs/1610.0958\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2058"),

                                value: "Adversarial AutoencoderImplementation of _Adversarial Autoencoder_. Paper: https://arxiv.org/abs/1511.0564\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2059"),

                                value: "Bidirectional GANImplementation of _Bidirectional Generative Adversarial Network_. Paper: https://arxiv.org/abs/1605.0978\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2060"),

                                value: "Boundary-Seeking GANImplementation of _Boundary-Seeking Generative Adversarial Networks_. Paper: https://arxiv.org/abs/1702.0843\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2061"),

                                value: "Conditional GANImplementation of _Semi-Supervised Learning with Context-Conditional Generative Adversarial Networks_. Paper: https://arxiv.org/abs/1611.06430\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2062"),

                                value: "Context-Conditional GANImplementation of _Conditional Generative Adversarial Nets_. Paper:https://arxiv.org/abs/1411.178\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2063"),

                                value: "Coupled GANsImplementation of _Coupled generative adversarial networks_. Paper: https://arxiv.org/abs/1606.0753\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2064"),

                                value: "CycleGANImplementation of _Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks_. Paper: https://arxiv.org/abs/1703.1059\nKerasCVNLPGenerative"

                            },

                            {

                                num: NumberInt("2065"),

                                value: "Deep Convolutional GANImplementation of _Deep Convolutional Generative Adversarial Network_. Paper: https://arxiv.org/abs/1511.0643\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2066"),

                                value: "DiscoGANImplementation of _Learning to Discover Cross-Domain Relations with Generative Adversarial Networks_. Paper: https://arxiv.org/abs/1703.0519\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2067"),

                                value: "DualGANImplementation of _DualGAN: Unsupervised Dual Learning for Image-to-Image Translation_. Paper: https://arxiv.org/abs/1704.0251\nKerasCVNLPGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("2068"),

                                value: "Generative Adversarial NetworkImplementation of _Generative Adversarial Network_ with a MLP generator and discriminator. Paper: https://arxiv.org/abs/1406.266\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2069"),

                                value: "InfoGANImplementation of _InfoGAN: Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets_. Paper: https://arxiv.org/abs/1606.0365\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2070"),

                                value: "LSGANImplementation of _Least Squares Generative Adversarial Networks_. Paper: https://arxiv.org/abs/1611.0407\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2071"),

                                value: "Pix2PixImplementation of _Image-to-Image Translation with Conditional Adversarial Networks_. Paper: https://arxiv.org/abs/1611.0700\nKerasCVNLPGenerative"

                            },

                            {

                                num: NumberInt("2072"),

                                value: "PixelDAImplementation of _Unsupervised Pixel-Level Domain Adaptation with Generative Adversarial Networks_. Paper: https://arxiv.org/abs/1612.0542\nKerasGenerativeUnsupervised"

                            },

                            {

                                num: NumberInt("2073"),

                                value: "Semi-Supervised GANImplementation of _Semi-Supervised Generative Adversarial Network_. Paper: https://arxiv.org/abs/1606.0158\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2074"),

                                value: "Super-Resolution GANImplementation of _Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network_. Paper: https://arxiv.org/abs/1609.0480\nKerasCVGenerative"

                            },

                            {

                                num: NumberInt("2075"),

                                value: "Wasserstein GANImplementation of _Wasserstein GAN_ (with DCGAN generator and discriminator). Paper: https://arxiv.org/abs/1701.0787\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2076"),

                                value: "Wasserstein GAN GPImplementation of _Improved Training of Wasserstein GANs_. Paper: https://arxiv.org/abs/1704.0002\nKerasGenerative"

                            },

                            {

                                num: NumberInt("2077"),

                                value: "chainer_encoder_decoderNeural Encoder-Decoder Machine Translation\nChainerNLP"

                            },

                            {

                                num: NumberInt("2078"),

                                value: "Generative Adversarial Nets (GAN)Generative Adversarial Nets (GAN)\nChainerGenerative"

                            },

                            {

                                num: NumberInt("2079"),

                                value: "HyperFace TensorFlow implementation 68HyperFaceTensorFlowGenerative"

                            },

                            {

                                num: NumberInt("2080"),

                                value: "Adversarial Auto-encoders 181argparsePyTorchGenerative"

                            },

                            {

                                num: NumberInt("2081"),

                                value: "DCGAN(Gluon:star 12MXNetGenerative"

                            },

                            {

                                num: NumberInt("2082"),

                                value: "DCGAN face generation(Gluon:star 8MXNetGenerative"

                            },

                            {

                                num: NumberInt("2083"),

                                value: "Variational Autoencoder with deconvolutionsKerasGenerative"

                            },

                            {

                                num: NumberInt("2084"),

                                value: "t-SNE of image CNN fc7 activationsKerasCV"

                            },

                            {

                                num: NumberInt("2085"),

                                value: "Uni Fold jax 144JAXGenerativeHealth"

                            },

                            {

                                num: NumberInt("2086"),

                                value: "jaxline 111JAXCVGenerative"

                            },

                            {

                                num: NumberInt("2087"),

                                value: "tf2jax 50JAXNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("2088"),

                                value: "transformer_in_transformer_flax 20JAXCV"

                            },

                            {

                                num: NumberInt("2089"),

                                value: "jax influence 17JAXNLP"

                            },

                            {

                                num: NumberInt("2090"),

                                value: "iree jax 16JAXGenerativeGraph"

                            },

                            {

                                num: NumberInt("2091"),

                                value: "jaxb visitor 13JAXNLPGenerativeGraph"

                            },

                            {

                                num: NumberInt("2092"),

                                value: "sb3_jax 12JAXRL"

                            },

                            {

                                num: NumberInt("2093"),

                                value: "swagger spring jaxrs sample app 9JAXNLP"

                            },

                            {

                                num: NumberInt("2094"),

                                value: "jaxb fi 7JAXGenerativeRL"

                            },

                            {

                                num: NumberInt("2095"),

                                value: "RL JAX 5JAXRL"

                            },

                            {

                                num: NumberInt("2096"),

                                value: "python flax id 5JAXGraph"

                            },

                            {

                                num: NumberInt("2097"),

                                value: "CaiT Flax 3JAXCV"

                            },

                            {

                                num: NumberInt("2098"),

                                value: "Simple ViT flax 2JAXCV"

                            },

                            {

                                num: NumberInt("2099"),

                                value: "flax cifar 1JAXCV"

                            },

                            {

                                num: NumberInt("2100"),

                                value: "docker flaxJAXCV"

                            },

                            {

                                num: NumberInt("2101"),

                                value: "CrossViT flaxJAXCV"

                            },

                            {

                                num: NumberInt("2102"),

                                value: "NesT flaxJAXCV"

                            },

                            {

                                num: NumberInt("2103"),

                                value: "pytorch-pretrained-BERT 61900PyTorch version of Google AI's BERT model with script to load Google's pre-trained models\nPyTorch"

                            },

                            {

                                num: NumberInt("2104"),

                                value: "transformers 61900Huggingface Transformers: State-of-the-art Natural Language Processing for TensorFlow 2.0 and PyTorch. huggingface.co/transformers\nPyTorch"

                            },

                            {

                                num: NumberInt("2105"),

                                value: "fastai 22200The fast.ai deep learning library, lessons, and tutorials\nPyTorch"

                            },

                            {

                                num: NumberInt("2106"),

                                value: "pytorch-lightning 18200Rapid research framework for Pytorch. The researcher's version of keras.\nPyTorch"

                            },

                            {

                                num: NumberInt("2107"),

                                value: "Magenta 17600Research project to advance the state of the art in machine intelligence for music and art generation\nTensorFlow"

                            },

                            {

                                num: NumberInt("2108"),

                                value: "pytorch_geometric 14500Geometric Deep Learning Extension Library for PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2109"),

                                value: "**InsightFace** 11700By Jia Guo and Jiankang DengMXNet"

                            },

                            {

                                num: NumberInt("2110"),

                                value: "Kubeflow 11500Kubeflow is a Cloud Native platform for machine learning based on Googles internal machine learning pipelines.TensorFlow"

                            },

                            {

                                num: NumberInt("2111"),

                                value: "Kaldi 11500To build.md the toolkit: see ./INSTALL.Caffe"

                            },

                            {

                                num: NumberInt("2112"),

                                value: "flair 11500A very simple framework for state-of-the-art Natural Language Processing (NLP)\nPyTorch"

                            },

                            {

                                num: NumberInt("2113"),

                                value: "pytorch vision 11500Datasets, Transforms and Models specific to Computer Vision.\nPyTorch"

                            },

                            {

                                num: NumberInt("2114"),

                                value: "AllenNLP 11000An open-source NLP research library, built on PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2115"),

                                value: "dgl 9400Python package built to ease deep learning on graph, on top of existing DL frameworks. http://dgl.ai. \nPyTorch"

                            },

                            {

                                num: NumberInt("2116"),

                                value: "yolov3 8600YOLOv3: Training and inference in PyTorch pjreddie.com/darknet/yolo\nPyTorch"

                            },

                            {

                                num: NumberInt("2117"),

                                value: "pretrained-models.pytorch 8500The goal of this repo is to help to reproduce research papers results.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2118"),

                                value: "Faster R-CNN 7700The official Faster R-CNN code (written in MATLAB) is available here.Caffe"

                            },

                            {

                                num: NumberInt("2119"),

                                value: "pyro 7400Deep universal probabilistic programming with Python and PyTorch http://pyro.ai\nPyTorch"

                            },

                            {

                                num: NumberInt("2120"),

                                value: "Keras YOLOv3 7000A Keras implementation of YOLOv3 (Tensorflow backend).\nKeras"

                            },

                            {

                                num: NumberInt("2121"),

                                value: "EfficientNet PyTorch 6900It contains an op-for-op PyTorch reimplementation of EfficientNet, along with pre-trained models and examples.\nPyTorch"

                            },

                            {

                                num: NumberInt("2122"),

                                value: "Collection of Generative Models with PyTorch 6800Collection of generative models, e.g.PyTorch"

                            },

                            {

                                num: NumberInt("2123"),

                                value: "attention-is-all-you-need-pytorch 6500A PyTorch implementation of the Transformer model in \"Attention is All You Need\".https://github.com/thnkim/OpenFacePytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2124"),

                                value: "Striving for Simplicity 6500The All Convolutional Net\nPyTorch"

                            },

                            {

                                num: NumberInt("2125"),

                                value: "DensePose 6300Dense Human Pose Estimation In The WildCaffe2"

                            },

                            {

                                num: NumberInt("2126"),

                                value: "pytext 6300A natural language modeling framework based on PyTorch fb.me/pytextdocs\nPyTorch"

                            },

                            {

                                num: NumberInt("2127"),

                                value: "kornia 6300Differentiable computer vision library.\nPyTorch"

                            },

                            {

                                num: NumberInt("2128"),

                                value: "apex 6300An Experimental PyTorch Extension(will be deprecated at a later point)\nPyTorch"

                            },

                            {

                                num: NumberInt("2129"),

                                value: "torchgeometry 6300TGM: PyTorch Geometry\nPyTorch"

                            },

                            {

                                num: NumberInt("2130"),

                                value: "pulse 6300Self-Supervised Photo Upsampling via Latent Space Exploration of Generative Models\nPyTorch"

                            },

                            {

                                num: NumberInt("2131"),

                                value: "AlphaPose 6100Alpha Pose is an accurate multi-person pose estimator, which is the first open-source system that achieves 70+ mAP (72.3 mAP) on COCO dataset and 80+ mAP (82.1 mAP) on MPII dataset.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2132"),

                                value: "Deep Residual Networks 5900By Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun.Caffe"

                            },

                            {

                                num: NumberInt("2133"),

                                value: "pytorch3d 5900PyTorch3D is FAIR's library of reusable components for deep learning with 3D data pytorch3d.org\nPyTorch"

                            },

                            {

                                num: NumberInt("2134"),

                                value: "face-alignment 5700Pytorch implementation of the paper \"How far are we from solving the 2D & 3D Face Alignment problem? (and a dataset of 230,000 3D facial landmarks)\", ICCV 2017\nPyTorch"

                            },

                            {

                                num: NumberInt("2135"),

                                value: "Neural Style 5500An implementation of neural style\nTensorFlow"

                            },

                            {

                                num: NumberInt("2136"),

                                value: "Sentence Classification with CNN 5500TensorFlow implementation of \"Convolutional Neural Networks for Sentence Classification\" with a blog post\nTensorFlow"

                            },

                            {

                                num: NumberInt("2137"),

                                value: "pythia 4900A software suite for Visual Question Answering\nPyTorch"

                            },

                            {

                                num: NumberInt("2138"),

                                value: "BERT-PyTorch 4900Pytorch implementation of Google AI's 2018 BERT, with simple annotation\nPyTorch"

                            },

                            {

                                num: NumberInt("2139"),

                                value: "Realtime Multi-Person Pose Estimation 4800We present a bottom-up approach for realtime multi-person pose estimation, without using any person detector.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2140"),

                                value: "grad-cam 4800Pytorch implementation of Grad-CAM\nPyTorch"

                            },

                            {

                                num: NumberInt("2141"),

                                value: "Single Shot MultiBox Detector 4600A PyTorch Implementation of Single Shot MultiBox Detector.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2142"),

                                value: "CIFAR-10 on Pytorch with VGG, ResNet and DenseNet 4600I'm playing with PyTorch on the CIFAR10 dataset.PyTorch"

                            },

                            {

                                num: NumberInt("2143"),

                                value: "denseNet 4500This repository contains the code for DenseNet introduced in the following paper Caffe"

                            },

                            {

                                num: NumberInt("2144"),

                                value: "inferno-sklearn 4500A scikit-learn compatible neural network library that wraps pytorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2145"),

                                value: "skorch 4500A scikit-learn compatible neural network library that wraps pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2146"),

                                value: "pytorch-metric-learning 4400The easiest way to use metric learning in your application. Modular, flexible, and extensible. Written in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2147"),

                                value: "mesh transformer jax 4310Model parallel transformers in JAX and HaikuJAX"

                            },

                            {

                                num: NumberInt("2148"),

                                value: "pygcn 4200Graph Convolutional Networks in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2149"),

                                value: "Reading Wikipedia to Answer Open-Domain Questions 4200This is a PyTorch implementation of the DrQA system described in the ACL 2017 paper Reading Wikipedia to Answer Open-Domain Questions.PyTorch"

                            },

                            {

                                num: NumberInt("2150"),

                                value: "NeMo 4200Neural Modules: a toolkit for conversational AI nvidia.github.io/NeMo\nPyTorch"

                            },

                            {

                                num: NumberInt("2151"),

                                value: "torchdiffeq 4100Differentiable ODE solvers with full GPU support and O(1)-memory backpropagation.\nPyTorch"

                            },

                            {

                                num: NumberInt("2152"),

                                value: "ignite 4000Ignite is a high-level library to help with training neural networks in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2153"),

                                value: "CapsNet-Tensorflow 3800A Tensorflow implementation of CapsNet based on Geoffrey Hinton's paper, Dynamic Routing Between Capsules.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2154"),

                                value: "**Faster RCNN+Deeplab+R-FCN+Deformable-ConvNets+FPN+SoftNMS** 3700The major contributors of this repository include Yuwen Xiong, Haozhi Qi, Guodong Zhang, Yi Li, Jifeng Dai, Bin Xiao, Han Hu and  Yichen Wei.MXNet"

                            },

                            {

                                num: NumberInt("2155"),

                                value: "simple-faster-rcnn-pytorch 3600A simplified implemention of Faster R-CNN with competitive performance.\nPyTorch"

                            },

                            {

                                num: NumberInt("2156"),

                                value: "Tensorflow-Project-Template 3500A simple and well-designed template for your tensorflow project.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2157"),

                                value: "tacotron2 3500Tacotron 2 - PyTorch implementation with faster-than-realtime inference.\nPyTorch"

                            },

                            {

                                num: NumberInt("2158"),

                                value: "pytorch-summary 3500Model summary in PyTorch similar to model.summary() in Keras\nPyTorch"

                            },

                            {

                                num: NumberInt("2159"),

                                value: "pytorch-OpCounter 3400Count the FLOPs of your PyTorch model.\nPyTorch"

                            },

                            {

                                num: NumberInt("2160"),

                                value: "Minigo 3300A minimalist Go engine modeled after AlphaGo Zero, built on MuGo. This is NOT an official version of AlphaGo.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2161"),

                                value: "3D-ResNets-PyTorch 33003D ResNets for Action Recognition.\nPyTorch"

                            },

                            {

                                num: NumberInt("2162"),

                                value: "ELF 3300ELF: a platform for game research.\nPyTorch"

                            },

                            {

                                num: NumberInt("2163"),

                                value: "Person-reID_pytorch 3200PyTorch for Person re-ID. \nPyTorch"

                            },

                            {

                                num: NumberInt("2164"),

                                value: "TCN 3200Sequence modeling benchmarks and temporal convolutional networks locuslab/TCN\nPyTorch"

                            },

                            {

                                num: NumberInt("2165"),

                                value: "3DDFA 3200The pytorch improved re-implementation of TPAMI 2017 paper: Face Alignment in Full Pose Range: A 3D Total Solution.\nPyTorch"

                            },

                            {

                                num: NumberInt("2166"),

                                value: "Fast R-CNN 3100Created by Ross Girshick at Microsoft Research, Redmond.Caffe"

                            },

                            {

                                num: NumberInt("2167"),

                                value: "Transformer-XL 3100Transformer-XL: Attentive Language Models Beyond a Fixed-Length Contexthttps://github.com/kimiyoung/transformer-xl\nPyTorch"

                            },

                            {

                                num: NumberInt("2168"),

                                value: "Neural Style 3000This is a TensorFlow implementation of several techniques described in the papers: TensorFlow"

                            },

                            {

                                num: NumberInt("2169"),

                                value: "pytorch text 3000Torch text related contents.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2170"),

                                value: "LASER 3000Language-Agnostic SEntence Representations\nPyTorch"

                            },

                            {

                                num: NumberInt("2171"),

                                value: "kaolin 3000PyTorch library aimed at accelerating 3D deep learning research\nPyTorch"

                            },

                            {

                                num: NumberInt("2172"),

                                value: "AdaBound 2900An optimizer that trains as fast as Adam and as good as SGD.a\nPyTorch"

                            },

                            {

                                num: NumberInt("2173"),

                                value: "Catalyst 2900High-level utils for PyTorch DL & RL research. It was developed with a focus on reproducibility, fast experimentation and code/ideas reusing. Being able to research/develop something new, rather than write another regular train loop.\nPyTorch"

                            },

                            {

                                num: NumberInt("2174"),

                                value: "Detectron.pytorch 2800A pytorch implementation of Detectron. Both training from scratch and inferring directly from pretrained Detectron weights are available.\nPyTorch"

                            },

                            {

                                num: NumberInt("2175"),

                                value: "facenet-pytorch 2800Pretrained Pytorch face detection and recognition models ported from davidsandberg/facenet.\nPyTorch"

                            },

                            {

                                num: NumberInt("2176"),

                                value: "DeepJazz 2800Uses Keras & Theano, two deep learning libraries, to generate jazz music. \nKeras"

                            },

                            {

                                num: NumberInt("2177"),

                                value: "gpytorch 2700GPyTorch is a Gaussian Process library, implemented using PyTorch. It is designed for creating flexible and modular Gaussian Process models with ease, so that you don't have to be an expert to use GPs.\nPyTorch"

                            },

                            {

                                num: NumberInt("2178"),

                                value: "spotlight 2700Deep recommender models using PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2179"),

                                value: "gpytorch 2700A highly efficient and modular implementation of Gaussian Processes in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2180"),

                                value: "FlowNet 2.0 2600FlowNet 2.0: Evolution of Optical Flow Estimation with Deep Networks\nPyTorch"

                            },

                            {

                                num: NumberInt("2181"),

                                value: "XLM 2600PyTorch original implementation of Cross-lingual Language Model Pretraining.\nPyTorch"

                            },

                            {

                                num: NumberInt("2182"),

                                value: "ENAS-pytorch 2500PyTorch implementation of \"Efficient Neural Architecture Search via Parameters Sharing\". \nPyTorch"

                            },

                            {

                                num: NumberInt("2183"),

                                value: "neuralcoref 2500State-of-the-art coreference resolution based on neural nets and spaCy huggingface.co/coref\nPyTorch"

                            },

                            {

                                num: NumberInt("2184"),

                                value: "pytorch-optimizer 2400Collections of modern optimization algorithms for PyTorch, includes: AccSGD, AdaBound, AdaMod, DiffGrad, Lamb, RAdam, RAdam, Yogi.\nPyTorch"

                            },

                            {

                                num: NumberInt("2185"),

                                value: "CapsNet-Keras 2400A Keras implementation of CapsNet in the paper: Sara Sabour, Nicholas Frosst, Geoffrey E Hinton. Dynamic Routing Between Capsules. NIPS 2017\nKeras"

                            },

                            {

                                num: NumberInt("2186"),

                                value: "pytorch-playground 2300Base pretrained models and datasets in pytorch (MNIST, SVHN, CIFAR10, CIFAR100, STL10, AlexNet, VGG16, VGG19, ResNet, Inception, SqueezeNet)**.\nPyTorch"

                            },

                            {

                                num: NumberInt("2187"),

                                value: "pytorch-generative-model-collections 2300Collection of generative models in Pytorch version.\nPyTorch"

                            },

                            {

                                num: NumberInt("2188"),

                                value: "botorch 2300Bayesian optimization in PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2189"),

                                value: "InferSent 2200Sentence embeddings (InferSent) and training code for NLI.\nPyTorch"

                            },

                            {

                                num: NumberInt("2190"),

                                value: "TorchCV 2200A PyTorch-Based Framework for Deep Learning in Computer Vision. \nPyTorch"

                            },

                            {

                                num: NumberInt("2191"),

                                value: "pytorchviz 2200A small package to create visualizations of PyTorch execution graphs. \nPyTorch"

                            },

                            {

                                num: NumberInt("2192"),

                                value: "minimalRL 2153Implementations of basic RL algorithms with minimal lines of codes! (pytorch based)PyTorch"

                            },

                            {

                                num: NumberInt("2193"),

                                value: "SqueezeNet 2100The Caffe-compatible files that you are probably looking for:Caffe"

                            },

                            {

                                num: NumberInt("2194"),

                                value: "PyTorch-NLP 2100Text utilities and datasets for PyTorch pytorchnlp.readthedocs.io\nPyTorch"

                            },

                            {

                                num: NumberInt("2195"),

                                value: "Neural Style Transfer 2100Implementation of Neural Style Transfer from the paper A Neural Algorithm of Artistic Style in Keras 2.0+Keras"

                            },

                            {

                                num: NumberInt("2196"),

                                value: "loss-landscape 2000Loss-landscape Code for visualizing the loss landscape of neural nets.\nPyTorch"

                            },

                            {

                                num: NumberInt("2197"),

                                value: "MMAction2 2000MMAction2 is OpenMMLab's next generation action understanding toolbox and benchmark, a part of the OpenMMLab project.\nPyTorch"

                            },

                            {

                                num: NumberInt("2198"),

                                value: "Averaged Stochastic Gradient Descent with Weight Dropped LSTM 1900This repository contains the code used for two Salesforce Research papers:PyTorch"

                            },

                            {

                                num: NumberInt("2199"),

                                value: "MMPose 1900MMPose is a pose estimation toolbox and benchmark, a part of the OpenMMLab project.\nPyTorch"

                            },

                            {

                                num: NumberInt("2200"),

                                value: "PyTorch-Encoding 1900PyTorch Deep Texture Encoding Network http://hangzh.com/PyTorch-Encoding\nPyTorch"

                            },

                            {

                                num: NumberInt("2201"),

                                value: "pytorch-faster-rcnn 1800A pytorch implementation of faster RCNN detection framework based on Xinlei Chen's tf-faster-rcnn.\nPyTorch"

                            },

                            {

                                num: NumberInt("2202"),

                                value: "Data Augmentation and Sampling for Pytorch 1800This package provides a few things:PyTorch"

                            },

                            {

                                num: NumberInt("2203"),

                                value: "Ax 1800Adaptive Experimentation Platform\nPyTorch"

                            },

                            {

                                num: NumberInt("2204"),

                                value: "learn2learn 1800PyTorch Meta-learning Framework for Researchers http://learn2learn.net\nPyTorch"

                            },

                            {

                                num: NumberInt("2205"),

                                value: "Mask R-CNN 1800An MXNet implementation of Mask R-CNN.MXNet"

                            },

                            {

                                num: NumberInt("2206"),

                                value: "pytorch - fid 1700A Port of Fréchet Inception Distance (FID score) to PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2207"),

                                value: "reformer-pytorch 1700Reformer, the efficient Transformer, in Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2208"),

                                value: "pytorch-fcn 1600PyTorch implementation of Fully Convolutional Networks.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2209"),

                                value: "SparseConvNet 1600Submanifold sparse convolutional networks.\nPyTorch"

                            },

                            {

                                num: NumberInt("2210"),

                                value: "lightly 1600Lightly is a computer vision framework for self-supervised learning.PyTorch"

                            },

                            {

                                num: NumberInt("2211"),

                                value: "MinkowskiEngine 1600Minkowski Engine is an auto-diff library for generalized sparse convolutions and high-dimensional sparse tensors.\nPyTorch"

                            },

                            {

                                num: NumberInt("2212"),

                                value: "PyTorch/XLA 1600PyTorch/XLA is a Python package that uses the XLA deep learning compiler to connect the PyTorch deep learning framework and Cloud TPUs.\nPyTorch"

                            },

                            {

                                num: NumberInt("2213"),

                                value: "FCIS 1600The major contributors of this repository include Haozhi Qi, Yi Li, Guodong Zhang, Haochen Zhang, Jifeng Dai, and Yichen Wei.MXNet"

                            },

                            {

                                num: NumberInt("2214"),

                                value: "style-transfer 1500This repository contains a pyCaffe-based implementation of \"A Neural Algorithm of Artistic Style\" by L.Caffe"

                            },

                            {

                                num: NumberInt("2215"),

                                value: "YOLO2 1500YOLOv2 in PyTorch.   \nPyTorch"

                            },

                            {

                                num: NumberInt("2216"),

                                value: "poincare-embeddings 1500PyTorch implementation of the NIPS-17 paper \"Poincaré Embeddings for Learning Hierarchical Representations\". \nPyTorch"

                            },

                            {

                                num: NumberInt("2217"),

                                value: "Pytorch Geometric Temporal 1500A temporal extension library for PyTorch Geometric \nPyTorch"

                            },

                            {

                                num: NumberInt("2218"),

                                value: "ChainerCV 1500Versatile set of tools for Deep Learning based Computer Vision\nChainer"

                            },

                            {

                                num: NumberInt("2219"),

                                value: "end-to-end-negotiator 1400Deal or No Deal? End-to-End Learning for Negotiation Dialogues\nPyTorch"

                            },

                            {

                                num: NumberInt("2220"),

                                value: "efficient_densenet_pytorch 1400A memory-efficient implementation of DenseNets\nPyTorch"

                            },

                            {

                                num: NumberInt("2221"),

                                value: "pytorch-openai-transformer-lm 1400This is a PyTorch implementation of the TensorFlow code provided with OpenAI's paper \"Improving Language Understanding by Generative Pre-Training\" by Alec Radford, Karthik Narasimhan, Tim Salimans and Ilya Sutskever.\nPyTorch"

                            },

                            {

                                num: NumberInt("2222"),

                                value: "jiant 1400The jiant sentence representation learning toolkit. \nPyTorch"

                            },

                            {

                                num: NumberInt("2223"),

                                value: "QNNPACK 1400Quantized Neural Network PACKage - mobile-optimized implementation of quantized neural network operators.\nPyTorch"

                            },

                            {

                                num: NumberInt("2224"),

                                value: "higher 1400Higher is a pytorch library allowing users to obtain higher order gradients over losses spanning training loops rather than individual training steps.\nPyTorch"

                            },

                            {

                                num: NumberInt("2225"),

                                value: "CRF-RNN 1300 http://crfasrnn.torr.vision Caffe"

                            },

                            {

                                num: NumberInt("2226"),

                                value: "attention-transfer 1300Attention transfer in pytorch, read the paper here.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2227"),

                                value: "cvxpylayers 1300Cvxpylayers is a Python library for constructing differentiable convex optimization layers in PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2228"),

                                value: "RepDistiller 1300Contrastive Representation Distillation (CRD), and benchmark of recent knowledge distillation methods\nPyTorch"

                            },

                            {

                                num: NumberInt("2229"),

                                value: "Deep Feature Flow 1300The major contributors of this repository include Xizhou Zhu, Yuwen Xiong, Jifeng Dai, Lu Yuan, and  Yichen Wei.MXNet"

                            },

                            {

                                num: NumberInt("2230"),

                                value: "Pretty Tensor 1200Pretty Tensor provides a high level builder API\nTensorFlow"

                            },

                            {

                                num: NumberInt("2231"),

                                value: "Center Loss 1200Caffe is a deep learning framework made with expression, speed, and modularity in mind.Caffe"

                            },

                            {

                                num: NumberInt("2232"),

                                value: "Realtime_Multi-Person_Pose_Estimation 1200This is a pytorch version of Realtime_Multi-Person_Pose_Estimation, origin code is here .\nPyTorch"

                            },

                            {

                                num: NumberInt("2233"),

                                value: "pytorch-qrnn 1200PyTorch implementation of the Quasi-Recurrent Neural Network - up to 16 times faster than NVIDIA's cuDNN LSTM\nPyTorch"

                            },

                            {

                                num: NumberInt("2234"),

                                value: "deep-head-pose 1200Deep Learning Head Pose Estimation using PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2235"),

                                value: "inplace_abn 1200In-Place Activated BatchNorm for Memory-Optimized Training of DNNs\nPyTorch"

                            },

                            {

                                num: NumberInt("2236"),

                                value: "torchstat 1200Model analyzer in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2237"),

                                value: "redner 1200A differentiable Monte Carlo path tracer\nPyTorch"

                            },

                            {

                                num: NumberInt("2238"),

                                value: "pytorch-toolbelt 1200PyTorch extensions for fast R&D prototyping and Kaggle farming\nPyTorch"

                            },

                            {

                                num: NumberInt("2239"),

                                value: "NVlabs/DG-Net 1200A PyTorch implementation of \"Joint Discriminative and Generative Learning for Person Re-identification\" (CVPR19 Oral). \nPyTorch"

                            },

                            {

                                num: NumberInt("2240"),

                                value: "Human Pose Estimation with TensorFlow 1100Here you can find the implementation of the Human Body Pose Estimation algorithm, presented in the ArtTrack and DeeperCut papers.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2241"),

                                value: "CapsGNN 1100Capsule Graph Neural Network. (ICLR 2019).\nPyTorch"

                            },

                            {

                                num: NumberInt("2242"),

                                value: "Dilated ResNet combination with Dilated Convolutions 1100This code provides various models combining dilated convolutions with residual networks.PyTorch"

                            },

                            {

                                num: NumberInt("2243"),

                                value: "bindsnet 1100A Python package used for simulating spiking neural networks (SNNs) on CPUs or GPUs using PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2244"),

                                value: "hub 1100Pytorch Hub is a pre-trained model repository designed to facilitate research reproducibility.\nPyTorch"

                            },

                            {

                                num: NumberInt("2245"),

                                value: "CrypTen 1100CrypTen is a Privacy Preserving Machine Learning framework written using PyTorch that allows researchers and developers to train models using encrypted data. CrypTen currently supports Secure multi-party computation as its encryption mechanism.\nPyTorch"

                            },

                            {

                                num: NumberInt("2246"),

                                value: "**sockeye** 1100This package contains the Sockeye project,MXNet"

                            },

                            {

                                num: NumberInt("2247"),

                                value: "Single Shot MultiBox Detector 1100For more details, please refer to arXiv paper.Keras"

                            },

                            {

                                num: NumberInt("2248"),

                                value: "PyTorchText 10551st Place Solution for Zhihu Machine Learning Challenge . Implementation of various text-classification models.()PyTorch"

                            },

                            {

                                num: NumberInt("2249"),

                                value: "Neural Turing Machine in TensorFlow 1000Implementation of Neural Turing Machine\nTensorFlow"

                            },

                            {

                                num: NumberInt("2250"),

                                value: "TensorNets 1000High level network definitions with pre-trained weights in TensorFlow (tested with >= 1.1.0).TensorFlow"

                            },

                            {

                                num: NumberInt("2251"),

                                value: "pytorch-pose 1000A PyTorch toolkit for 2D Human Pose Estimation.\nPyTorch"

                            },

                            {

                                num: NumberInt("2252"),

                                value: "BERT-NER 1000Pytorch-Named-Entity-Recognition-with-BERT. \nPyTorch"

                            },

                            {

                                num: NumberInt("2253"),

                                value: "pytorch-struct 1000A library of vectorized implementations of core structured prediction algorithms (HMM, Dep Trees, CKY, ..,)\nPyTorch"

                            },

                            {

                                num: NumberInt("2254"),

                                value: "pytorch-retinanet 987RetinaNet in PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2255"),

                                value: "tsn-pytorch 985Temporal Segment Networks (TSN) in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2256"),

                                value: "Video Frame Interpolation via Adaptive Separable Convolution 975News: Check our new CVPR 2018 paper on a faster and higher-quality frame interpolation method.PyTorch"

                            },

                            {

                                num: NumberInt("2257"),

                                value: "Mask-RCNN 963A PyTorch implementation of the architecture of Mask RCNN, serves as an introduction to working with PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2258"),

                                value: "Cnn-text classification 930This is the implementation of Kim's Convolutional Neural Networks for Sentence Classification paper in PyTorch.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2259"),

                                value: "pytorch-deform-conv 880PyTorch implementation of Deformable Convolution.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2260"),

                                value: "SfmLearner-Pytorch  858Pytorch version of SfmLearner from Tinghui Zhou et al.\nPyTorch"

                            },

                            {

                                num: NumberInt("2261"),

                                value: "PyTorch-Style-Transfer 849PyTorch Implementation of Multi-style Generative Network for Real-time Transfer\nPyTorch"

                            },

                            {

                                num: NumberInt("2262"),

                                value: "torchMoji 839A pyTorch implementation of the DeepMoji model: state-of-the-art deep learning model for analyzing sentiment, emotion, sarcasm etc.\nPyTorch"

                            },

                            {

                                num: NumberInt("2263"),

                                value: "probtorch 836Probabilistic Torch is library for deep generative models that extends PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2264"),

                                value: "LM-LSTM-CRF 825Empower Sequence Labeling with Task-Aware Language Model http://arxiv.org/abs/1709.04109\nPyTorch"

                            },

                            {

                                num: NumberInt("2265"),

                                value: "voicefilter 819Unofficial PyTorch implementation of Google AI's VoiceFilter system http://swpark.me/voicefilter\nPyTorch"

                            },

                            {

                                num: NumberInt("2266"),

                                value: "pytorch-pruning 815PyTorch Implementation of [1611.06440] Pruning Convolutional Neural Networks for Resource Efficient Inference\nPyTorch"

                            },

                            {

                                num: NumberInt("2267"),

                                value: "pytorch-wavenet 802An implementation of WaveNet with fast generation\nPyTorch"

                            },

                            {

                                num: NumberInt("2268"),

                                value: "yusuketomoto/chainer-fast-neuralstyle 794Perceptual Losses for Real-Time Style Transfer and Super-Resolution\nChainer"

                            },

                            {

                                num: NumberInt("2269"),

                                value: "relational-networks 793Pytorch implementation of \"A simple neural network module for relational reasoning\" (Relational Networks) https://arxiv.org/pdf/1706.01427.pdf\nPyTorch"

                            },

                            {

                                num: NumberInt("2270"),

                                value: "pytorch2keras 793Convert PyTorch dynamic graph to Keras model.\nPyTorch"

                            },

                            {

                                num: NumberInt("2271"),

                                value: "webdataset 790WebDataset is a PyTorch Dataset (IterableDataset) implementation providing efficient access to datasets stored in POSIX tar archives.\nPyTorch"

                            },

                            {

                                num: NumberInt("2272"),

                                value: "Prototypical-Networks-for-Few-shot-Learning-PyTorch 784Implementation of Prototypical Networks for Few Shot Learning (arxiv.org/abs/1703.05175) in Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2273"),

                                value: "CNN visualization using Tensorflow 775Tensorflow implementation of \"Visualizing and Understanding Convolutional Networks\"\nTensorFlow"

                            },

                            {

                                num: NumberInt("2274"),

                                value: "graphsage-simple 774Simple reference implementation of GraphSAGE.\nPyTorch"

                            },

                            {

                                num: NumberInt("2275"),

                                value: "medicaltorch 773A medical imaging framework for Pytorch http://medicaltorch.readthedocs.io\nPyTorch"

                            },

                            {

                                num: NumberInt("2276"),

                                value: "pytorch center loss 765Pytorch implementation of Center LossPyTorch"

                            },

                            {

                                num: NumberInt("2277"),

                                value: "Keras Realtime Multi-Person Pose Estimation 764This is a Keras version of Realtime Multi-Person Pose Estimation project.\nKeras"

                            },

                            {

                                num: NumberInt("2278"),

                                value: "Inferring and Executing Programs for Visual Reasoning 763This is the code for the paperPyTorch"

                            },

                            {

                                num: NumberInt("2279"),

                                value: "extension-cpp 763C++ extensions in PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2280"),

                                value: "FaceBoxes.PyTorch 761A PyTorch Implementation of FaceBoxes.\nPyTorch"

                            },

                            {

                                num: NumberInt("2281"),

                                value: "densenet 750This is a PyTorch implementation of the DenseNet-BC architecture as described in the paper Densely Connected Convolutional Networks by G. Huang, Z. Liu, K. Weinberger, and L. van der Maaten. This implementation gets a CIFAR-10+ error rate of 4.77 with a 100-layer DenseNet-BC with a growth rate of 12. Their official implementation and links to many other third-party implementations are available in the liuzhuang13/DenseNet repo on GitHub.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2282"),

                                value: "3D Convolutional Neural Networks in TensorFlow 740Implementation of \"3D Convolutional Neural Networks for Speaker Verification application\" in TensorFlow by Torfi et al.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2283"),

                                value: "Character-Aware Neural Language Models 733TensorFlow implementation of Character-Aware Neural Language Models\nTensorFlow"

                            },

                            {

                                num: NumberInt("2284"),

                                value: "translate 732Translate - a PyTorch Language Library.\nPyTorch"

                            },

                            {

                                num: NumberInt("2285"),

                                value: "flownet 727Pytorch implementation of FlowNet by Dosovitskiy et al.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2286"),

                                value: "gpt-2-Pytorch 720Simple Text-Generator with OpenAI gpt-2 Pytorch Implementation\nPyTorch"

                            },

                            {

                                num: NumberInt("2287"),

                                value: "texar-pytorch 716Toolkit for Machine Learning and Text Generation, in PyTorch texar.io\nPyTorch"

                            },

                            {

                                num: NumberInt("2288"),

                                value: "breast_cancer_classifier 715Deep Neural Networks Improve Radiologists' Performance in Breast Cancer Screening arxiv.org/abs/1903.08297\nPyTorch"

                            },

                            {

                                num: NumberInt("2289"),

                                value: "bottom-up-attention-vqa 714Vqa, bottom-up-attention, pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2290"),

                                value: "Convolutional LSTM Network 711A multi-layer convolution LSTM  modulePyTorch"

                            },

                            {

                                num: NumberInt("2291"),

                                value: "Densely Connected Convolutional Networks 711DenseNet implementation of the paper Densely Connected Convolutional Networks in KerasKeras"

                            },

                            {

                                num: NumberInt("2292"),

                                value: "NCRF 709Cancer metastasis detection with neural conditional random field (NCRF)\nPyTorch"

                            },

                            {

                                num: NumberInt("2293"),

                                value: "MTCNN (original detector) 700This is a python/mxnet implementation of Zhang's work .MXNet"

                            },

                            {

                                num: NumberInt("2294"),

                                value: "Flow-Guided Feature Aggregation 694This repository is implemented by Yuqing Zhu, Shuhao Fu, and Xizhou Zhu, when they are interns at MSRA.MXNet"

                            },

                            {

                                num: NumberInt("2295"),

                                value: "CondenseNet 692CondenseNet: An Efficient DenseNet using Learned Group Convolutions.\nPyTorch"

                            },

                            {

                                num: NumberInt("2296"),

                                value: "neural-style-pt 687A PyTorch implementation of Justin Johnson's Neural-style.\nPyTorch"

                            },

                            {

                                num: NumberInt("2297"),

                                value: "pytorch-cnn-finetune 687Fine-tune pretrained Convolutional Neural Networks with PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2298"),

                                value: "Generative Handwriting Demo using TensorFlow 680An attempt to implement the random handwriting generation portion of Alex Graves' paper\nTensorFlow"

                            },

                            {

                                num: NumberInt("2299"),

                                value: "sphereface_pytorch 671A PyTorch Implementation of SphereFace.\nPyTorch"

                            },

                            {

                                num: NumberInt("2300"),

                                value: "former 667Simple transformer implementation from scratch in pytorch.PyTorch"

                            },

                            {

                                num: NumberInt("2301"),

                                value: "federated learning 665A PyTorch Implementation of Federated Learning http://doi.org/10.5281/zenodo.4321561PyTorch"

                            },

                            {

                                num: NumberInt("2302"),

                                value: "FlashTorch 664Visualization toolkit for neural networks in PyTorch!\nPyTorch"

                            },

                            {

                                num: NumberInt("2303"),

                                value: "vqa.pytorch 657Visual Question Answering in Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2304"),

                                value: "PVANet 655by Sanghoon Hong, Byungseok Roh, Kye-hyeon Kim, Yeongjae Cheon, Minje Park (Intel Imaging and Camera Technology)Caffe"

                            },

                            {

                                num: NumberInt("2305"),

                                value: "torchgpipe 653A GPipe implementation in PyTorch torchgpipe.readthedocs.io\nPyTorch"

                            },

                            {

                                num: NumberInt("2306"),

                                value: "ClusterGCN 646A PyTorch implementation of \"Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks\" (KDD 2019).\nPyTorch"

                            },

                            {

                                num: NumberInt("2307"),

                                value: "illustration2vec 642Illustration2vec\nChainer"

                            },

                            {

                                num: NumberInt("2308"),

                                value: "torchbeast 635A PyTorch Platform for Distributed RL\nPyTorch"

                            },

                            {

                                num: NumberInt("2309"),

                                value: "torchbearer 628Torchbearer: A model training library for researchers using PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2310"),

                                value: "Random-Erasing 624This code has the source code for the paper \"Random Erasing Data Augmentation\".\nPyTorch"

                            },

                            {

                                num: NumberInt("2311"),

                                value: "euclidesdb 624A multi-model machine learning feature embedding database http://euclidesdb.readthedocs.io \nPyTorch"

                            },

                            {

                                num: NumberInt("2312"),

                                value: "pytorch-capsule 619Pytorch implementation of Hinton's Dynamic Routing Between Capsules.\nPyTorch"

                            },

                            {

                                num: NumberInt("2313"),

                                value: "Deep-Compression-AlexNet 602This is a demo of Deep Compression compressing AlexNet from 233MB to 8.9MB without loss of accuracy.Caffe"

                            },

                            {

                                num: NumberInt("2314"),

                                value: "pytorch-deeplab-resnet 600Pytorch-deeplab-resnet-model.\nPyTorch"

                            },

                            {

                                num: NumberInt("2315"),

                                value: "MTCNN 596this repository is the implementation of MTCNN in MXnetMXNet"

                            },

                            {

                                num: NumberInt("2316"),

                                value: "AlexNet, VGG 16, VGG 19, and class heatmap visualization 591NOTE: This repo is outdated and no longer updated.Keras"

                            },

                            {

                                num: NumberInt("2317"),

                                value: "torchprof 585A minimal dependency library for layer-by-layer profiling of Pytorch models.\nPyTorch"

                            },

                            {

                                num: NumberInt("2318"),

                                value: "DUC 581by Panqu Wang, Pengfei Chen, Ye Yuan, Ding Liu, Zehua Huang, Xiaodi Hou, and Garrison Cottrell.MXNet"

                            },

                            {

                                num: NumberInt("2319"),

                                value: "DiracNets 580Training Very Deep Neural Networks Without Skip-Connections\nPyTorch"

                            },

                            {

                                num: NumberInt("2320"),

                                value: "Wide ResNet model in PyTorch 577Model definitions and pretrained weights for PyTorch and TensorflowPyTorch"

                            },

                            {

                                num: NumberInt("2321"),

                                value: "pytorch-pose-hg-3d 568PyTorch implementation for 3D human pose estimation\nPyTorch"

                            },

                            {

                                num: NumberInt("2322"),

                                value: "geoopt 551Riemannian Adaptive Optimization Methods with pytorch optim\nPyTorch"

                            },

                            {

                                num: NumberInt("2323"),

                                value: "Spatial Transformer Networks 544Ported from https://github.com/qassemoquab/stnbhwd according to pytorch tutorial.PyTorch"

                            },

                            {

                                num: NumberInt("2324"),

                                value: "MXNet Face 544Using mxnet for face-related algorithm, here now only provide :MXNet"

                            },

                            {

                                num: NumberInt("2325"),

                                value: "pytorch2caffe 543Convert PyTorch model to Caffemodel\nPyTorch"

                            },

                            {

                                num: NumberInt("2326"),

                                value: "ConvE 541Convolutional 2D Knowledge Graph Embeddings\nPyTorch"

                            },

                            {

                                num: NumberInt("2327"),

                                value: "DPN 532This repository contains the code and trained models of:MXNet"

                            },

                            {

                                num: NumberInt("2328"),

                                value: "qp solver 525A fast and differentiable QP solver for PyTorch. Crafted by Brandon Amos and J. Zico Kolter.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2329"),

                                value: "pytorch-flows 524PyTorch implementations of algorithms for density estimation\nPyTorch"

                            },

                            {

                                num: NumberInt("2330"),

                                value: "YOLO in caffe 523__Update 12-05-2016__:  __Currently, only yolo v1 (http://pjreddie.com/darknet/yolov1/) is supported.Caffe"

                            },

                            {

                                num: NumberInt("2331"),

                                value: "ResNet 521Install MXNet on a machine with CUDA GPU, and it's better also installed with cuDNN v5MXNet"

                            },

                            {

                                num: NumberInt("2332"),

                                value: "pytoune 519A Keras-like framework and utilities for PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2333"),

                                value: "Poutyne 519A Keras-like framework for PyTorch that handles much of the boilerplating code needed to train neural networks.\nPyTorch"

                            },

                            {

                                num: NumberInt("2334"),

                                value: "treelstm.pytorch 518Tree LSTM implementation in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2335"),

                                value: "colorization-pytorch 517PyTorch reimplementation of Interactive Deep Colorization richzhang.github.io/ideepcolor\nPyTorch"

                            },

                            {

                                num: NumberInt("2336"),

                                value: "RoIAlign.pytorch 516This is a PyTorch version of RoIAlign. This implementation is based on crop_and_resize and supports both forward and backward on CPU and GPU.\nPyTorch"

                            },

                            {

                                num: NumberInt("2337"),

                                value: "convert_torch_to_pytorch 513Convert torch t7 model to pytorch model and source.\nPyTorch"

                            },

                            {

                                num: NumberInt("2338"),

                                value: "pytorch_cluster 508PyTorch Extension Library of Optimised Graph Cluster Algorithms.\nPyTorch"

                            },

                            {

                                num: NumberInt("2339"),

                                value: "pytorch-ntm 504Pytorch ntm implementation. \nPyTorch"

                            },

                            {

                                num: NumberInt("2340"),

                                value: "pytorch-dense-correspondence 500Code for \"Dense Object Nets: Learning Dense Visual Object Descriptors By and For Robotic Manipulation\" arxiv.org/pdf/1806.08756.pdf\nPyTorch"

                            },

                            {

                                num: NumberInt("2341"),

                                value: "pytorch-maml 497PyTorch implementation of MAML: arxiv.org/abs/1703.03400\nPyTorch"

                            },

                            {

                                num: NumberInt("2342"),

                                value: "ban-vqa 492Bilinear attention networks for visual question answering. \nPyTorch"

                            },

                            {

                                num: NumberInt("2343"),

                                value: "matchbox 490Write PyTorch code at the level of individual examples, then run it efficiently on minibatches.\nPyTorch"

                            },

                            {

                                num: NumberInt("2344"),

                                value: "NeuralArt 489Implementation of A Neural Algorithm of Artistic Style\nTensorFlow"

                            },

                            {

                                num: NumberInt("2345"),

                                value: "STN OCR 489This repository contains the code for the paper: STN-OCR: A single Neural Network for Text Detection and Text RecognitionMXNet"

                            },

                            {

                                num: NumberInt("2346"),

                                value: "pytorch-made 487MADE (Masked Autoencoder Density Estimation) implementation in PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2347"),

                                value: "Structured-Self-Attention 485Implementation for the paper A Structured Self-Attentive Sentence Embedding, which is published in ICLR 2017: arxiv.org/abs/1703.03130 .\nPyTorch"

                            },

                            {

                                num: NumberInt("2348"),

                                value: "attn2d 485Pervasive Attention: 2D Convolutional Networks for Sequence-to-Sequence Prediction\nPyTorch"

                            },

                            {

                                num: NumberInt("2349"),

                                value: "Arnold 480Arnold - DOOM Agent\nPyTorch"

                            },

                            {

                                num: NumberInt("2350"),

                                value: "SMASH 478An experimental technique for efficiently exploring neural architectures.\nPyTorch"

                            },

                            {

                                num: NumberInt("2351"),

                                value: "Visual question answering 477Click here to go to the accompanying blog post.Keras"

                            },

                            {

                                num: NumberInt("2352"),

                                value: "pytorch-coviar 475Compressed Video Action Recognition\nPyTorch"

                            },

                            {

                                num: NumberInt("2353"),

                                value: "SimGNN 470SimGNN: A Neural Network Approach to Fast Graph Similarity Computation.\nPyTorch"

                            },

                            {

                                num: NumberInt("2354"),

                                value: "CapsNet-pytorch 467PyTorch implementation of NIPS 2017 paper Dynamic Routing Between Capsules.\nPyTorch"

                            },

                            {

                                num: NumberInt("2355"),

                                value: "ResNeXt.pytorch 465Reproduces ResNet-V3 (Aggregated Residual Transformations for Deep Neural Networks) with pytorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2356"),

                                value: "GraphWaveletNeuralNetwork 462This is a Pytorch implementation of Graph Wavelet Neural Network. ICLR 2019. \nPyTorch"

                            },

                            {

                                num: NumberInt("2357"),

                                value: "STEAL 459STEAL - Learning Semantic Boundaries from Noisy Annotations nv-tlabs.github.io/STEAL\nPyTorch"

                            },

                            {

                                num: NumberInt("2358"),

                                value: "Lucent 456Tensorflow and OpenAI Clarity's Lucid adapted for PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2359"),

                                value: "honk 454PyTorch reimplementation of Google's TensorFlow CNNs for keyword spotting.\nPyTorch"

                            },

                            {

                                num: NumberInt("2360"),

                                value: "trellisnet 453Trellis Networks for Sequence Modeling\nPyTorch"

                            },

                            {

                                num: NumberInt("2361"),

                                value: "OpenChem 452OpenChem: Deep Learning toolkit for Computational Chemistry and Drug Design Research mariewelt.github.io/OpenChem \nPyTorch"

                            },

                            {

                                num: NumberInt("2362"),

                                value: "pixyz 450A library for developing deep generative models in a more concise, intuitive and extendable way. \nPyTorch"

                            },

                            {

                                num: NumberInt("2363"),

                                value: "PyTorch-LBFGS 449A PyTorch implementation of L-BFGS.\nPyTorch"

                            },

                            {

                                num: NumberInt("2364"),

                                value: "wavetorch 445Numerically solving and backpropagating through the wave equation arxiv.org/abs/1904.12831\nPyTorch"

                            },

                            {

                                num: NumberInt("2365"),

                                value: "yolo2-pytorch 436The YOLOv2 is one of the most popular one-stage object detector. This project adopts PyTorch as the developing framework to increase productivity, and utilize ONNX to convert models into Caffe 2 to benifit engineering deployment.\nPyTorch"

                            },

                            {

                                num: NumberInt("2366"),

                                value: "Xlearn 431Transfer Learning Library\nPyTorch"

                            },

                            {

                                num: NumberInt("2367"),

                                value: "A Structured Self-Attentive Sentence Embedding 427An open-source implementation of the paper ``A Structured Self-Attentive Sentence Embedding'' published by IBM and MILA.PyTorch"

                            },

                            {

                                num: NumberInt("2368"),

                                value: "FlappyBird DQN 425A single 200 lines of python code to demostrate DQN with KerasKeras"

                            },

                            {

                                num: NumberInt("2369"),

                                value: "vsepp 420Code for the paper \"VSE++: Improved Visual Semantic Embeddings\"\nPyTorch"

                            },

                            {

                                num: NumberInt("2370"),

                                value: "neural ode 420Jupyter notebook with Pytorch implementation of Neural Ordinary Differential EquationsPyTorch"

                            },

                            {

                                num: NumberInt("2371"),

                                value: "deformable-convolution-pytorch 412PyTorch implementation of Deformable Convolution. \nPyTorch"

                            },

                            {

                                num: NumberInt("2372"),

                                value: "Shufflenet-v2-Pytorch 410This is a Pytorch implementation of faceplusplus's ShuffleNet-v2. \nPyTorch"

                            },

                            {

                                num: NumberInt("2373"),

                                value: "fast-neural-style 402Pytorch implementation of fast-neural-style, The model uses the method described in Perceptual Losses for Real-Time Style Transfer and Super-Resolution along with Instance Normalization.\nPyTorch"

                            },

                            {

                                num: NumberInt("2374"),

                                value: "ggnn.pytorch 401A PyTorch Implementation of Gated Graph Sequence Neural Networks (GGNN). \nPyTorch"

                            },

                            {

                                num: NumberInt("2375"),

                                value: "densebody_pytorch 399PyTorch implementation of CloudWalk's recent paper DenseBody.\nPyTorch"

                            },

                            {

                                num: NumberInt("2376"),

                                value: "Pytorch Human Pose Estimation 399Implementation of various human pose estimation models in pytorch on multiple datasets (MPII & COCO) along with pretrained modelsPyTorch"

                            },

                            {

                                num: NumberInt("2377"),

                                value: "DeepPose 394Deep pose\nChainer"

                            },

                            {

                                num: NumberInt("2378"),

                                value: "optnet 386This repository is by Brandon Amos and J. Zico Kolter and contains the PyTorch source code to reproduce the experiments in our paper OptNet: Differentiable Optimization as a Layer in Neural Networks.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2379"),

                                value: "DrQA 386A pytorch implementation of Reading Wikipedia to Answer Open-Domain Questions.\nPyTorch"

                            },

                            {

                                num: NumberInt("2380"),

                                value: "Pytorch-contrib 386It contains reviewed implementations of ideas from recent machine learning papers.\nPyTorch"

                            },

                            {

                                num: NumberInt("2381"),

                                value: "PytorchNeuralStyleTransfer 382Implementation of Neural Style Transfer in Pytorch. \nPyTorch"

                            },

                            {

                                num: NumberInt("2382"),

                                value: "glow-pytorch 382PyTorch implementation of Glow, Generative Flow with Invertible 1x1 Convolutions (arxiv.org/abs/1807.03039) \nPyTorch"

                            },

                            {

                                num: NumberInt("2383"),

                                value: "NGCN 379A Higher-Order Graph Convolutional Layer. NeurIPS 2018.\nPyTorch"

                            },

                            {

                                num: NumberInt("2384"),

                                value: "NGCN 379A Higher-Order Graph Convolutional Layer. NeurIPS 2018.\nPyTorch"

                            },

                            {

                                num: NumberInt("2385"),

                                value: "CoordConv-pytorch 378Pytorch implementation of CoordConv introduced in 'An intriguing failing of convolutional neural networks and the CoordConv solution' paper. (arxiv.org/pdf/1807.03247.pdf)\nPyTorch"

                            },

                            {

                                num: NumberInt("2386"),

                                value: "JointBERT 376Pytorch implementation of JointBERT: \"BERT for Joint Intent Classification and Slot Filling\"PyTorch"

                            },

                            {

                                num: NumberInt("2387"),

                                value: "torch2coreml 374Torch7 -> CoreML\nPyTorch"

                            },

                            {

                                num: NumberInt("2388"),

                                value: "pywick 370High-level batteries-included neural network training library for Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2389"),

                                value: "Precipitation Nowcasting 370pytorch implemention of trajGRU.PyTorch"

                            },

                            {

                                num: NumberInt("2390"),

                                value: "torchnca 370A PyTorch implementation of Neighbourhood Components Analysis.PyTorch"

                            },

                            {

                                num: NumberInt("2391"),

                                value: "pytorch-i-revnet 365Pytorch implementation of i-RevNets.\nPyTorch"

                            },

                            {

                                num: NumberInt("2392"),

                                value: "Weakly_detector 361Implementation of \"Learning Deep Features for Discriminative Localization\"\nTensorFlow"

                            },

                            {

                                num: NumberInt("2393"),

                                value: "magnet 360Deep Learning Projects that Build Themselves http://magnet-dl.readthedocs.io/\nPyTorch"

                            },

                            {

                                num: NumberInt("2394"),

                                value: "deepfloat 358This repository contains the SystemVerilog RTL, C++, HLS (Intel FPGA OpenCL to wrap RTL code) and Python needed to reproduce the numerical results in \"Rethinking floating point for deep learning\" \nPyTorch"

                            },

                            {

                                num: NumberInt("2395"),

                                value: "GoogleNet Convolutional Neural Network Groups Movie Scenes By Setting 353Search, filter, and describe videos based on objects, places, and other things that appear in them\nTensorFlow"

                            },

                            {

                                num: NumberInt("2396"),

                                value: "tbd-nets 352PyTorch implementation of \"Transparency by Design: Closing the Gap Between Performance and Interpretability in Visual Reasoning\" arxiv.org/abs/1803.05268 \nPyTorch"

                            },

                            {

                                num: NumberInt("2397"),

                                value: "Pytorch-Toolbox 352This is toolbox project for Pytorch. Aiming to make you write Pytorch code more easier, readable and concise.\nPyTorch"

                            },

                            {

                                num: NumberInt("2398"),

                                value: "BMXNet 350A fork of the deep learning framework mxnet to study and implement quantization and binarization in neural networks.MXNet"

                            },

                            {

                                num: NumberInt("2399"),

                                value: "nonechucks 346Skip bad items in your PyTorch DataLoader, use Transforms as Filters, and more!\nPyTorch"

                            },

                            {

                                num: NumberInt("2400"),

                                value: "GradientEpisodicMemory 344Continuum Learning with GEM: Gradient Episodic Memory. https://arxiv.org/abs/1706.08840\nPyTorch"

                            },

                            {

                                num: NumberInt("2401"),

                                value: "QANet-pytorch 342An implementation of QANet with PyTorch (EM/F1 = 70.5/77.2 after 20 epoches for about 20 hours on one 1080Ti card.)\nPyTorch"

                            },

                            {

                                num: NumberInt("2402"),

                                value: "End-To-End Memory Networks 339Implementation of End-To-End Memory Networks\nTensorFlow"

                            },

                            {

                                num: NumberInt("2403"),

                                value: "YOLOv2 336YOLOv2\nChainer"

                            },

                            {

                                num: NumberInt("2404"),

                                value: "pyvarinf 335Python package facilitating the use of Bayesian Deep Learning methods with Variational Inference for PyTorch. \nPyTorch"

                            },

                            {

                                num: NumberInt("2405"),

                                value: "ResNet-38 335Visual applications by the University of AdelaideMXNet"

                            },

                            {

                                num: NumberInt("2406"),

                                value: "R2Plus1D-PyTorch 332PyTorch implementation of the R2Plus1D convolution based ResNet architecture described in the paper \"A Closer Look at Spatiotemporal Convolutions for Action Recognition\"\nPyTorch"

                            },

                            {

                                num: NumberInt("2407"),

                                value: "argus-tensor-stream 331A library for real-time video stream decoding to CUDA memory tensorstream.argus-ai.com\nPyTorch"

                            },

                            {

                                num: NumberInt("2408"),

                                value: "pytorch-dqn 327Deep Q-Learning Network in pytorch.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2409"),

                                value: "ESIM 327Implementation of the ESIM model for natural language inference with PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2410"),

                                value: "TripletLoss(FaceNet) 326This aims to reproduce the loss function used in Google's FaceNet paper.Caffe"

                            },

                            {

                                num: NumberInt("2411"),

                                value: "pytorch-es 326This is a PyTorch implementation of Evolution Strategies .  \nPyTorch"

                            },

                            {

                                num: NumberInt("2412"),

                                value: "caffemodel2pytorch 318Convert Caffe models to PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2413"),

                                value: "MNIST_center_loss_pytorch 314A PyTorch implementation of center loss on MNISTPyTorch"

                            },

                            {

                                num: NumberInt("2414"),

                                value: "pytorch-explain-black-box 311PyTorch implementation of Interpretable Explanations of Black Boxes by Meaningful Perturbation\nPyTorch"

                            },

                            {

                                num: NumberInt("2415"),

                                value: "linformer pytorch 311My take on a practical implementation of Linformer for Pytorch.PyTorch"

                            },

                            {

                                num: NumberInt("2416"),

                                value: "GrouPy 311Group Equivariant Convolutional Neural Networks\nChainer"

                            },

                            {

                                num: NumberInt("2417"),

                                value: "generative-query-network-pytorch 309Generative Query Network (GQN) in PyTorch as described in \"Neural Scene Representation and Rendering\"\nPyTorch"

                            },

                            {

                                num: NumberInt("2418"),

                                value: "torchani 309Accurate Neural Network Potential on PyTorch aiqm.github.io/torchani\nPyTorch"

                            },

                            {

                                num: NumberInt("2419"),

                                value: "pytorch_fft 307PyTorch wrapper for FFTs\nPyTorch"

                            },

                            {

                                num: NumberInt("2420"),

                                value: "context_encoder_pytorch 306PyTorch Implement of Context Encoders\nPyTorch"

                            },

                            {

                                num: NumberInt("2421"),

                                value: "Face_Attention_Network 306Pytorch implementation of face attention network as described in Face Attention Network: An Effective Face Detector for the Occluded Faces.\nPyTorch"

                            },

                            {

                                num: NumberInt("2422"),

                                value: "gensen 306Learning General Purpose Distributed Sentence Representations via Large Scale Multi-task Learning.\nPyTorch"

                            },

                            {

                                num: NumberInt("2423"),

                                value: "Tensorflow FastText 301A simple embedding based text classifier inspired by Facebook's fastText.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2424"),

                                value: "nmp_qc 301Neural Message Passing for Computer Vision\nPyTorch"

                            },

                            {

                                num: NumberInt("2425"),

                                value: "APPNP 301Combining Neural Networks with Personalized PageRank for Classification on Graphs. ICLR 2019.\nPyTorch"

                            },

                            {

                                num: NumberInt("2426"),

                                value: "salad 301Semi-Supervised Learning and Domain Adaptation.\nPyTorch"

                            },

                            {

                                num: NumberInt("2427"),

                                value: "gogh 301Implementation of \"A neural algorithm of Artistic style\"\nChainer"

                            },

                            {

                                num: NumberInt("2428"),

                                value: "pytorch_NER_BiLSTM_CNN_CRF 297End-to-end Sequence Labeling via Bi-directional LSTM-CNNs-CRF implement in pyotrch PyTorch"

                            },

                            {

                                num: NumberInt("2429"),

                                value: "RetinaNet 296An implementation of RetinaNet in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2430"),

                                value: "dnc 294Differentiable Neural Computers, for Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2431"),

                                value: "Snapshot Ensembles 294Train 1, Get M for Free\nKeras"

                            },

                            {

                                num: NumberInt("2432"),

                                value: "EfficientNets-PyTorch 293A PyTorch implementation of EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks.\nPyTorch"

                            },

                            {

                                num: NumberInt("2433"),

                                value: "Learning to learn by gradient descent by gradient descent 292PyTorch implementation of Learning to learn by gradient descent by gradient descent.\nPyTorch"

                            },

                            {

                                num: NumberInt("2434"),

                                value: "AttentionWalk 291This is a Pytorch implementation of Watch Your Step: Learning Node Embeddings via Graph Attention. NIPS 2018.\nPyTorch"

                            },

                            {

                                num: NumberInt("2435"),

                                value: "faster-rcnn 290Faster R-CNN\nChainer"

                            },

                            {

                                num: NumberInt("2436"),

                                value: "transfer-nlp 289NLP library designed for flexible research and development\nPyTorch"

                            },

                            {

                                num: NumberInt("2437"),

                                value: "pytorch-value-iteration-networks 288Pytorch implementation of Value Iteration Networks (NIPS 2016 best paper)  \nPyTorch"

                            },

                            {

                                num: NumberInt("2438"),

                                value: "YellowFin_Pytorch 288Auto-tuning momentum SGD optimizer\nPyTorch"

                            },

                            {

                                num: NumberInt("2439"),

                                value: "pyscatwave 286Fast Scattering Transform with CuPy/PyTorch,read the paper here\nPyTorch"

                            },

                            {

                                num: NumberInt("2440"),

                                value: "graph_convnets_pytorch 286PyTorch implementation of graph ConvNets, NIPS’16\nPyTorch"

                            },

                            {

                                num: NumberInt("2441"),

                                value: "Continuous Deep Q-Learning with Model-based Acceleration  285Reimplementation of Continuous Deep Q-Learning with Model-based Acceleration.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2442"),

                                value: "quick-nlp 284Pytorch NLP library based on FastAI. \nPyTorch"

                            },

                            {

                                num: NumberInt("2443"),

                                value: "DeepFM_with_PyTorch 284A PyTorch implementation of DeepFM for CTR prediction problem.PyTorch"

                            },

                            {

                                num: NumberInt("2444"),

                                value: "ClariNet 283A Pytorch Implementation of ClariNet arxiv.org/abs/1807.07281\nPyTorch"

                            },

                            {

                                num: NumberInt("2445"),

                                value: "pytorch_sac 283PyTorch implementation of Soft Actor-Critic (SAC)PyTorch"

                            },

                            {

                                num: NumberInt("2446"),

                                value: "HMM in TensorFlow 281Implementation of viterbi and forward/backward algorithms for HMM\nTensorFlow"

                            },

                            {

                                num: NumberInt("2447"),

                                value: "WideResNets 280WideResNets for CIFAR10/100 implemented in PyTorch. This implementation requires less GPU memory than what is required by the official Torch implementation: https://github.com/szagoruyko/wide-residual-networks .\nPyTorch"

                            },

                            {

                                num: NumberInt("2448"),

                                value: "pytorch-sgns 279Skipgram Negative Sampling in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2449"),

                                value: "pytorch-hessian-eigenthings 274Efficient PyTorch Hessian eigendecomposition using the Hessian-vector product and stochastic power iteration. \nPyTorch"

                            },

                            {

                                num: NumberInt("2450"),

                                value: "Pytorch-NCE 273The Noise Contrastive Estimation for softmax output written in Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2451"),

                                value: "pyinn 271CuPy fused PyTorch neural networks ops\nPyTorch"

                            },

                            {

                                num: NumberInt("2452"),

                                value: "vel 271Velocity in deep-learning research.\nPyTorch"

                            },

                            {

                                num: NumberInt("2453"),

                                value: "volksdep 271Volksdep is an open-source toolbox for deploying and accelerating PyTorch, Onnx and Tensorflow models with TensorRT.\nPyTorch"

                            },

                            {

                                num: NumberInt("2454"),

                                value: "pytorch-dnc 268Neural Turing Machine (NTM) & Differentiable Neural Computer (DNC) with pytorch & visdom. \nPyTorch"

                            },

                            {

                                num: NumberInt("2455"),

                                value: "TuckER 266TuckER: Tensor Factorization for Knowledge Graph Completion.\nPyTorch"

                            },

                            {

                                num: NumberInt("2456"),

                                value: "neural-art-mini 265Lightweight version of mxnet neural art implementation using ~4.8M SqueezeNet model.MXNet"

                            },

                            {

                                num: NumberInt("2457"),

                                value: "simple-effective-text-matching-pytorch 263A pytorch implementation of the ACL2019 paper \"Simple and Effective Text Matching with Richer Alignment Features\".\nPyTorch"

                            },

                            {

                                num: NumberInt("2458"),

                                value: "DeepLog 258Pytorch Implementation of DeepLog.PyTorch"

                            },

                            {

                                num: NumberInt("2459"),

                                value: "sparktorch 256Train and run Pytorch models on Apache Spark.\nPyTorch"

                            },

                            {

                                num: NumberInt("2460"),

                                value: "GAM 252This is a Pytorch implementation of Graph Classification using Structural Attention. KDD 2018.\nPyTorch"

                            },

                            {

                                num: NumberInt("2461"),

                                value: "PyramidNet-PyTorch 251A PyTorch implementation for PyramidNets (Deep Pyramidal Residual Networks, arxiv.org/abs/1610.02915)\nPyTorch"

                            },

                            {

                                num: NumberInt("2462"),

                                value: "R BERT 249Pytorch implementation of R-BERT: \"Enriching Pre-trained Language Model with Entity Information for Relation Classification\"PyTorch"

                            },

                            {

                                num: NumberInt("2463"),

                                value: "pytorch siamese 248Siamese Network implementation using PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2464"),

                                value: "Optical Flow Estimation using a Spatial Pyramid Network 247This is a personal reimplementation of Optical Flow Estimation using a Spatial Pyramid Network [1] using PyTorch.PyTorch"

                            },

                            {

                                num: NumberInt("2465"),

                                value: "flambe 247An ML framework to accelerate research and its path to production. flambe.ai\nPyTorch"

                            },

                            {

                                num: NumberInt("2466"),

                                value: "LoRA 247Code for loralib, an implementation of \"LoRA: Low-Rank Adaptation of Large Language Models\"PyTorch"

                            },

                            {

                                num: NumberInt("2467"),

                                value: "Neural programmer-interpreter 246Implementation of Neural Programmer-Interpreters with Keras.Keras"

                            },

                            {

                                num: NumberInt("2468"),

                                value: "MTCNN_face_detection_alignment 243This original project is MTCNN.Caffe"

                            },

                            {

                                num: NumberInt("2469"),

                                value: "inferno 243A utility library around PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2470"),

                                value: "SummaRuNNer 243The PyTorch Implementation of SummaRuNNerPyTorch"

                            },

                            {

                                num: NumberInt("2471"),

                                value: "LearningToCompare-Pytorch 242Pytorch Implementation for Paper: Learning to Compare: Relation Network for Few-Shot Learning. \nPyTorch"

                            },

                            {

                                num: NumberInt("2472"),

                                value: "pytorch REINFORCE 240PyTorch Implementation of REINFORCE for both discrete & continuous controlPyTorch"

                            },

                            {

                                num: NumberInt("2473"),

                                value: "PyTorchWavelets 239PyTorch implementation of the wavelet analysis found in Torrence and Compo (1998)\nPyTorch"

                            },

                            {

                                num: NumberInt("2474"),

                                value: "Character CNN 239PyTorch implementation of the Character-level Convolutional Networks for Text Classification paper. \nPyTorch"

                            },

                            {

                                num: NumberInt("2475"),

                                value: "YOLO/YOLOv2 239Still under development.MXNet"

                            },

                            {

                                num: NumberInt("2476"),

                                value: "relational-rnn-pytorch 238An implementation of DeepMind's Relational Recurrent Neural Networks in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2477"),

                                value: "SGCN 238This is a Pytorch implementation of Signed Graph Convolutional Network. ICDM 2018.\nPyTorch"

                            },

                            {

                                num: NumberInt("2478"),

                                value: "SFD_pytorch 236A PyTorch Implementation of Single Shot Scale-invariant Face Detector.\nPyTorch"

                            },

                            {

                                num: NumberInt("2479"),

                                value: "Mask R-CNN 234Implementation of Mask-RCNN in Caffe based on https://arxiv.org/pdf/1703.06870.pdfCaffe"

                            },

                            {

                                num: NumberInt("2480"),

                                value: "FewShotLearning 234Pytorch implementation of the paper \"Optimization as a Model for Few-Shot Learning\"\nPyTorch"

                            },

                            {

                                num: NumberInt("2481"),

                                value: "DeepRL-Grounding 232This is a PyTorch implementation of the AAAI-18 paper Gated-Attention Architectures for Task-Oriented Language Grounding\nPyTorch"

                            },

                            {

                                num: NumberInt("2482"),

                                value: "NCF 227A pytorch implementation of He et al. \"Neural Collaborative Filtering\" at WWW'17PyTorch"

                            },

                            {

                                num: NumberInt("2483"),

                                value: "fusenet 227This project contains the models used for the experiments in the paper:MXNet"

                            },

                            {

                                num: NumberInt("2484"),

                                value: "tinyTPU 224Implementation of a Tensor Processing Unit for embedded systems and the IoT.TensorFlow"

                            },

                            {

                                num: NumberInt("2485"),

                                value: "VRNN 224Pytorch implementation of the Variational RNN (VRNN), from A Recurrent Latent Variable Model for Sequential Data.\nPyTorch"

                            },

                            {

                                num: NumberInt("2486"),

                                value: "dni-pytorch 224Decoupled Neural Interfaces using Synthetic Gradients for PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2487"),

                                value: "CS224N 2019 224My completed implementation solutions for CS224N 2021 & 2019PyTorch"

                            },

                            {

                                num: NumberInt("2488"),

                                value: "pytorch-transformer 223Pytorch implementation of Attention is all you need.\nPyTorch"

                            },

                            {

                                num: NumberInt("2489"),

                                value: "Universal Transformer Pytorch 223Implementation of Universal Transformer in PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2490"),

                                value: "pytorch_compact_bilinear_pooling v1 222This repository has a pure Python implementation of Compact Bilinear Pooling and Count Sketch for PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2491"),

                                value: "Skip-Thought Vectors 222An implementation of Skip-Thought Vectors in PyTorch.PyTorch"

                            },

                            {

                                num: NumberInt("2492"),

                                value: "pytorch-tools 221Tools for PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2493"),

                                value: "delira 220Lightweight framework for fast prototyping and training deep neural networks in medical imaging delira.rtfd.io\nPyTorch"

                            },

                            {

                                num: NumberInt("2494"),

                                value: "MINE Mutual Information Neural Estimation  220A pytorch implementation of MINE(Mutual Information Neural Estimation)PyTorch"

                            },

                            {

                                num: NumberInt("2495"),

                                value: "embedded spring boot keycloak server 220Keycloak JAX-RS application embedded in a Spring-Boot App.JAX"

                            },

                            {

                                num: NumberInt("2496"),

                                value: "Visual Search (Gluon:star 219Demo websiteMXNet"

                            },

                            {

                                num: NumberInt("2497"),

                                value: "pytorch tensor decompositions 217PyTorch implementation of [1412.6553] and [1511.06530] tensor decomposition methods for convolutional layers. PyTorch"

                            },

                            {

                                num: NumberInt("2498"),

                                value: "ORN 215A PyTorch implementation of the paper \"Oriented Response Networks\" in CVPR 2017. \nPyTorch"

                            },

                            {

                                num: NumberInt("2499"),

                                value: "fcn 215Fully Convolutional Networks\nChainer"

                            },

                            {

                                num: NumberInt("2500"),

                                value: "DQN 212DQN-in-the-Caffe is an implementation of Deep Q-Network using Caffe.Caffe"

                            },

                            {

                                num: NumberInt("2501"),

                                value: "VIN_PyTorch_Visdom 211PyTorch implementation of Value Iteration Networks (VIN): Clean, Simple and Modular. Visualization in Visdom.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2502"),

                                value: "PyTorch Realtime Multi-Person Pose Estimation 211Pytorch version of Realtime Multi-Person Pose Estimation project.\nPyTorch"

                            },

                            {

                                num: NumberInt("2503"),

                                value: "pydlt 210PyTorch based Deep Learning Toolbox\nPyTorch"

                            },

                            {

                                num: NumberInt("2504"),

                                value: "Conditional Similarity Networks 208This repository contains a PyTorch implementation of the paper Conditional Similarity Networks presented at CVPR 2017.PyTorch"

                            },

                            {

                                num: NumberInt("2505"),

                                value: "per 207Prioritized Experience Replay (PER) implementation in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2506"),

                                value: "DQN 206This is a very basic DQN (with experience replay) implementation, which uses OpenAI's gym environment and Keras/Theano neural networks.Keras"

                            },

                            {

                                num: NumberInt("2507"),

                                value: "HCN-pytorch 204A pytorch reimplementation of { Co-occurrence Feature Learning from Skeleton Data for Action Recognition and Detection with Hierarchical Aggregation }.\nPyTorch"

                            },

                            {

                                num: NumberInt("2508"),

                                value: "ChainerMN 204Scalable distributed deep learning with Chainer\nChainer"

                            },

                            {

                                num: NumberInt("2509"),

                                value: "FreezeOut 202Accelerate Neural Net Training by Progressively Freezing Layers. \nPyTorch"

                            },

                            {

                                num: NumberInt("2510"),

                                value: "DQN-chainer 200Deep Q-Network (DQN)\nChainer"

                            },

                            {

                                num: NumberInt("2511"),

                                value: "packnet 199Code for PackNet: Adding Multiple Tasks to a Single Network by Iterative Pruning arxiv.org/abs/1711.05769\nPyTorch"

                            },

                            {

                                num: NumberInt("2512"),

                                value: "AccSGD 199Implements pytorch code for the Accelerated SGD algorithm.\nPyTorch"

                            },

                            {

                                num: NumberInt("2513"),

                                value: "Splitter 196Splitter: Learning Node Representations that Capture Multiple Social Contexts. (WWW 2019).\nPyTorch"

                            },

                            {

                                num: NumberInt("2514"),

                                value: "CosFace_pytorch 196Pytorch implementation of CosFacePyTorch"

                            },

                            {

                                num: NumberInt("2515"),

                                value: "pytorch adacos 195PyTorch implementation of AdaCosPyTorch"

                            },

                            {

                                num: NumberInt("2516"),

                                value: "pt-dilate-rnn 194Dilated RNNs in pytorch. \nPyTorch"

                            },

                            {

                                num: NumberInt("2517"),

                                value: "torch-two-sample 194A PyTorch library for two-sample tests\nPyTorch"

                            },

                            {

                                num: NumberInt("2518"),

                                value: "GRNet 194Implementation of \"GRNet: Gridding Residual Network for Dense Point Cloud Completion\".  (Xie et al., ECCV 2020)PyTorch"

                            },

                            {

                                num: NumberInt("2519"),

                                value: "VGG-CAM 194Original matlab implementation and paper here.Keras"

                            },

                            {

                                num: NumberInt("2520"),

                                value: "SEAL-CI 193A Hierarchical Graph Perspective. (WWW 2019).\nPyTorch"

                            },

                            {

                                num: NumberInt("2521"),

                                value: "DCC 192This repository contains the source code and data for reproducing results of Deep Continuous Clustering paper.\nPyTorch"

                            },

                            {

                                num: NumberInt("2522"),

                                value: "pytorch-zssr 190PyTorch implementation of 1712.06087 \"Zero-Shot\" Super-Resolution using Deep Internal Learning\nPyTorch"

                            },

                            {

                                num: NumberInt("2523"),

                                value: "beauty-net 190A simple, flexible, and extensible template for PyTorch. It's beautiful.\nPyTorch"

                            },

                            {

                                num: NumberInt("2524"),

                                value: "DRRN-pytorch 187An implementation of Deep Recursive Residual Network for Super Resolution (DRRN), CVPR 2017\nPyTorch"

                            },

                            {

                                num: NumberInt("2525"),

                                value: "Attention-Based Recurrent Neural Network Models for Joint Intent Detection and Slot Filling 187Pytorch implementation of \"Attention-Based Recurrent Neural Network Models for Joint Intent Detection and Slot Filling\" (https://arxiv.org/pdf/1609.01454.pdf)PyTorch"

                            },

                            {

                                num: NumberInt("2526"),

                                value: "mctorch 186A manifold optimization library for deep learning. \nPyTorch"

                            },

                            {

                                num: NumberInt("2527"),

                                value: "Jax RS Performance Comparison 185:zap: Performance Comparison of Jax-RS implementations and embedded containersJAX"

                            },

                            {

                                num: NumberInt("2528"),

                                value: "odin-pytorch 184Principled Detection of Out-of-Distribution Examples in Neural Networks. \nPyTorch"

                            },

                            {

                                num: NumberInt("2529"),

                                value: "DeepCORAL 184A PyTorch implementation of 'Deep CORAL: Correlation Alignment for Deep Domain Adaptation.', ECCV 2016\nPyTorch"

                            },

                            {

                                num: NumberInt("2530"),

                                value: "pywarm 183A cleaner way to build.md neural networks for PyTorch. blue-season.github.io/pywarm\nPyTorch"

                            },

                            {

                                num: NumberInt("2531"),

                                value: "crnn-mxnet-chinese-text-recognition 181This is an implementation of CRNN (CNN+LSTM+CTC) for chinese text recognition.MXNet"

                            },

                            {

                                num: NumberInt("2532"),

                                value: "NALU-pytorch 180Basic pytorch implementation of NAC/NALU from Neural Arithmetic Logic Units arxiv.org/pdf/1808.00508.pdf\nPyTorch"

                            },

                            {

                                num: NumberInt("2533"),

                                value: "DGC-Net 180A PyTorch implementation of \"DGC-Net: Dense Geometric Correspondence Network\".\nPyTorch"

                            },

                            {

                                num: NumberInt("2534"),

                                value: "tutel 178Tutel MoE: An Optimized Mixture-of-Experts ImplementationPyTorch"

                            },

                            {

                                num: NumberInt("2535"),

                                value: "dockerface 177Dockerface is a deep learning replacement for dlib and OpenCV non-deep face detection.Caffe"

                            },

                            {

                                num: NumberInt("2536"),

                                value: "pytorch-text-recognition 177Text recognition combo - CRAFT + CRNN.\nPyTorch"

                            },

                            {

                                num: NumberInt("2537"),

                                value: "mpl.pytorch 177Pytorch implementation of MaxPoolingLoss.\nPyTorch"

                            },

                            {

                                num: NumberInt("2538"),

                                value: "hessian 177Hessian in pytorch. \nPyTorch"

                            },

                            {

                                num: NumberInt("2539"),

                                value: "video super resolution 177Video super resolution implemented in PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2540"),

                                value: "C3D 175This is 3D convolution (C3D) and video reader implementation in the latest Caffe (Dec 2016).Caffe"

                            },

                            {

                                num: NumberInt("2541"),

                                value: "Noisy Networks for Exploration 175NoisyNet [1] (LSTM) asynchronous advantage actor-critic (A3C) [2] on the CartPole-v1 environment.PyTorch"

                            },

                            {

                                num: NumberInt("2542"),

                                value: "pyTorchChamferDistance 175Implementation of the Chamfer Distance as a module for pyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2543"),

                                value: "convnet-aig 174PyTorch implementation for Convolutional Networks with Adaptive Inference Graphs.\nPyTorch"

                            },

                            {

                                num: NumberInt("2544"),

                                value: "smiles transformer 174Original implementation of the paper \"SMILES Transformer: Pre-trained Molecular Fingerprint for Low Data Drug Discovery\" by Shion Honda et al.PyTorch"

                            },

                            {

                                num: NumberInt("2545"),

                                value: "OpenFacePytorch 173PyTorch module to use OpenFace's nn4.small2.v1.t7 model \nPyTorch"

                            },

                            {

                                num: NumberInt("2546"),

                                value: "PySNN 172Efficient Spiking Neural Network framework, built on top of PyTorch for GPU acceleration.\nPyTorch"

                            },

                            {

                                num: NumberInt("2547"),

                                value: "pytorch weights_pruning 172PyTorch Implementation of Weights PruningPyTorch"

                            },

                            {

                                num: NumberInt("2548"),

                                value: "fenchel-young-losses 171Probabilistic classification in PyTorch/TensorFlow/scikit-learn with Fenchel-Young losses\nPyTorch"

                            },

                            {

                                num: NumberInt("2549"),

                                value: "ChainerUI 171ChainerUI is a visualization and management tool for Chainer.\nChainer"

                            },

                            {

                                num: NumberInt("2550"),

                                value: "pytorch-retraining 168Transfer Learning Shootout for PyTorch's model zoo (torchvision)\nPyTorch"

                            },

                            {

                                num: NumberInt("2551"),

                                value: "vqa-winner-cvprw-2017 167Pytorch Implementation of winner from VQA Chllange Workshop in CVPR'17. \nPyTorch"

                            },

                            {

                                num: NumberInt("2552"),

                                value: "convolution vision transformers 167PyTorch Implementation of CvT: Introducing Convolutions to Vision TransformersPyTorch"

                            },

                            {

                                num: NumberInt("2553"),

                                value: "A Hierarchical Latent Structure for Variational Conversation Modeling 167PyTorch Implementation of \"A Hierarchical Latent Structure for Variational Conversation Modeling\" (NAACL 2018 Oral)PyTorch"

                            },

                            {

                                num: NumberInt("2554"),

                                value: "chainer-char-rnn 167Recurrent neural network (RNN)\nChainer"

                            },

                            {

                                num: NumberInt("2555"),

                                value: "skip-gram-pytorch 166A complete pytorch implementation of skipgram model (with subsampling and negative sampling). The embedding result is tested with Spearman's rank correlation.\nPyTorch"

                            },

                            {

                                num: NumberInt("2556"),

                                value: "distance-encoding 166Distance-Encoding - Design Provably More PowerfulGNNs for Structural Representation Learning.\nPyTorch"

                            },

                            {

                                num: NumberInt("2557"),

                                value: "Pytorch-Sketch-RNN 165A pytorch implementation of arxiv.org/abs/1704.03477\nPyTorch"

                            },

                            {

                                num: NumberInt("2558"),

                                value: "fmpytorch 165A PyTorch implementation of a Factorization Machine module in cython.\nPyTorch"

                            },

                            {

                                num: NumberInt("2559"),

                                value: "visual-interaction-networks-pytorch 165This's an implementation of deepmind Visual Interaction Networks paper using pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2560"),

                                value: "transducer 163A Fast Sequence Transducer Implementation with PyTorch Bindings.\nPyTorch"

                            },

                            {

                                num: NumberInt("2561"),

                                value: "QuCumber 162Neural Network Many-Body Wavefunction Reconstruction\nPyTorch"

                            },

                            {

                                num: NumberInt("2562"),

                                value: "DeepLabV3_Plus Tensorflow2.0 159DeepLabV3+ implemented in TensorFlow2.0TensorFlow"

                            },

                            {

                                num: NumberInt("2563"),

                                value: "e2e-model-learning 159Task-based end-to-end model learning.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2564"),

                                value: "Bert BiLSTM CRF pytorch 158bert-bilstm-crf implemented in pytorch for named entity recognition.PyTorch"

                            },

                            {

                                num: NumberInt("2565"),

                                value: "CompactBilinearPooling-Pytorch v2 157(Yang Gao, et al.) A Pytorch Implementation for Compact Bilinear Pooling.\nPyTorch"

                            },

                            {

                                num: NumberInt("2566"),

                                value: "piggyback 157Code for Piggyback: Adapting a Single Network to Multiple Tasks by Learning to Mask Weights arxiv.org/abs/1801.06519\nPyTorch"

                            },

                            {

                                num: NumberInt("2567"),

                                value: "lookahead_pytorch 157pytorch implement of Lookahead OptimizerPyTorch"

                            },

                            {

                                num: NumberInt("2568"),

                                value: "UntrimmedNets 156We provide the code and models for our CVPR paper (Arxiv Preprint):Caffe"

                            },

                            {

                                num: NumberInt("2569"),

                                value: "pytorch-pose-estimation 156PyTorch Implementation of Realtime Multi-Person Pose Estimation project.\nPyTorch"

                            },

                            {

                                num: NumberInt("2570"),

                                value: "Real-time style transfer 156This is an attempt at implementing something like Real-Time Style TransferKeras"

                            },

                            {

                                num: NumberInt("2571"),

                                value: "rainbow 155A PyTorch implementation of Rainbow DQN agentPyTorch"

                            },

                            {

                                num: NumberInt("2572"),

                                value: "SENet 155A MXNet implementation of Squeeze-and-Excitation Networks MXNet"

                            },

                            {

                                num: NumberInt("2573"),

                                value: "FractalNet 155I built this network as stated in the paper but fractals are done iterative instead of functional to avoid the extra complexity when merging the fractals.Keras"

                            },

                            {

                                num: NumberInt("2574"),

                                value: "gccpm look into person cvpr19.pytorch 154Fast and accurate single-person pose estimation, ranked 10th at CVPR'19 LIP challenge. Contains implementation of \"Global Context for Convolutional Pose Machines\" paper.PyTorch"

                            },

                            {

                                num: NumberInt("2575"),

                                value: "FCN-pytorch-easiest 153Trying to be the most easiest and just get-to-use pytorch implementation of FCN (Fully Convolotional Networks)\nPyTorch"

                            },

                            {

                                num: NumberInt("2576"),

                                value: "caffe_to_torch_to_pytorch 151[x] Convert caffe model to pytorch modelPyTorch"

                            },

                            {

                                num: NumberInt("2577"),

                                value: "deep Q networks 150Implementations of algorithms from the Q-learning family. Implementations inlcude: DQN, DDQN, Dueling DQN, PER+DQN, Noisy DQN, C51PyTorch"

                            },

                            {

                                num: NumberInt("2578"),

                                value: "CNN sentence classification pytorch 149Implementation of Convolutional Neural Networks for Sentence Classification (Y.Kim, EMNLP 2014) on Pytorch.PyTorch"

                            },

                            {

                                num: NumberInt("2579"),

                                value: "functional transformer 148A pure-functional implementation of a machine learning transformer model in Python/JAXJAX"

                            },

                            {

                                num: NumberInt("2580"),

                                value: "Attentive Object Tracking 147Implementation of \"Hierarchical Attentive Recurrent Tracking\"\nTensorFlow"

                            },

                            {

                                num: NumberInt("2581"),

                                value: "Attentive Recurrent Comparators 147PyTorch implementation of Attentive Recurrent Comparators by Shyam et al.PyTorch"

                            },

                            {

                                num: NumberInt("2582"),

                                value: "HyperNetworks 147PyTorch implementation of HyperNetworks (Ha et al., ICLR 2017) for ResNet (Residual Networks)PyTorch"

                            },

                            {

                                num: NumberInt("2583"),

                                value: "MobileNet 146This is a MXNet implementation of Google's MobileNets.MXNet"

                            },

                            {

                                num: NumberInt("2584"),

                                value: "ewc.pytorch 145An implementation of Elastic Weight Consolidation (EWC), proposed in James Kirkpatrick et al. Overcoming catastrophic forgetting in neural networks 2016(10.1073/pnas.1611835114).\nPyTorch"

                            },

                            {

                                num: NumberInt("2585"),

                                value: "deep-forecast-pytorch 144Wind Speed Prediction using LSTMs in PyTorch (arxiv.org/pdf/1707.08110.pdf)\nPyTorch"

                            },

                            {

                                num: NumberInt("2586"),

                                value: "bi lstm crf 144 A PyTorch implementation of the BI-LSTM-CRF model.PyTorch"

                            },

                            {

                                num: NumberInt("2587"),

                                value: "pytorch auto augment 143PyTorch implementation of AutoAugment.PyTorch"

                            },

                            {

                                num: NumberInt("2588"),

                                value: "bigBatch 142Code used to generate the results appearing in \"Train longer, generalize better: closing the generalization gap in large batch training of neural networks\" \nPyTorch"

                            },

                            {

                                num: NumberInt("2589"),

                                value: "Wide Residual Networks 141This repo contains the code to run Wide Residual Networks using Keras.Keras"

                            },

                            {

                                num: NumberInt("2590"),

                                value: "StackNN 140A PyTorch implementation of differentiable stacks for use in neural networks.\nPyTorch"

                            },

                            {

                                num: NumberInt("2591"),

                                value: "pytorch-sift 140PyTorch implementation of SIFT descriptor. \nPyTorch"

                            },

                            {

                                num: NumberInt("2592"),

                                value: "bayes by backprop 140PyTorch implementation of \"Weight Uncertainty in Neural Networks\"PyTorch"

                            },

                            {

                                num: NumberInt("2593"),

                                value: "word2vec pytorch 140Extremely simple and fast word2vec implementation with Negative Sampling  + Sub-samplingPyTorch"

                            },

                            {

                                num: NumberInt("2594"),

                                value: "DeepPose TensorFlow 139TensorFlow implementation of DeepPose.\nTensorFlow"

                            },

                            {

                                num: NumberInt("2595"),

                                value: "pytorch-prunes 139Pruning neural networks: is it time to nip it in the bud?\nPyTorch"

                            },

                            {

                                num: NumberInt("2596"),

                                value: "Deep Networks with Stochastic Depth 139Keras implementation for \"Deep Networks with Stochastic Depth\" http://arxiv.org/abs/1603.09382Keras"

                            },

                            {

                                num: NumberInt("2597"),

                                value: "pytorch_convlstm 138convolutional lstm implementation in pytorchPyTorch"

                            },

                            {

                                num: NumberInt("2598"),

                                value: "neural style transfer 135An introduction to PyTorch through the Neural-Style algorithm (https://arxiv.org/abs/1508.06576) developed by Leon A. Gatys, Alexander S. Ecker and Matthias Bethge.   \nPyTorch"

                            },

                            {

                                num: NumberInt("2599"),

                                value: "pytorch-smoothgrad 135SmoothGrad implementation in PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2600"),

                                value: "AOGNet 135This repository contains the code (in MXNet) for: \"AOGNets: Deep AND-OR Grammar Networks for Visual Recognition\" paper by Xilai Li, Tianfu Wu*, Xi Song and Hamid Krim.MXNet"

                            },

                            {

                                num: NumberInt("2601"),

                                value: "Smile detection with a CNN 135Smile Detection with a Deep Convolutional Neural Net using Keras.Keras"

                            },

                            {

                                num: NumberInt("2602"),

                                value: "FaceDetection-ConvNet-3D 134Yunzhu Li, Benyuan Sun, Tianfu Wu and Yizhou Wang, \"Face Detection with End-to-End Integration of a ConvNet and a 3D Model\", ECCV 2016 (https://arxiv.org/abs/1606.00850)MXNet"

                            },

                            {

                                num: NumberInt("2603"),

                                value: "cifar10 134Cifar10\nChainer"

                            },

                            {

                                num: NumberInt("2604"),

                                value: "deep-auto-punctuation 133A pytorch implementation of auto-punctuation learned character by character.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2605"),

                                value: "Knowledge Aware Reader 133PyTorch implementation of the ACL 2019 paper \"Improving Question Answering over Incomplete KBs with Knowledge-Aware Reader\"PyTorch"

                            },

                            {

                                num: NumberInt("2606"),

                                value: "ResNet 132Clean, scalable and easy to use ResNet implementation in PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2607"),

                                value: "FCNT 131FCNT is an online visual tracking algorithm using fully convolutional neural networks.Caffe"

                            },

                            {

                                num: NumberInt("2608"),

                                value: "torch gqn 131PyTorch Implementation of Generative Query NetworkPyTorch"

                            },

                            {

                                num: NumberInt("2609"),

                                value: "CNN-LSTM-CTC(Gluon:star 131import mathMXNet"

                            },

                            {

                                num: NumberInt("2610"),

                                value: "pix2pix 131Chainer implementation of pix2pix\nChainer"

                            },

                            {

                                num: NumberInt("2611"),

                                value: "Neural Decision Forests 130An implementation of the Deep Neural Decision Forests in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2612"),

                                value: "GoogleNet-V2 129This model is a re-implementation of Batch Normalization publication, and the model is trained with a customized caffe; however, the modifications are minor.Caffe"

                            },

                            {

                                num: NumberInt("2613"),

                                value: "DeepBox 127Created by Weicheng Kuo at UC BerkeleyCaffe"

                            },

                            {

                                num: NumberInt("2614"),

                                value: "integrated-gradient-pytorch 127This is the pytorch implementation of the paper - Axiomatic Attribution for Deep Networks.\nPyTorch"

                            },

                            {

                                num: NumberInt("2615"),

                                value: "logger 126A simple logger for experiments.\nPyTorch"

                            },

                            {

                                num: NumberInt("2616"),

                                value: "Dynamic memory networks plus Pytorch 124Implementation of Dynamic memory networks plus in PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2617"),

                                value: "Realtime Multi-Person Pose Estimation 124You can download mxnet model and parameters(coco and MPII) from google drive:MXNet"

                            },

                            {

                                num: NumberInt("2618"),

                                value: "MSG-Net(Gluon:star 123This repo has been included in official MXNet repo, which provides the implementations of MSG-Net and Neural Style Transfer.MXNet"

                            },

                            {

                                num: NumberInt("2619"),

                                value: "RNN-Transducer 123MXNET GPU version of RNN Transducer loss is now available !MXNet"

                            },

                            {

                                num: NumberInt("2620"),

                                value: "doomnet 122PyTorch's version of Doom-net implementing some RL models in ViZDoom environment.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2621"),

                                value: "binary-wide-resnet 122PyTorch implementation of Wide Residual Networks with 1-bit weights by McDonnel (ICLR 2018)\nPyTorch"

                            },

                            {

                                num: NumberInt("2622"),

                                value: "DenseNet 121This is a MXNet implementation of DenseNet-BC architecture as described in the paper Densely Connected Convolutional Networks by Gao Huang, Zhuang Liu, Kilian Q.MXNet"

                            },

                            {

                                num: NumberInt("2623"),

                                value: "pytorch_NEG_loss 120NEG loss implemented in pytorch.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2624"),

                                value: "lstms.pth 120PyTorch implementations of LSTM Variants (Dropout + Layer Norm)PyTorch"

                            },

                            {

                                num: NumberInt("2625"),

                                value: "3D Action recognition 120PyTorch implementation of Two-stream CNN for 3D action recognitionPyTorch"

                            },

                            {

                                num: NumberInt("2626"),

                                value: "radio-transformer-networks 119A PyTorch implementation of Radio Transformer Networks from the paper \"An Introduction to Deep Learning for the Physical Layer\". arxiv.org/abs/1702.00832\nPyTorch"

                            },

                            {

                                num: NumberInt("2627"),

                                value: "mixup_pytorch 119A PyTorch implementation of the paper Mixup: Beyond Empirical Risk Minimization in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2628"),

                                value: "Keras Realtime Multi-Person Pose Estimation 118Keras version of Realtime Multi-Person Pose Estimation project.\nKeras"

                            },

                            {

                                num: NumberInt("2629"),

                                value: "NoisyNaturalGradient 117Pytorch Implementation of paper \"Noisy Natural Gradient as Variational Inference\". \nPyTorch"

                            },

                            {

                                num: NumberInt("2630"),

                                value: "pytorch_convolutional_rnn 117PyTorch implementation of Convolutional Recurrent Neural NetworkPyTorch"

                            },

                            {

                                num: NumberInt("2631"),

                                value: "Draw like Bob Ross 116pip install -r requirements.txtPyTorch"

                            },

                            {

                                num: NumberInt("2632"),

                                value: "pytorch-extension 115This is a CUDA extension for PyTorch which computes the Hadamard product of two tensors.\nPyTorch"

                            },

                            {

                                num: NumberInt("2633"),

                                value: "DSSD+TDM 114An MXNet implementation of DSSD : Deconvolutional Single Shot Detector.MXNet"

                            },

                            {

                                num: NumberInt("2634"),

                                value: "DepthNet 113PyTorch DepthNet Training on Still Box dataset. \nPyTorch"

                            },

                            {

                                num: NumberInt("2635"),

                                value: "minimal_glo 113Minimal PyTorch implementation of Generative Latent Optimization from the paper \"Optimizing the Latent Space of Generative Networks\"\nPyTorch"

                            },

                            {

                                num: NumberInt("2636"),

                                value: "dni 112Implement Decoupled Neural Interfaces using Synthetic Gradients in Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2637"),

                                value: "nmn-pytorch 112Neural Module Network for VQA in Pytorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2638"),

                                value: "SRDenseNet-pytorch 112SRDenseNet-pytorch（ICCV_2017）\nPyTorch"

                            },

                            {

                                num: NumberInt("2639"),

                                value: "NALU 112Basic pytorch implementation of NAC/NALU from Neural Arithmetic Logic Units paper by trask et.al arxiv.org/pdf/1808.00508.pdf\nPyTorch"

                            },

                            {

                                num: NumberInt("2640"),

                                value: "memory efficient attention 112Memory Efficient Attention (O(sqrt(n)) for Jax and PyTorchJAX"

                            },

                            {

                                num: NumberInt("2641"),

                                value: "A3C-PyTorch 111@inproceedings{mnih2016asynchronous,PyTorch"

                            },

                            {

                                num: NumberInt("2642"),

                                value: "macarico 111Learning to search in pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2643"),

                                value: "interaction_network_pytorch 109Pytorch Implementation of Interaction Networks for Learning about Objects, Relations and Physics.\nPyTorch"

                            },

                            {

                                num: NumberInt("2644"),

                                value: "PyTorch_GBW_LM 109PyTorch Language Model for Google Billion Word Dataset.\nPyTorch"

                            },

                            {

                                num: NumberInt("2645"),

                                value: "neural-dream 109A PyTorch implementation of the DeepDream algorithm. Creates dream-like hallucinogenic visuals.\nPyTorch"

                            },

                            {

                                num: NumberInt("2646"),

                                value: "meProp 108Codes for \"meProp: Sparsified Back Propagation for Accelerated Deep Learning with Reduced Overfitting\".\nPyTorch"

                            },

                            {

                                num: NumberInt("2647"),

                                value: "Probabilistic Programming and Statistical Inference in PyTorch 108Probabilistic Programming and Statistical Inference in PyTorch.PyTorch"

                            },

                            {

                                num: NumberInt("2648"),

                                value: "perceiver io 108Unofficial implementation of Perceiver IOPyTorch"

                            },

                            {

                                num: NumberInt("2649"),

                                value: "EigenDamage-Pytorch 107Official implementation of the ICML'19 paper \"EigenDamage: Structured Pruning in the Kronecker-Factored Eigenbasis\".\nPyTorch"

                            },

                            {

                                num: NumberInt("2650"),

                                value: "pytorch multi class focal loss 107An (unofficial) implementation of Focal Loss, as described in the RetinaNet paper, generalized to the multi-class case.PyTorch"

                            },

                            {

                                num: NumberInt("2651"),

                                value: "Head Pose 107This is a python/mxnet implementation of a very simple CNN that predicts the head poseMXNet"

                            },

                            {

                                num: NumberInt("2652"),

                                value: "BIMPM pytorch 106Re-implementation of BIMPM (Bilateral Multi-Perspective Matching for Natural Language Sentences, Zhiguo Wang et al.) on Pytorch.PyTorch"

                            },

                            {

                                num: NumberInt("2653"),

                                value: "lang-emerge-parlai 105Implementation of EMNLP 2017 Paper \"Natural Language Does Not Emerge 'Naturally' in Multi-Agent Dialog\" using PyTorch and ParlAI\nPyTorch"

                            },

                            {

                                num: NumberInt("2654"),

                                value: "Torchelie 105Torchélie is a set of utility functions, layers, losses, models, trainers and other things for PyTorch. torchelie.readthedocs.org \nPyTorch"

                            },

                            {

                                num: NumberInt("2655"),

                                value: "TreeLSTMSentiment 105Pytorch implementation of Sentiment Classification in Improved Semantic Representations From Tree-Structured Long Short-Term Memory NetworksPyTorch"

                            },

                            {

                                num: NumberInt("2656"),

                                value: "BiLSTM CRF NER PyTorch 105This repo contains a PyTorch implementation of a BiLSTM-CRF model for named entity recognition task.PyTorch"

                            },

                            {

                                num: NumberInt("2657"),

                                value: "CoordConv 104Pytorch implementation of \"An intriguing failing of convolutional neural networks and the CoordConv solution\" - https://arxiv.org/abs/1807.03247PyTorch"

                            },

                            {

                                num: NumberInt("2658"),

                                value: "Wide Residual Networks 104Implementation of Wide Residual Networks from the paper Wide Residual Networks in Keras.Keras"

                            },

                            {

                                num: NumberInt("2659"),

                                value: "CaptchaRecognition 103End-to-end variable length Captcha recognition using  CNN+RNN+Attention/CTC (pytorch implementation).  PyTorch"

                            },

                            {

                                num: NumberInt("2660"),

                                value: "Match LSTM 103A PyTorch implemention of Match-LSTM, R-NET and M-Reader for Machine Reading ComprehensionPyTorch"

                            },

                            {

                                num: NumberInt("2661"),

                                value: "TDD 101Here we provide the code for the extraction of Trajectory-Pooled Deep-Convolutional Descriptors (TDD), from the following paper:Caffe"

                            },

                            {

                                num: NumberInt("2662"),

                                value: "mixup 101This is an implement and Improvement on mixup: Beyond Empirical Risk Minimization https://arxiv.org/abs/1710.09412MXNet"

                            },

                            {

                                num: NumberInt("2663"),

                                value: "binary_net 101BinaryNet\nChainer"

                            },

                            {

                                num: NumberInt("2664"),

                                value: "deep-dream-in-pytorch 100Pytorch implementation of the DeepDream computer vision algorithm. \nPyTorch"

                            },

                            {

                                num: NumberInt("2665"),

                                value: "torch-metrics 99Metrics for model evaluation in pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2666"),

                                value: "toward controlled generation of text pytorch 99A PyTorch Implementation of \"Toward Controlled Generation of Text\"PyTorch"

                            },

                            {

                                num: NumberInt("2667"),

                                value: "mia 98A library for running membership inference attacks against ML models. \nPyTorch"

                            },

                            {

                                num: NumberInt("2668"),

                                value: "FedNova 97PyTorch implementation of FedNova (NeurIPS 2020), and a class of federated learning algorithms, including FedAvg, FedProx.PyTorch"

                            },

                            {

                                num: NumberInt("2669"),

                                value: "sam.pytorch 96A PyTorch implementation of Sharpness-Aware Minimization for Efficiently Improving GeneralizationPyTorch"

                            },

                            {

                                num: NumberInt("2670"),

                                value: "Ladder Network 95This is an implementation of Ladder Network in Keras.TensorFlow"

                            },

                            {

                                num: NumberInt("2671"),

                                value: "Tiny Face (original detector) 95This is an inference-only implementation for MXNet of tiny face.MXNet"

                            },

                            {

                                num: NumberInt("2672"),

                                value: "faux jax 95NO MORE MAINTAINED: Intercept and respond to requests in the browser (AJAX) and Node.js (http(s) module)JAX"

                            },

                            {

                                num: NumberInt("2673"),

                                value: "Highway Networks 94This is sample code for convolutional Highway Networks, implemented in Caffe checked out at this state.Caffe"

                            },

                            {

                                num: NumberInt("2674"),

                                value: "rl-multishot-reid 94Multi-shot Re-identificationMXNet"

                            },

                            {

                                num: NumberInt("2675"),

                                value: "wavenet 94Wavenet\nChainer"

                            },

                            {

                                num: NumberInt("2676"),

                                value: "Whale Detector 92So, this repository is my PyTorch solution for the Kaggle whale-detection challenge.PyTorch"

                            },

                            {

                                num: NumberInt("2677"),

                                value: "pytorch-mcn 92Convert models from MatConvNet to PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2678"),

                                value: "SSD Text Detection 92This is a modified SSD model for text detection.MXNet"

                            },

                            {

                                num: NumberInt("2679"),

                                value: "QANet pytorch  91A Pytorch implementation of QANetPyTorch"

                            },

                            {

                                num: NumberInt("2680"),

                                value: "pytorch-NeuCom 90Pytorch implementation of DeepMind's differentiable neural computer paper.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2681"),

                                value: "GoEmotions pytorch 90Pytorch Implementation of GoEmotions PyTorch"

                            },

                            {

                                num: NumberInt("2682"),

                                value: "kmeans_pytorch 90pytorch implementation of basic kmeans algorithm(lloyd method with forgy initialization) with gpu supportPyTorch"

                            },

                            {

                                num: NumberInt("2683"),

                                value: "sdtw_pytorch 90Implementation of soft dynamic time warping in pytorchPyTorch"

                            },

                            {

                                num: NumberInt("2684"),

                                value: "Groundbreaking Papers 90ML Research paper summaries, annotated papers and implementation walkthroughsPyTorch"

                            },

                            {

                                num: NumberInt("2685"),

                                value: "jax rs moshi 90A JAX-RS message body reader/writer and parameter converter which uses Moshi to handle JSONJAX"

                            },

                            {

                                num: NumberInt("2686"),

                                value: "BPR pytorch 89A pytorch implementation for BPR (Bayesian Personalized Ranking).PyTorch"

                            },

                            {

                                num: NumberInt("2687"),

                                value: "Extremely Fine Grained Entity Typing 89PyTorch implementation of our paper \"Imposing Label-Relational Inductive Bias for Extremely Fine-Grained Entity Typing\" (NAACL19)PyTorch"

                            },

                            {

                                num: NumberInt("2688"),

                                value: "pt sdae 86PyTorch implementation of SDAE (Stacked Denoising AutoEncoder)PyTorch"

                            },

                            {

                                num: NumberInt("2689"),

                                value: "muzero 86A simple implementation of MuZero algorithm for connect4 gamePyTorch"

                            },

                            {

                                num: NumberInt("2690"),

                                value: "pytorch tree lstm 85Pytorch implementation of the child-sum Tree-LSTM modelPyTorch"

                            },

                            {

                                num: NumberInt("2691"),

                                value: "torch_sampling 85Efficient reservoir sampling implementation for PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2692"),

                                value: "Real time Text Detection DBNet 84PyTorch re-implementation of ''Real-time Scene Text Detection with Differentiable Binarization'' (AAAI 2020)PyTorch"

                            },

                            {

                                num: NumberInt("2693"),

                                value: "FFTNet 83Unofficial Implementation of FFTNet vocode paper.\nPyTorch"

                            },

                            {

                                num: NumberInt("2694"),

                                value: "triplet reid pytorch 83My implementation of the paper [In Defense of the Triplet Loss for Person Re-Identification]PyTorch"

                            },

                            {

                                num: NumberInt("2695"),

                                value: "pytorch-fitmodule 82Super simple fit method for PyTorch modules\nPyTorch"

                            },

                            {

                                num: NumberInt("2696"),

                                value: "maskrcnn_benchmark.cpp 82Implementation maskrcnn-benchmark, pytorch c++ frontendPyTorch"

                            },

                            {

                                num: NumberInt("2697"),

                                value: "Neural-Style-MMD 81This repository holds the MXNet code for the paperMXNet"

                            },

                            {

                                num: NumberInt("2698"),

                                value: "sqeezenet 80Implementation of Squeezenet in pytorch, #### pretrained models on CIFAR10 data to come Plan to train the model on cifar 10 and add block connections too.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2699"),

                                value: "LOLA_DiCE 79Pytorch implementation of LOLA (arxiv.org/abs/1709.04326) using DiCE (arxiv.org/abs/1802.05098)\nPyTorch"

                            },

                            {

                                num: NumberInt("2700"),

                                value: "PyTorch Radial Basis Function Layer 79An implementation of an RBF layer/module using PyTorch.PyTorch"

                            },

                            {

                                num: NumberInt("2701"),

                                value: "ADMM 79Implemented ADMM for solving convex optimization problems such as Lasso, Ridge regressionPyTorch"

                            },

                            {

                                num: NumberInt("2702"),

                                value: "pytorch_TDNN 78Time Delayed NN implemented in pytorch.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2703"),

                                value: "molencoder 78Molecular AutoEncoder in PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2704"),

                                value: "NASNet-A-Mobile. Ported weights 78The goal of this repo is:PyTorch"

                            },

                            {

                                num: NumberInt("2705"),

                                value: "Deep Belief Network pytorch 78This repository has implementation and tutorial for Deep Belief NetworkPyTorch"

                            },

                            {

                                num: NumberInt("2706"),

                                value: "PyTorch-value-iteration-networks 77PyTorch implementation of the Value Iteration Networks (NIPS '16) paper  \nPyTorch"

                            },

                            {

                                num: NumberInt("2707"),

                                value: "quantile-regression-dqn-pytorch 77Quantile Regression DQN a Minimal Working Example\nPyTorch"

                            },

                            {

                                num: NumberInt("2708"),

                                value: "DropBlock pytorch 77Implementation of DropBlock in PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2709"),

                                value: "yolo_v1_pytorch 77PyTorch implementation of YOLO-v1 including training PyTorch"

                            },

                            {

                                num: NumberInt("2710"),

                                value: "EPSR 76Pytorch implementation of Analyzing Perception-Distortion Tradeoff using Enhanced Perceptual Super-resolution Network. This work has won the first place in PIRM2018-SR competition (region 1) held as part of the ECCV 2018.\nPyTorch"

                            },

                            {

                                num: NumberInt("2711"),

                                value: "mxnet-model 76MXNet models (only classification for now) and deploy prototxt for resnet, resnext, inception_v3, inception_v4, inception_resnet, wider_resnet, densenet, DPNs and other networks.MXNet"

                            },

                            {

                                num: NumberInt("2712"),

                                value: "E2FAR 76This is a MXNet/Gluon Implementation of End-to-end 3D Face Reconstruction with Deep Neural Networks.MXNet"

                            },

                            {

                                num: NumberInt("2713"),

                                value: "PSPNet 76Pyramid Scene Parsing Network\nChainer"

                            },

                            {

                                num: NumberInt("2714"),

                                value: "imsat 76IMSAT\nChainer"

                            },

                            {

                                num: NumberInt("2715"),

                                value: "cogitare 75Cogitare - A Modern, Fast, and Modular Deep Learning and Machine Learning framework in Python. \nPyTorch"

                            },

                            {

                                num: NumberInt("2716"),

                                value: "pathnet pytorch 75PyTorch implementation of PathNet: Evolution Channels Gradient Descent in Super Neural NetworksPyTorch"

                            },

                            {

                                num: NumberInt("2717"),

                                value: "pytorch_Highway 74Highway network implemented in pytorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2718"),

                                value: "pytorch model parallel 74A memory balanced and communication efficient FullyConnected layer with CrossEntropyLoss model parallel implementation in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2719"),

                                value: "Federated Averaging PyTorch 74An unofficial PyTorch implementation of a federated learning algorithm, FedAvg.PyTorch"

                            },

                            {

                                num: NumberInt("2720"),

                                value: "scalingscattering 73Scaling The Scattering Transform : Deep Hybrid Networks.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2721"),

                                value: "pytorch_ard 73Pytorch implementation of Variational Dropout Sparsifies Deep Neural NetworksPyTorch"

                            },

                            {

                                num: NumberInt("2722"),

                                value: "**CTPN.mxnet** 73A MXNet CTPN implementation mimic of eragonruan's tensorflow implementation with full feature.MXNet"

                            },

                            {

                                num: NumberInt("2723"),

                                value: "Character-level convolutional neural nets for text classification 72This is an re-implementation of theKeras"

                            },

                            {

                                num: NumberInt("2724"),

                                value: "torchcraft-py 71Python wrapper for TorchCraft, a bridge between Torch and StarCraft for AI research.\nPyTorch"

                            },

                            {

                                num: NumberInt("2725"),

                                value: "jax rs kotlinx serialization 71A JAX-RS message body reader/writer and parameter converter which uses Kotlinx SerializationJAX"

                            },

                            {

                                num: NumberInt("2726"),

                                value: "entropy sgd 70Lua implementation of Entropy-SGDPyTorch"

                            },

                            {

                                num: NumberInt("2727"),

                                value: "nninit 69Weight initialization schemes for PyTorch nn.Modules. This is a port of the popular nninit for Torch7 by @kaixhin.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2728"),

                                value: "pedestrian attribute recognition with GCN 69Pytorch implementation of pedestrian attribute recognition with graph convolutional networkPyTorch"

                            },

                            {

                                num: NumberInt("2729"),

                                value: "kaggle_CIFAR10 69kaggle CIFAR10 compitition code, implement by mxnet gluon.MXNet"

                            },

                            {

                                num: NumberInt("2730"),

                                value: "SINE 68This is a Pytorch implementation of SINE: Scalable Incomplete Network Embedding. ICDM 2018.\nPyTorch"

                            },

                            {

                                num: NumberInt("2731"),

                                value: "candlegp 68Gaussian Processes in Pytorch. \nPyTorch"

                            },

                            {

                                num: NumberInt("2732"),

                                value: "Neural Attentive Session Based Recommendation PyTorch 68A PyTorch implementation of Neural Attentive Session Based Recommendation (NARM)PyTorch"

                            },

                            {

                                num: NumberInt("2733"),

                                value: "Recurrent Neural Networks for Sentiment Analysis (Aspect-Based) on SemEval 2014 67Pytorch Example For Aspect-based Sentiment Analysis with RNN / GRUs / LSTMs on SemEval 2014.PyTorch"

                            },

                            {

                                num: NumberInt("2734"),

                                value: "RoIAlign RoIPool pytorch 66C++ extension implementation of RoIAlign & RolPool (both GPU and CPU) for PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2735"),

                                value: "graph-cnn 66Chainer implementation of 'Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering' (https://arxiv.org/abs/1606.09375)\nChainer"

                            },

                            {

                                num: NumberInt("2736"),

                                value: "DRQN 65DQN-in-the-Caffe is an implementation of Deep Q-Network using Caffe.Caffe"

                            },

                            {

                                num: NumberInt("2737"),

                                value: "shampoo.pytorch 65An implementation of shampoo.\nPyTorch"

                            },

                            {

                                num: NumberInt("2738"),

                                value: "CSPN_monodepth 65Unofficial Faster PyTorch implementation of Convolutional Spatial Propagation NetworkPyTorch"

                            },

                            {

                                num: NumberInt("2739"),

                                value: "MoChA pytorch 65PyTorch Implementation of \"Monotonic Chunkwise Attention\" (ICLR 2018)PyTorch"

                            },

                            {

                                num: NumberInt("2740"),

                                value: "Factorized-Bilinear-Network 65This repository holds the MXNet code for the paper:MXNet"

                            },

                            {

                                num: NumberInt("2741"),

                                value: "chainer-ssd 65SSD\nChainer"

                            },

                            {

                                num: NumberInt("2742"),

                                value: "DAGGER 64For Playing Gym Torcs\nTensorFlow"

                            },

                            {

                                num: NumberInt("2743"),

                                value: "forward-thinking-pytorch 64Pytorch implementation of \"Forward Thinking: Building and Training Neural Networks One Layer at a Time\" https://arxiv.org/pdf/1706.02480.pdf  \nPyTorch"

                            },

                            {

                                num: NumberInt("2744"),

                                value: "CNN Based Text Classification 64A simple implementation of CNN based text classificationPyTorch"

                            },

                            {

                                num: NumberInt("2745"),

                                value: "BTTR 63Official implementation for ICDAR 2021 best poster paper \"Handwritten Mathematical Expression Recognition with Bidirectionally Trained Transformer\"PyTorch"

                            },

                            {

                                num: NumberInt("2746"),

                                value: "Deep Packet 63Pytorch implementation of deep packet: a novel approach for encrypted traffic classification using deep learningPyTorch"

                            },

                            {

                                num: NumberInt("2747"),

                                value: "GE2E Loss 63Pytorch implementation of Generalized End-to-End Loss for speaker verificationPyTorch"

                            },

                            {

                                num: NumberInt("2748"),

                                value: "Faster RCNN(Gluon:star 61ya_mxdet provides a simple Faster R-CNNMXNet"

                            },

                            {

                                num: NumberInt("2749"),

                                value: "LSTNet 61This repo contains an MXNet implementation of this state of the art time series forecasting model.MXNet"

                            },

                            {

                                num: NumberInt("2750"),

                                value: "aorun 60Aorun intend to be a Keras with PyTorch as backend. \nPyTorch"

                            },

                            {

                                num: NumberInt("2751"),

                                value: "ko_en_NMT(Gluon:star 592018      .MXNet"

                            },

                            {

                                num: NumberInt("2752"),

                                value: "chainer-visualization 59Visualizing and Understanding Convolutional Networks\nChainer"

                            },

                            {

                                num: NumberInt("2753"),

                                value: "Tor10 58A Generic Tensor-Network library that is designed for quantum simulation, base on the pytorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2754"),

                                value: "srvp 58Official implementation of the paper Stochastic Latent Residual Video PredictionPyTorch"

                            },

                            {

                                num: NumberInt("2755"),

                                value: "the clean transformer 58A clean and structured implementation of Transformer with pytorch-lightning and wandbPyTorch"

                            },

                            {

                                num: NumberInt("2756"),

                                value: "pytorch deep sets 58PyTorch re-implementation of parts of \"Deep Sets\" (NIPS 2017)PyTorch"

                            },

                            {

                                num: NumberInt("2757"),

                                value: "Attentive Neural Process 58A Pytorch Implementation of Attentive Neural ProcessPyTorch"

                            },

                            {

                                num: NumberInt("2758"),

                                value: "Char-RNN(Gluon:star 58RNNMXNet-GluonPyTorchMXNet"

                            },

                            {

                                num: NumberInt("2759"),

                                value: "pytorch_highway_networks 57Highway networks implemented in PyTorch.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2760"),

                                value: "pnn.pytorch 57PyTorch implementation of CVPR'18 - Perturbative Neural Networks http://xujuefei.com/pnn.html.\nPyTorch"

                            },

                            {

                                num: NumberInt("2761"),

                                value: "efficientdet.pytorch 57:neckbeard:Unofficial implementation of EfficientDetPyTorch"

                            },

                            {

                                num: NumberInt("2762"),

                                value: "Highway Network 56TensorFlow implementation of \"Training Very Deep Networks\" with a blog post\nTensorFlow"

                            },

                            {

                                num: NumberInt("2763"),

                                value: "binary-stochastic-neurons 55Binary Stochastic Neurons in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2764"),

                                value: "MalConv-Pytorch 55Pytorch implementation of MalConv. \nPyTorch"

                            },

                            {

                                num: NumberInt("2765"),

                                value: "**Gluon Dynamic-batching**(Gluon:star 55This repository includes simplified implementation of Fold, a helper for dynamic batching.MXNet"

                            },

                            {

                                num: NumberInt("2766"),

                                value: "chainer-ResNet 55ResNet\nChainer"

                            },

                            {

                                num: NumberInt("2767"),

                                value: "chainer-gogh 55StyleNet (A Neural Algorithm of Artistic Style)\nChainer"

                            },

                            {

                                num: NumberInt("2768"),

                                value: "diffdist 54Diffdist is a python library for pytorch. It extends the default functionality of torch.autograd and adds support for differentiable communication between processes. \nPyTorch"

                            },

                            {

                                num: NumberInt("2769"),

                                value: "dfw 54Implementation of the Deep Frank-Wolfe Algorithm  -- PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2770"),

                                value: "co attention 54Pytorch implementation of \"Dynamic Coattention Networks For Question Answering\"PyTorch"

                            },

                            {

                                num: NumberInt("2771"),

                                value: "cat-net 53Canonical Appearance Transformations\nPyTorch"

                            },

                            {

                                num: NumberInt("2772"),

                                value: "dpwa 53Distributed Learning by Pair-Wise Averaging. \nPyTorch"

                            },

                            {

                                num: NumberInt("2773"),

                                value: "generative_zoo 53Generative_zoo is a repository that provides working implementations of some generative models in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2774"),

                                value: "psmm 52Imlementation of the the Pointer Sentinel Mixture Model, as described in the paper by Stephen Merity et al.\nPyTorch"

                            },

                            {

                                num: NumberInt("2775"),

                                value: "osqpth 52The differentiable OSQP solver layer for PyTorch. \nPyTorch"

                            },

                            {

                                num: NumberInt("2776"),

                                value: "Sentence similarity classifier for pyTorch 52Re-implementation of Mueller's et al.,  \"Siamese Recurrent Architectures for Learning Sentence Similarity.\"  (AAAI, 2016)PyTorch"

                            },

                            {

                                num: NumberInt("2777"),

                                value: "R BERT 52Pytorch re-implementation of R-BERT modelPyTorch"

                            },

                            {

                                num: NumberInt("2778"),

                                value: "DarkRank 52This is the repo for our AAAI-18 paper \"DarkRank: Accelerating Deep Metric Learning via Cross Sample Similarities\" MXNet"

                            },

                            {

                                num: NumberInt("2779"),

                                value: "Yelp Restaurant Photo Classifacation 52Description of the my approach to this problem was published on the Kaggle's blog.MXNet"

                            },

                            {

                                num: NumberInt("2780"),

                                value: "mlp gpt jax 52A GPT, made only of MLPs, in JaxJAX"

                            },

                            {

                                num: NumberInt("2781"),

                                value: "MXNet for CTR  51DCNN: A Convolutional Neural Network for Modelling Sentences MXNet"

                            },

                            {

                                num: NumberInt("2782"),

                                value: "fast-rcnn 51Fast R-CNN\nChainer"

                            },

                            {

                                num: NumberInt("2783"),

                                value: "CapsNet 50A pytorch implementation of Capsule Network.PyTorch"

                            },

                            {

                                num: NumberInt("2784"),

                                value: "fluidnet_cxx 49FluidNet re-written with ATen tensor lib. \nPyTorch"

                            },

                            {

                                num: NumberInt("2785"),

                                value: "pytorch extras 49Some extra features for pytorch.    \nPyTorch"

                            },

                            {

                                num: NumberInt("2786"),

                                value: "LSUV pytorch 49Simple implementation of the LSUV initialization in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2787"),

                                value: "crnn 49This repo contains code written by MXNet for ocr tasks, which uses an cnn-lstm-ctc architecture to do text recognition.MXNet"

                            },

                            {

                                num: NumberInt("2788"),

                                value: "CDL 49This is the MXNet version of CDL used in the KDD 2016 hands-on tutorial for MXNet.MXNet"

                            },

                            {

                                num: NumberInt("2789"),

                                value: "MobileNetV3 PyTorch 48A PyTorch implementation of MobileNetV3PyTorch"

                            },

                            {

                                num: NumberInt("2790"),

                                value: "shake drop_pytorch 48PyTorch implementation of shake-drop regularizationPyTorch"

                            },

                            {

                                num: NumberInt("2791"),

                                value: "reseg-pytorch 47PyTorch Implementation of ReSeg (arxiv.org/pdf/1511.07053.pdf)\nPyTorch"

                            },

                            {

                                num: NumberInt("2792"),

                                value: "batchbald_redux 47Reusable BatchBALD implementationPyTorch"

                            },

                            {

                                num: NumberInt("2793"),

                                value: "prunnable layers pytorch 47Prunable nn layers for pytorch.PyTorch"

                            },

                            {

                                num: NumberInt("2794"),

                                value: "chinese word2vec pytorch 47word2vec implementation for skip-gram in pytorchPyTorch"

                            },

                            {

                                num: NumberInt("2795"),

                                value: "crnn (with Chinese Support) 47crnn in mxnet.can train with chinese charactersMXNet"

                            },

                            {

                                num: NumberInt("2796"),

                                value: "Deep-Leafsnap 46LeafSnap replicated using deep neural networks to test accuracy compared to traditional computer vision methods.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2797"),

                                value: "CortexNet 46A Generic Network Family for Robust Visual Temporal Representations\nPyTorch"

                            },

                            {

                                num: NumberInt("2798"),

                                value: "CRU-Net 46This repository contains the code and trained models of \"Sharing Residual Units Through Collective Tensor Factorization in Deep Neural Networks\".MXNet"

                            },

                            {

                                num: NumberInt("2799"),

                                value: "TRPO 45For Continuous and Discrete Action Space by\nTensorFlow"

                            },

                            {

                                num: NumberInt("2800"),

                                value: "diffmask 45Pytorch implementation of DiffMaskPyTorch"

                            },

                            {

                                num: NumberInt("2801"),

                                value: "shake shake_pytorch 45PyTorch implementation of shake-shake regularizationPyTorch"

                            },

                            {

                                num: NumberInt("2802"),

                                value: "mxnet-videoio 45MXNet RecI/O.MXNet"

                            },

                            {

                                num: NumberInt("2803"),

                                value: "dropwizard jaxws 45Dropwizard bundle that enables building SOAP web services and clients using JAX-WS APIJAX"

                            },

                            {

                                num: NumberInt("2804"),

                                value: "ram 44Recurrent Attention Model\nChainer"

                            },

                            {

                                num: NumberInt("2805"),

                                value: "associative_compression_networks 43Associative Compression Networks for Representation Learning. \nPyTorch"

                            },

                            {

                                num: NumberInt("2806"),

                                value: "Self Tuning Networks 43PyTorch implementation of \"STNs\" and \"Delta-STNs\"PyTorch"

                            },

                            {

                                num: NumberInt("2807"),

                                value: "flow 42Pytorch implementation of ICLR 2018 paper Deep Learning for Physical Processes: Integrating Prior Scientific Knowledge.\nPyTorch"

                            },

                            {

                                num: NumberInt("2808"),

                                value: "Contractive_Autoencoder_in_Pytorch 42Pytorch implementation of contractive autoencoder on MNIST datasetPyTorch"

                            },

                            {

                                num: NumberInt("2809"),

                                value: "ShuffleNet 42to test on mnistMXNet"

                            },

                            {

                                num: NumberInt("2810"),

                                value: "segnet 42SegNet implementation & experiments in Chainer\nChainer"

                            },

                            {

                                num: NumberInt("2811"),

                                value: "segnet 42SegNet\nChainer"

                            },

                            {

                                num: NumberInt("2812"),

                                value: "simple-fast-rnn 42Fast R-CNN\nChainer"

                            },

                            {

                                num: NumberInt("2813"),

                                value: "AlexNet3D 41An implementations of AlexNet3D. Simple AlexNet model but with 3D convolutional layers (conv3d).\nTensorFlow"

                            },

                            {

                                num: NumberInt("2814"),

                                value: "e2c-pytorch 41Embed to Control implementation in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2815"),

                                value: "pytorch_hmax 41Implementation of the HMAX model of vision in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2816"),

                                value: "pytorch-ctc 41PyTorch-CTC is an implementation of CTC (Connectionist Temporal Classification) beam search decoding for PyTorch. C++ code borrowed liberally from TensorFlow with some improvements to increase flexibility.\nPyTorch"

                            },

                            {

                                num: NumberInt("2817"),

                                value: "StrassenNets 41Code to reproduce the experiments in the paper StrassenNets: Deep learning with a multiplication budget, M.MXNet"

                            },

                            {

                                num: NumberInt("2818"),

                                value: "Character-level CNN Text Classification (Gluon:star 41This is an automated Markdown generation from the notebook 'Crepe-Gluon.ipynb'MXNet"

                            },

                            {

                                num: NumberInt("2819"),

                                value: "pyTorch_NCE 40An implementation of the Noise Contrastive Estimation algorithm for pyTorch. Working, yet not very efficient.\nPyTorch"

                            },

                            {

                                num: NumberInt("2820"),

                                value: "PyTorch AutoNEB 40PyTorch AutoNEB implementation to identify minimum energy paths, e.g. in neural network loss landscapesPyTorch"

                            },

                            {

                                num: NumberInt("2821"),

                                value: "FacialLandmark 40Facial landmarks training by MXNet.MXNet"

                            },

                            {

                                num: NumberInt("2822"),

                                value: "mlpnlp-nmt 40LSTM encoder-decoder with attention mechanism\nChainer"

                            },

                            {

                                num: NumberInt("2823"),

                                value: "chainer-ResDrop 40ResDrop\nChainer"

                            },

                            {

                                num: NumberInt("2824"),

                                value: "siamese 40Siamese Network\nChainer"

                            },

                            {

                                num: NumberInt("2825"),

                                value: "chamfer_distance 39Implementation of the Chamfer Distance as a module for PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2826"),

                                value: "pytorch charRNN 39Character RNN implemented in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2827"),

                                value: "Triplet deep hash pytorch 39Pytorch implementation of \"Fast Training of Triplet-based Deep Binary Embedding Networks\".PyTorch"

                            },

                            {

                                num: NumberInt("2828"),

                                value: "LSTM to predict gender of a name 39Predict the gender of a name using LSTMKeras"

                            },

                            {

                                num: NumberInt("2829"),

                                value: "chainer-DenseNet 39DenseNet\nChainer"

                            },

                            {

                                num: NumberInt("2830"),

                                value: "Spatial Transformer Networks 38Learn the Transformation Function \nTensorFlow"

                            },

                            {

                                num: NumberInt("2831"),

                                value: "proxprop 37Proximal Backpropagation - a neural network training algorithm that takes implicit instead of explicit gradient steps.\nPyTorch"

                            },

                            {

                                num: NumberInt("2832"),

                                value: "hred py 37Pytorch implementation of Hierarchical Encoder Decoder Sequence to Sequence ModelPyTorch"

                            },

                            {

                                num: NumberInt("2833"),

                                value: "TDNN 37PyTorch implementation of a Time Delay Neural Network (TDNN)PyTorch"

                            },

                            {

                                num: NumberInt("2834"),

                                value: "SideWindowFilter 37The Pytorch Implementation of Side Window FilteringPyTorch"

                            },

                            {

                                num: NumberInt("2835"),

                                value: "java jaxrs 37OpenTracing Java JAX-RS instrumentationJAX"

                            },

                            {

                                num: NumberInt("2836"),

                                value: "ML Optimizers JAX 37Toy implementations of some popular ML optimizers using Python/JAXJAX"

                            },

                            {

                                num: NumberInt("2837"),

                                value: "deep_alignment_network_pytorch 36PyTorch Implementation of the Deep Alignment NetworkPyTorch"

                            },

                            {

                                num: NumberInt("2838"),

                                value: "netharn 35Parameterized fit and prediction harnesses for pytorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2839"),

                                value: "abcnn_pytorch 35Implementation of ABCNN(Attention-Based Convolutional Neural Network) on PytorchPyTorch"

                            },

                            {

                                num: NumberInt("2840"),

                                value: "pytorch nice 35Implementation of non-linear independent components estimation (NICE) in pytorchPyTorch"

                            },

                            {

                                num: NumberInt("2841"),

                                value: "torch gel 35Group elastic net implementation in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2842"),

                                value: "pytorch minimal gaussian process 34A minimal implementation of Gaussian process regression in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2843"),

                                value: "PBAN PyTorch 33A Position-aware Bidirectional Attention Network for Aspect-level Sentiment Analysis, PyTorch implementation.PyTorch"

                            },

                            {

                                num: NumberInt("2844"),

                                value: "mixup.pytorch 33an implementation of mixupPyTorch"

                            },

                            {

                                num: NumberInt("2845"),

                                value: "Torchlite 32A high level library on top of(not only) Pytorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2846"),

                                value: "learning at home 32\"Towards Crowdsourced Training of Large Neural Networks using Decentralized Mixture-of-Experts\" (NeurIPS 2020), original PyTorch implementationPyTorch"

                            },

                            {

                                num: NumberInt("2847"),

                                value: "U-Net(Gluon:star 32This is an Gluon reimplementation of U-Net.MXNet"

                            },

                            {

                                num: NumberInt("2848"),

                                value: "eve.pytorch 31An implementation of Eve Optimizer, proposed in Imploving Stochastic Gradient Descent with Feedback, Koushik and Hayashi, 2016.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2849"),

                                value: "zalando-pytorch 31Various experiments on the Fashion-MNIST dataset from Zalando.\nPyTorch"

                            },

                            {

                                num: NumberInt("2850"),

                                value: "word2vec pytorch 31Implementation of the first paper on word2vecPyTorch"

                            },

                            {

                                num: NumberInt("2851"),

                                value: "YOLO(Gluon:star 31implement the YOLO algorithm using MXNet/GluonMXNet"

                            },

                            {

                                num: NumberInt("2852"),

                                value: "pt-styletransfer 30Neural style transfer as a class in PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2853"),

                                value: "pytorch hessianfree 30PyTorch implementation of Hessian Free optimisationPyTorch"

                            },

                            {

                                num: NumberInt("2854"),

                                value: "CapsNet 30This example is MXNet implementation of CapsNet: MXNet"

                            },

                            {

                                num: NumberInt("2855"),

                                value: "chainer_stylenet 30StyleNet (A Neural Algorithm of Artistic Style)\nChainer"

                            },

                            {

                                num: NumberInt("2856"),

                                value: "OrthNet 29TensorFlow and PyTorch layers for generating Orthogonal Polynomials.\nPyTorch"

                            },

                            {

                                num: NumberInt("2857"),

                                value: "mmi_anti_pytorch 29A pytorch implementation for the MMI-anti modelPyTorch"

                            },

                            {

                                num: NumberInt("2858"),

                                value: "variational autoencoder 28PyTorch implementation of \"Auto-Encoding Variational Bayes\"PyTorch"

                            },

                            {

                                num: NumberInt("2859"),

                                value: "spleeter pytorch 28Spleeter implementation in pytorchPyTorch"

                            },

                            {

                                num: NumberInt("2860"),

                                value: "jax_muzero 28An implementation of MuZero in JAX.JAX"

                            },

                            {

                                num: NumberInt("2861"),

                                value: "poisson-convolution-sum 27Implements an infinite sum of poisson-weighted convolutions\nPyTorch"

                            },

                            {

                                num: NumberInt("2862"),

                                value: "PyTorch-docset 27PyTorch docset! use with Dash, Zeal, Velocity, or LovelyDocs.  \nPyTorch"

                            },

                            {

                                num: NumberInt("2863"),

                                value: "pytorch-cns 27Compressed Network Search with PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2864"),

                                value: "neural-assembly-compiler 27A neural assembly compiler for pyTorch based on adaptive-neural-compilation. \nPyTorch"

                            },

                            {

                                num: NumberInt("2865"),

                                value: "PINN 27Simple PyTorch Implementation of Physics Informed Neural Network (PINN)PyTorch"

                            },

                            {

                                num: NumberInt("2866"),

                                value: "svm 27Support Vector Machine (SVM)\nChainer"

                            },

                            {

                                num: NumberInt("2867"),

                                value: "jaxrs osgi extender 27An OSGi extender for declarative JAX-RS bundlesJAX"

                            },

                            {

                                num: NumberInt("2868"),

                                value: "aries jax rs whiteboard 27Apache Aries JAX RS WhiteboardJAX"

                            },

                            {

                                num: NumberInt("2869"),

                                value: "YOLOv3 GradCAM 26GradCAM algorithm implementation for YOLOv3PyTorch"

                            },

                            {

                                num: NumberInt("2870"),

                                value: "Convolutional Neural Fabrics 25PyTorch implementation of Convolutional Neural Fabrics arxiv:1606.02492PyTorch"

                            },

                            {

                                num: NumberInt("2871"),

                                value: "C3D LSTM  PyTorch 25C3D-LSTM implementation in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2872"),

                                value: "OpenPose 25Note for a bug, stage2 and stage 4's output are noise, which has already been fixed.MXNet"

                            },

                            {

                                num: NumberInt("2873"),

                                value: "sentiment-analysis(Gluon:star 25Sentiment Analysis with Apache MXNet and GluonMXNet"

                            },

                            {

                                num: NumberInt("2874"),

                                value: "lgamma 24Implementations of polygamma, lgamma, and beta functions for PyTorch\nPyTorch"

                            },

                            {

                                num: NumberInt("2875"),

                                value: "NonLocal+SENet 24Non-local Neural Networks (https://arxiv.org/abs/1711.07971)MXNet"

                            },

                            {

                                num: NumberInt("2876"),

                                value: "VanillaCNN 24This is a mxnet implementation of the Vanilla CNN.MXNet"

                            },

                            {

                                num: NumberInt("2877"),

                                value: "everrest 24everREST project it is RESTful application framework along with complete JAX-RS (JSR-311) implementationJAX"

                            },

                            {

                                num: NumberInt("2878"),

                                value: "aws lambda servlet 24AWS Lambda adapter for Java's Servlets (and Jersey in particular, JAX-RS implementation)JAX"

                            },

                            {

                                num: NumberInt("2879"),

                                value: "pyprob 23A PyTorch-based library for probabilistic programming and inference compilation.\nPyTorch"

                            },

                            {

                                num: NumberInt("2880"),

                                value: "pix2code pytorch 23PyTorch implementation of pix2code. PyTorch"

                            },

                            {

                                num: NumberInt("2881"),

                                value: "Multi Agent DDPG using PTtorch and ML Agents 23A simple example of how to implement vector based DDPG for MARL tasks using PyTorch and a ML-Agents environment.PyTorch"

                            },

                            {

                                num: NumberInt("2882"),

                                value: "SSD+Focal Loss 23This is an unofficial implementation of Focal Loss (https://arxiv.org/abs/1708.02002).MXNet"

                            },

                            {

                                num: NumberInt("2883"),

                                value: "Deeplab v2 23CaffeDeepLab v2-LargeFOVMXNet.MXNet"

                            },

                            {

                                num: NumberInt("2884"),

                                value: "Federated Learning Implementations 22This repository contains all the implementation of different papers on Federated LearningPyTorch"

                            },

                            {

                                num: NumberInt("2885"),

                                value: "Traffic sign classification 22In this notebook, we are going to classify german traffic sign using convolution neural network using mxnet.MXNet"

                            },

                            {

                                num: NumberInt("2886"),

                                value: "AC-BLSTM 22MXNet Scala module implementation of my work AC-BLSTM[1].MXNet"

                            },

                            {

                                num: NumberInt("2887"),

                                value: "wavenet 22I am trying to reproduce the WaveNet result using MXNet.MXNet"

                            },

                            {

                                num: NumberInt("2888"),

                                value: "variational-autoencoder 22Semi-Supervised Learning with Deep Generative Models\nChainer"

                            },

                            {

                                num: NumberInt("2889"),

                                value: "im2latex 21Pytorch implementation of math equation images to latex markup language.PyTorch"

                            },

                            {

                                num: NumberInt("2890"),

                                value: "galapagos_nao 21_/laps na/_MXNet"

                            },

                            {

                                num: NumberInt("2891"),

                                value: "jaxrs versioning 21A framework to version REST services with JAX-RSJAX"

                            },

                            {

                                num: NumberInt("2892"),

                                value: "anuvada 20Interpretable Models for NLP using PyTorch.\nPyTorch"

                            },

                            {

                                num: NumberInt("2893"),

                                value: "Xception 20This is a MXNet implementation of Xception architecture as described in the paper Xception: Deep Learning with Depthwise Separable Convolutions  proposed by Franois Chollet at CVPR 2017 from google.MXNet"

                            },

                            {

                                num: NumberInt("2894"),

                                value: "jax rs jersey application sample 20JAX-RS/Jersey JAX"

                            },

                            {

                                num: NumberInt("2895"),

                                value: "nxparser 20Java parsers for different RDF serialisations + API + tools + JAX-RS integrationJAX"

                            },

                            {

                                num: NumberInt("2896"),

                                value: "hashed_nets 19PyTorch implementation of HashedNetsPyTorch"

                            },

                            {

                                num: NumberInt("2897"),

                                value: "SqueezeDet 19This repository is built in Python3.6.MXNet"

                            },

                            {

                                num: NumberInt("2898"),

                                value: "Visual-Semantic Embedding 19Keras implementation of https://github.com/ryankiros/visual-semantic-embeddingKeras"

                            },

                            {

                                num: NumberInt("2899"),

                                value: "jaxmapp 19JAX-based implementation for multi-agent path planning (MAPP) in continuous spaces.JAX"

                            },

                            {

                                num: NumberInt("2900"),

                                value: "flink modelServer 18Generic Model Serving Implementation leveraging FlinkTensorFlow"

                            },

                            {

                                num: NumberInt("2901"),

                                value: "DeepHumanPrediction 18A place to 'post' the progress of my master's thesis.MXNet"

                            },

                            {

                                num: NumberInt("2902"),

                                value: "Sequential Matching Network(Gluon:star 18Sequential Matching Network(ACL 2017) reimplemented by MXNET1.0-GPU//but you can always use cpuMXNet"

                            },

                            {

                                num: NumberInt("2903"),

                                value: "DEF(Gluon:star 18This is an implementation of deep exponential families in MXNet/Gluon.MXNet"

                            },

                            {

                                num: NumberInt("2904"),

                                value: "JumpingJax 18A 3D platformer with roots in bunnyhopping and portal strategyJAX"

                            },

                            {

                                num: NumberInt("2905"),

                                value: "YOLO/dark2mxnet 17This repo contains: MXNet"

                            },

                            {

                                num: NumberInt("2906"),

                                value: "mx-pointnet 17This repository contains a MXNet implementation for the Pointnet.MXNet"

                            },

                            {

                                num: NumberInt("2907"),

                                value: "PointCNN.MX 17This is a MXNet implementation of PointCNN.MXNet"

                            },

                            {

                                num: NumberInt("2908"),

                                value: "conv-vis 17Convolution Filter Visualization\nChainer"

                            },

                            {

                                num: NumberInt("2909"),

                                value: "jaxws spring 17JAX-WS integration with SpringJAX"

                            },

                            {

                                num: NumberInt("2910"),

                                value: "Advanced ML techniques 16This repo contains implementation of advanced ML techniques. Includes model ensembles, cost-sensitive learning and dealing with class imbalance. TensorFlow"

                            },

                            {

                                num: NumberInt("2911"),

                                value: "SDPoint 16Implementation of \"Stochastic Downsampling for Cost-Adjustable Inference and Improved Regularization in Convolutional Networks\", published in CVPR 2018. \nPyTorch"

                            },

                            {

                                num: NumberInt("2912"),

                                value: "IMPALA pytorch 16PyTorch IMPALA implementationPyTorch"

                            },

                            {

                                num: NumberInt("2913"),

                                value: "U-Net(kaggle dstl) 16Scripts for the my 6th place solution with MXNet.MXNet"

                            },

                            {

                                num: NumberInt("2914"),

                                value: "VQA(Gluon:star 16This repo contrains tutorial on Visual Question Answer task using MXNET gluon based on \"Multimodal Compact Bilinear Pooling for Visual Question Answering and Visual Grounding\".MXNet"

                            },

                            {

                                num: NumberInt("2915"),

                                value: "jax ekf 16Generic EKF, with support for non-Euclidean manifoldsJAX"

                            },

                            {

                                num: NumberInt("2916"),

                                value: "keras sde net 15Keras implementation of SDE-Net (ICML 2020).TensorFlow"

                            },

                            {

                                num: NumberInt("2917"),

                                value: "pytorch_GloVe 15simple pytorch GloVe implementationPyTorch"

                            },

                            {

                                num: NumberInt("2918"),

                                value: "Language/dialect identification with multiple character-level CNNs 15Character-level CNN model for the DSL 2016 shared task.Keras"

                            },

                            {

                                num: NumberInt("2919"),

                                value: "Zero-shot Intent CapsNet 14GPU-accelerated PyTorch implementation of \"Zero-shot User Intent Detection via Capsule Neural Networks\".\nPyTorch"

                            },

                            {

                                num: NumberInt("2920"),

                                value: "Tiny Face (w/ training) 14Finished coding.MXNet"

                            },

                            {

                                num: NumberInt("2921"),

                                value: "siamese 14siamise networks[^1]  MXNet"

                            },

                            {

                                num: NumberInt("2922"),

                                value: "P3D 13This repo implements the network structure of P3D[1] with MXNet, pre-trained model weights are converted from caffemodel, which is supported from the author's repoMXNet"

                            },

                            {

                                num: NumberInt("2923"),

                                value: "cnn+Highway Net 13Sentiment classification forked from incubator-mxnet/cnn_text_classification/, i've implemented the Highway Networks architecture.The final train model is CNN + Highway Network structure, and this version can achieve a best dev accuracy of 94.75% with the Chinese corpus.MXNet"

                            },

                            {

                                num: NumberInt("2924"),

                                value: "SpectralLDA 13This code implements a Spectral (third order tensor decomposition) learning method for the Latent Dirichlet Allocation model in Python.MXNet"

                            },

                            {

                                num: NumberInt("2925"),

                                value: "memnn 13End-to-end memory networks\nChainer"

                            },

                            {

                                num: NumberInt("2926"),

                                value: "chainer-example-overfeat-classify 13Overfeat\nChainer"

                            },

                            {

                                num: NumberInt("2927"),

                                value: "YOLOtiny_v2 13YOLOtiny_v2\nChainer"

                            },

                            {

                                num: NumberInt("2928"),

                                value: "SparseGPAX 13An ultra-lightweight JAX implementation of sparse Gaussian processes via pathwise sampling.JAX"

                            },

                            {

                                num: NumberInt("2929"),

                                value: "haiku mup 13A port of muP to JAX/HaikuJAX"

                            },

                            {

                                num: NumberInt("2930"),

                                value: "mucko 12Pytorch Implementation of MUCKO(2020 IJCAI)PyTorch"

                            },

                            {

                                num: NumberInt("2931"),

                                value: "LightCNN 12mxnet implementation of LightCNN in the paper \"A Light CNN for Deep Face Representation with Noisy Labels\" [Paper]MXNet"

                            },

                            {

                                num: NumberInt("2932"),

                                value: "netty jax ws 12JAX-WS on top of NettyJAX"

                            },

                            {

                                num: NumberInt("2933"),

                                value: "dxp rest example 12Sample for JAX-RS based REST services on Liferay DXPJAX"

                            },

                            {

                                num: NumberInt("2934"),

                                value: "spring boot jaxws demo 12Spring Boot JAX-WS demoJAX"

                            },

                            {

                                num: NumberInt("2935"),

                                value: "federated_learning_pytorch 11Simplified implementation of federated learning in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("2936"),

                                value: "Point Transformer Cls 11My own (unofficial) implementation of the Point Transformer Network, currently for classification tasks. PyTorch"

                            },

                            {

                                num: NumberInt("2937"),

                                value: "MemN2N 11MXNet implementation of End-To-End Memory Networks for language modelling.MXNet"

                            },

                            {

                                num: NumberInt("2938"),

                                value: "RNN-Transducer(RNNT loss using CPP) 11A fast parallel implementation of RNN Transducer (Graves 2013 joint network), on CPU for mxnet.MXNet"

                            },

                            {

                                num: NumberInt("2939"),

                                value: "deformable-conv 11Deformable-conv\nChainer"

                            },

                            {

                                num: NumberInt("2940"),

                                value: "jax ws client 11client who uses vraptor controller interfaces to create a proxy and access the resourcesJAX"

                            },

                            {

                                num: NumberInt("2941"),

                                value: "vert.x jersey 11Integrates Jersey JAX-RS implementation with Vert.x application frameworkJAX"

                            },

                            {

                                num: NumberInt("2942"),

                                value: "jax spectral 11Short-time Fourier transform (STFT) for JAXJAX"

                            },

                            {

                                num: NumberInt("2943"),

                                value: "Pointwise Convolutional Neural Network 10PyTorch implementation of Pointwise Convolutional Neural Networks in CVPR 2018.PyTorch"

                            },

                            {

                                num: NumberInt("2944"),

                                value: "siamese_network_on_omniglot(Gluon:star 10This is a repository consisting of a naive implementation of Siamese Network using MXNet and the nice interface Gluon, and the dataset used here is Omniglot.MXNet"

                            },

                            {

                                num: NumberInt("2945"),

                                value: "Tacotron 10A tech demo of MXNet capabilities consisting of a Tacotron implementation.MXNet"

                            },

                            {

                                num: NumberInt("2946"),

                                value: "dreamerv2_jax 10Dreamerv2's re-implementation (and slight architectural improvement) in Jax + FlaxJAX"

                            },

                            {

                                num: NumberInt("2947"),

                                value: "nerf.jax 10A minimal TPU compatible Jax implementation of NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis.JAX"

                            },

                            {

                                num: NumberInt("2948"),

                                value: "st-resnet 9A python version of Spatiotemporal Multiplier Networks based on mxnet.MXNet"

                            },

                            {

                                num: NumberInt("2949"),

                                value: "Class Activation Mapping 9This demo shows the method proposed in \"Zhou, Bolei, et al.MXNet"

                            },

                            {

                                num: NumberInt("2950"),

                                value: "mxnet-recommender(Gluon:star 9Collaborative Filtering NN and CNN based recommender implemented with MXNetMXNet"

                            },

                            {

                                num: NumberInt("2951"),

                                value: "dreamax 9A scalable Dreamer implementation in JAXJAX"

                            },

                            {

                                num: NumberInt("2952"),

                                value: "svd2 9A JAX/Numpy implementation of a batched 2x2 SVDJAX"

                            },

                            {

                                num: NumberInt("2953"),

                                value: "ngd_in_wide_nn 9simple JAX-/NumPy-based implementations of NGD with exact/approximate Fisher Information Matrix both in parameter-space and function-space (by empirical/analytical NTK).JAX"

                            },

                            {

                                num: NumberInt("2954"),

                                value: "perceiver jax 9Perceiver (transformer variant) implemented in JAX and FlaxJAX"

                            },

                            {

                                num: NumberInt("2955"),

                                value: "NetworkSample 9Multiplayer sample with players lobby and chat in Flax EngineJAX"

                            },

                            {

                                num: NumberInt("2956"),

                                value: "Dynamic Capacity Networks 8Implementation of \"Dynamic Capacity Networks\"\nTensorFlow"

                            },

                            {

                                num: NumberInt("2957"),

                                value: "Neural Attention Model Abstractive Summarization 8Implementation of paper: \"A Neural Attention Model for Sentence Summarization\" in TheanoTensorFlow"

                            },

                            {

                                num: NumberInt("2958"),

                                value: "torchplus 8Implements the + operator on PyTorch modules, returning sequences.\nPyTorch"

                            },

                            {

                                num: NumberInt("2959"),

                                value: "deepdep 8PyTorch implementation of Dependency Parsing as Head Selection from Zhang et al., EACL 2017PyTorch"

                            },

                            {

                                num: NumberInt("2960"),

                                value: "Xception+Keras2MXNet 8Xception: Deep Learning with Depthwise Separable ConvolutionsMXNet"

                            },

                            {

                                num: NumberInt("2961"),

                                value: "VisualBackProp 8This repo contains an implementation of VisualBackProp for MXNet.MXNet"

                            },

                            {

                                num: NumberInt("2962"),

                                value: "vat 8VAT\nChainer"

                            },

                            {

                                num: NumberInt("2963"),

                                value: "jax_transformer 8Autoregressive transformer in JAX from scratchJAX"

                            },

                            {

                                num: NumberInt("2964"),

                                value: "spring boot hibernate multitenant jaxrs api 8RESTful API application using Spring Boot + JAX-RS + Hibernate for Multi-TenancyJAX"

                            },

                            {

                                num: NumberInt("2965"),

                                value: "soapstone 8An adapter for exposing JAX-WS services as JSON over HTTPJAX"

                            },

                            {

                                num: NumberInt("2966"),

                                value: "ofbiz rest impl 8Rest API using JAX-RS RI (Jersey)JAX"

                            },

                            {

                                num: NumberInt("2967"),

                                value: "laxy 8lazy wrapper around jaxJAX"

                            },

                            {

                                num: NumberInt("2968"),

                                value: "flaxton proxy 8Flaxton proxy server which is implemented using FNTP protocol for http://flaxton.io projectJAX"

                            },

                            {

                                num: NumberInt("2969"),

                                value: "cartoon_gan_tf2.0 7A DCGAN implementation in tensorflow 2.0,  trained on cartoonset100k datasetTensorFlow"

                            },

                            {

                                num: NumberInt("2970"),

                                value: "3D U Net pytorch model parallel 7PyTorch implementation of 3D U-Net with model parallel in 2GPU for large modelPyTorch"

                            },

                            {

                                num: NumberInt("2971"),

                                value: "pytorch_mixup 7A PyTorch implementation of MixupPyTorch"

                            },

                            {

                                num: NumberInt("2972"),

                                value: "Range Loss 7I am trying to implement the range loss using MxNet to get familiar with MxNet :)MXNet"

                            },

                            {

                                num: NumberInt("2973"),

                                value: "RangeLoss(Gluon:star 7My implement of Range Loss for Deep Face Recognition with Long-tail using MxNet/GluonMXNet"

                            },

                            {

                                num: NumberInt("2974"),

                                value: "SuperResolutionCNN 7Super resolution with convolutional neural network.MXNet"

                            },

                            {

                                num: NumberInt("2975"),

                                value: "fast-style-transfer 7A mxnet implementation of fast style transfer, inspired by:MXNet"

                            },

                            {

                                num: NumberInt("2976"),

                                value: "Loss Surfaces 7A MXNet implementation of AN EMPIRICAL ANALYSIS OF DEEP NETWORK LOSS SURFACES.MXNet"

                            },

                            {

                                num: NumberInt("2977"),

                                value: "YSNoteSOAP 7YSNoteSOAP is a JAX-WS/SOAP application for add, list, edit, delete operations notes.JAX"

                            },

                            {

                                num: NumberInt("2978"),

                                value: "JaxRK 7RKHS feature vectors, operators, and statistical models using JAX for automatic differentiationJAX"

                            },

                            {

                                num: NumberInt("2979"),

                                value: "NLP Journey 7This repository provides a selection of very basic and minimal notebooks for various NLP tasks in written in Jax.JAX"

                            },

                            {

                                num: NumberInt("2980"),

                                value: "private cross silo fl 7JAX/Haiku implementation of \"On Privacy and Personalization in Cross-Silo Federated Learning\"JAX"

                            },

                            {

                                num: NumberInt("2981"),

                                value: "jax rs 7Jakarta RESTful Web Services, (JAX-RS; formerly Java API for RESTful Web Services)JAX"

                            },

                            {

                                num: NumberInt("2982"),

                                value: "madgrad 7JAX implementation of MADGRADJAX"

                            },

                            {

                                num: NumberInt("2983"),

                                value: "schnax 7An implementation of SchNet in JAX and JAX-MD.JAX"

                            },

                            {

                                num: NumberInt("2984"),

                                value: "Training RNNs as Fast as CNNs 6SRU is a recurrent unit that can run over 10 times faster than cuDNN LSTM, without loss of accuracy tested on many tasks.PyTorch"

                            },

                            {

                                num: NumberInt("2985"),

                                value: "charLSTM 6Pytorch implementation of character level LSTM for generating text, trained on Mark Twain's books.PyTorch"

                            },

                            {

                                num: NumberInt("2986"),

                                value: "pytorch_deep_learning_models 6PyTorch implementations of deep learning modelsPyTorch"

                            },

                            {

                                num: NumberInt("2987"),

                                value: "Chest-XRay 6(port and enhancement of tensorflow repo found at ayush1997/Xvision using Resnet-50)MXNet"

                            },

                            {

                                num: NumberInt("2988"),

                                value: "PPO(Gluon:star 6Add entropy term to encourage explorationMXNet"

                            },

                            {

                                num: NumberInt("2989"),

                                value: "mini hmc jax 6A simple implementation of Hamiltonian Monte Carlo in JAX.JAX"

                            },

                            {

                                num: NumberInt("2990"),

                                value: "backbone wine cellar 6Spring MVC + JPA implementation of The Wine Cellar application (https://github.com/ccoenraets/backbone-jax-cellar)JAX"

                            },

                            {

                                num: NumberInt("2991"),

                                value: "relaxed machines 6explorations in neuro-symbolic differentiable interpretersJAX"

                            },

                            {

                                num: NumberInt("2992"),

                                value: "heroes service 6A simple sample using JAX-RS with Couchbase using Java EE with TomEE flavor.JAX"

                            },

                            {

                                num: NumberInt("2993"),

                                value: "APIRestGenerator 6This project has been developed in different modules (front-end and back-ends) that generate different outcomes as REST implementations from a Swagger Specification (the current outcomes are Spring MVC, JAX-RS and Javascript)JAX"

                            },

                            {

                                num: NumberInt("2994"),

                                value: "Nepali Poet Generation with char RNN model 5This project is the implementation of Andrej Karpathy implementation of chracter RNN model in Keras. This generates the Nepali poet train on Laxmi Prasad Devkota Poems.TensorFlow"

                            },

                            {

                                num: NumberInt("2995"),

                                value: "Transformer 5Tensorflow implementation of TransformerTensorFlow"

                            },

                            {

                                num: NumberInt("2996"),

                                value: "Neural_Network_Pruning_Sparsification 5TensorFlow implementation of weight and unit pruning and sparsificationTensorFlow"

                            },

                            {

                                num: NumberInt("2997"),

                                value: "am_softmax 5This  is a pytorch implementation of the am_softmax, this softmax layer includes the class assignment fully connected layer, as it is required for it to be normalized.PyTorch"

                            },

                            {

                                num: NumberInt("2998"),

                                value: "pytorch text crf 5This package contains a simple wrapper for using conditional random fields(CRF) for NLP applications. This code is based on the excellent Allen NLP implementation of CRF.PyTorch"

                            },

                            {

                                num: NumberInt("2999"),

                                value: "SENet(from Caffe) 5This repo contains the code which can convert the offical caffemodel of SENet into MXNet.MXNet"

                            },

                            {

                                num: NumberInt("3000"),

                                value: "Convolutional Sketch Inversion 5MXNet implementation of Convolutional Sketch Inversion MXNet"

                            },

                            {

                                num: NumberInt("3001"),

                                value: "Dynamic pose estimation 5Training and inference code for LSTM-based action recognition model.MXNet"

                            },

                            {

                                num: NumberInt("3002"),

                                value: "Reinspect 5MXNet version of ReinspectMXNet"

                            },

                            {

                                num: NumberInt("3003"),

                                value: "parserChiang(Gluon:star 5This repo support CoNLL format, which is adapted by Universal Dependencies Project.MXNet"

                            },

                            {

                                num: NumberInt("3004"),

                                value: "NER with  Bidirectional LSTM-CNNs 5This repo contains an MXNet implementation of this state of the art entity recognition model.MXNet"

                            },

                            {

                                num: NumberInt("3005"),

                                value: "prednet 5Deep Predictive Coding Networks\nChainer"

                            },

                            {

                                num: NumberInt("3006"),

                                value: "adgm 5Auxiliary Deep Generative Models\nChainer"

                            },

                            {

                                num: NumberInt("3007"),

                                value: "IMSAT 5IMSAT\nChainer"

                            },

                            {

                                num: NumberInt("3008"),

                                value: "reproduce_J1J2model_via_CNN 5\"Solving frustrated quantum many particle models with convolutional neural network\" & \"Hybrid convolutional neural network and projected entangled pair states wave functions for quantum many-particle states\" using FLAX and JAXJAX"

                            },

                            {

                                num: NumberInt("3009"),

                                value: "OnlinePlatformSteam 5Online platform implementation of Steam for games made with Flax EngineJAX"

                            },

                            {

                                num: NumberInt("3010"),

                                value: "poc jax rs 5Samples program to show different JAX-RS implementationJAX"

                            },

                            {

                                num: NumberInt("3011"),

                                value: "resteasy sse 5JAX-RS 2.1 Server Side Eventing Example (SSE)JAX"

                            },

                            {

                                num: NumberInt("3012"),

                                value: "ebikeconnect api 5JAX-RS client implementation for accessing ebike-connect services.JAX"

                            },

                            {

                                num: NumberInt("3013"),

                                value: "entmax jax 5The entmax mapping in JAXJAX"

                            },

                            {

                                num: NumberInt("3014"),

                                value: "jaxb inherit 5JAXB plugin to allow generated JAXB classes to extend from a class or implement one or more interfaces.JAX"

                            },

                            {

                                num: NumberInt("3015"),

                                value: "jaxon dialogs 5Modal, alerts and confirmation dialogs for Jaxon with various javascript libraries https://www.jaxon-php.org.JAX"

                            },

                            {

                                num: NumberInt("3016"),

                                value: "jaxrs cxf camel spring example 5An implementation of a simple REST service using JAX-RS, Apache CXF, Apache Camel, and SpringJAX"

                            },

                            {

                                num: NumberInt("3017"),

                                value: "pytorch phocnet 4PHOCNet implementation in Pytorch based on Sudholt's implementationPyTorch"

                            },

                            {

                                num: NumberInt("3018"),

                                value: "Pytorch NeuroEvolution 4A Pytorch implementation of NeuroEvolution.PyTorch"

                            },

                            {

                                num: NumberInt("3019"),

                                value: "pytorch_resnext 4A PyTorch implementation of ResNeXtPyTorch"

                            },

                            {

                                num: NumberInt("3020"),

                                value: "PPO Pytorch 4Minimal implementation of PPO, running in Mujoco env, using Gym-mujocoPyTorch"

                            },

                            {

                                num: NumberInt("3021"),

                                value: "Convolutional Pose Machines 4Refer to Shih-En Wei, Varun Ramakrishna, Takeo Kanade, Yaser Sheikh, \"Convolutional pose machines\", CVPR 2016.MXNet"

                            },

                            {

                                num: NumberInt("3022"),

                                value: "NetVlad 4NetVlad layer with MxNetMXNet"

                            },

                            {

                                num: NumberInt("3023"),

                                value: "go flax id 4Distributed unique ID generationJAX"

                            },

                            {

                                num: NumberInt("3024"),

                                value: "jaxbee 4Java XBee LibraryJAX"

                            },

                            {

                                num: NumberInt("3025"),

                                value: "spring jaxws cxf 4A simple example of how to integrate CXF with Spring using pure Java configuration.JAX"

                            },

                            {

                                num: NumberInt("3026"),

                                value: "Rest JaxRS Example 4Example using JaxRS Jersey, Hibernate, H2 DB, CDI Weld & ExtJS 4 JAX"

                            },

                            {

                                num: NumberInt("3027"),

                                value: "jju 4Jack's Jax UtilitiesJAX"

                            },

                            {

                                num: NumberInt("3028"),

                                value: "jaxro 4A Simple XML Marshalling Solution for Legacy ApplicationsJAX"

                            },

                            {

                                num: NumberInt("3029"),

                                value: "lynx 4Lynx automatically exposes your JPA entities as a REST service with build.md-in metadata and query support using JAX-RS.JAX"

                            },

                            {

                                num: NumberInt("3030"),

                                value: "infinispan discovery 4Example to show how to register/discover/loadbalance JAX-WS services using Camel and Inifinispan.JAX"

                            },

                            {

                                num: NumberInt("3031"),

                                value: "xjc immutable plugin 4XJC (JAX-B Compiler) Plugin that generates immutable value object classes from your xml schemaJAX"

                            },

                            {

                                num: NumberInt("3032"),

                                value: "jaxws jersey client api 4A TransportTube implementation to let the JAX-WS RI use a Jersey client as the underlying HTTP transportJAX"

                            },

                            {

                                num: NumberInt("3033"),

                                value: "htng property 2009b guestselfservice 4A JAX-WS/JAXB sample implementation of part of the Guest Self Service package in the HTNG 2009B Property specification.JAX"

                            },

                            {

                                num: NumberInt("3034"),

                                value: "ResNeXt 3ResNeXt Pytorch ImplementationPyTorch"

                            },

                            {

                                num: NumberInt("3035"),

                                value: "autoregressive novelty detection 3A re-implementation of cs > arXiv:1807.01653v1PyTorch"

                            },

                            {

                                num: NumberInt("3036"),

                                value: "ssd pytorch 3 Single Shot MultiBox Detector implementation on pytorchPyTorch"

                            },

                            {

                                num: NumberInt("3037"),

                                value: "Capsnet 3The repository contains the Pytorch implementation of the Capsnet PaperPyTorch"

                            },

                            {

                                num: NumberInt("3038"),

                                value: "TabNet 3TabNet: Attentive Interpretable Tabular Learning (Pytorch implementation)PyTorch"

                            },

                            {

                                num: NumberInt("3039"),

                                value: "PyTorch implementation of Highway Networks 3Implementing a robust Highway Net in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("3040"),

                                value: "artnet pytorch 3Implementation of ARTNet in PytorchPyTorch"

                            },

                            {

                                num: NumberInt("3041"),

                                value: "Building Efficient ConvNets using Redundant Feature Pruning 3It is a Pytorch implementation of https://arxiv.org/pdf/1802.07653.pdf paper.PyTorch"

                            },

                            {

                                num: NumberInt("3042"),

                                value: "pytorch cifar10 3Implementing and training/testing popular model architectures on the CIFAR10 dataset.PyTorch"

                            },

                            {

                                num: NumberInt("3043"),

                                value: "Perceptron PyTorch Autograd 3PyTorch (0.4.0) implementation of a single layer Perceptron but with gradient descent instead of perceptron learning rule.PyTorch"

                            },

                            {

                                num: NumberInt("3044"),

                                value: "Faster Rcnn 3Pytorch implementation of Region-Proposal- Network followed by the complete Faster-rcnn architecturePyTorch"

                            },

                            {

                                num: NumberInt("3045"),

                                value: "pytorch_workspace 3Papers' implementation and exercise using PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("3046"),

                                value: "Semi Supervised_Models 3PyTorch implementations of deep semi-supervised modelsPyTorch"

                            },

                            {

                                num: NumberInt("3047"),

                                value: "Exponentiated Gradient PyTorch 3EG plus/minus optimizer implemented in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("3048"),

                                value: "flashNet 3A fast implementation of neural network modules/architectures to effectively run on IoT or mobile devices like Raspberry Pi etcPyTorch"

                            },

                            {

                                num: NumberInt("3049"),

                                value: "classification_pytorch_colab 3Easy implementation of CNN classification in Pytorch running in Google ColabPyTorch"

                            },

                            {

                                num: NumberInt("3050"),

                                value: "openai-mxnet 3Play the OpenAI gym with mxnet.MXNet"

                            },

                            {

                                num: NumberInt("3051"),

                                value: "mnist-oneshot 3Mnist-oneshot\nChainer"

                            },

                            {

                                num: NumberInt("3052"),

                                value: "diffsats 3JAX-based implementation of SatGenJAX"

                            },

                            {

                                num: NumberInt("3053"),

                                value: "JAX_GRU 3A GRU written in JAXJAX"

                            },

                            {

                                num: NumberInt("3054"),

                                value: "pytorch word2vec 2pytorch implementation of word2vecPyTorch"

                            },

                            {

                                num: NumberInt("3055"),

                                value: "BERT for Retrieval Based Dialog System 2implementation for retrieval-based dialog system using pytorch pretrained BERT.PyTorch"

                            },

                            {

                                num: NumberInt("3056"),

                                value: "siamese_pytorch 2PyTorch implementation of Siamese Network with FashionMNISTPyTorch"

                            },

                            {

                                num: NumberInt("3057"),

                                value: "Siam RPN 2re-implementation of Siamese RPNPyTorch"

                            },

                            {

                                num: NumberInt("3058"),

                                value: "word2vec 2Python implementation for Word2VecPyTorch"

                            },

                            {

                                num: NumberInt("3059"),

                                value: "capsule networks pytorch 2PyTorch implementation of Capsule NetworksPyTorch"

                            },

                            {

                                num: NumberInt("3060"),

                                value: "LUCAD 2This repository contains multiple useful scripts to train (and score) modelsMXNet"

                            },

                            {

                                num: NumberInt("3061"),

                                value: "VQA 2This code is written in Python and requires MXNET.MXNet"

                            },

                            {

                                num: NumberInt("3062"),

                                value: "geometric-matching 2geometric matchingMXNet"

                            },

                            {

                                num: NumberInt("3063"),

                                value: "collaborative_filtering 2A repository to experiment building recommender systems using apache MXNet.MXNet"

                            },

                            {

                                num: NumberInt("3064"),

                                value: "chainer-fluid 2Fluid simulation\nChainer"

                            },

                            {

                                num: NumberInt("3065"),

                                value: "ddgm 2Deep Directed Generative Models with Energy-Based Probability Estimation\nChainer"

                            },

                            {

                                num: NumberInt("3066"),

                                value: "flax_bert 2See https://github.com/nikitakit/sabertoothJAX"

                            },

                            {

                                num: NumberInt("3067"),

                                value: "nodejs flaxton 2Flaxton Network protocol implementation in Node.jsJAX"

                            },

                            {

                                num: NumberInt("3068"),

                                value: "jaxfss 2JAX/Flax implementation of finite-size scalingJAX"

                            },

                            {

                                num: NumberInt("3069"),

                                value: "OnlinePlatformXboxLive 2Online platform implementation of Xbox Live for games made with Flax EngineJAX"

                            },

                            {

                                num: NumberInt("3070"),

                                value: "vivit weights converter 2Script to convert ViViT weights from Flax to Pytorch.JAX"

                            },

                            {

                                num: NumberInt("3071"),

                                value: "deep learning book implementations 1This is the personal project on implementing the contents of Deep Learning (An MIT Press book) for self-study purpose.PyTorch"

                            },

                            {

                                num: NumberInt("3072"),

                                value: "FractalNet 1MXNet implementation of FractalNetMXNet"

                            },

                            {

                                num: NumberInt("3073"),

                                value: "IOULoss 1mxnetIOULossMXNet"

                            },

                            {

                                num: NumberInt("3074"),

                                value: "cicada classification 11300 cicada speces is distributed aroud the world.MXNet"

                            },

                            {

                                num: NumberInt("3075"),

                                value: "DPSH 1MXNet implements of deep pair-wise hashing  MXNet"

                            },

                            {

                                num: NumberInt("3076"),

                                value: "MemN2N(Gluon:star 1MXNet (using Gluon) implementation of End-To-End Memory Networks for language modelling.MXNet"

                            },

                            {

                                num: NumberInt("3077"),

                                value: "sequence-sampling 1Implementation of the experiments in the paper \"A comparative study of batch-construction strategies for recurrent neural networks in MXNet\"MXNet"

                            },

                            {

                                num: NumberInt("3078"),

                                value: "flaxcrawler 1Git copy of Flaxcrawler: Simple and flexible java web crawlerJAX"

                            },

                            {

                                num: NumberInt("3079"),

                                value: "flax bspline experiment 1A little B-Spline implementation for FlaxJAX"

                            },

                            {

                                num: NumberInt("3080"),

                                value: "jax_v_pytorch 1comparing Jax (haiku and flax) to PyTorch on simple DL tasks.JAX"

                            },

                            {

                                num: NumberInt("3081"),

                                value: "Holographic Embeddings for Graph Completion and Link PredictionImplementation of Holographic Embeddings of Knowledge Graphs\nTensorFlow"

                            },

                            {

                                num: NumberInt("3082"),

                                value: "pytorch_implementationsVarious Machine learning & Deep Learning models in PyTorchPyTorch"

                            },

                            {

                                num: NumberInt("3083"),

                                value: "Character Aware Language Models pytorch implementationCharacter aware neural language model in PyTorch.PyTorch"

                            },

                            {

                                num: NumberInt("3084"),

                                value: "minibatch_discriminationMinibatch discrimination\nChainer"

                            },

                            {

                                num: NumberInt("3085"),

                                value: "MineClone UnityA reimplementation of Minecraft using Unity engine. May migrate to Flax Engine later. JAX"

                            },

                            {

                                num: NumberInt("3086"),

                                value: "gpt 2 haikuMy port of GPT-2 to JAX/haiku. You probably want the HuggingFace FLAX one instead.JAX"

                            },

                            {

                                num: NumberInt("3087"),

                                value: "TPU tutorialTPU tutorial, jax, prompt, huggingfaceJAX"

                            },

                            {

                                num: NumberInt("3088"),

                                value: "FlaxFlux implementation in TypeScriptJAX"

                            },

                            {

                                num: NumberInt("3089"),

                                value: "flaxbotA cross-chat implementation between discord and telegram using node.JAX"

                            },

                            {

                                num: NumberInt("3090"),

                                value: "flaxFlax -  an ECMA6 nodejs/iojs framework aiming for platform scalability and accelerated development JAX"

                            },

                            {

                                num: NumberInt("3091"),

                                value: "flax onlineAbstract boardgame implementation in JS.JAX"

                            },

                            {

                                num: NumberInt("3092"),

                                value: "deep_vit_flaxA JAX/Flax implementation of DeepViTJAX"

                            },

                            {

                                num: NumberInt("3093"),

                                value: "RationalNetsJAX/Flax implementation of rational neural netsJAX"

                            },

                            {

                                num: NumberInt("3094"),

                                value: "jax_practiceJax/Flax implementation practice for various neural networksJAX"

                            },

                            {

                                num: NumberInt("3095"),

                                value: "margeTentative implementation of MARGE (Pre-training via Paraphrasing) in jax/flaxJAX"

                            },

                            {

                                num: NumberInt("3096"),

                                value: "jax_implementationsImplementation of machine learning models using the google research packages jax and flax.JAX"

                            },

                            {

                                num: NumberInt("3097"),

                                value: "AutoencoderVarious autoencoders.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3098"),

                                value: "DeepContextualBanditsCode for a variety of contextual bandits algorithms using deep neural networks and Thompson sampling.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3099"),

                                value: "DifferentialPrivacyDifferential privacy for training data.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3100"),

                                value: "DomainAdaptationDomain separation networks.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3101"),

                                value: "InceptionDeep convolutional networks for computer vision.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3102"),

                                value: "KeypointNetDiscovery of latent 3D keypoints via end-to-end geometric eeasoning [demo].\nTensorFlow"

                            },

                            {

                                num: NumberInt("3103"),

                                value: "LearningToRememberRareEventsA large-scale life-long memory module for use in deep learning.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3104"),

                                value: "LexNetcA distributed model for noun compound relationship classification.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3105"),

                                value: "LM1BLanguage modeling on the one billion word benchmark.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3106"),

                                value: "LmCommonsenseCommonsense reasoning using language models.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3107"),

                                value: "NamignizerRecognize and generate names.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3108"),

                                value: "NeuralGpuHighly parallel neural computer.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3109"),

                                value: "NeuralProgrammerNeural network augmented with logic and mathematic operations.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3110"),

                                value: "NextFramePredictionProbabilistic future frame synthesis via cross convolutional networks.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3111"),

                                value: "PTNPerspective transformer nets for 3D object reconstruction.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3112"),

                                value: "MARCOAutomating the evaluation of crystallization experiments.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3113"),

                                value: "QAKGModule networks for question answering on knowledge graphs.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3114"),

                                value: "RealNvpDensity estimation using real-valued non-volume preserving (real NVP) transformations.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3115"),

                                value: "REBARLow-variance, unbiased gradient estimates for discrete latent variable models.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3116"),

                                value: "ResNetDeep and wide residual networks.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3117"),

                                value: "Seq2speciesDeep learning solution for read-level taxonomic classification.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3118"),

                                value: "SkipThoughtsRecurrent neural network sentence-to-vector encoder.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3119"),

                                value: "SwivelThe Swivel algorithm for generating word embeddings.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3120"),

                                value: "SyntaxNetNeural models of natural language syntax.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3121"),

                                value: "TCNSelf-supervised representation learning from multi-view video.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3122"),

                                value: "TextsumSequence-to-sequence with attention model for text summarization.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3123"),

                                value: "TransformerSpatial transformer network, which allows the spatial manipulation of data within the network.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3124"),

                                value: "VideoPredictionPredicting future video frames with neural advection.\nTensorFlow"

                            },

                            {

                                num: NumberInt("3125"),

                                value: "Deep Q-NetworkFor Playing Frozen Lake Game\nTensorFlow"

                            },

                            {

                                num: NumberInt("3126"),

                                value: "ACActor Critic for Playing Discrete Action space Game (Cartpole)\nTensorFlow"

                            },

                            {

                                num: NumberInt("3127"),

                                value: "A3CAsynchronous Advantage Actor Critic (A3C) for Continuous Action Space (Bipedal Walker)\nTensorFlow"

                            },

                            {

                                num: NumberInt("3128"),

                                value: "Network in Network modelThe Network in Network model is described in the following ICLR-2014 paper:    Network In Network    M.Caffe"

                            },

                            {

                                num: NumberInt("3129"),

                                value: "Models from the BMVC-2014 paper \"Return of the Devil in the DetailsThe models are trained on the ILSVRC-2012 dataset.Caffe"

                            },

                            {

                                num: NumberInt("3130"),

                                value: "Models used by the VGG team in ILSVRC-2014The models are the improved versions of the models used by the VGG team in the ILSVRC-2014 competition.Caffe"

                            },

                            {

                                num: NumberInt("3131"),

                                value: "Places-CNN model from MIT.Places CNN is described in the following NIPS 2014 paper:    B.Caffe"

                            },

                            {

                                num: NumberInt("3132"),

                                value: "GoogLeNet GPU implementation from Princeton.We implemented GoogLeNet using a single GPU.Caffe"

                            },

                            {

                                num: NumberInt("3133"),

                                value: "CaffeNet fine-tuned for Oxford flowers datasethttps://gist.github.com/jimgoo/0179e52305ca768a601fThe is the reference CaffeNet (modified AlexNet) fine-tuned for the Oxford 102 category flower dataset.Caffe"

                            },

                            {

                                num: NumberInt("3134"),

                                value: "CNN Models for Salient Object Subitizing.CNN subitizing models described in the following papers (project page):    Salient Object Subitizing    J.Caffe"

                            },

                            {

                                num: NumberInt("3135"),

                                value: "Places_CNDS_models on Scene RecognitionPlaces-CNDS-8 is a \"8conv3fc layer\" deep Convolutional neural Networks model trained on MIT Places Dataset with Deep Supervision.The details of training this model are described in the following report.Caffe"

                            },

                            {

                                num: NumberInt("3136"),

                                value: "Models for Age and Gender Classification.Age/Gender.net are models for age and gender classification trained on the Adience-OUI dataset.Caffe"

                            },

                            {

                                num: NumberInt("3137"),

                                value: "ParseNetThese models are described in the paper:    ParseNet: Looking Wider to See Better    Wei Liu, Andrew Rabinovich, Alexander C.Caffe"

                            },

                            {

                                num: NumberInt("3138"),

                                value: "Conditional Random Fields as Recurrent Neural NetworksCode (with Matlab/Python API) and model are described in the ICCV 2015 paper    Conditional Random Fields as Recurrent Neural Networks    S.Caffe"

                            },

                            {

                                num: NumberInt("3139"),

                                value: "Holistically-Nested Edge DetectionThe model and code provided are described in the ICCV 2015 paper:    Holistically-Nested Edge Detection    Saining Xie and Zhuowen Tu    ICCV 2015For details about training/evaluating HED, please take a look at http://github.com/s9xie/hed.Model trained on BSDS-500 Dataset (finetuned from the VGGNet): * HED BSDS-500Caffe"

                            },

                            {

                                num: NumberInt("3140"),

                                value: "Translating Videos to Natural LanguageThese models are described in this NAACL-HLT 2015 paper.Caffe"

                            },

                            {

                                num: NumberInt("3141"),

                                value: "VGG Face CNN descriptorThese models are described in this [BMVC 2015 paper] (http://www.robots.ox.ac.uk/~vgg/publications/2015/Parkhi15/parkhi15.pdf).Caffe"

                            },

                            {

                                num: NumberInt("3142"),

                                value: "Yearbook Photo DatingModel from the ICCV 2015 Extreme Imaging Workshop paper:    A Century of Portraits: Exploring the Visual Historical Record of American High School Yearbooks     Shiry Ginosar, Kate Rakelly, Brian Yin, Sarah Sachs, Alyosha Efros    ICCV Workshop 2015Model and prototxt files: YearbookCaffe"

                            },

                            {

                                num: NumberInt("3143"),

                                value: "CCNNThese models are described in the ICCV 2015 paper.Caffe"

                            },

                            {

                                num: NumberInt("3144"),

                                value: "Facial Landmark Detection with Tweaked Convolutional Neural NetworksWe provide source code and model for article:Yue Wu and Tal Hassner, \"Facial Landmark Detection with Tweaked Convolutional Neural Networks\", arXiv preprint arXiv:1511.04031, 12 Nov.Caffe"

                            },

                            {

                                num: NumberInt("3145"),

                                value: "Faster R-CNNDownload pre-computed Faster R-CNN detectorscd $FRCN_ROOT  ./data/scripts/fetch_faster_rcnn_models.shThis will populate the $FRCN_ROOT/data folder with faster_rcnn_models.Caffe"

                            },

                            {

                                num: NumberInt("3146"),

                                value: "Sequence to Sequence - Video to Text                                                                                                                                                                                            These models are described in [this ICCV 2015 paper](http://www.cs.utexas.edu/users/ml/papers/venugopalan.iccv15.pdf).Caffe"

                            },

                            {

                                num: NumberInt("3147"),

                                value: "Pascal VOC 2012 Multilabel Classification ModelThis model has been used for the paper \"Analyzing Classifiers: Fisher Vectors and Deep Neural Networks\" (http://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Bach_Analyzing_Classifiers_Fisher_CVPR_2016_paper.pdf), published in the proceedings of CVPR 2016.Kindly note, that it has been trained in a multilabel setting with a multilabel-compatible loss function.Caffe"

                            },

                            {

                                num: NumberInt("3148"),

                                value: "SqueezeNet    @article{SqueezeNet,        Author = {Forrest N.Caffe"

                            },

                            {

                                num: NumberInt("3149"),

                                value: "Mixture DCNNMixture DCNN is a novel multi-model architecture which achieves better performance than an ensemble of DCNNs as evaluated on three different fine-grained datasets.Caffe"

                            },

                            {

                                num: NumberInt("3150"),

                                value: "Mulimodal Compact Bilinear Pooling for VQAThe current state-of-the-art model for visual question answering, as described in the following paper:@article{fukui16mcb,  title={Multimodal Compact Bilinear Pooling for Visual Question Answering and Visual Grounding},  author={Fukui, Akira and Park, Dong Huk and Yang, Daylen and Rohrbach, Anna and Darrell, Trevor and Rohrbach, Marcus},  journal={arXiv:1606.01847},  year={2016},}[[arXiv](https://arxiv.org/abs/1606.01847)] [[GitHub repo](https://github.com/akirafukui/vqa-mcb/)]Caffe"

                            },

                            {

                                num: NumberInt("3151"),

                                value: "Pose-Aware CNN Models (PAMs) for Face RecognitionWe provide the following:- pretrained CNN models of our CVPR'16 paper for pose-aware face recognition in the wild- IJB-A yaw estimates from our pose estimation module _(your informations are required to proceed to the download page in the link below)_latex@INPROCEEDINGS{masi2016cvpr,     author={Iacopo Masi and Stephen Rawls and G{\\'e}rard Medioni and Prem Natarajan},     booktitle={CVPR},     title={Pose-{A}ware {F}ace {R}ecognition in the {W}ild},     year={2016}    } [PDF] [Webpage] Caffe"

                            },

                            {

                                num: NumberInt("3152"),

                                value: "Learning Structured Sparsity in Deep Neural NetworksTrain deep neural networks with structured sparsity to speed up DNNs:@incollection{Wen_NIPS2016,    Title = {Learning Structured Sparsity in Deep Neural Networks},    Author = {Wen, Wei and Wu, Chunpeng and Wang, Yandan and Chen, Yiran and Li, Hai},    bookTitle = {Advances in Neural Information Processing Systems},    Year = {2016}}[[arXiv](http://arxiv.org/abs/1608.03665)] [[Caffemodel](https://drive.google.com/folderview?id=0B50edhjyQ0sRd3JLQ1V0OHdHcUE&usp=sharing)]  [GitHub repo]Caffe"

                            },

                            {

                                num: NumberInt("3153"),

                                value: "Neural Activation ConstellationsWe provide fine-tuned  models for CUB200-2011 birds (AlexNet + VGG19), Oxford flowers 102 (AlexNet + VGG19), Oxford IIIT PETS (AlexNet + VGG19), and NABirds dataset (GoogLeNet).Caffe"

                            },

                            {

                                num: NumberInt("3154"),

                                value: "ResFace101This page contains ResFace101: a ResNet-101 deep network model, tuned for face recognition.We fine-tuned this model using the procedure described in _I.Caffe"

                            },

                            {

                                num: NumberInt("3155"),

                                value: "Striving for SimplicityImplementation of All-CNN-C model for CIFAR-10 from the paper _Striving for Simplicity: The All Convolutional Net_ by Jost Tobias Springenberg, Alexey Dosovitskiy, Thomas Brox, Martin Riedmiller, accepted as a workshop contribution at ICLR 2015.latex@article{Springenberg14,  author    = {Jost Tobias Springenberg and Alexey Dosovitskiy and Thomas Brox and Martin A.Caffe"

                            },

                            {

                                num: NumberInt("3156"),

                                value: "VGG 4x without degradationAn algorithm that effectively prune channels each layer, which could accelerate VGG-16 4x without degradation.Caffe"

                            },

                            {

                                num: NumberInt("3157"),

                                value: "Using Ranking-CNN for Age EstimationThe ranking-CNN Caffe model for the CVPR 2017 paper: @InProceedings{Chen_2017_CVPR,author = {Chen, Shixing and Zhang, Caojin and Dong, Ming and Le, Jialiang and Rao, Mike},title = {Using Ranking-CNN for Age Estimation},booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},month = {July},year = {2017}} [PDF] [GitHub repo]Caffe"

                            },

                            {

                                num: NumberInt("3158"),

                                value: "Lets Keep it SimpleThis repository contains the architectures, Models, logs, etc pertaining to the SimpleNet Paper.Caffe"

                            },

                            {

                                num: NumberInt("3159"),

                                value: "SSDSingle Shot MultiBox Detector\nCaffe"

                            },

                            {

                                num: NumberInt("3160"),

                                value: "BVLC GoogLeNetThis model is a replication of the model described in the GoogLeNet publication.\nCaffe2"

                            },

                            {

                                num: NumberInt("3161"),

                                value: "BVLC Reference RCNN ILSVRC13The pure Caffe instantiation of the R-CNN model for ILSVRC13 detection. This model was made by transplanting the R-CNN SVM classifiers into a fc-rcnn classification layer, provided here as an off-the-shelf Caffe detector.\nCaffe2"

                            },

                            {

                                num: NumberInt("3162"),

                                value: "DenseNet-121An implementation of the DenseNet model.\nCaffe2"

                            },

                            {

                                num: NumberInt("3163"),

                                value: "Inception v1Inception v1 is a reproduction of GoogLeNet.\nCaffe2"

                            },

                            {

                                num: NumberInt("3164"),

                                value: "SqueezeNetAn implementation of SqueezeNet: AlexNet-level accuracy with 50x fewer parameters and <0.5MB model size.\nCaffe2"

                            },

                            {

                                num: NumberInt("3165"),

                                value: "ZFNet-512ZFNet-512 is a deep convolutional networks for classification. This model's 4th layer has 512 maps instead of 1024 maps mentioned in the paper.\nCaffe2"

                            },

                            {

                                num: NumberInt("3166"),

                                value: "Learning local feature descriptors with triplets and shallow convolutional neural networksThis example implements the paper Learning local feature descriptors withPyTorch"

                            },

                            {

                                num: NumberInt("3167"),

                                value: "Self-Norm NetsMXNet-scala module implementation of Self-normalizing networks[1].MXNet"

                            },

                            {

                                num: NumberInt("3168"),

                                value: "LSTM for HARMXNet-scala module implementation of LSTM for Human Activity Recognition.MXNet"

                            },

                            {

                                num: NumberInt("3169"),

                                value: "pix2pixMXNet-scala module implementation of Pix2Pix[1].MXNet"

                            },

                            {

                                num: NumberInt("3170"),

                                value: "DIRNetThis is an Mxnet implementation of the DIRNetMXNet"

                            },

                            {

                                num: NumberInt("3171"),

                                value: "Densely Connected Convolutional NetworksOriginal idea and implementation:Keras"

                            },

                            {

                                num: NumberInt("3172"),

                                value: "DFIDeep Feature Interpolation\nKeras"

                            },

                            {

                                num: NumberInt("3173"),

                                value: "Context EncoderImplementation of _Context Encoders: Feature Learning by Inpainting_. Paper: https://arxiv.org/abs/1604.0737\nKeras"

                            },

                            {

                                num: NumberInt("3174"),

                                value: "chainer_rnnlmRNN Language Model\nChainer"

                            },

                            {

                                num: NumberInt("3175"),

                                value: "chainer_examplesLSTM variants\nChainer"

                            },

                            {

                                num: NumberInt("3176"),

                                value: "qrnnQRNN\nChainer"

                            },

                            {

                                num: NumberInt("3177"),

                                value: "chainer_caConvolutional Autoencoder\nChainer"

                            },

                            {

                                num: NumberInt("3178"),

                                value: "chainer-libDNNStacked Denoising Autoencoder\nChainer"

                            },

                            {

                                num: NumberInt("3179"),

                                value: "Face68Pts 21-opencvMXNet"

                            },

                            {

                                num: NumberInt("3180"),

                                value: "uis-rnn 1400      PyTorch"

                            },

                            {

                                num: NumberInt("3181"),

                                value: "VGG16 Deconvolution networkN.B.Keras"

                            },

                            {

                                num: NumberInt("3182"),

                                value: "mxnet_tetris 4GRUMXNet"

                            },

                            {

                                num: NumberInt("3183"),

                                value: "**gluon-nlp**(Gluon:star 2400MXNet"

                            },

                            {

                                num: NumberInt("3184"),

                                value: "SegNet 1100Caffe"

                            },

                            {

                                num: NumberInt("3185"),

                                value: "DQN(Gluon:star 23MXNet"

                            },

                            {

                                num: NumberInt("3186"),

                                value: "GluonSeg(Gluon:star 8MXNet"

                            },

                            {

                                num: NumberInt("3187"),

                                value: "Double DQN(Gluon:star 7MXNet"

                            },

                            {

                                num: NumberInt("3188"),

                                value: "matchnet 6MXNet"

                            },

                            {

                                num: NumberInt("3189"),

                                value: "DeepID v1 5MXNet"

                            },

                            {

                                num: NumberInt("3190"),

                                value: "C3D 5MXNet"

                            },

                            {

                                num: NumberInt("3191"),

                                value: "DRL 5MXNet"

                            },

                            {

                                num: NumberInt("3192"),

                                value: "FCN-ASPP 3MXNet"

                            },

                            {

                                num: NumberInt("3193"),

                                value: "Deep-Q learning Pong with TensorFlow and PyGameTensorFlow"

                            },

                            {

                                num: NumberInt("3194"),

                                value: "DeepLabCaffe"

                            },

                            {

                                num: NumberInt("3195"),

                                value: "VGG-FaceCaffe"

                            },

                            {

                                num: NumberInt("3196"),

                                value: "LRCNCaffe"

                            },

                            {

                                num: NumberInt("3197"),

                                value: "Places CNNCaffe"

                            },

                            {

                                num: NumberInt("3198"),

                                value: "SRCNNCaffe"

                            },

                            {

                                num: NumberInt("3199"),

                                value: "DeepDriveCaffe"

                            },

                            {

                                num: NumberInt("3200"),

                                value: "Berkeley DeepDriveCaffe"

                            },

                            {

                                num: NumberInt("3201"),

                                value: "Princeton deepdrivingCaffe"

                            },

                            {

                                num: NumberInt("3202"),

                                value: "Sentiment AnalysisCaffe"

                            },

                            {

                                num: NumberInt("3203"),

                                value: "AlexNetCaffe2"

                            },

                            {

                                num: NumberInt("3204"),

                                value: "Inception v2Caffe2"

                            },

                            {

                                num: NumberInt("3205"),

                                value: "StyleTransferCaffe2"

                            },

                            {

                                num: NumberInt("3206"),

                                value: "VGG19Caffe2"

                            },

                            {

                                num: NumberInt("3207"),

                                value: "Multi-GPU Multi-Label DenseNet (Gluon:starMXNet"

                            },

                            {

                                num: NumberInt("3208"),

                                value: "NASNet-A(Gluon:starMXNet"

                            },

                            {

                                num: NumberInt("3209"),

                                value: "Light-Head R-CNNMXNet"

                            },

                            {

                                num: NumberInt("3210"),

                                value: "SegnetMXNet"

                            },

                            {

                                num: NumberInt("3211"),

                                value: "EASTMXNet"

                            },

                            {

                                num: NumberInt("3212"),

                                value: "RC3DMXNet"

                            },

                            {

                                num: NumberInt("3213"),

                                value: "Receptive Field ToolMXNet"

                            },

                            {

                                num: NumberInt("3214"),

                                value: "Reuters topic classificationKeras"

                            },

                            {

                                num: NumberInt("3215"),

                                value: "LSTM on the IMDB dataset (text sentiment classification)Keras"

                            },

                            {

                                num: NumberInt("3216"),

                                value: "Bidirectional LSTM on the IMDB datasetKeras"

                            },

                            {

                                num: NumberInt("3217"),

                                value: "1D CNN on the IMDB datasetKeras"

                            },

                            {

                                num: NumberInt("3218"),

                                value: "1D CNN-LSTM on the IMDB datasetKeras"

                            },

                            {

                                num: NumberInt("3219"),

                                value: "LSTM-based network on the bAbI datasetKeras"

                            },

                            {

                                num: NumberInt("3220"),

                                value: "Memory network on the bAbI dataset (reading comprehension question answering)Keras"

                            },

                            {

                                num: NumberInt("3221"),

                                value: "Sequence to sequence learning for performing additions of strings of digitsKeras"

                            },

                            {

                                num: NumberInt("3222"),

                                value: "LSTM text generationKeras"

                            },

                            {

                                num: NumberInt("3223"),

                                value: "Using pre-trained word embeddingsKeras"

                            },

                            {

                                num: NumberInt("3224"),

                                value: "FastText on the IMDB datasetKeras"

                            },

                            {

                                num: NumberInt("3225"),

                                value: "Structurally constrained recurrent nets text generationKeras"

                            },

                            {

                                num: NumberInt("3226"),

                                value: "Simple CNN on MNISTKeras"

                            },

                            {

                                num: NumberInt("3227"),

                                value: "Simple CNN on CIFAR10 with data augmentationKeras"

                            },

                            {

                                num: NumberInt("3228"),

                                value: "Inception v3Keras"

                            },

                            {

                                num: NumberInt("3229"),

                                value: "VGG 16 (with pre-trained weights)Keras"

                            },

                            {

                                num: NumberInt("3230"),

                                value: "VGG 19 (with pre-trained weights)Keras"

                            },

                            {

                                num: NumberInt("3231"),

                                value: "Neural Style TransferKeras"

                            },

                            {

                                num: NumberInt("3232"),

                                value: "Visualizing the filters learned by a CNNKeras"

                            },

                            {

                                num: NumberInt("3233"),

                                value: "Deep dreamsKeras"

                            },

                            {

                                num: NumberInt("3234"),

                                value: "Stateful LSTMKeras"

                            },

                            {

                                num: NumberInt("3235"),

                                value: "Siamese networkKeras"

                            },

                            {

                                num: NumberInt("3236"),

                                value: "Pretraining on a different datasetKeras"

                            },

                            {

                                num: NumberInt("3237"),

                                value: "s2cnn 874PyTorch"

                            },

                            {

                                num: NumberInt("3238"),

                                value: "jackson jaxrs propertyfiltering 24JAX"

                            },

                            {

                                num: NumberInt("3239"),

                                value: "e3nn jax 23JAX"

                            },

                            {

                                num: NumberInt("3240"),

                                value: "jaxtorch 16JAX"

                            },

                            {

                                num: NumberInt("3241"),

                                value: "osgi jaxrs extracted 3JAX"

                            },

                            {

                                num: NumberInt("3242"),

                                value: "Pytorch implementation 2PyTorch"

                            },

                            {

                                num: NumberInt("3243"),

                                value: "flax BERTJAX"

                            },

                            {

                                num: NumberInt("3244"),

                                value: "lecun1989 flaxJAX"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_linkAddress",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://modelzoo.co/model/openpose-caffe"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://modelzoo.co/model/mask-r-cnn-keras"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://modelzoo.co/model/detectron2"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://modelzoo.co/model/ray"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://modelzoo.co/model/mmdetection"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://modelzoo.co/model/pytorch-cyclegan-and-pix2pix"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://modelzoo.co/model/awesome-pytorch-list"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://modelzoo.co/model/stylegan"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://modelzoo.co/model/pytorch-gan"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://modelzoo.co/model/best-of-ml-python"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://modelzoo.co/model/fastphotostyle"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://modelzoo.co/model/albumentations"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://modelzoo.co/model/mathjax"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://modelzoo.co/model/maskrcnn-benchmark"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://modelzoo.co/model/vid2vid"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://modelzoo.co/model/annotated-deep-learning-paper-implementations"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://modelzoo.co/model/tensorboard-pytorch"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://modelzoo.co/model/deep-image-prior"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://modelzoo.co/model/dcgan-tensorflow"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://modelzoo.co/model/trax"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://modelzoo.co/model/faster-rcnnpytorch"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://modelzoo.co/model/yolo-tensorflow"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://modelzoo.co/model/tts"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://modelzoo.co/model/progressive-growing-of-gans-for-improved-tensorflow"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://modelzoo.co/model/pix2pixhd"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://modelzoo.co/model/open-source-mit-neural-machine-translation-nmt"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://modelzoo.co/model/einops"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://modelzoo.co/model/deep-reinforcement-learning-for-keras"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://modelzoo.co/model/pytorch-unet-2"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://modelzoo.co/model/wavenet-tensorflow"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://modelzoo.co/model/yet-another-efficientdet-pytorch"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://modelzoo.co/model/external-attention-pytorch"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://modelzoo.co/model/stargan-pytorch"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://modelzoo.co/model/stargan"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://modelzoo.co/model/espnet"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://modelzoo.co/model/augmentor"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://modelzoo.co/model/sketch-code"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://modelzoo.co/model/semantic-segmentation-pytorch"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://modelzoo.co/model/deep-reinforcement-learning-algorithms-with-pytorch"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://modelzoo.co/model/semantic-segmentation-pytorch-2"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://modelzoo.co/model/pytorch-yolov4"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://modelzoo.co/model/pytorch-seq2seq-2"

                            },

                            {

                                num: NumberInt("42"),

                                value: "https://modelzoo.co/model/animegan-tensorflow"

                            },

                            {

                                num: NumberInt("43"),

                                value: "https://modelzoo.co/model/colornet"

                            },

                            {

                                num: NumberInt("44"),

                                value: "https://modelzoo.co/model/mmsegmentation"

                            },

                            {

                                num: NumberInt("45"),

                                value: "https://modelzoo.co/model/image-analogies"

                            },

                            {

                                num: NumberInt("46"),

                                value: "https://modelzoo.co/model/stable-baselines3"

                            },

                            {

                                num: NumberInt("47"),

                                value: "https://modelzoo.co/model/flax-60"

                            },

                            {

                                num: NumberInt("48"),

                                value: "https://modelzoo.co/model/pytorch-semseg"

                            },

                            {

                                num: NumberInt("49"),

                                value: "https://modelzoo.co/model/fully-convolutional-networks-for-semantic-segmentation-caffe"

                            },

                            {

                                num: NumberInt("50"),

                                value: "https://modelzoo.co/model/tensorwatch"

                            },

                            {

                                num: NumberInt("51"),

                                value: "https://modelzoo.co/model/pytorch-vae"

                            },

                            {

                                num: NumberInt("52"),

                                value: "https://modelzoo.co/model/pytorch-yolo-v3"

                            },

                            {

                                num: NumberInt("53"),

                                value: "https://modelzoo.co/model/immutables"

                            },

                            {

                                num: NumberInt("54"),

                                value: "https://modelzoo.co/model/mmediting"

                            },

                            {

                                num: NumberInt("55"),

                                value: "https://modelzoo.co/model/wassersteingan"

                            },

                            {

                                num: NumberInt("56"),

                                value: "https://modelzoo.co/model/stylegan2-pytorch"

                            },

                            {

                                num: NumberInt("57"),

                                value: "https://modelzoo.co/model/colorful-image-colorization"

                            },

                            {

                                num: NumberInt("58"),

                                value: "https://modelzoo.co/model/muse"

                            },

                            {

                                num: NumberInt("59"),

                                value: "https://modelzoo.co/model/east-tensorflow"

                            },

                            {

                                num: NumberInt("60"),

                                value: "https://modelzoo.co/model/stargan-v2"

                            },

                            {

                                num: NumberInt("61"),

                                value: "https://modelzoo.co/model/deepnlp-models-pytorch"

                            },

                            {

                                num: NumberInt("62"),

                                value: "https://modelzoo.co/model/chatbot"

                            },

                            {

                                num: NumberInt("63"),

                                value: "https://modelzoo.co/model/pytorch-a2c-ppo-acktr"

                            },

                            {

                                num: NumberInt("64"),

                                value: "https://modelzoo.co/model/tensorflow-internals"

                            },

                            {

                                num: NumberInt("65"),

                                value: "https://modelzoo.co/model/pytorch-a2c-ppo-acktr-gail"

                            },

                            {

                                num: NumberInt("66"),

                                value: "https://modelzoo.co/model/super-slomo"

                            },

                            {

                                num: NumberInt("67"),

                                value: "https://modelzoo.co/model/alpha-zero-general"

                            },

                            {

                                num: NumberInt("68"),

                                value: "https://modelzoo.co/model/deeprl"

                            },

                            {

                                num: NumberInt("69"),

                                value: "https://modelzoo.co/model/srgan"

                            },

                            {

                                num: NumberInt("70"),

                                value: "https://modelzoo.co/model/alphazero-gomoku"

                            },

                            {

                                num: NumberInt("71"),

                                value: "https://modelzoo.co/model/pytorch-studiogan"

                            },

                            {

                                num: NumberInt("72"),

                                value: "https://modelzoo.co/model/biggan-pytorch"

                            },

                            {

                                num: NumberInt("73"),

                                value: "https://modelzoo.co/model/image-classification-mobile"

                            },

                            {

                                num: NumberInt("74"),

                                value: "https://modelzoo.co/model/popular-image-segmentation-models"

                            },

                            {

                                num: NumberInt("75"),

                                value: "https://modelzoo.co/model/semantic-segmentation-suite"

                            },

                            {

                                num: NumberInt("76"),

                                value: "https://modelzoo.co/model/yolov3-tf2"

                            },

                            {

                                num: NumberInt("77"),

                                value: "https://modelzoo.co/model/faster-rcnn-tensorflow"

                            },

                            {

                                num: NumberInt("78"),

                                value: "https://modelzoo.co/model/craft-pytorch"

                            },

                            {

                                num: NumberInt("79"),

                                value: "https://modelzoo.co/model/dqn-tensorflow"

                            },

                            {

                                num: NumberInt("80"),

                                value: "https://modelzoo.co/model/mmdetection3d"

                            },

                            {

                                num: NumberInt("81"),

                                value: "https://modelzoo.co/model/vibe"

                            },

                            {

                                num: NumberInt("82"),

                                value: "https://modelzoo.co/model/pytorch-kaldi"

                            },

                            {

                                num: NumberInt("83"),

                                value: "https://modelzoo.co/model/deeprl-agents"

                            },

                            {

                                num: NumberInt("84"),

                                value: "https://modelzoo.co/model/deep-reinforcement-learning-with-pytorch"

                            },

                            {

                                num: NumberInt("85"),

                                value: "https://modelzoo.co/model/3ddfa-v2"

                            },

                            {

                                num: NumberInt("86"),

                                value: "https://modelzoo.co/model/deblurgan"

                            },

                            {

                                num: NumberInt("87"),

                                value: "https://modelzoo.co/model/tensorflow-yolov4-tflite"

                            },

                            {

                                num: NumberInt("88"),

                                value: "https://modelzoo.co/model/tacotron-2-tensorflow"

                            },

                            {

                                num: NumberInt("89"),

                                value: "https://modelzoo.co/model/unet-family"

                            },

                            {

                                num: NumberInt("90"),

                                value: "https://modelzoo.co/model/dm-haiku"

                            },

                            {

                                num: NumberInt("91"),

                                value: "https://modelzoo.co/model/pygat"

                            },

                            {

                                num: NumberInt("92"),

                                value: "https://modelzoo.co/model/waveglow"

                            },

                            {

                                num: NumberInt("93"),

                                value: "https://modelzoo.co/model/rlpyt"

                            },

                            {

                                num: NumberInt("94"),

                                value: "https://modelzoo.co/model/senetpytorch"

                            },

                            {

                                num: NumberInt("95"),

                                value: "https://modelzoo.co/model/deepspeech2"

                            },

                            {

                                num: NumberInt("96"),

                                value: "https://modelzoo.co/model/edsr-pytorch"

                            },

                            {

                                num: NumberInt("97"),

                                value: "https://modelzoo.co/model/an-end-to-end-trainable-neural-network-for"

                            },

                            {

                                num: NumberInt("98"),

                                value: "https://modelzoo.co/model/chess-reinforcement-learning"

                            },

                            {

                                num: NumberInt("99"),

                                value: "https://modelzoo.co/model/lanenet-lane-detection"

                            },

                            {

                                num: NumberInt("100"),

                                value: "https://modelzoo.co/model/image-super-resolution-via-iterative-refinement"

                            },

                            {

                                num: NumberInt("101"),

                                value: "https://modelzoo.co/model/pytorch-retinanet-2"

                            },

                            {

                                num: NumberInt("102"),

                                value: "https://modelzoo.co/model/unit"

                            },

                            {

                                num: NumberInt("103"),

                                value: "https://modelzoo.co/model/neural-sequence-labeling-model"

                            },

                            {

                                num: NumberInt("104"),

                                value: "https://modelzoo.co/model/yolov7"

                            },

                            {

                                num: NumberInt("105"),

                                value: "https://modelzoo.co/model/lip-reading"

                            },

                            {

                                num: NumberInt("106"),

                                value: "https://modelzoo.co/model/yolo-tensorflow-tensorflow"

                            },

                            {

                                num: NumberInt("107"),

                                value: "https://modelzoo.co/model/deepvoice3_pytorch"

                            },

                            {

                                num: NumberInt("108"),

                                value: "https://modelzoo.co/model/audio"

                            },

                            {

                                num: NumberInt("109"),

                                value: "https://modelzoo.co/model/gandissect"

                            },

                            {

                                num: NumberInt("110"),

                                value: "https://modelzoo.co/model/tabnet"

                            },

                            {

                                num: NumberInt("111"),

                                value: "https://modelzoo.co/model/capsule-networks"

                            },

                            {

                                num: NumberInt("112"),

                                value: "https://modelzoo.co/model/impersonator"

                            },

                            {

                                num: NumberInt("113"),

                                value: "https://modelzoo.co/model/faster-rcnn"

                            },

                            {

                                num: NumberInt("114"),

                                value: "https://modelzoo.co/model/pytorch-semantic-segmentation"

                            },

                            {

                                num: NumberInt("115"),

                                value: "https://modelzoo.co/model/deep-rl-tensorflow"

                            },

                            {

                                num: NumberInt("116"),

                                value: "https://modelzoo.co/model/yolor"

                            },

                            {

                                num: NumberInt("117"),

                                value: "https://modelzoo.co/model/pointnet-pointnet2-pytorch"

                            },

                            {

                                num: NumberInt("118"),

                                value: "https://modelzoo.co/model/yolov3_tensorflow-2"

                            },

                            {

                                num: NumberInt("119"),

                                value: "https://modelzoo.co/model/lightweight-human-pose-estimationpytorch"

                            },

                            {

                                num: NumberInt("120"),

                                value: "https://modelzoo.co/model/pointnetpytorch"

                            },

                            {

                                num: NumberInt("121"),

                                value: "https://modelzoo.co/model/pyannote-audio"

                            },

                            {

                                num: NumberInt("122"),

                                value: "https://modelzoo.co/model/unsupervisedmt"

                            },

                            {

                                num: NumberInt("123"),

                                value: "https://modelzoo.co/model/nvidiasemantic-segmentation"

                            },

                            {

                                num: NumberInt("124"),

                                value: "https://modelzoo.co/model/fast-autoaugment"

                            },

                            {

                                num: NumberInt("125"),

                                value: "https://modelzoo.co/model/ganotebooks"

                            },

                            {

                                num: NumberInt("126"),

                                value: "https://modelzoo.co/model/simplehtr"

                            },

                            {

                                num: NumberInt("127"),

                                value: "https://modelzoo.co/model/numpyro"

                            },

                            {

                                num: NumberInt("128"),

                                value: "https://modelzoo.co/model/non-local-pytorch"

                            },

                            {

                                num: NumberInt("129"),

                                value: "https://modelzoo.co/model/efficientdetpytorch-2"

                            },

                            {

                                num: NumberInt("130"),

                                value: "https://modelzoo.co/model/mathjax-src"

                            },

                            {

                                num: NumberInt("131"),

                                value: "https://modelzoo.co/model/pytorch-seq2seq"

                            },

                            {

                                num: NumberInt("132"),

                                value: "https://modelzoo.co/model/classyvision"

                            },

                            {

                                num: NumberInt("133"),

                                value: "https://modelzoo.co/model/simclr-2"

                            },

                            {

                                num: NumberInt("134"),

                                value: "https://modelzoo.co/model/knowledge-distillation-pytorch"

                            },

                            {

                                num: NumberInt("135"),

                                value: "https://modelzoo.co/model/big-transfer"

                            },

                            {

                                num: NumberInt("136"),

                                value: "https://modelzoo.co/model/pytorch-cpp"

                            },

                            {

                                num: NumberInt("137"),

                                value: "https://modelzoo.co/model/deeposm"

                            },

                            {

                                num: NumberInt("138"),

                                value: "https://modelzoo.co/model/wgan-gp"

                            },

                            {

                                num: NumberInt("139"),

                                value: "https://modelzoo.co/model/rainbow"

                            },

                            {

                                num: NumberInt("140"),

                                value: "https://modelzoo.co/model/3d-ken-burns"

                            },

                            {

                                num: NumberInt("141"),

                                value: "https://modelzoo.co/model/fcntensorflow"

                            },

                            {

                                num: NumberInt("142"),

                                value: "https://modelzoo.co/model/bayesian-neural-networks"

                            },

                            {

                                num: NumberInt("143"),

                                value: "https://modelzoo.co/model/ssd"

                            },

                            {

                                num: NumberInt("144"),

                                value: "https://modelzoo.co/model/super-resolution"

                            },

                            {

                                num: NumberInt("145"),

                                value: "https://modelzoo.co/model/pytorch-ssd"

                            },

                            {

                                num: NumberInt("146"),

                                value: "https://modelzoo.co/model/qrec"

                            },

                            {

                                num: NumberInt("147"),

                                value: "https://modelzoo.co/model/neuraltalk2-pytorch"

                            },

                            {

                                num: NumberInt("148"),

                                value: "https://modelzoo.co/model/animegan"

                            },

                            {

                                num: NumberInt("149"),

                                value: "https://modelzoo.co/model/cyclegan-tensorflow-3"

                            },

                            {

                                num: NumberInt("150"),

                                value: "https://modelzoo.co/model/pytorch-openpose"

                            },

                            {

                                num: NumberInt("151"),

                                value: "https://modelzoo.co/model/one-pixel-attack-keras"

                            },

                            {

                                num: NumberInt("152"),

                                value: "https://modelzoo.co/model/scenic"

                            },

                            {

                                num: NumberInt("153"),

                                value: "https://modelzoo.co/model/image-outpainting"

                            },

                            {

                                num: NumberInt("154"),

                                value: "https://modelzoo.co/model/tensorflow-fcn"

                            },

                            {

                                num: NumberInt("155"),

                                value: "https://modelzoo.co/model/slm-lab"

                            },

                            {

                                num: NumberInt("156"),

                                value: "https://modelzoo.co/model/open-clip"

                            },

                            {

                                num: NumberInt("157"),

                                value: "https://modelzoo.co/model/pytorch-image-classification"

                            },

                            {

                                num: NumberInt("158"),

                                value: "https://modelzoo.co/model/functorch"

                            },

                            {

                                num: NumberInt("159"),

                                value: "https://modelzoo.co/model/pointnet2-pytorch"

                            },

                            {

                                num: NumberInt("160"),

                                value: "https://modelzoo.co/model/tensorflow-programs-and-tutorials"

                            },

                            {

                                num: NumberInt("161"),

                                value: "https://modelzoo.co/model/yolov4-deepsort"

                            },

                            {

                                num: NumberInt("162"),

                                value: "https://modelzoo.co/model/r-fcn"

                            },

                            {

                                num: NumberInt("163"),

                                value: "https://modelzoo.co/model/discogan"

                            },

                            {

                                num: NumberInt("164"),

                                value: "https://modelzoo.co/model/sentiment-discovery"

                            },

                            {

                                num: NumberInt("165"),

                                value: "https://modelzoo.co/model/advertorch"

                            },

                            {

                                num: NumberInt("166"),

                                value: "https://modelzoo.co/model/async-rl"

                            },

                            {

                                num: NumberInt("167"),

                                value: "https://modelzoo.co/model/chainerrl"

                            },

                            {

                                num: NumberInt("168"),

                                value: "https://modelzoo.co/model/asynchronous-methods-for-deep-reinforcement-learning"

                            },

                            {

                                num: NumberInt("169"),

                                value: "https://modelzoo.co/model/qanet"

                            },

                            {

                                num: NumberInt("170"),

                                value: "https://modelzoo.co/model/sepconv-slomo"

                            },

                            {

                                num: NumberInt("171"),

                                value: "https://modelzoo.co/model/deep-learning-tensorflow"

                            },

                            {

                                num: NumberInt("172"),

                                value: "https://modelzoo.co/model/variational-autoencoder-2"

                            },

                            {

                                num: NumberInt("173"),

                                value: "https://modelzoo.co/model/jraph"

                            },

                            {

                                num: NumberInt("174"),

                                value: "https://modelzoo.co/model/uncertainty-baselines"

                            },

                            {

                                num: NumberInt("175"),

                                value: "https://modelzoo.co/model/pytorch-pretrained-biggan"

                            },

                            {

                                num: NumberInt("176"),

                                value: "https://modelzoo.co/model/deeplab-pytorch"

                            },

                            {

                                num: NumberInt("177"),

                                value: "https://modelzoo.co/model/bisenet"

                            },

                            {

                                num: NumberInt("178"),

                                value: "https://modelzoo.co/model/srec"

                            },

                            {

                                num: NumberInt("179"),

                                value: "https://modelzoo.co/model/began-tensorflow"

                            },

                            {

                                num: NumberInt("180"),

                                value: "https://modelzoo.co/model/tf-ner"

                            },

                            {

                                num: NumberInt("181"),

                                value: "https://modelzoo.co/model/ultrasound-nerve-segmentation"

                            },

                            {

                                num: NumberInt("182"),

                                value: "https://modelzoo.co/model/chainer-dcgan"

                            },

                            {

                                num: NumberInt("183"),

                                value: "https://modelzoo.co/model/spatial-transformer-network"

                            },

                            {

                                num: NumberInt("184"),

                                value: "https://modelzoo.co/model/transformertts"

                            },

                            {

                                num: NumberInt("185"),

                                value: "https://modelzoo.co/model/conv-emotion"

                            },

                            {

                                num: NumberInt("186"),

                                value: "https://modelzoo.co/model/show-attend-and-tell-tensorflow"

                            },

                            {

                                num: NumberInt("187"),

                                value: "https://modelzoo.co/model/res2net-pretrainedmodels"

                            },

                            {

                                num: NumberInt("188"),

                                value: "https://modelzoo.co/model/show-attend-and-tell"

                            },

                            {

                                num: NumberInt("189"),

                                value: "https://modelzoo.co/model/espresso"

                            },

                            {

                                num: NumberInt("190"),

                                value: "https://modelzoo.co/model/tensorflow-yolo-v3"

                            },

                            {

                                num: NumberInt("191"),

                                value: "https://modelzoo.co/model/deeprl-tutorials"

                            },

                            {

                                num: NumberInt("192"),

                                value: "https://modelzoo.co/model/gan_stability"

                            },

                            {

                                num: NumberInt("193"),

                                value: "https://modelzoo.co/model/loop"

                            },

                            {

                                num: NumberInt("194"),

                                value: "https://modelzoo.co/model/adversarial-attacks-pytorch"

                            },

                            {

                                num: NumberInt("195"),

                                value: "https://modelzoo.co/model/cnngesturerecognizer"

                            },

                            {

                                num: NumberInt("196"),

                                value: "https://modelzoo.co/model/domain-transfer-network-tensorflow"

                            },

                            {

                                num: NumberInt("197"),

                                value: "https://modelzoo.co/model/domain-transfer-network"

                            },

                            {

                                num: NumberInt("198"),

                                value: "https://modelzoo.co/model/pconv-keras"

                            },

                            {

                                num: NumberInt("199"),

                                value: "https://modelzoo.co/model/self-criticalpytorch"

                            },

                            {

                                num: NumberInt("200"),

                                value: "https://modelzoo.co/model/mixnmatch"

                            },

                            {

                                num: NumberInt("201"),

                                value: "https://modelzoo.co/model/bert-keras"

                            },

                            {

                                num: NumberInt("202"),

                                value: "https://modelzoo.co/model/srgan-pytorch"

                            },

                            {

                                num: NumberInt("203"),

                                value: "https://modelzoo.co/model/cleanrl"

                            },

                            {

                                num: NumberInt("204"),

                                value: "https://modelzoo.co/model/keras-vggface"

                            },

                            {

                                num: NumberInt("205"),

                                value: "https://modelzoo.co/model/pytorch-rl-2"

                            },

                            {

                                num: NumberInt("206"),

                                value: "https://modelzoo.co/model/seq2seq-chatbot"

                            },

                            {

                                num: NumberInt("207"),

                                value: "https://modelzoo.co/model/deeplab-v3"

                            },

                            {

                                num: NumberInt("208"),

                                value: "https://modelzoo.co/model/dextr-pytorch"

                            },

                            {

                                num: NumberInt("209"),

                                value: "https://modelzoo.co/model/pytorch-cyclegan"

                            },

                            {

                                num: NumberInt("210"),

                                value: "https://modelzoo.co/model/jetson-reinforcement"

                            },

                            {

                                num: NumberInt("211"),

                                value: "https://modelzoo.co/model/graph-nets"

                            },

                            {

                                num: NumberInt("212"),

                                value: "https://modelzoo.co/model/saliency"

                            },

                            {

                                num: NumberInt("213"),

                                value: "https://modelzoo.co/model/tps-stn-pytorch"

                            },

                            {

                                num: NumberInt("214"),

                                value: "https://modelzoo.co/model/stackgan-v2"

                            },

                            {

                                num: NumberInt("215"),

                                value: "https://modelzoo.co/model/pytorch-resnet-cifar10"

                            },

                            {

                                num: NumberInt("216"),

                                value: "https://modelzoo.co/model/tf-coriander"

                            },

                            {

                                num: NumberInt("217"),

                                value: "https://modelzoo.co/model/yolo_tensorflow-2"

                            },

                            {

                                num: NumberInt("218"),

                                value: "https://modelzoo.co/model/tffm"

                            },

                            {

                                num: NumberInt("219"),

                                value: "https://modelzoo.co/model/tensorflow-yolo"

                            },

                            {

                                num: NumberInt("220"),

                                value: "https://modelzoo.co/model/pytorch-rl"

                            },

                            {

                                num: NumberInt("221"),

                                value: "https://modelzoo.co/model/optax"

                            },

                            {

                                num: NumberInt("222"),

                                value: "https://modelzoo.co/model/athena"

                            },

                            {

                                num: NumberInt("223"),

                                value: "https://modelzoo.co/model/two-stream-action-recognition"

                            },

                            {

                                num: NumberInt("224"),

                                value: "https://modelzoo.co/model/pytorch-adain-2"

                            },

                            {

                                num: NumberInt("225"),

                                value: "https://modelzoo.co/model/benchmark-vae"

                            },

                            {

                                num: NumberInt("226"),

                                value: "https://modelzoo.co/model/bert-for-tf2"

                            },

                            {

                                num: NumberInt("227"),

                                value: "https://modelzoo.co/model/ssd-mxnet"

                            },

                            {

                                num: NumberInt("228"),

                                value: "https://modelzoo.co/model/official-discogan-implementation"

                            },

                            {

                                num: NumberInt("229"),

                                value: "https://modelzoo.co/model/fadernetworks"

                            },

                            {

                                num: NumberInt("230"),

                                value: "https://modelzoo.co/model/pggan-pytorch"

                            },

                            {

                                num: NumberInt("231"),

                                value: "https://modelzoo.co/model/tf-rnn-attention"

                            },

                            {

                                num: NumberInt("232"),

                                value: "https://modelzoo.co/model/senet-tensorflow"

                            },

                            {

                                num: NumberInt("233"),

                                value: "https://modelzoo.co/model/gangealing"

                            },

                            {

                                num: NumberInt("234"),

                                value: "https://modelzoo.co/model/pytorch-segmentation-toolbox"

                            },

                            {

                                num: NumberInt("235"),

                                value: "https://modelzoo.co/model/swagger-maven-plugin"

                            },

                            {

                                num: NumberInt("236"),

                                value: "https://modelzoo.co/model/grad-cam-pytorch"

                            },

                            {

                                num: NumberInt("237"),

                                value: "https://modelzoo.co/model/pytorch-lr-finder"

                            },

                            {

                                num: NumberInt("238"),

                                value: "https://modelzoo.co/model/cyclegan-tensorflow-4"

                            },

                            {

                                num: NumberInt("239"),

                                value: "https://modelzoo.co/model/seq2seq"

                            },

                            {

                                num: NumberInt("240"),

                                value: "https://modelzoo.co/model/fastspeech"

                            },

                            {

                                num: NumberInt("241"),

                                value: "https://modelzoo.co/model/neural-image-assessment-tensorflow"

                            },

                            {

                                num: NumberInt("242"),

                                value: "https://modelzoo.co/model/ppo-pytorch"

                            },

                            {

                                num: NumberInt("243"),

                                value: "https://modelzoo.co/model/torchdistill"

                            },

                            {

                                num: NumberInt("244"),

                                value: "https://modelzoo.co/model/randwirenn"

                            },

                            {

                                num: NumberInt("245"),

                                value: "https://modelzoo.co/model/dbnetpytorch"

                            },

                            {

                                num: NumberInt("246"),

                                value: "https://modelzoo.co/model/faster-rcnn-mxnet"

                            },

                            {

                                num: NumberInt("247"),

                                value: "https://modelzoo.co/model/awesome-jax-2"

                            },

                            {

                                num: NumberInt("248"),

                                value: "https://modelzoo.co/model/bert-multi-label-text-classification"

                            },

                            {

                                num: NumberInt("249"),

                                value: "https://modelzoo.co/model/pytorch-maml-rl"

                            },

                            {

                                num: NumberInt("250"),

                                value: "https://modelzoo.co/model/speech-transformer"

                            },

                            {

                                num: NumberInt("251"),

                                value: "https://modelzoo.co/model/tensorslow"

                            },

                            {

                                num: NumberInt("252"),

                                value: "https://modelzoo.co/model/semi-supervised-pytorch"

                            },

                            {

                                num: NumberInt("253"),

                                value: "https://modelzoo.co/model/dcscn-super-resolution"

                            },

                            {

                                num: NumberInt("254"),

                                value: "https://modelzoo.co/model/sequence-labeling-bilstm-crf"

                            },

                            {

                                num: NumberInt("255"),

                                value: "https://modelzoo.co/model/pytorch-original-transformer"

                            },

                            {

                                num: NumberInt("256"),

                                value: "https://modelzoo.co/model/rl-book"

                            },

                            {

                                num: NumberInt("257"),

                                value: "https://modelzoo.co/model/uvadlc-notebooks"

                            },

                            {

                                num: NumberInt("258"),

                                value: "https://modelzoo.co/model/cifar-zoo"

                            },

                            {

                                num: NumberInt("259"),

                                value: "https://modelzoo.co/model/natspeech"

                            },

                            {

                                num: NumberInt("260"),

                                value: "https://modelzoo.co/model/tensor-sensor"

                            },

                            {

                                num: NumberInt("261"),

                                value: "https://modelzoo.co/model/class-balanced-loss-pytorch"

                            },

                            {

                                num: NumberInt("262"),

                                value: "https://modelzoo.co/model/deeplabv3"

                            },

                            {

                                num: NumberInt("263"),

                                value: "https://modelzoo.co/model/speech"

                            },

                            {

                                num: NumberInt("264"),

                                value: "https://modelzoo.co/model/android-yolo"

                            },

                            {

                                num: NumberInt("265"),

                                value: "https://modelzoo.co/model/score-sde"

                            },

                            {

                                num: NumberInt("266"),

                                value: "https://modelzoo.co/model/yolov3_pytorch-2"

                            },

                            {

                                num: NumberInt("267"),

                                value: "https://modelzoo.co/model/3dmppe-posenet-release"

                            },

                            {

                                num: NumberInt("268"),

                                value: "https://modelzoo.co/model/tensorflow-vae-gan-draw"

                            },

                            {

                                num: NumberInt("269"),

                                value: "https://modelzoo.co/model/r-net"

                            },

                            {

                                num: NumberInt("270"),

                                value: "https://modelzoo.co/model/dnc-tensorflow"

                            },

                            {

                                num: NumberInt("271"),

                                value: "https://modelzoo.co/model/efficientdet"

                            },

                            {

                                num: NumberInt("272"),

                                value: "https://modelzoo.co/model/text-summarization-tensorflow"

                            },

                            {

                                num: NumberInt("273"),

                                value: "https://modelzoo.co/model/wgan-tensorflow"

                            },

                            {

                                num: NumberInt("274"),

                                value: "https://modelzoo.co/model/mushroom"

                            },

                            {

                                num: NumberInt("275"),

                                value: "https://modelzoo.co/model/densenet-tensorflow"

                            },

                            {

                                num: NumberInt("276"),

                                value: "https://modelzoo.co/model/vnetpytorch"

                            },

                            {

                                num: NumberInt("277"),

                                value: "https://modelzoo.co/model/keras-mmoe"

                            },

                            {

                                num: NumberInt("278"),

                                value: "https://modelzoo.co/model/pytorch-image-classification-2"

                            },

                            {

                                num: NumberInt("279"),

                                value: "https://modelzoo.co/model/hierarchical-attention-networks-for-document-classification"

                            },

                            {

                                num: NumberInt("280"),

                                value: "https://modelzoo.co/model/pytorch-nested-unet"

                            },

                            {

                                num: NumberInt("281"),

                                value: "https://modelzoo.co/model/pytorch-siamfc"

                            },

                            {

                                num: NumberInt("282"),

                                value: "https://modelzoo.co/model/autonomous-learning-library"

                            },

                            {

                                num: NumberInt("283"),

                                value: "https://modelzoo.co/model/n-beats"

                            },

                            {

                                num: NumberInt("284"),

                                value: "https://modelzoo.co/model/detectron-models-for-object-detection"

                            },

                            {

                                num: NumberInt("285"),

                                value: "https://modelzoo.co/model/gan-cls"

                            },

                            {

                                num: NumberInt("286"),

                                value: "https://modelzoo.co/model/attgan"

                            },

                            {

                                num: NumberInt("287"),

                                value: "https://modelzoo.co/model/pytorch-progressive_growing_of_gans"

                            },

                            {

                                num: NumberInt("288"),

                                value: "https://modelzoo.co/model/tensorflow-value-iteration-networks"

                            },

                            {

                                num: NumberInt("289"),

                                value: "https://modelzoo.co/model/detecto"

                            },

                            {

                                num: NumberInt("290"),

                                value: "https://modelzoo.co/model/multilabel-timeseries-classification-with-lstm"

                            },

                            {

                                num: NumberInt("291"),

                                value: "https://modelzoo.co/model/specaugment"

                            },

                            {

                                num: NumberInt("292"),

                                value: "https://modelzoo.co/model/swin-transformer-pytorch"

                            },

                            {

                                num: NumberInt("293"),

                                value: "https://modelzoo.co/model/convcrf"

                            },

                            {

                                num: NumberInt("294"),

                                value: "https://modelzoo.co/model/neural-sp"

                            },

                            {

                                num: NumberInt("295"),

                                value: "https://modelzoo.co/model/dropblock"

                            },

                            {

                                num: NumberInt("296"),

                                value: "https://modelzoo.co/model/reinforcement-learning-algorithms"

                            },

                            {

                                num: NumberInt("297"),

                                value: "https://modelzoo.co/model/deep-transfer-learning"

                            },

                            {

                                num: NumberInt("298"),

                                value: "https://modelzoo.co/model/dann"

                            },

                            {

                                num: NumberInt("299"),

                                value: "https://modelzoo.co/model/xlnet-pytorch"

                            },

                            {

                                num: NumberInt("300"),

                                value: "https://modelzoo.co/model/pytorch-deform-conv-v2"

                            },

                            {

                                num: NumberInt("301"),

                                value: "https://modelzoo.co/model/sentence-vae"

                            },

                            {

                                num: NumberInt("302"),

                                value: "https://modelzoo.co/model/east-pytorch"

                            },

                            {

                                num: NumberInt("303"),

                                value: "https://modelzoo.co/model/deep-metric-learning-baselines"

                            },

                            {

                                num: NumberInt("304"),

                                value: "https://modelzoo.co/model/rl_a3c_pytorch"

                            },

                            {

                                num: NumberInt("305"),

                                value: "https://modelzoo.co/model/indrnn"

                            },

                            {

                                num: NumberInt("306"),

                                value: "https://modelzoo.co/model/seq2seqpytorch"

                            },

                            {

                                num: NumberInt("307"),

                                value: "https://modelzoo.co/model/pspnet-pytorch"

                            },

                            {

                                num: NumberInt("308"),

                                value: "https://modelzoo.co/model/jaxopt"

                            },

                            {

                                num: NumberInt("309"),

                                value: "https://modelzoo.co/model/how-do-vits-work"

                            },

                            {

                                num: NumberInt("310"),

                                value: "https://modelzoo.co/model/neural-caption-generator"

                            },

                            {

                                num: NumberInt("311"),

                                value: "https://modelzoo.co/model/t2f"

                            },

                            {

                                num: NumberInt("312"),

                                value: "https://modelzoo.co/model/densenet-tensorflow-2"

                            },

                            {

                                num: NumberInt("313"),

                                value: "https://modelzoo.co/model/pytorch-medical-segmentation"

                            },

                            {

                                num: NumberInt("314"),

                                value: "https://modelzoo.co/model/pytorch-inpainting-with-partial-conv"

                            },

                            {

                                num: NumberInt("315"),

                                value: "https://modelzoo.co/model/biggan-pytorch-2"

                            },

                            {

                                num: NumberInt("316"),

                                value: "https://modelzoo.co/model/transformer-tts"

                            },

                            {

                                num: NumberInt("317"),

                                value: "https://modelzoo.co/model/pytorch-speaker-verification"

                            },

                            {

                                num: NumberInt("318"),

                                value: "https://modelzoo.co/model/brain-segmentation-pytorch"

                            },

                            {

                                num: NumberInt("319"),

                                value: "https://modelzoo.co/model/cnn-vis"

                            },

                            {

                                num: NumberInt("320"),

                                value: "https://modelzoo.co/model/tensorflow-psenet"

                            },

                            {

                                num: NumberInt("321"),

                                value: "https://modelzoo.co/model/lprnet-pytorch"

                            },

                            {

                                num: NumberInt("322"),

                                value: "https://modelzoo.co/model/mtan"

                            },

                            {

                                num: NumberInt("323"),

                                value: "https://modelzoo.co/model/text-classification-models-tf"

                            },

                            {

                                num: NumberInt("324"),

                                value: "https://modelzoo.co/model/pytorch-soft-actor-critic"

                            },

                            {

                                num: NumberInt("325"),

                                value: "https://modelzoo.co/model/panoptic-deeplab"

                            },

                            {

                                num: NumberInt("326"),

                                value: "https://modelzoo.co/model/fixmatch-pytorch"

                            },

                            {

                                num: NumberInt("327"),

                                value: "https://modelzoo.co/model/deeprl-tensorflow2"

                            },

                            {

                                num: NumberInt("328"),

                                value: "https://modelzoo.co/model/yolov4-custom-functions"

                            },

                            {

                                num: NumberInt("329"),

                                value: "https://modelzoo.co/model/pro_gan_pytorch"

                            },

                            {

                                num: NumberInt("330"),

                                value: "https://modelzoo.co/model/flowavenet"

                            },

                            {

                                num: NumberInt("331"),

                                value: "https://modelzoo.co/model/tensorflow-reinforce"

                            },

                            {

                                num: NumberInt("332"),

                                value: "https://modelzoo.co/model/two-stream-pytorch"

                            },

                            {

                                num: NumberInt("333"),

                                value: "https://modelzoo.co/model/conditional-pixelcnn-decoder"

                            },

                            {

                                num: NumberInt("334"),

                                value: "https://modelzoo.co/model/rnn-nlu"

                            },

                            {

                                num: NumberInt("335"),

                                value: "https://modelzoo.co/model/tfoptflow"

                            },

                            {

                                num: NumberInt("336"),

                                value: "https://modelzoo.co/model/simclr-pytorch"

                            },

                            {

                                num: NumberInt("337"),

                                value: "https://modelzoo.co/model/faster-rcnnfocal-loss"

                            },

                            {

                                num: NumberInt("338"),

                                value: "https://modelzoo.co/model/hourglasstensorlfow"

                            },

                            {

                                num: NumberInt("339"),

                                value: "https://modelzoo.co/model/monodepth-pytorch"

                            },

                            {

                                num: NumberInt("340"),

                                value: "https://modelzoo.co/model/tensorflow-mnist-vae"

                            },

                            {

                                num: NumberInt("341"),

                                value: "https://modelzoo.co/model/tfgans-comparison"

                            },

                            {

                                num: NumberInt("342"),

                                value: "https://modelzoo.co/model/mac-network"

                            },

                            {

                                num: NumberInt("343"),

                                value: "https://modelzoo.co/model/deepmot"

                            },

                            {

                                num: NumberInt("344"),

                                value: "https://modelzoo.co/model/cubert"

                            },

                            {

                                num: NumberInt("345"),

                                value: "https://modelzoo.co/model/deep-svdd-pytorch"

                            },

                            {

                                num: NumberInt("346"),

                                value: "https://modelzoo.co/model/conv-tasnet-pytorch"

                            },

                            {

                                num: NumberInt("347"),

                                value: "https://modelzoo.co/model/glow-pytorch-2"

                            },

                            {

                                num: NumberInt("348"),

                                value: "https://modelzoo.co/model/pytorch-wavelets"

                            },

                            {

                                num: NumberInt("349"),

                                value: "https://modelzoo.co/model/generative-models"

                            },

                            {

                                num: NumberInt("350"),

                                value: "https://modelzoo.co/model/vegans"

                            },

                            {

                                num: NumberInt("351"),

                                value: "https://modelzoo.co/model/pytorch-a3c"

                            },

                            {

                                num: NumberInt("352"),

                                value: "https://modelzoo.co/model/few-shot-patch-based-training"

                            },

                            {

                                num: NumberInt("353"),

                                value: "https://modelzoo.co/model/pytorch-cpn"

                            },

                            {

                                num: NumberInt("354"),

                                value: "https://modelzoo.co/model/tp-gan-tensorflow"

                            },

                            {

                                num: NumberInt("355"),

                                value: "https://modelzoo.co/model/psenetpytorch"

                            },

                            {

                                num: NumberInt("356"),

                                value: "https://modelzoo.co/model/ganilla"

                            },

                            {

                                num: NumberInt("357"),

                                value: "https://modelzoo.co/model/multi-task-learning-pytorch"

                            },

                            {

                                num: NumberInt("358"),

                                value: "https://modelzoo.co/model/recurrent-visual-attention"

                            },

                            {

                                num: NumberInt("359"),

                                value: "https://modelzoo.co/model/pointer-network-tensorflow"

                            },

                            {

                                num: NumberInt("360"),

                                value: "https://modelzoo.co/model/libtorch-yolov3"

                            },

                            {

                                num: NumberInt("361"),

                                value: "https://modelzoo.co/model/rl-algorithms"

                            },

                            {

                                num: NumberInt("362"),

                                value: "https://modelzoo.co/model/u-net"

                            },

                            {

                                num: NumberInt("363"),

                                value: "https://modelzoo.co/model/faceshifter"

                            },

                            {

                                num: NumberInt("364"),

                                value: "https://modelzoo.co/model/long-range-arena"

                            },

                            {

                                num: NumberInt("365"),

                                value: "https://modelzoo.co/model/deep-rl"

                            },

                            {

                                num: NumberInt("366"),

                                value: "https://modelzoo.co/model/tensorflow-white-paper-notes"

                            },

                            {

                                num: NumberInt("367"),

                                value: "https://modelzoo.co/model/human-segmentation-pytorch"

                            },

                            {

                                num: NumberInt("368"),

                                value: "https://modelzoo.co/model/mixup"

                            },

                            {

                                num: NumberInt("369"),

                                value: "https://modelzoo.co/model/neural-style-audio-tf"

                            },

                            {

                                num: NumberInt("370"),

                                value: "https://modelzoo.co/model/tensorflow-char-rnn"

                            },

                            {

                                num: NumberInt("371"),

                                value: "https://modelzoo.co/model/musicgenreclassification"

                            },

                            {

                                num: NumberInt("372"),

                                value: "https://modelzoo.co/model/mctx"

                            },

                            {

                                num: NumberInt("373"),

                                value: "https://modelzoo.co/model/joint-vae"

                            },

                            {

                                num: NumberInt("374"),

                                value: "https://modelzoo.co/model/deep-learning-nlp"

                            },

                            {

                                num: NumberInt("375"),

                                value: "https://modelzoo.co/model/rexnet"

                            },

                            {

                                num: NumberInt("376"),

                                value: "https://modelzoo.co/model/pytorch-mnist-celeba-gan-dcgan"

                            },

                            {

                                num: NumberInt("377"),

                                value: "https://modelzoo.co/model/pytorch-cpp-rl"

                            },

                            {

                                num: NumberInt("378"),

                                value: "https://modelzoo.co/model/wassersteingantensorflow"

                            },

                            {

                                num: NumberInt("379"),

                                value: "https://modelzoo.co/model/espcn"

                            },

                            {

                                num: NumberInt("380"),

                                value: "https://modelzoo.co/model/rnn-from-scratch"

                            },

                            {

                                num: NumberInt("381"),

                                value: "https://modelzoo.co/model/pytorch-srresnet"

                            },

                            {

                                num: NumberInt("382"),

                                value: "https://modelzoo.co/model/neural-combinatorial-rl-pytorch"

                            },

                            {

                                num: NumberInt("383"),

                                value: "https://modelzoo.co/model/fast-neural-style-2"

                            },

                            {

                                num: NumberInt("384"),

                                value: "https://modelzoo.co/model/vedaseg"

                            },

                            {

                                num: NumberInt("385"),

                                value: "https://modelzoo.co/model/ggnnpytorch-2"

                            },

                            {

                                num: NumberInt("386"),

                                value: "https://modelzoo.co/model/gan-lib"

                            },

                            {

                                num: NumberInt("387"),

                                value: "https://modelzoo.co/model/mnist-svhn-transfer"

                            },

                            {

                                num: NumberInt("388"),

                                value: "https://modelzoo.co/model/nmtpytorch"

                            },

                            {

                                num: NumberInt("389"),

                                value: "https://modelzoo.co/model/improved-training-of-wasserstein-gans"

                            },

                            {

                                num: NumberInt("390"),

                                value: "https://modelzoo.co/model/arae"

                            },

                            {

                                num: NumberInt("391"),

                                value: "https://modelzoo.co/model/fast-pytorch"

                            },

                            {

                                num: NumberInt("392"),

                                value: "https://modelzoo.co/model/pytorch-adda"

                            },

                            {

                                num: NumberInt("393"),

                                value: "https://modelzoo.co/model/jaxl"

                            },

                            {

                                num: NumberInt("394"),

                                value: "https://modelzoo.co/model/conformer"

                            },

                            {

                                num: NumberInt("395"),

                                value: "https://modelzoo.co/model/score-sde-pytorch"

                            },

                            {

                                num: NumberInt("396"),

                                value: "https://modelzoo.co/model/simclr"

                            },

                            {

                                num: NumberInt("397"),

                                value: "https://modelzoo.co/model/sparse-to-densepytorch"

                            },

                            {

                                num: NumberInt("398"),

                                value: "https://modelzoo.co/model/piwise"

                            },

                            {

                                num: NumberInt("399"),

                                value: "https://modelzoo.co/model/3dmppe-rootnet-release"

                            },

                            {

                                num: NumberInt("400"),

                                value: "https://modelzoo.co/model/paragraph-vectors"

                            },

                            {

                                num: NumberInt("401"),

                                value: "https://modelzoo.co/model/lagom"

                            },

                            {

                                num: NumberInt("402"),

                                value: "https://modelzoo.co/model/pytorch-vdsr"

                            },

                            {

                                num: NumberInt("403"),

                                value: "https://modelzoo.co/model/neural-image-assessment"

                            },

                            {

                                num: NumberInt("404"),

                                value: "https://modelzoo.co/model/siamese-rpn-pytorch"

                            },

                            {

                                num: NumberInt("405"),

                                value: "https://modelzoo.co/model/pytorch-ddpg"

                            },

                            {

                                num: NumberInt("406"),

                                value: "https://modelzoo.co/model/pix2pix-pytorch"

                            },

                            {

                                num: NumberInt("407"),

                                value: "https://modelzoo.co/model/one-shot-object-detection"

                            },

                            {

                                num: NumberInt("408"),

                                value: "https://modelzoo.co/model/video-captionpytorch"

                            },

                            {

                                num: NumberInt("409"),

                                value: "https://modelzoo.co/model/pytorch-cortexnet"

                            },

                            {

                                num: NumberInt("410"),

                                value: "https://modelzoo.co/model/dgcnnpytorch"

                            },

                            {

                                num: NumberInt("411"),

                                value: "https://modelzoo.co/model/adgan"

                            },

                            {

                                num: NumberInt("412"),

                                value: "https://modelzoo.co/model/ttnet-real-time-analysis-system-for"

                            },

                            {

                                num: NumberInt("413"),

                                value: "https://modelzoo.co/model/deepsim"

                            },

                            {

                                num: NumberInt("414"),

                                value: "https://modelzoo.co/model/opencv_transforms"

                            },

                            {

                                num: NumberInt("415"),

                                value: "https://modelzoo.co/model/pytorch_rvae"

                            },

                            {

                                num: NumberInt("416"),

                                value: "https://modelzoo.co/model/pytorch-rvae"

                            },

                            {

                                num: NumberInt("417"),

                                value: "https://modelzoo.co/model/pytorch-mnist-celeba-cgan-cdcgan"

                            },

                            {

                                num: NumberInt("418"),

                                value: "https://modelzoo.co/model/pytorch-byol"

                            },

                            {

                                num: NumberInt("419"),

                                value: "https://modelzoo.co/model/pytorch-trpohessian-vector-product-version"

                            },

                            {

                                num: NumberInt("420"),

                                value: "https://modelzoo.co/model/text-to-image-synthesis"

                            },

                            {

                                num: NumberInt("421"),

                                value: "https://modelzoo.co/model/pytorch-faster-rcnn-2"

                            },

                            {

                                num: NumberInt("422"),

                                value: "https://modelzoo.co/model/pytorch-segmentation"

                            },

                            {

                                num: NumberInt("423"),

                                value: "https://modelzoo.co/model/tokenlabeling"

                            },

                            {

                                num: NumberInt("424"),

                                value: "https://modelzoo.co/model/pytorch-correlation-extension"

                            },

                            {

                                num: NumberInt("425"),

                                value: "https://modelzoo.co/model/adversarial-examples-pytorch"

                            },

                            {

                                num: NumberInt("426"),

                                value: "https://modelzoo.co/model/capsule-net-pytorch"

                            },

                            {

                                num: NumberInt("427"),

                                value: "https://modelzoo.co/model/sdedit"

                            },

                            {

                                num: NumberInt("428"),

                                value: "https://modelzoo.co/model/jaxrl"

                            },

                            {

                                num: NumberInt("429"),

                                value: "https://modelzoo.co/model/gghl"

                            },

                            {

                                num: NumberInt("430"),

                                value: "https://modelzoo.co/model/img_classification_pk_pytorch"

                            },

                            {

                                num: NumberInt("431"),

                                value: "https://modelzoo.co/model/pytorch-softdtw-cuda"

                            },

                            {

                                num: NumberInt("432"),

                                value: "https://modelzoo.co/model/transformer-pytorch"

                            },

                            {

                                num: NumberInt("433"),

                                value: "https://modelzoo.co/model/attention-ocrpytorch"

                            },

                            {

                                num: NumberInt("434"),

                                value: "https://modelzoo.co/model/revisiting-single-depth-estimation"

                            },

                            {

                                num: NumberInt("435"),

                                value: "https://modelzoo.co/model/ms-g3d"

                            },

                            {

                                num: NumberInt("436"),

                                value: "https://modelzoo.co/model/pytorch-drl"

                            },

                            {

                                num: NumberInt("437"),

                                value: "https://modelzoo.co/model/deep-neural-networks-are-easily-fooled"

                            },

                            {

                                num: NumberInt("438"),

                                value: "https://modelzoo.co/model/shapenet"

                            },

                            {

                                num: NumberInt("439"),

                                value: "https://modelzoo.co/model/deconvnet"

                            },

                            {

                                num: NumberInt("440"),

                                value: "https://modelzoo.co/model/speech-recognition"

                            },

                            {

                                num: NumberInt("441"),

                                value: "https://modelzoo.co/model/pytorch-srgan"

                            },

                            {

                                num: NumberInt("442"),

                                value: "https://modelzoo.co/model/prog_gans_pytorch_inference"

                            },

                            {

                                num: NumberInt("443"),

                                value: "https://modelzoo.co/model/torch-ngp"

                            },

                            {

                                num: NumberInt("444"),

                                value: "https://modelzoo.co/model/robustbench"

                            },

                            {

                                num: NumberInt("445"),

                                value: "https://modelzoo.co/model/pytorch-gans"

                            },

                            {

                                num: NumberInt("446"),

                                value: "https://modelzoo.co/model/faster_rcnn_for_dota"

                            },

                            {

                                num: NumberInt("447"),

                                value: "https://modelzoo.co/model/pytorch-enet"

                            },

                            {

                                num: NumberInt("448"),

                                value: "https://modelzoo.co/model/pnasnetpytorch"

                            },

                            {

                                num: NumberInt("449"),

                                value: "https://modelzoo.co/model/nfnets-pytorch"

                            },

                            {

                                num: NumberInt("450"),

                                value: "https://modelzoo.co/model/machin"

                            },

                            {

                                num: NumberInt("451"),

                                value: "https://modelzoo.co/model/pytorch-vq-vae"

                            },

                            {

                                num: NumberInt("452"),

                                value: "https://modelzoo.co/model/selecsls-pytorch"

                            },

                            {

                                num: NumberInt("453"),

                                value: "https://modelzoo.co/model/vq-vae-pytorch"

                            },

                            {

                                num: NumberInt("454"),

                                value: "https://modelzoo.co/model/pointrend-pytorch"

                            },

                            {

                                num: NumberInt("455"),

                                value: "https://modelzoo.co/model/dcgan"

                            },

                            {

                                num: NumberInt("456"),

                                value: "https://modelzoo.co/model/softmax-splatting"

                            },

                            {

                                num: NumberInt("457"),

                                value: "https://modelzoo.co/model/fast-scnn-pytorch"

                            },

                            {

                                num: NumberInt("458"),

                                value: "https://modelzoo.co/model/dd3d"

                            },

                            {

                                num: NumberInt("459"),

                                value: "https://modelzoo.co/model/fmix"

                            },

                            {

                                num: NumberInt("460"),

                                value: "https://modelzoo.co/model/seg-uncertainty"

                            },

                            {

                                num: NumberInt("461"),

                                value: "https://modelzoo.co/model/mot-neural-solver"

                            },

                            {

                                num: NumberInt("462"),

                                value: "https://modelzoo.co/model/delf-pytorch"

                            },

                            {

                                num: NumberInt("463"),

                                value: "https://modelzoo.co/model/total3dunderstanding"

                            },

                            {

                                num: NumberInt("464"),

                                value: "https://modelzoo.co/model/ai-art"

                            },

                            {

                                num: NumberInt("465"),

                                value: "https://modelzoo.co/model/esrnn-gpu"

                            },

                            {

                                num: NumberInt("466"),

                                value: "https://modelzoo.co/model/loss-toolbox-pytorch"

                            },

                            {

                                num: NumberInt("467"),

                                value: "https://modelzoo.co/model/score-cam"

                            },

                            {

                                num: NumberInt("468"),

                                value: "https://modelzoo.co/model/s-vae-pytorch"

                            },

                            {

                                num: NumberInt("469"),

                                value: "https://modelzoo.co/model/get-started-with-jax"

                            },

                            {

                                num: NumberInt("470"),

                                value: "https://modelzoo.co/model/flame-pytorch"

                            },

                            {

                                num: NumberInt("471"),

                                value: "https://modelzoo.co/model/pytorch-ddpg-naf"

                            },

                            {

                                num: NumberInt("472"),

                                value: "https://modelzoo.co/model/pytorchwavenetvocoder"

                            },

                            {

                                num: NumberInt("473"),

                                value: "https://modelzoo.co/model/pytorch-simple-centernet-45"

                            },

                            {

                                num: NumberInt("474"),

                                value: "https://modelzoo.co/model/3d-boundingbox"

                            },

                            {

                                num: NumberInt("475"),

                                value: "https://modelzoo.co/model/dann-py3"

                            },

                            {

                                num: NumberInt("476"),

                                value: "https://modelzoo.co/model/age"

                            },

                            {

                                num: NumberInt("477"),

                                value: "https://modelzoo.co/model/learning-to-communicate-with-deep-multi-agent"

                            },

                            {

                                num: NumberInt("478"),

                                value: "https://modelzoo.co/model/gan-tutorial"

                            },

                            {

                                num: NumberInt("479"),

                                value: "https://modelzoo.co/model/pytorch-beam-search-decoding"

                            },

                            {

                                num: NumberInt("480"),

                                value: "https://modelzoo.co/model/coupled-face-generation"

                            },

                            {

                                num: NumberInt("481"),

                                value: "https://modelzoo.co/model/neural-image-assessment-2"

                            },

                            {

                                num: NumberInt("482"),

                                value: "https://modelzoo.co/model/fastseg"

                            },

                            {

                                num: NumberInt("483"),

                                value: "https://modelzoo.co/model/fullsubnet"

                            },

                            {

                                num: NumberInt("484"),

                                value: "https://modelzoo.co/model/tacotron_pytorch"

                            },

                            {

                                num: NumberInt("485"),

                                value: "https://modelzoo.co/model/wasserstein-autoencoders"

                            },

                            {

                                num: NumberInt("486"),

                                value: "https://modelzoo.co/model/incremental-learningpytorch"

                            },

                            {

                                num: NumberInt("487"),

                                value: "https://modelzoo.co/model/mobilenetv3-pytorch-2"

                            },

                            {

                                num: NumberInt("488"),

                                value: "https://modelzoo.co/model/mnasnet-pytorch"

                            },

                            {

                                num: NumberInt("489"),

                                value: "https://modelzoo.co/model/social-lstm"

                            },

                            {

                                num: NumberInt("490"),

                                value: "https://modelzoo.co/model/high-fidelity-generative-compression"

                            },

                            {

                                num: NumberInt("491"),

                                value: "https://modelzoo.co/model/styleganpytorch"

                            },

                            {

                                num: NumberInt("492"),

                                value: "https://modelzoo.co/model/pytorch-unet-3"

                            },

                            {

                                num: NumberInt("493"),

                                value: "https://modelzoo.co/model/rtm3d"

                            },

                            {

                                num: NumberInt("494"),

                                value: "https://modelzoo.co/model/deform-conv-pytorch"

                            },

                            {

                                num: NumberInt("495"),

                                value: "https://modelzoo.co/model/neuralcompression"

                            },

                            {

                                num: NumberInt("496"),

                                value: "https://modelzoo.co/model/began-pytorch"

                            },

                            {

                                num: NumberInt("497"),

                                value: "https://modelzoo.co/model/dorn-pytorch"

                            },

                            {

                                num: NumberInt("498"),

                                value: "https://modelzoo.co/model/infogan-pytorch"

                            },

                            {

                                num: NumberInt("499"),

                                value: "https://modelzoo.co/model/rl-games"

                            },

                            {

                                num: NumberInt("500"),

                                value: "https://modelzoo.co/model/proxy-anchor-cvpr2020"

                            },

                            {

                                num: NumberInt("501"),

                                value: "https://modelzoo.co/model/text-summarizer-pytorch"

                            },

                            {

                                num: NumberInt("502"),

                                value: "https://modelzoo.co/model/supergo"

                            },

                            {

                                num: NumberInt("503"),

                                value: "https://modelzoo.co/model/video-dataset-loading-pytorch"

                            },

                            {

                                num: NumberInt("504"),

                                value: "https://modelzoo.co/model/pna"

                            },

                            {

                                num: NumberInt("505"),

                                value: "https://modelzoo.co/model/dfl-cnn"

                            },

                            {

                                num: NumberInt("506"),

                                value: "https://modelzoo.co/model/cnn-lstm-ctc"

                            },

                            {

                                num: NumberInt("507"),

                                value: "https://modelzoo.co/model/pytorch-lapsrn"

                            },

                            {

                                num: NumberInt("508"),

                                value: "https://modelzoo.co/model/samplernn-pytorch"

                            },

                            {

                                num: NumberInt("509"),

                                value: "https://modelzoo.co/model/prototypical-network-pytorch"

                            },

                            {

                                num: NumberInt("510"),

                                value: "https://modelzoo.co/model/siren"

                            },

                            {

                                num: NumberInt("511"),

                                value: "https://modelzoo.co/model/nonauto-nmt"

                            },

                            {

                                num: NumberInt("512"),

                                value: "https://modelzoo.co/model/wildcatpytorch"

                            },

                            {

                                num: NumberInt("513"),

                                value: "https://modelzoo.co/model/neural-machine-translation-between-the-writings"

                            },

                            {

                                num: NumberInt("514"),

                                value: "https://modelzoo.co/model/gst-tacotron"

                            },

                            {

                                num: NumberInt("515"),

                                value: "https://modelzoo.co/model/stylecarigan"

                            },

                            {

                                num: NumberInt("516"),

                                value: "https://modelzoo.co/model/pyhpc-benchmarks"

                            },

                            {

                                num: NumberInt("517"),

                                value: "https://modelzoo.co/model/ranksrgan"

                            },

                            {

                                num: NumberInt("518"),

                                value: "https://modelzoo.co/model/imagenet"

                            },

                            {

                                num: NumberInt("519"),

                                value: "https://modelzoo.co/model/pytorch-image-retrieval"

                            },

                            {

                                num: NumberInt("520"),

                                value: "https://modelzoo.co/model/pytorch-deepdream"

                            },

                            {

                                num: NumberInt("521"),

                                value: "https://modelzoo.co/model/ssd-variants"

                            },

                            {

                                num: NumberInt("522"),

                                value: "https://modelzoo.co/model/mandarin-tts"

                            },

                            {

                                num: NumberInt("523"),

                                value: "https://modelzoo.co/model/unet-pytorch"

                            },

                            {

                                num: NumberInt("524"),

                                value: "https://modelzoo.co/model/r-c3dpytorch"

                            },

                            {

                                num: NumberInt("525"),

                                value: "https://modelzoo.co/model/adversarial-autoencoder"

                            },

                            {

                                num: NumberInt("526"),

                                value: "https://modelzoo.co/model/my-awesome-ai-bookmarks"

                            },

                            {

                                num: NumberInt("527"),

                                value: "https://modelzoo.co/model/pytorch-graph-rel"

                            },

                            {

                                num: NumberInt("528"),

                                value: "https://modelzoo.co/model/deep-sad-pytorch"

                            },

                            {

                                num: NumberInt("529"),

                                value: "https://modelzoo.co/model/mixture-of-experts"

                            },

                            {

                                num: NumberInt("530"),

                                value: "https://modelzoo.co/model/transformer-pytorch-2"

                            },

                            {

                                num: NumberInt("531"),

                                value: "https://modelzoo.co/model/deeplabv3pytorch"

                            },

                            {

                                num: NumberInt("532"),

                                value: "https://modelzoo.co/model/universal-triggers"

                            },

                            {

                                num: NumberInt("533"),

                                value: "https://modelzoo.co/model/timeseries-fastai"

                            },

                            {

                                num: NumberInt("534"),

                                value: "https://modelzoo.co/model/portaspeech"

                            },

                            {

                                num: NumberInt("535"),

                                value: "https://modelzoo.co/model/pytorch-mpiigaze"

                            },

                            {

                                num: NumberInt("536"),

                                value: "https://modelzoo.co/model/fast-neural-style-pytorch"

                            },

                            {

                                num: NumberInt("537"),

                                value: "https://modelzoo.co/model/detreg"

                            },

                            {

                                num: NumberInt("538"),

                                value: "https://modelzoo.co/model/pointmlp-pytorch"

                            },

                            {

                                num: NumberInt("539"),

                                value: "https://modelzoo.co/model/routing-transformer"

                            },

                            {

                                num: NumberInt("540"),

                                value: "https://modelzoo.co/model/universalvocoding"

                            },

                            {

                                num: NumberInt("541"),

                                value: "https://modelzoo.co/model/3dunet-pytorch"

                            },

                            {

                                num: NumberInt("542"),

                                value: "https://modelzoo.co/model/vq-vae-speech"

                            },

                            {

                                num: NumberInt("543"),

                                value: "https://modelzoo.co/model/lottery-ticket-hypothesis-in-pytorch"

                            },

                            {

                                num: NumberInt("544"),

                                value: "https://modelzoo.co/model/sn-gan"

                            },

                            {

                                num: NumberInt("545"),

                                value: "https://modelzoo.co/model/retinanet-mxnet"

                            },

                            {

                                num: NumberInt("546"),

                                value: "https://modelzoo.co/model/pytorch-question-answering"

                            },

                            {

                                num: NumberInt("547"),

                                value: "https://modelzoo.co/model/easy-neural-ode"

                            },

                            {

                                num: NumberInt("548"),

                                value: "https://modelzoo.co/model/stitchfixfauxtograph"

                            },

                            {

                                num: NumberInt("549"),

                                value: "https://modelzoo.co/model/open-source-chatbot-with-pytorch"

                            },

                            {

                                num: NumberInt("550"),

                                value: "https://modelzoo.co/model/d3feat"

                            },

                            {

                                num: NumberInt("551"),

                                value: "https://modelzoo.co/model/tensorflow-deeplab-lfov"

                            },

                            {

                                num: NumberInt("552"),

                                value: "https://modelzoo.co/model/gan-sandbox"

                            },

                            {

                                num: NumberInt("553"),

                                value: "https://modelzoo.co/model/openvino-yolov4"

                            },

                            {

                                num: NumberInt("554"),

                                value: "https://modelzoo.co/model/cross-lingual-voice-cloning"

                            },

                            {

                                num: NumberInt("555"),

                                value: "https://modelzoo.co/model/ppo-for-beginners"

                            },

                            {

                                num: NumberInt("556"),

                                value: "https://modelzoo.co/model/holocron"

                            },

                            {

                                num: NumberInt("557"),

                                value: "https://modelzoo.co/model/sketch-generation-with-drawing-process-guided"

                            },

                            {

                                num: NumberInt("558"),

                                value: "https://modelzoo.co/model/conv-tasnet-2"

                            },

                            {

                                num: NumberInt("559"),

                                value: "https://modelzoo.co/model/facerec"

                            },

                            {

                                num: NumberInt("560"),

                                value: "https://modelzoo.co/model/magnetloss-pytorch"

                            },

                            {

                                num: NumberInt("561"),

                                value: "https://modelzoo.co/model/tfwss"

                            },

                            {

                                num: NumberInt("562"),

                                value: "https://modelzoo.co/model/hawq"

                            },

                            {

                                num: NumberInt("563"),

                                value: "https://modelzoo.co/model/singan"

                            },

                            {

                                num: NumberInt("564"),

                                value: "https://modelzoo.co/model/very-deep-convolutional-networks-for-large-scale"

                            },

                            {

                                num: NumberInt("565"),

                                value: "https://modelzoo.co/model/noise2noise-pytorch"

                            },

                            {

                                num: NumberInt("566"),

                                value: "https://modelzoo.co/model/siamese-pytorch"

                            },

                            {

                                num: NumberInt("567"),

                                value: "https://modelzoo.co/model/cyclemlp"

                            },

                            {

                                num: NumberInt("568"),

                                value: "https://modelzoo.co/model/gpt-2-tensorflow20"

                            },

                            {

                                num: NumberInt("569"),

                                value: "https://modelzoo.co/model/s-vae-tf"

                            },

                            {

                                num: NumberInt("570"),

                                value: "https://modelzoo.co/model/mobilenetv3-tensorflow"

                            },

                            {

                                num: NumberInt("571"),

                                value: "https://modelzoo.co/model/nsfw-resnet"

                            },

                            {

                                num: NumberInt("572"),

                                value: "https://modelzoo.co/model/jax-flows"

                            },

                            {

                                num: NumberInt("573"),

                                value: "https://modelzoo.co/model/deepmask-pytorch"

                            },

                            {

                                num: NumberInt("574"),

                                value: "https://modelzoo.co/model/mobilenet-v2"

                            },

                            {

                                num: NumberInt("575"),

                                value: "https://modelzoo.co/model/lightweight-openpose"

                            },

                            {

                                num: NumberInt("576"),

                                value: "https://modelzoo.co/model/torch_waveglow"

                            },

                            {

                                num: NumberInt("577"),

                                value: "https://modelzoo.co/model/glcic-pytorch"

                            },

                            {

                                num: NumberInt("578"),

                                value: "https://modelzoo.co/model/pyhf"

                            },

                            {

                                num: NumberInt("579"),

                                value: "https://modelzoo.co/model/music-dance-video-synthesis"

                            },

                            {

                                num: NumberInt("580"),

                                value: "https://modelzoo.co/model/arcface-tf2"

                            },

                            {

                                num: NumberInt("581"),

                                value: "https://modelzoo.co/model/oasis"

                            },

                            {

                                num: NumberInt("582"),

                                value: "https://modelzoo.co/model/tenet"

                            },

                            {

                                num: NumberInt("583"),

                                value: "https://modelzoo.co/model/extending-jax"

                            },

                            {

                                num: NumberInt("584"),

                                value: "https://modelzoo.co/model/paac"

                            },

                            {

                                num: NumberInt("585"),

                                value: "https://modelzoo.co/model/tf2-yolov4"

                            },

                            {

                                num: NumberInt("586"),

                                value: "https://modelzoo.co/model/sinkhorn-transformer"

                            },

                            {

                                num: NumberInt("587"),

                                value: "https://modelzoo.co/model/svhnclassifier-tensorflow"

                            },

                            {

                                num: NumberInt("588"),

                                value: "https://modelzoo.co/model/tf-insightface-tensorflow"

                            },

                            {

                                num: NumberInt("589"),

                                value: "https://modelzoo.co/model/tacotron-pytorch"

                            },

                            {

                                num: NumberInt("590"),

                                value: "https://modelzoo.co/model/arflow"

                            },

                            {

                                num: NumberInt("591"),

                                value: "https://modelzoo.co/model/yolo-tf"

                            },

                            {

                                num: NumberInt("592"),

                                value: "https://modelzoo.co/model/ddpg"

                            },

                            {

                                num: NumberInt("593"),

                                value: "https://modelzoo.co/model/tfdiffeq"

                            },

                            {

                                num: NumberInt("594"),

                                value: "https://modelzoo.co/model/diffai"

                            },

                            {

                                num: NumberInt("595"),

                                value: "https://modelzoo.co/model/treex"

                            },

                            {

                                num: NumberInt("596"),

                                value: "https://modelzoo.co/model/multiposenetpytorch"

                            },

                            {

                                num: NumberInt("597"),

                                value: "https://modelzoo.co/model/nice-gan-pytorch"

                            },

                            {

                                num: NumberInt("598"),

                                value: "https://modelzoo.co/model/gymnax"

                            },

                            {

                                num: NumberInt("599"),

                                value: "https://modelzoo.co/model/tensorflow-xception"

                            },

                            {

                                num: NumberInt("600"),

                                value: "https://modelzoo.co/model/funsor"

                            },

                            {

                                num: NumberInt("601"),

                                value: "https://modelzoo.co/model/deep-graph-matching-consensus"

                            },

                            {

                                num: NumberInt("602"),

                                value: "https://modelzoo.co/model/self-attentive-tensorflow"

                            },

                            {

                                num: NumberInt("603"),

                                value: "https://modelzoo.co/model/bayesian-neural-network-pytorch"

                            },

                            {

                                num: NumberInt("604"),

                                value: "https://modelzoo.co/model/gail-tf"

                            },

                            {

                                num: NumberInt("605"),

                                value: "https://modelzoo.co/model/unet"

                            },

                            {

                                num: NumberInt("606"),

                                value: "https://modelzoo.co/model/tensorflow-mnist-cnn"

                            },

                            {

                                num: NumberInt("607"),

                                value: "https://modelzoo.co/model/yolact-minimal"

                            },

                            {

                                num: NumberInt("608"),

                                value: "https://modelzoo.co/model/hierarchical-actor-critic-hac-pytorch"

                            },

                            {

                                num: NumberInt("609"),

                                value: "https://modelzoo.co/model/osgi-jax-rs-connector"

                            },

                            {

                                num: NumberInt("610"),

                                value: "https://modelzoo.co/model/deepmask-object-segmentation"

                            },

                            {

                                num: NumberInt("611"),

                                value: "https://modelzoo.co/model/robot-grasp-detection"

                            },

                            {

                                num: NumberInt("612"),

                                value: "https://modelzoo.co/model/deep_image_prior"

                            },

                            {

                                num: NumberInt("613"),

                                value: "https://modelzoo.co/model/bilinear-cnn-tensorflow"

                            },

                            {

                                num: NumberInt("614"),

                                value: "https://modelzoo.co/model/pt-dec"

                            },

                            {

                                num: NumberInt("615"),

                                value: "https://modelzoo.co/model/bert4rec-vae-pytorch"

                            },

                            {

                                num: NumberInt("616"),

                                value: "https://modelzoo.co/model/distancegan"

                            },

                            {

                                num: NumberInt("617"),

                                value: "https://modelzoo.co/model/cp-vton-plus"

                            },

                            {

                                num: NumberInt("618"),

                                value: "https://modelzoo.co/model/muzero-tensorflow"

                            },

                            {

                                num: NumberInt("619"),

                                value: "https://modelzoo.co/model/gan-weight-norm"

                            },

                            {

                                num: NumberInt("620"),

                                value: "https://modelzoo.co/model/scenechangedet"

                            },

                            {

                                num: NumberInt("621"),

                                value: "https://modelzoo.co/model/mimo-unet"

                            },

                            {

                                num: NumberInt("622"),

                                value: "https://modelzoo.co/model/ott"

                            },

                            {

                                num: NumberInt("623"),

                                value: "https://modelzoo.co/model/snli-entailment"

                            },

                            {

                                num: NumberInt("624"),

                                value: "https://modelzoo.co/model/fots-tf"

                            },

                            {

                                num: NumberInt("625"),

                                value: "https://modelzoo.co/model/scene-generation"

                            },

                            {

                                num: NumberInt("626"),

                                value: "https://modelzoo.co/model/attentions"

                            },

                            {

                                num: NumberInt("627"),

                                value: "https://modelzoo.co/model/jaxnet"

                            },

                            {

                                num: NumberInt("628"),

                                value: "https://modelzoo.co/model/active-contour-loss"

                            },

                            {

                                num: NumberInt("629"),

                                value: "https://modelzoo.co/model/attention-is-all-you-need-paper"

                            },

                            {

                                num: NumberInt("630"),

                                value: "https://modelzoo.co/model/prompt-tuning"

                            },

                            {

                                num: NumberInt("631"),

                                value: "https://modelzoo.co/model/tensorflow-stacked-denoising-autoencoder"

                            },

                            {

                                num: NumberInt("632"),

                                value: "https://modelzoo.co/model/vision-transformer"

                            },

                            {

                                num: NumberInt("633"),

                                value: "https://modelzoo.co/model/keras-lmu"

                            },

                            {

                                num: NumberInt("634"),

                                value: "https://modelzoo.co/model/cluener2020"

                            },

                            {

                                num: NumberInt("635"),

                                value: "https://modelzoo.co/model/facenet-pytorch-glint360k"

                            },

                            {

                                num: NumberInt("636"),

                                value: "https://modelzoo.co/model/v2v-posenet-pytorch"

                            },

                            {

                                num: NumberInt("637"),

                                value: "https://modelzoo.co/model/deeplab-v2-resnet-101"

                            },

                            {

                                num: NumberInt("638"),

                                value: "https://modelzoo.co/model/adv-attack-capsnet"

                            },

                            {

                                num: NumberInt("639"),

                                value: "https://modelzoo.co/model/6drepnet"

                            },

                            {

                                num: NumberInt("640"),

                                value: "https://modelzoo.co/model/tensorflow-rl"

                            },

                            {

                                num: NumberInt("641"),

                                value: "https://modelzoo.co/model/ntm"

                            },

                            {

                                num: NumberInt("642"),

                                value: "https://modelzoo.co/model/pytorch-classification-uncertainty"

                            },

                            {

                                num: NumberInt("643"),

                                value: "https://modelzoo.co/model/few-shot-meta-learning"

                            },

                            {

                                num: NumberInt("644"),

                                value: "https://modelzoo.co/model/tensorflow-mnist-gan-dcgan"

                            },

                            {

                                num: NumberInt("645"),

                                value: "https://modelzoo.co/model/a-convolutional-recurrent-neural-network-for"

                            },

                            {

                                num: NumberInt("646"),

                                value: "https://modelzoo.co/model/faststyle"

                            },

                            {

                                num: NumberInt("647"),

                                value: "https://modelzoo.co/model/multihead-siamese-nets"

                            },

                            {

                                num: NumberInt("648"),

                                value: "https://modelzoo.co/model/conv-tasnet"

                            },

                            {

                                num: NumberInt("649"),

                                value: "https://modelzoo.co/model/svhnclassifier"

                            },

                            {

                                num: NumberInt("650"),

                                value: "https://modelzoo.co/model/vgae-pytorch"

                            },

                            {

                                num: NumberInt("651"),

                                value: "https://modelzoo.co/model/adafm"

                            },

                            {

                                num: NumberInt("652"),

                                value: "https://modelzoo.co/model/pytorch-gan-collections"

                            },

                            {

                                num: NumberInt("653"),

                                value: "https://modelzoo.co/model/gmvae"

                            },

                            {

                                num: NumberInt("654"),

                                value: "https://modelzoo.co/model/pytorch-deephash"

                            },

                            {

                                num: NumberInt("655"),

                                value: "https://modelzoo.co/model/pro-gnn"

                            },

                            {

                                num: NumberInt("656"),

                                value: "https://modelzoo.co/model/tf-faster-rcnn"

                            },

                            {

                                num: NumberInt("657"),

                                value: "https://modelzoo.co/model/fast-weights"

                            },

                            {

                                num: NumberInt("658"),

                                value: "https://modelzoo.co/model/eye-tracker"

                            },

                            {

                                num: NumberInt("659"),

                                value: "https://modelzoo.co/model/capsnet-traffic-sign-classifier"

                            },

                            {

                                num: NumberInt("660"),

                                value: "https://modelzoo.co/model/vdcnn"

                            },

                            {

                                num: NumberInt("661"),

                                value: "https://modelzoo.co/model/viton-hd"

                            },

                            {

                                num: NumberInt("662"),

                                value: "https://modelzoo.co/model/mask-guided-portrait-editing"

                            },

                            {

                                num: NumberInt("663"),

                                value: "https://modelzoo.co/model/dss-pytorch"

                            },

                            {

                                num: NumberInt("664"),

                                value: "https://modelzoo.co/model/generative-adversarial-networks-101"

                            },

                            {

                                num: NumberInt("665"),

                                value: "https://modelzoo.co/model/pkd-for-bert-model-compression"

                            },

                            {

                                num: NumberInt("666"),

                                value: "https://modelzoo.co/model/percepnet"

                            },

                            {

                                num: NumberInt("667"),

                                value: "https://modelzoo.co/model/reptile-pytorch"

                            },

                            {

                                num: NumberInt("668"),

                                value: "https://modelzoo.co/model/pix2pix-film"

                            },

                            {

                                num: NumberInt("669"),

                                value: "https://modelzoo.co/model/instance-segmentation-with-discriminative-loss-tensorflow"

                            },

                            {

                                num: NumberInt("670"),

                                value: "https://modelzoo.co/model/maml-tensorflow-2"

                            },

                            {

                                num: NumberInt("671"),

                                value: "https://modelzoo.co/model/palette-image-to-image-diffusion-models"

                            },

                            {

                                num: NumberInt("672"),

                                value: "https://modelzoo.co/model/visual-interaction-networks-pytorch-2"

                            },

                            {

                                num: NumberInt("673"),

                                value: "https://modelzoo.co/model/neural-processes-pytorch"

                            },

                            {

                                num: NumberInt("674"),

                                value: "https://modelzoo.co/model/imagenet-tensorflow"

                            },

                            {

                                num: NumberInt("675"),

                                value: "https://modelzoo.co/model/deep-image-analogy-pytorch"

                            },

                            {

                                num: NumberInt("676"),

                                value: "https://modelzoo.co/model/listen-attend-spell"

                            },

                            {

                                num: NumberInt("677"),

                                value: "https://modelzoo.co/model/lsoftmax-pytorch"

                            },

                            {

                                num: NumberInt("678"),

                                value: "https://modelzoo.co/model/keras-unet-plus-plus"

                            },

                            {

                                num: NumberInt("679"),

                                value: "https://modelzoo.co/model/capsule-net-pytorch-2"

                            },

                            {

                                num: NumberInt("680"),

                                value: "https://modelzoo.co/model/jaxon-3"

                            },

                            {

                                num: NumberInt("681"),

                                value: "https://modelzoo.co/model/shufflenetv2-pytorch"

                            },

                            {

                                num: NumberInt("682"),

                                value: "https://modelzoo.co/model/keraspersonlab"

                            },

                            {

                                num: NumberInt("683"),

                                value: "https://modelzoo.co/model/keras-adamw"

                            },

                            {

                                num: NumberInt("684"),

                                value: "https://modelzoo.co/model/wgan-gp-pytorch"

                            },

                            {

                                num: NumberInt("685"),

                                value: "https://modelzoo.co/model/fq-gan"

                            },

                            {

                                num: NumberInt("686"),

                                value: "https://modelzoo.co/model/fast-rcnn-tensorflow"

                            },

                            {

                                num: NumberInt("687"),

                                value: "https://modelzoo.co/model/ccnet-pure-pytorch"

                            },

                            {

                                num: NumberInt("688"),

                                value: "https://modelzoo.co/model/mdistiller"

                            },

                            {

                                num: NumberInt("689"),

                                value: "https://modelzoo.co/model/gradcache"

                            },

                            {

                                num: NumberInt("690"),

                                value: "https://modelzoo.co/model/pytorch-seq2seq-intent-parsing"

                            },

                            {

                                num: NumberInt("691"),

                                value: "https://modelzoo.co/model/dnn-based-source-separation"

                            },

                            {

                                num: NumberInt("692"),

                                value: "https://modelzoo.co/model/lenet-5"

                            },

                            {

                                num: NumberInt("693"),

                                value: "https://modelzoo.co/model/hash-embeddings"

                            },

                            {

                                num: NumberInt("694"),

                                value: "https://modelzoo.co/model/easy-faster-rcnnpytorch"

                            },

                            {

                                num: NumberInt("695"),

                                value: "https://modelzoo.co/model/regnet"

                            },

                            {

                                num: NumberInt("696"),

                                value: "https://modelzoo.co/model/pix2pixbeganpytorch"

                            },

                            {

                                num: NumberInt("697"),

                                value: "https://modelzoo.co/model/soft-actor-critic-and-extensions"

                            },

                            {

                                num: NumberInt("698"),

                                value: "https://modelzoo.co/model/tf-dcgan"

                            },

                            {

                                num: NumberInt("699"),

                                value: "https://modelzoo.co/model/pytorch-dppo"

                            },

                            {

                                num: NumberInt("700"),

                                value: "https://modelzoo.co/model/tdnn"

                            },

                            {

                                num: NumberInt("701"),

                                value: "https://modelzoo.co/model/dtapytorch"

                            },

                            {

                                num: NumberInt("702"),

                                value: "https://modelzoo.co/model/adversarial-patch"

                            },

                            {

                                num: NumberInt("703"),

                                value: "https://modelzoo.co/model/complex-yolov3"

                            },

                            {

                                num: NumberInt("704"),

                                value: "https://modelzoo.co/model/fastspeech2-pytorch"

                            },

                            {

                                num: NumberInt("705"),

                                value: "https://modelzoo.co/model/inq-pytorch"

                            },

                            {

                                num: NumberInt("706"),

                                value: "https://modelzoo.co/model/mildlyoverfitted"

                            },

                            {

                                num: NumberInt("707"),

                                value: "https://modelzoo.co/model/pytorch-dual-learning"

                            },

                            {

                                num: NumberInt("708"),

                                value: "https://modelzoo.co/model/multidim-positional-encoding"

                            },

                            {

                                num: NumberInt("709"),

                                value: "https://modelzoo.co/model/interaction-networks-tensorflow"

                            },

                            {

                                num: NumberInt("710"),

                                value: "https://modelzoo.co/model/tfvos"

                            },

                            {

                                num: NumberInt("711"),

                                value: "https://modelzoo.co/model/xcenternet"

                            },

                            {

                                num: NumberInt("712"),

                                value: "https://modelzoo.co/model/pytorch-layoutnet"

                            },

                            {

                                num: NumberInt("713"),

                                value: "https://modelzoo.co/model/houghnet"

                            },

                            {

                                num: NumberInt("714"),

                                value: "https://modelzoo.co/model/adversarial-semisupervised-semantic-segmentation"

                            },

                            {

                                num: NumberInt("715"),

                                value: "https://modelzoo.co/model/ufo"

                            },

                            {

                                num: NumberInt("716"),

                                value: "https://modelzoo.co/model/progressive-growing-of-gans-tensorflow"

                            },

                            {

                                num: NumberInt("717"),

                                value: "https://modelzoo.co/model/faster-rcnn_tensorflow-2"

                            },

                            {

                                num: NumberInt("718"),

                                value: "https://modelzoo.co/model/pytorch-image-comp-rnn"

                            },

                            {

                                num: NumberInt("719"),

                                value: "https://modelzoo.co/model/ngcf-pytorch"

                            },

                            {

                                num: NumberInt("720"),

                                value: "https://modelzoo.co/model/meta-learning-lstm-pytorch"

                            },

                            {

                                num: NumberInt("721"),

                                value: "https://modelzoo.co/model/ir-net"

                            },

                            {

                                num: NumberInt("722"),

                                value: "https://modelzoo.co/model/focal-loss"

                            },

                            {

                                num: NumberInt("723"),

                                value: "https://modelzoo.co/model/torchcrepe"

                            },

                            {

                                num: NumberInt("724"),

                                value: "https://modelzoo.co/model/soft-intro-vae-pytorch"

                            },

                            {

                                num: NumberInt("725"),

                                value: "https://modelzoo.co/model/role2vec"

                            },

                            {

                                num: NumberInt("726"),

                                value: "https://modelzoo.co/model/unsupervised-depth-completion-visual-inertial-odometry"

                            },

                            {

                                num: NumberInt("727"),

                                value: "https://modelzoo.co/model/twitter-sentiment-cnn"

                            },

                            {

                                num: NumberInt("728"),

                                value: "https://modelzoo.co/model/sunets"

                            },

                            {

                                num: NumberInt("729"),

                                value: "https://modelzoo.co/model/alphagan-matting"

                            },

                            {

                                num: NumberInt("730"),

                                value: "https://modelzoo.co/model/hififace"

                            },

                            {

                                num: NumberInt("731"),

                                value: "https://modelzoo.co/model/pytorch-pos-tagging"

                            },

                            {

                                num: NumberInt("732"),

                                value: "https://modelzoo.co/model/tensorflow-mnist-cvae"

                            },

                            {

                                num: NumberInt("733"),

                                value: "https://modelzoo.co/model/video2tfrecord"

                            },

                            {

                                num: NumberInt("734"),

                                value: "https://modelzoo.co/model/video-super-resolution"

                            },

                            {

                                num: NumberInt("735"),

                                value: "https://modelzoo.co/model/phasen"

                            },

                            {

                                num: NumberInt("736"),

                                value: "https://modelzoo.co/model/dbcnn-pytorch"

                            },

                            {

                                num: NumberInt("737"),

                                value: "https://modelzoo.co/model/perceiver-io-pytorch"

                            },

                            {

                                num: NumberInt("738"),

                                value: "https://modelzoo.co/model/dagan"

                            },

                            {

                                num: NumberInt("739"),

                                value: "https://modelzoo.co/model/rcnn-text-classification"

                            },

                            {

                                num: NumberInt("740"),

                                value: "https://modelzoo.co/model/semantic-image-synthesis-via-adversarial-learning"

                            },

                            {

                                num: NumberInt("741"),

                                value: "https://modelzoo.co/model/capsnet-2"

                            },

                            {

                                num: NumberInt("742"),

                                value: "https://modelzoo.co/model/rfdnet"

                            },

                            {

                                num: NumberInt("743"),

                                value: "https://modelzoo.co/model/pointnet"

                            },

                            {

                                num: NumberInt("744"),

                                value: "https://modelzoo.co/model/protest-detection-violence-estimation"

                            },

                            {

                                num: NumberInt("745"),

                                value: "https://modelzoo.co/model/rdn-tensorflow"

                            },

                            {

                                num: NumberInt("746"),

                                value: "https://modelzoo.co/model/deeplab-v3-plus-cityscapes"

                            },

                            {

                                num: NumberInt("747"),

                                value: "https://modelzoo.co/model/keras-coordconv"

                            },

                            {

                                num: NumberInt("748"),

                                value: "https://modelzoo.co/model/conversation-tensorflow"

                            },

                            {

                                num: NumberInt("749"),

                                value: "https://modelzoo.co/model/graph2vec-tf"

                            },

                            {

                                num: NumberInt("750"),

                                value: "https://modelzoo.co/model/tensorflow-yolo3"

                            },

                            {

                                num: NumberInt("751"),

                                value: "https://modelzoo.co/model/srgan-pytorch-2"

                            },

                            {

                                num: NumberInt("752"),

                                value: "https://modelzoo.co/model/tensorflow-pix2pix-2"

                            },

                            {

                                num: NumberInt("753"),

                                value: "https://modelzoo.co/model/maxl"

                            },

                            {

                                num: NumberInt("754"),

                                value: "https://modelzoo.co/model/aspect-level-sentiment"

                            },

                            {

                                num: NumberInt("755"),

                                value: "https://modelzoo.co/model/codeslam"

                            },

                            {

                                num: NumberInt("756"),

                                value: "https://modelzoo.co/model/sam-detr"

                            },

                            {

                                num: NumberInt("757"),

                                value: "https://modelzoo.co/model/pytorch-sac-ae"

                            },

                            {

                                num: NumberInt("758"),

                                value: "https://modelzoo.co/model/lipnet-pytorch"

                            },

                            {

                                num: NumberInt("759"),

                                value: "https://modelzoo.co/model/graphrec-pytorch"

                            },

                            {

                                num: NumberInt("760"),

                                value: "https://modelzoo.co/model/jaxlie"

                            },

                            {

                                num: NumberInt("761"),

                                value: "https://modelzoo.co/model/soundnet-tensorflow"

                            },

                            {

                                num: NumberInt("762"),

                                value: "https://modelzoo.co/model/neuralpull"

                            },

                            {

                                num: NumberInt("763"),

                                value: "https://modelzoo.co/model/oneshottranslation"

                            },

                            {

                                num: NumberInt("764"),

                                value: "https://modelzoo.co/model/deeplabv3-mobilenetv2-pytorch"

                            },

                            {

                                num: NumberInt("765"),

                                value: "https://modelzoo.co/model/uctransnet"

                            },

                            {

                                num: NumberInt("766"),

                                value: "https://modelzoo.co/model/flax-61"

                            },

                            {

                                num: NumberInt("767"),

                                value: "https://modelzoo.co/model/reinforcement-learning"

                            },

                            {

                                num: NumberInt("768"),

                                value: "https://modelzoo.co/model/restvertx"

                            },

                            {

                                num: NumberInt("769"),

                                value: "https://modelzoo.co/model/samplernn"

                            },

                            {

                                num: NumberInt("770"),

                                value: "https://modelzoo.co/model/fast-transformer"

                            },

                            {

                                num: NumberInt("771"),

                                value: "https://modelzoo.co/model/deep-clustering"

                            },

                            {

                                num: NumberInt("772"),

                                value: "https://modelzoo.co/model/keras-insightface"

                            },

                            {

                                num: NumberInt("773"),

                                value: "https://modelzoo.co/model/parallel-tacotron2"

                            },

                            {

                                num: NumberInt("774"),

                                value: "https://modelzoo.co/model/bert-relation-classification"

                            },

                            {

                                num: NumberInt("775"),

                                value: "https://modelzoo.co/model/visual-attribution"

                            },

                            {

                                num: NumberInt("776"),

                                value: "https://modelzoo.co/model/bvae-tts"

                            },

                            {

                                num: NumberInt("777"),

                                value: "https://modelzoo.co/model/mnemonicreader"

                            },

                            {

                                num: NumberInt("778"),

                                value: "https://modelzoo.co/model/maskgit"

                            },

                            {

                                num: NumberInt("779"),

                                value: "https://modelzoo.co/model/dilation-tensorflow"

                            },

                            {

                                num: NumberInt("780"),

                                value: "https://modelzoo.co/model/pytorch-cutpaste"

                            },

                            {

                                num: NumberInt("781"),

                                value: "https://modelzoo.co/model/pytorch-smoothgrad-2"

                            },

                            {

                                num: NumberInt("782"),

                                value: "https://modelzoo.co/model/snail-pytorch"

                            },

                            {

                                num: NumberInt("783"),

                                value: "https://modelzoo.co/model/gdwct"

                            },

                            {

                                num: NumberInt("784"),

                                value: "https://modelzoo.co/model/deep-auto-punctuation-pytorch"

                            },

                            {

                                num: NumberInt("785"),

                                value: "https://modelzoo.co/model/ssd-pytorch"

                            },

                            {

                                num: NumberInt("786"),

                                value: "https://modelzoo.co/model/feature-selective-anchor-free-module-for"

                            },

                            {

                                num: NumberInt("787"),

                                value: "https://modelzoo.co/model/medical-report-generation"

                            },

                            {

                                num: NumberInt("788"),

                                value: "https://modelzoo.co/model/360sd-net"

                            },

                            {

                                num: NumberInt("789"),

                                value: "https://modelzoo.co/model/mobilenetv2tvm-supported"

                            },

                            {

                                num: NumberInt("790"),

                                value: "https://modelzoo.co/model/invdn"

                            },

                            {

                                num: NumberInt("791"),

                                value: "https://modelzoo.co/model/ws-dan-pytorch"

                            },

                            {

                                num: NumberInt("792"),

                                value: "https://modelzoo.co/model/adamwr"

                            },

                            {

                                num: NumberInt("793"),

                                value: "https://modelzoo.co/model/bandit-nmt"

                            },

                            {

                                num: NumberInt("794"),

                                value: "https://modelzoo.co/model/deeplearningai-pytorch"

                            },

                            {

                                num: NumberInt("795"),

                                value: "https://modelzoo.co/model/normalizing-flows"

                            },

                            {

                                num: NumberInt("796"),

                                value: "https://modelzoo.co/model/pytorch-pyramid-feature-attention-network-for"

                            },

                            {

                                num: NumberInt("797"),

                                value: "https://modelzoo.co/model/ifan"

                            },

                            {

                                num: NumberInt("798"),

                                value: "https://modelzoo.co/model/neuron-selectivity-transfer"

                            },

                            {

                                num: NumberInt("799"),

                                value: "https://modelzoo.co/model/rebias"

                            },

                            {

                                num: NumberInt("800"),

                                value: "https://modelzoo.co/model/stargan-voice-conversion-2"

                            },

                            {

                                num: NumberInt("801"),

                                value: "https://modelzoo.co/model/mff-pytorch"

                            },

                            {

                                num: NumberInt("802"),

                                value: "https://modelzoo.co/model/eegnet"

                            },

                            {

                                num: NumberInt("803"),

                                value: "https://modelzoo.co/model/aunets"

                            },

                            {

                                num: NumberInt("804"),

                                value: "https://modelzoo.co/model/factorized-tdnn"

                            },

                            {

                                num: NumberInt("805"),

                                value: "https://modelzoo.co/model/moco"

                            },

                            {

                                num: NumberInt("806"),

                                value: "https://modelzoo.co/model/torch-ac"

                            },

                            {

                                num: NumberInt("807"),

                                value: "https://modelzoo.co/model/pygoturn"

                            },

                            {

                                num: NumberInt("808"),

                                value: "https://modelzoo.co/model/everypixelmatters"

                            },

                            {

                                num: NumberInt("809"),

                                value: "https://modelzoo.co/model/flaxmodels"

                            },

                            {

                                num: NumberInt("810"),

                                value: "https://modelzoo.co/model/siam-nestedunet"

                            },

                            {

                                num: NumberInt("811"),

                                value: "https://modelzoo.co/model/hierarchical-attention-network"

                            },

                            {

                                num: NumberInt("812"),

                                value: "https://modelzoo.co/model/recsys-pytorch"

                            },

                            {

                                num: NumberInt("813"),

                                value: "https://modelzoo.co/model/single-human-parsing-lip"

                            },

                            {

                                num: NumberInt("814"),

                                value: "https://modelzoo.co/model/mtad-gat-pytorch"

                            },

                            {

                                num: NumberInt("815"),

                                value: "https://modelzoo.co/model/bert-ocrpytorch"

                            },

                            {

                                num: NumberInt("816"),

                                value: "https://modelzoo.co/model/repsurf"

                            },

                            {

                                num: NumberInt("817"),

                                value: "https://modelzoo.co/model/cbam-tensorflow"

                            },

                            {

                                num: NumberInt("818"),

                                value: "https://modelzoo.co/model/pytorch-spline-conv"

                            },

                            {

                                num: NumberInt("819"),

                                value: "https://modelzoo.co/model/viewal"

                            },

                            {

                                num: NumberInt("820"),

                                value: "https://modelzoo.co/model/tree-math"

                            },

                            {

                                num: NumberInt("821"),

                                value: "https://modelzoo.co/model/sasrecpytorch"

                            },

                            {

                                num: NumberInt("822"),

                                value: "https://modelzoo.co/model/mxnmt"

                            },

                            {

                                num: NumberInt("823"),

                                value: "https://modelzoo.co/model/mnemonic-descent-method"

                            },

                            {

                                num: NumberInt("824"),

                                value: "https://modelzoo.co/model/openai-clip"

                            },

                            {

                                num: NumberInt("825"),

                                value: "https://modelzoo.co/model/chainer_examples"

                            },

                            {

                                num: NumberInt("826"),

                                value: "https://modelzoo.co/model/ciphergan"

                            },

                            {

                                num: NumberInt("827"),

                                value: "https://modelzoo.co/model/captiongen"

                            },

                            {

                                num: NumberInt("828"),

                                value: "https://modelzoo.co/model/visualizing-cnns-for-monocular-depth-estimation"

                            },

                            {

                                num: NumberInt("829"),

                                value: "https://modelzoo.co/model/latent-pose-reenactment"

                            },

                            {

                                num: NumberInt("830"),

                                value: "https://modelzoo.co/model/sightseq"

                            },

                            {

                                num: NumberInt("831"),

                                value: "https://modelzoo.co/model/jaxfg"

                            },

                            {

                                num: NumberInt("832"),

                                value: "https://modelzoo.co/model/deeply-recursive-cnn-tf"

                            },

                            {

                                num: NumberInt("833"),

                                value: "https://modelzoo.co/model/facedetector"

                            },

                            {

                                num: NumberInt("834"),

                                value: "https://modelzoo.co/model/perceptualgan"

                            },

                            {

                                num: NumberInt("835"),

                                value: "https://modelzoo.co/model/keras-oneclassanomalydetection"

                            },

                            {

                                num: NumberInt("836"),

                                value: "https://modelzoo.co/model/carla-ilqr-mpc"

                            },

                            {

                                num: NumberInt("837"),

                                value: "https://modelzoo.co/model/drit-tensorflow"

                            },

                            {

                                num: NumberInt("838"),

                                value: "https://modelzoo.co/model/rnn-text-classification-tf"

                            },

                            {

                                num: NumberInt("839"),

                                value: "https://modelzoo.co/model/m-nmf"

                            },

                            {

                                num: NumberInt("840"),

                                value: "https://modelzoo.co/model/virtual-adversarial-training"

                            },

                            {

                                num: NumberInt("841"),

                                value: "https://modelzoo.co/model/univnet"

                            },

                            {

                                num: NumberInt("842"),

                                value: "https://modelzoo.co/model/masktrack"

                            },

                            {

                                num: NumberInt("843"),

                                value: "https://modelzoo.co/model/musemorphose"

                            },

                            {

                                num: NumberInt("844"),

                                value: "https://modelzoo.co/model/wadiqam"

                            },

                            {

                                num: NumberInt("845"),

                                value: "https://modelzoo.co/model/mindiffusion"

                            },

                            {

                                num: NumberInt("846"),

                                value: "https://modelzoo.co/model/bayesde"

                            },

                            {

                                num: NumberInt("847"),

                                value: "https://modelzoo.co/model/pyg-autoscale"

                            },

                            {

                                num: NumberInt("848"),

                                value: "https://modelzoo.co/model/streamingspeakerdiarization"

                            },

                            {

                                num: NumberInt("849"),

                                value: "https://modelzoo.co/model/l2p"

                            },

                            {

                                num: NumberInt("850"),

                                value: "https://modelzoo.co/model/dcnets"

                            },

                            {

                                num: NumberInt("851"),

                                value: "https://modelzoo.co/model/person-reid"

                            },

                            {

                                num: NumberInt("852"),

                                value: "https://modelzoo.co/model/dsfd-tensorflow"

                            },

                            {

                                num: NumberInt("853"),

                                value: "https://modelzoo.co/model/wavevae"

                            },

                            {

                                num: NumberInt("854"),

                                value: "https://modelzoo.co/model/image-similarity-using-deep-ranking"

                            },

                            {

                                num: NumberInt("855"),

                                value: "https://modelzoo.co/model/fasterrcnn-pytorch"

                            },

                            {

                                num: NumberInt("856"),

                                value: "https://modelzoo.co/model/dr-gan-by-pytorch"

                            },

                            {

                                num: NumberInt("857"),

                                value: "https://modelzoo.co/model/famos"

                            },

                            {

                                num: NumberInt("858"),

                                value: "https://modelzoo.co/model/tacotron2-pytorch"

                            },

                            {

                                num: NumberInt("859"),

                                value: "https://modelzoo.co/model/tf-layer-norm"

                            },

                            {

                                num: NumberInt("860"),

                                value: "https://modelzoo.co/model/paysage"

                            },

                            {

                                num: NumberInt("861"),

                                value: "https://modelzoo.co/model/pytorch-psetae"

                            },

                            {

                                num: NumberInt("862"),

                                value: "https://modelzoo.co/model/docee"

                            },

                            {

                                num: NumberInt("863"),

                                value: "https://modelzoo.co/model/efficientnet-jax"

                            },

                            {

                                num: NumberInt("864"),

                                value: "https://modelzoo.co/model/portrait-matting-unet-flask"

                            },

                            {

                                num: NumberInt("865"),

                                value: "https://modelzoo.co/model/changeformer"

                            },

                            {

                                num: NumberInt("866"),

                                value: "https://modelzoo.co/model/3d-boundingbox-pytorch"

                            },

                            {

                                num: NumberInt("867"),

                                value: "https://modelzoo.co/model/indrnn-pytorch"

                            },

                            {

                                num: NumberInt("868"),

                                value: "https://modelzoo.co/model/deep-alignment-network-tensorflow"

                            },

                            {

                                num: NumberInt("869"),

                                value: "https://modelzoo.co/model/back2futurepytorch"

                            },

                            {

                                num: NumberInt("870"),

                                value: "https://modelzoo.co/model/waveflow"

                            },

                            {

                                num: NumberInt("871"),

                                value: "https://modelzoo.co/model/multi-person-tracker"

                            },

                            {

                                num: NumberInt("872"),

                                value: "https://modelzoo.co/model/mano"

                            },

                            {

                                num: NumberInt("873"),

                                value: "https://modelzoo.co/model/dialogue-understanding"

                            },

                            {

                                num: NumberInt("874"),

                                value: "https://modelzoo.co/model/image-embedding-learning-gluon"

                            },

                            {

                                num: NumberInt("875"),

                                value: "https://modelzoo.co/model/pytorch-detect-to-track"

                            },

                            {

                                num: NumberInt("876"),

                                value: "https://modelzoo.co/model/agentformer"

                            },

                            {

                                num: NumberInt("877"),

                                value: "https://modelzoo.co/model/qatm-pytorch"

                            },

                            {

                                num: NumberInt("878"),

                                value: "https://modelzoo.co/model/efficient-vdvae"

                            },

                            {

                                num: NumberInt("879"),

                                value: "https://modelzoo.co/model/a-convolutional-neural-network-cascade-for"

                            },

                            {

                                num: NumberInt("880"),

                                value: "https://modelzoo.co/model/bsconv"

                            },

                            {

                                num: NumberInt("881"),

                                value: "https://modelzoo.co/model/samsung-drl-code"

                            },

                            {

                                num: NumberInt("882"),

                                value: "https://modelzoo.co/model/restoring-extremely-dark-images-in-real"

                            },

                            {

                                num: NumberInt("883"),

                                value: "https://modelzoo.co/model/pytorch-lightning-gans"

                            },

                            {

                                num: NumberInt("884"),

                                value: "https://modelzoo.co/model/yolo-v4-tfkeras"

                            },

                            {

                                num: NumberInt("885"),

                                value: "https://modelzoo.co/model/torch-backbones"

                            },

                            {

                                num: NumberInt("886"),

                                value: "https://modelzoo.co/model/rgcn"

                            },

                            {

                                num: NumberInt("887"),

                                value: "https://modelzoo.co/model/pytorch-shake-shake"

                            },

                            {

                                num: NumberInt("888"),

                                value: "https://modelzoo.co/model/tacotron-pytorch-2"

                            },

                            {

                                num: NumberInt("889"),

                                value: "https://modelzoo.co/model/stylespeech"

                            },

                            {

                                num: NumberInt("890"),

                                value: "https://modelzoo.co/model/vitgan"

                            },

                            {

                                num: NumberInt("891"),

                                value: "https://modelzoo.co/model/jax-cosmo"

                            },

                            {

                                num: NumberInt("892"),

                                value: "https://modelzoo.co/model/evaluating-bdl"

                            },

                            {

                                num: NumberInt("893"),

                                value: "https://modelzoo.co/model/pytorch-image-translation-gans"

                            },

                            {

                                num: NumberInt("894"),

                                value: "https://modelzoo.co/model/lffont"

                            },

                            {

                                num: NumberInt("895"),

                                value: "https://modelzoo.co/model/jax-verify"

                            },

                            {

                                num: NumberInt("896"),

                                value: "https://modelzoo.co/model/vsr-duf-reimplement"

                            },

                            {

                                num: NumberInt("897"),

                                value: "https://modelzoo.co/model/cbam-tensorflow-slim"

                            },

                            {

                                num: NumberInt("898"),

                                value: "https://modelzoo.co/model/dsq"

                            },

                            {

                                num: NumberInt("899"),

                                value: "https://modelzoo.co/model/stagewise-knowledge-distillation"

                            },

                            {

                                num: NumberInt("900"),

                                value: "https://modelzoo.co/model/capsnet-guide-pytorch"

                            },

                            {

                                num: NumberInt("901"),

                                value: "https://modelzoo.co/model/ddc-transfer-learning"

                            },

                            {

                                num: NumberInt("902"),

                                value: "https://modelzoo.co/model/personlab-tf"

                            },

                            {

                                num: NumberInt("903"),

                                value: "https://modelzoo.co/model/unified-gan-tensorflow"

                            },

                            {

                                num: NumberInt("904"),

                                value: "https://modelzoo.co/model/recursive-cnns"

                            },

                            {

                                num: NumberInt("905"),

                                value: "https://modelzoo.co/model/cost-aggregation-transformers"

                            },

                            {

                                num: NumberInt("906"),

                                value: "https://modelzoo.co/model/local-relational-nets"

                            },

                            {

                                num: NumberInt("907"),

                                value: "https://modelzoo.co/model/stereonet"

                            },

                            {

                                num: NumberInt("908"),

                                value: "https://modelzoo.co/model/neural-process-family"

                            },

                            {

                                num: NumberInt("909"),

                                value: "https://modelzoo.co/model/pytorch-polygon-rnn"

                            },

                            {

                                num: NumberInt("910"),

                                value: "https://modelzoo.co/model/autoencoder-based-communication-system"

                            },

                            {

                                num: NumberInt("911"),

                                value: "https://modelzoo.co/model/vib-pytorch"

                            },

                            {

                                num: NumberInt("912"),

                                value: "https://modelzoo.co/model/dst-cbc"

                            },

                            {

                                num: NumberInt("913"),

                                value: "https://modelzoo.co/model/movenetpytorch"

                            },

                            {

                                num: NumberInt("914"),

                                value: "https://modelzoo.co/model/panoptic-reconstruction"

                            },

                            {

                                num: NumberInt("915"),

                                value: "https://modelzoo.co/model/pnasnettf"

                            },

                            {

                                num: NumberInt("916"),

                                value: "https://modelzoo.co/model/cogan-tensorflow"

                            },

                            {

                                num: NumberInt("917"),

                                value: "https://modelzoo.co/model/mnasnet-keras-tensorflow"

                            },

                            {

                                num: NumberInt("918"),

                                value: "https://modelzoo.co/model/pytorch-dorefanet"

                            },

                            {

                                num: NumberInt("919"),

                                value: "https://modelzoo.co/model/pytorch-pose-proposal-networks"

                            },

                            {

                                num: NumberInt("920"),

                                value: "https://modelzoo.co/model/zero-dce"

                            },

                            {

                                num: NumberInt("921"),

                                value: "https://modelzoo.co/model/yolov5-deepsort-tensorrt"

                            },

                            {

                                num: NumberInt("922"),

                                value: "https://modelzoo.co/model/pytorch-mppi"

                            },

                            {

                                num: NumberInt("923"),

                                value: "https://modelzoo.co/model/tensorflow-neat"

                            },

                            {

                                num: NumberInt("924"),

                                value: "https://modelzoo.co/model/pytorch_image_classifier"

                            },

                            {

                                num: NumberInt("925"),

                                value: "https://modelzoo.co/model/corrpm"

                            },

                            {

                                num: NumberInt("926"),

                                value: "https://modelzoo.co/model/pytorch-basic-gans"

                            },

                            {

                                num: NumberInt("927"),

                                value: "https://modelzoo.co/model/jackson-jaxrs-providers"

                            },

                            {

                                num: NumberInt("928"),

                                value: "https://modelzoo.co/model/segmentation"

                            },

                            {

                                num: NumberInt("929"),

                                value: "https://modelzoo.co/model/ppo-tensorflow"

                            },

                            {

                                num: NumberInt("930"),

                                value: "https://modelzoo.co/model/pytorch-pcn"

                            },

                            {

                                num: NumberInt("931"),

                                value: "https://modelzoo.co/model/segan"

                            },

                            {

                                num: NumberInt("932"),

                                value: "https://modelzoo.co/model/d3featpytorch"

                            },

                            {

                                num: NumberInt("933"),

                                value: "https://modelzoo.co/model/diffgan-tts"

                            },

                            {

                                num: NumberInt("934"),

                                value: "https://modelzoo.co/model/tf-segnet"

                            },

                            {

                                num: NumberInt("935"),

                                value: "https://modelzoo.co/model/bicyclegan-pytorch"

                            },

                            {

                                num: NumberInt("936"),

                                value: "https://modelzoo.co/model/pytorch-dann-2"

                            },

                            {

                                num: NumberInt("937"),

                                value: "https://modelzoo.co/model/incremental-learning"

                            },

                            {

                                num: NumberInt("938"),

                                value: "https://modelzoo.co/model/rfc"

                            },

                            {

                                num: NumberInt("939"),

                                value: "https://modelzoo.co/model/icnet-pytorch"

                            },

                            {

                                num: NumberInt("940"),

                                value: "https://modelzoo.co/model/tf-texture-net"

                            },

                            {

                                num: NumberInt("941"),

                                value: "https://modelzoo.co/model/diffsinger"

                            },

                            {

                                num: NumberInt("942"),

                                value: "https://modelzoo.co/model/jittor-mlp"

                            },

                            {

                                num: NumberInt("943"),

                                value: "https://modelzoo.co/model/rl-examples"

                            },

                            {

                                num: NumberInt("944"),

                                value: "https://modelzoo.co/model/insightface-tensorflow"

                            },

                            {

                                num: NumberInt("945"),

                                value: "https://modelzoo.co/model/dialog-nlu"

                            },

                            {

                                num: NumberInt("946"),

                                value: "https://modelzoo.co/model/categorical-dqn"

                            },

                            {

                                num: NumberInt("947"),

                                value: "https://modelzoo.co/model/efficientnet-pytorch-2"

                            },

                            {

                                num: NumberInt("948"),

                                value: "https://modelzoo.co/model/pytorch-res2net"

                            },

                            {

                                num: NumberInt("949"),

                                value: "https://modelzoo.co/model/tacotron-3"

                            },

                            {

                                num: NumberInt("950"),

                                value: "https://modelzoo.co/model/100-days-of-ml-code"

                            },

                            {

                                num: NumberInt("951"),

                                value: "https://modelzoo.co/model/tfvaegan"

                            },

                            {

                                num: NumberInt("952"),

                                value: "https://modelzoo.co/model/pytorch-violet"

                            },

                            {

                                num: NumberInt("953"),

                                value: "https://modelzoo.co/model/swagger-gradle-plugin"

                            },

                            {

                                num: NumberInt("954"),

                                value: "https://modelzoo.co/model/jaxb-xew-plugin"

                            },

                            {

                                num: NumberInt("955"),

                                value: "https://modelzoo.co/model/nvidiaunsupervised-video-interpolation"

                            },

                            {

                                num: NumberInt("956"),

                                value: "https://modelzoo.co/model/gpt2"

                            },

                            {

                                num: NumberInt("957"),

                                value: "https://modelzoo.co/model/segan-pytorch"

                            },

                            {

                                num: NumberInt("958"),

                                value: "https://modelzoo.co/model/spinenet-pytorch-2"

                            },

                            {

                                num: NumberInt("959"),

                                value: "https://modelzoo.co/model/wasserstein-gan-chainer"

                            },

                            {

                                num: NumberInt("960"),

                                value: "https://modelzoo.co/model/seq2seq-chatbot-tensorflow"

                            },

                            {

                                num: NumberInt("961"),

                                value: "https://modelzoo.co/model/organsegrstn-pytorch"

                            },

                            {

                                num: NumberInt("962"),

                                value: "https://modelzoo.co/model/pytorch-adain"

                            },

                            {

                                num: NumberInt("963"),

                                value: "https://modelzoo.co/model/pytorch-darknet53"

                            },

                            {

                                num: NumberInt("964"),

                                value: "https://modelzoo.co/model/distbelief"

                            },

                            {

                                num: NumberInt("965"),

                                value: "https://modelzoo.co/model/meva"

                            },

                            {

                                num: NumberInt("966"),

                                value: "https://modelzoo.co/model/visual-feature-attribution-using-wasserstein-gans-pytorch"

                            },

                            {

                                num: NumberInt("967"),

                                value: "https://modelzoo.co/model/ge2e-speaker-verification"

                            },

                            {

                                num: NumberInt("968"),

                                value: "https://modelzoo.co/model/speaker-recognition-papers"

                            },

                            {

                                num: NumberInt("969"),

                                value: "https://modelzoo.co/model/c2ae-multilabel-classification"

                            },

                            {

                                num: NumberInt("970"),

                                value: "https://modelzoo.co/model/biogans"

                            },

                            {

                                num: NumberInt("971"),

                                value: "https://modelzoo.co/model/pytorch-pix2pix"

                            },

                            {

                                num: NumberInt("972"),

                                value: "https://modelzoo.co/model/easy-fpnpytorch"

                            },

                            {

                                num: NumberInt("973"),

                                value: "https://modelzoo.co/model/simclr-pytorch-2"

                            },

                            {

                                num: NumberInt("974"),

                                value: "https://modelzoo.co/model/jaxb2-basics"

                            },

                            {

                                num: NumberInt("975"),

                                value: "https://modelzoo.co/model/fast-wavenetpytorch"

                            },

                            {

                                num: NumberInt("976"),

                                value: "https://modelzoo.co/model/metrics"

                            },

                            {

                                num: NumberInt("977"),

                                value: "https://modelzoo.co/model/dbnet-litepytorch"

                            },

                            {

                                num: NumberInt("978"),

                                value: "https://modelzoo.co/model/mdvc"

                            },

                            {

                                num: NumberInt("979"),

                                value: "https://modelzoo.co/model/shiro-jersey"

                            },

                            {

                                num: NumberInt("980"),

                                value: "https://modelzoo.co/model/tensorflow-cifar-10"

                            },

                            {

                                num: NumberInt("981"),

                                value: "https://modelzoo.co/model/stresnet"

                            },

                            {

                                num: NumberInt("982"),

                                value: "https://modelzoo.co/model/voice-synthesis"

                            },

                            {

                                num: NumberInt("983"),

                                value: "https://modelzoo.co/model/color-transfer-histogram-analogy"

                            },

                            {

                                num: NumberInt("984"),

                                value: "https://modelzoo.co/model/pruning-filters-for-efficient-convnets"

                            },

                            {

                                num: NumberInt("985"),

                                value: "https://modelzoo.co/model/overlapping-community-detection"

                            },

                            {

                                num: NumberInt("986"),

                                value: "https://modelzoo.co/model/gpt2-dialogue-generation-pytorch"

                            },

                            {

                                num: NumberInt("987"),

                                value: "https://modelzoo.co/model/dmfont"

                            },

                            {

                                num: NumberInt("988"),

                                value: "https://modelzoo.co/model/viton-gan"

                            },

                            {

                                num: NumberInt("989"),

                                value: "https://modelzoo.co/model/pytorchdiscreteflows"

                            },

                            {

                                num: NumberInt("990"),

                                value: "https://modelzoo.co/model/magi"

                            },

                            {

                                num: NumberInt("991"),

                                value: "https://modelzoo.co/model/improved-cyclegan"

                            },

                            {

                                num: NumberInt("992"),

                                value: "https://modelzoo.co/model/tf-recsys"

                            },

                            {

                                num: NumberInt("993"),

                                value: "https://modelzoo.co/model/text-gan-tensorflow"

                            },

                            {

                                num: NumberInt("994"),

                                value: "https://modelzoo.co/model/generating-devanagari-using-draw"

                            },

                            {

                                num: NumberInt("995"),

                                value: "https://modelzoo.co/model/mr-gan"

                            },

                            {

                                num: NumberInt("996"),

                                value: "https://modelzoo.co/model/eigenvectors-from-eigenvalues"

                            },

                            {

                                num: NumberInt("997"),

                                value: "https://modelzoo.co/model/rax"

                            },

                            {

                                num: NumberInt("998"),

                                value: "https://modelzoo.co/model/tensorflow-mil"

                            },

                            {

                                num: NumberInt("999"),

                                value: "https://modelzoo.co/model/tensorflow-mnist-aae"

                            },

                            {

                                num: NumberInt("1000"),

                                value: "https://modelzoo.co/model/listen-attend-and-spell"

                            },

                            {

                                num: NumberInt("1001"),

                                value: "https://modelzoo.co/model/d4pg-pytorch"

                            },

                            {

                                num: NumberInt("1002"),

                                value: "https://modelzoo.co/model/r-yolov4"

                            },

                            {

                                num: NumberInt("1003"),

                                value: "https://modelzoo.co/model/sqddpg"

                            },

                            {

                                num: NumberInt("1004"),

                                value: "https://modelzoo.co/model/zoo"

                            },

                            {

                                num: NumberInt("1005"),

                                value: "https://modelzoo.co/model/sc2aibot"

                            },

                            {

                                num: NumberInt("1006"),

                                value: "https://modelzoo.co/model/d2l-java"

                            },

                            {

                                num: NumberInt("1007"),

                                value: "https://modelzoo.co/model/bert-chinese-text-classification-pytorch"

                            },

                            {

                                num: NumberInt("1008"),

                                value: "https://modelzoo.co/model/cnniqaplusplus"

                            },

                            {

                                num: NumberInt("1009"),

                                value: "https://modelzoo.co/model/keras-icnet"

                            },

                            {

                                num: NumberInt("1010"),

                                value: "https://modelzoo.co/model/inpainting-gmcnn-keras"

                            },

                            {

                                num: NumberInt("1011"),

                                value: "https://modelzoo.co/model/recurrent-independent-mechanisms"

                            },

                            {

                                num: NumberInt("1012"),

                                value: "https://modelzoo.co/model/imitation-learning"

                            },

                            {

                                num: NumberInt("1013"),

                                value: "https://modelzoo.co/model/multitask-cyclegan"

                            },

                            {

                                num: NumberInt("1014"),

                                value: "https://modelzoo.co/model/tmnet"

                            },

                            {

                                num: NumberInt("1015"),

                                value: "https://modelzoo.co/model/quicknat-pytorch"

                            },

                            {

                                num: NumberInt("1016"),

                                value: "https://modelzoo.co/model/jax-unirep"

                            },

                            {

                                num: NumberInt("1017"),

                                value: "https://modelzoo.co/model/jax-models"

                            },

                            {

                                num: NumberInt("1018"),

                                value: "https://modelzoo.co/model/enas-keras"

                            },

                            {

                                num: NumberInt("1019"),

                                value: "https://modelzoo.co/model/bert-in-production"

                            },

                            {

                                num: NumberInt("1020"),

                                value: "https://modelzoo.co/model/notebooks"

                            },

                            {

                                num: NumberInt("1021"),

                                value: "https://modelzoo.co/model/matrix-capsules-em-pytorch"

                            },

                            {

                                num: NumberInt("1022"),

                                value: "https://modelzoo.co/model/pytorch-conditional-gans"

                            },

                            {

                                num: NumberInt("1023"),

                                value: "https://modelzoo.co/model/swae-pytorch"

                            },

                            {

                                num: NumberInt("1024"),

                                value: "https://modelzoo.co/model/deeplab-v3-plus"

                            },

                            {

                                num: NumberInt("1025"),

                                value: "https://modelzoo.co/model/upt"

                            },

                            {

                                num: NumberInt("1026"),

                                value: "https://modelzoo.co/model/simple-equivariant-gnn"

                            },

                            {

                                num: NumberInt("1027"),

                                value: "https://modelzoo.co/model/mobilenetv2gluon"

                            },

                            {

                                num: NumberInt("1028"),

                                value: "https://modelzoo.co/model/koclip"

                            },

                            {

                                num: NumberInt("1029"),

                                value: "https://modelzoo.co/model/pytorch-unet"

                            },

                            {

                                num: NumberInt("1030"),

                                value: "https://modelzoo.co/model/face-parsing"

                            },

                            {

                                num: NumberInt("1031"),

                                value: "https://modelzoo.co/model/max-deeplab"

                            },

                            {

                                num: NumberInt("1032"),

                                value: "https://modelzoo.co/model/ppdet"

                            },

                            {

                                num: NumberInt("1033"),

                                value: "https://modelzoo.co/model/transcenter"

                            },

                            {

                                num: NumberInt("1034"),

                                value: "https://modelzoo.co/model/scot"

                            },

                            {

                                num: NumberInt("1035"),

                                value: "https://modelzoo.co/model/sparse-structure-selection"

                            },

                            {

                                num: NumberInt("1036"),

                                value: "https://modelzoo.co/model/unsupervised-object-counting"

                            },

                            {

                                num: NumberInt("1037"),

                                value: "https://modelzoo.co/model/textboxes-plusplus-tensorflow"

                            },

                            {

                                num: NumberInt("1038"),

                                value: "https://modelzoo.co/model/sar-tf"

                            },

                            {

                                num: NumberInt("1039"),

                                value: "https://modelzoo.co/model/mobilenetv3-pytorch-3"

                            },

                            {

                                num: NumberInt("1040"),

                                value: "https://modelzoo.co/model/mlp-singer"

                            },

                            {

                                num: NumberInt("1041"),

                                value: "https://modelzoo.co/model/kfac-pytorch"

                            },

                            {

                                num: NumberInt("1042"),

                                value: "https://modelzoo.co/model/fftnet-pytorch"

                            },

                            {

                                num: NumberInt("1043"),

                                value: "https://modelzoo.co/model/mxfont"

                            },

                            {

                                num: NumberInt("1044"),

                                value: "https://modelzoo.co/model/pvdnet"

                            },

                            {

                                num: NumberInt("1045"),

                                value: "https://modelzoo.co/model/spectral-density"

                            },

                            {

                                num: NumberInt("1046"),

                                value: "https://modelzoo.co/model/mirnet"

                            },

                            {

                                num: NumberInt("1047"),

                                value: "https://modelzoo.co/model/yolo-v2"

                            },

                            {

                                num: NumberInt("1048"),

                                value: "https://modelzoo.co/model/srntt-pytorch"

                            },

                            {

                                num: NumberInt("1049"),

                                value: "https://modelzoo.co/model/dcmh"

                            },

                            {

                                num: NumberInt("1050"),

                                value: "https://modelzoo.co/model/dgn"

                            },

                            {

                                num: NumberInt("1051"),

                                value: "https://modelzoo.co/model/yolox-pytorch"

                            },

                            {

                                num: NumberInt("1052"),

                                value: "https://modelzoo.co/model/deepspeech-mxnet"

                            },

                            {

                                num: NumberInt("1053"),

                                value: "https://modelzoo.co/model/discogan-tensorflow"

                            },

                            {

                                num: NumberInt("1054"),

                                value: "https://modelzoo.co/model/neural-processes"

                            },

                            {

                                num: NumberInt("1055"),

                                value: "https://modelzoo.co/model/mixnet-pytorch"

                            },

                            {

                                num: NumberInt("1056"),

                                value: "https://modelzoo.co/model/tracer"

                            },

                            {

                                num: NumberInt("1057"),

                                value: "https://modelzoo.co/model/deep-learning"

                            },

                            {

                                num: NumberInt("1058"),

                                value: "https://modelzoo.co/model/hierarchical-attention-networks"

                            },

                            {

                                num: NumberInt("1059"),

                                value: "https://modelzoo.co/model/imitation-learning-tensorflow"

                            },

                            {

                                num: NumberInt("1060"),

                                value: "https://modelzoo.co/model/cogdl-tensorflow"

                            },

                            {

                                num: NumberInt("1061"),

                                value: "https://modelzoo.co/model/feed-forward-style-transfer"

                            },

                            {

                                num: NumberInt("1062"),

                                value: "https://modelzoo.co/model/tensorflow20-ssd"

                            },

                            {

                                num: NumberInt("1063"),

                                value: "https://modelzoo.co/model/tf-dropblock"

                            },

                            {

                                num: NumberInt("1064"),

                                value: "https://modelzoo.co/model/fast-neural-style-for-image-style"

                            },

                            {

                                num: NumberInt("1065"),

                                value: "https://modelzoo.co/model/pytorch-poetry-generation"

                            },

                            {

                                num: NumberInt("1066"),

                                value: "https://modelzoo.co/model/bicubic-pytorch"

                            },

                            {

                                num: NumberInt("1067"),

                                value: "https://modelzoo.co/model/cgd"

                            },

                            {

                                num: NumberInt("1068"),

                                value: "https://modelzoo.co/model/capsule-pytorch"

                            },

                            {

                                num: NumberInt("1069"),

                                value: "https://modelzoo.co/model/relationnetworks-clevr"

                            },

                            {

                                num: NumberInt("1070"),

                                value: "https://modelzoo.co/model/rltf"

                            },

                            {

                                num: NumberInt("1071"),

                                value: "https://modelzoo.co/model/fcospytorch"

                            },

                            {

                                num: NumberInt("1072"),

                                value: "https://modelzoo.co/model/total-variation-losspytorch"

                            },

                            {

                                num: NumberInt("1073"),

                                value: "https://modelzoo.co/model/tasnet"

                            },

                            {

                                num: NumberInt("1074"),

                                value: "https://modelzoo.co/model/covidnet"

                            },

                            {

                                num: NumberInt("1075"),

                                value: "https://modelzoo.co/model/billion-scale-semi-supervised-learning"

                            },

                            {

                                num: NumberInt("1076"),

                                value: "https://modelzoo.co/model/dcls-sr"

                            },

                            {

                                num: NumberInt("1077"),

                                value: "https://modelzoo.co/model/tabular-dl-num-embeddings"

                            },

                            {

                                num: NumberInt("1078"),

                                value: "https://modelzoo.co/model/r-net-in-tensorflow"

                            },

                            {

                                num: NumberInt("1079"),

                                value: "https://modelzoo.co/model/vae_vpflows"

                            },

                            {

                                num: NumberInt("1080"),

                                value: "https://modelzoo.co/model/metaformer"

                            },

                            {

                                num: NumberInt("1081"),

                                value: "https://modelzoo.co/model/again-vc"

                            },

                            {

                                num: NumberInt("1082"),

                                value: "https://modelzoo.co/model/editts"

                            },

                            {

                                num: NumberInt("1083"),

                                value: "https://modelzoo.co/model/griffin-lim"

                            },

                            {

                                num: NumberInt("1084"),

                                value: "https://modelzoo.co/model/tagspace-tensorflow"

                            },

                            {

                                num: NumberInt("1085"),

                                value: "https://modelzoo.co/model/cnn-sentence-classification"

                            },

                            {

                                num: NumberInt("1086"),

                                value: "https://modelzoo.co/model/deep-knowledge-tracing"

                            },

                            {

                                num: NumberInt("1087"),

                                value: "https://modelzoo.co/model/pregel"

                            },

                            {

                                num: NumberInt("1088"),

                                value: "https://modelzoo.co/model/simclr-in-tensorflow-2"

                            },

                            {

                                num: NumberInt("1089"),

                                value: "https://modelzoo.co/model/speech-driven-gesture-generation-with-autoencoder"

                            },

                            {

                                num: NumberInt("1090"),

                                value: "https://modelzoo.co/model/deep-transfer"

                            },

                            {

                                num: NumberInt("1091"),

                                value: "https://modelzoo.co/model/quantile-regression-dqn-pytorch-2"

                            },

                            {

                                num: NumberInt("1092"),

                                value: "https://modelzoo.co/model/gaze-estimation"

                            },

                            {

                                num: NumberInt("1093"),

                                value: "https://modelzoo.co/model/voice-filter"

                            },

                            {

                                num: NumberInt("1094"),

                                value: "https://modelzoo.co/model/skip-thought-tf"

                            },

                            {

                                num: NumberInt("1095"),

                                value: "https://modelzoo.co/model/esim-tensorflow"

                            },

                            {

                                num: NumberInt("1096"),

                                value: "https://modelzoo.co/model/asne"

                            },

                            {

                                num: NumberInt("1097"),

                                value: "https://modelzoo.co/model/tf-hrnet"

                            },

                            {

                                num: NumberInt("1098"),

                                value: "https://modelzoo.co/model/tensoranfis"

                            },

                            {

                                num: NumberInt("1099"),

                                value: "https://modelzoo.co/model/translagent"

                            },

                            {

                                num: NumberInt("1100"),

                                value: "https://modelzoo.co/model/ai-writer-data2doc"

                            },

                            {

                                num: NumberInt("1101"),

                                value: "https://modelzoo.co/model/fmpn-fer"

                            },

                            {

                                num: NumberInt("1102"),

                                value: "https://modelzoo.co/model/maskflownet-pytorch"

                            },

                            {

                                num: NumberInt("1103"),

                                value: "https://modelzoo.co/model/supermix"

                            },

                            {

                                num: NumberInt("1104"),

                                value: "https://modelzoo.co/model/pytorch-noreward-rl"

                            },

                            {

                                num: NumberInt("1105"),

                                value: "https://modelzoo.co/model/faster-rcnn-pytorch"

                            },

                            {

                                num: NumberInt("1106"),

                                value: "https://modelzoo.co/model/deep-ranking"

                            },

                            {

                                num: NumberInt("1107"),

                                value: "https://modelzoo.co/model/pytorch-filterresponsenormalizationlayer"

                            },

                            {

                                num: NumberInt("1108"),

                                value: "https://modelzoo.co/model/knowledge-evolution"

                            },

                            {

                                num: NumberInt("1109"),

                                value: "https://modelzoo.co/model/keras-rfcn"

                            },

                            {

                                num: NumberInt("1110"),

                                value: "https://modelzoo.co/model/tf2-eager-yolo3"

                            },

                            {

                                num: NumberInt("1111"),

                                value: "https://modelzoo.co/model/tensorflow-implementation-of-lcnn"

                            },

                            {

                                num: NumberInt("1112"),

                                value: "https://modelzoo.co/model/psmnet"

                            },

                            {

                                num: NumberInt("1113"),

                                value: "https://modelzoo.co/model/speech-emotion-classification-with-pytorch"

                            },

                            {

                                num: NumberInt("1114"),

                                value: "https://modelzoo.co/model/vessel-wgan-pytorch"

                            },

                            {

                                num: NumberInt("1115"),

                                value: "https://modelzoo.co/model/deepphotostyle-pytorch"

                            },

                            {

                                num: NumberInt("1116"),

                                value: "https://modelzoo.co/model/crossvit-pytorch"

                            },

                            {

                                num: NumberInt("1117"),

                                value: "https://modelzoo.co/model/squeezenet-neural-style-pytorch"

                            },

                            {

                                num: NumberInt("1118"),

                                value: "https://modelzoo.co/model/pytorch-attention-guided-cyclegan"

                            },

                            {

                                num: NumberInt("1119"),

                                value: "https://modelzoo.co/model/multiclass-semantic-segmentation-camvid"

                            },

                            {

                                num: NumberInt("1120"),

                                value: "https://modelzoo.co/model/pytorch-neat"

                            },

                            {

                                num: NumberInt("1121"),

                                value: "https://modelzoo.co/model/lenet5-mnist-pytorch"

                            },

                            {

                                num: NumberInt("1122"),

                                value: "https://modelzoo.co/model/pytorch-hed"

                            },

                            {

                                num: NumberInt("1123"),

                                value: "https://modelzoo.co/model/recurrent-environment-simulators"

                            },

                            {

                                num: NumberInt("1124"),

                                value: "https://modelzoo.co/model/tensorflowlite-unet"

                            },

                            {

                                num: NumberInt("1125"),

                                value: "https://modelzoo.co/model/deblurgan-tf"

                            },

                            {

                                num: NumberInt("1126"),

                                value: "https://modelzoo.co/model/pgd-pytorch"

                            },

                            {

                                num: NumberInt("1127"),

                                value: "https://modelzoo.co/model/dctts-pytorch"

                            },

                            {

                                num: NumberInt("1128"),

                                value: "https://modelzoo.co/model/models"

                            },

                            {

                                num: NumberInt("1129"),

                                value: "https://modelzoo.co/model/molclr"

                            },

                            {

                                num: NumberInt("1130"),

                                value: "https://modelzoo.co/model/convolutional-pose-machine-tf"

                            },

                            {

                                num: NumberInt("1131"),

                                value: "https://modelzoo.co/model/tensorflow-maml"

                            },

                            {

                                num: NumberInt("1132"),

                                value: "https://modelzoo.co/model/swav-tf"

                            },

                            {

                                num: NumberInt("1133"),

                                value: "https://modelzoo.co/model/tf-monodepth2"

                            },

                            {

                                num: NumberInt("1134"),

                                value: "https://modelzoo.co/model/inceptionv4-and-inception-resnetv2pytorch"

                            },

                            {

                                num: NumberInt("1135"),

                                value: "https://modelzoo.co/model/gail-gym"

                            },

                            {

                                num: NumberInt("1136"),

                                value: "https://modelzoo.co/model/recvae"

                            },

                            {

                                num: NumberInt("1137"),

                                value: "https://modelzoo.co/model/dlow"

                            },

                            {

                                num: NumberInt("1138"),

                                value: "https://modelzoo.co/model/jax-resnet"

                            },

                            {

                                num: NumberInt("1139"),

                                value: "https://modelzoo.co/model/crowd-counting-using-tensorflow"

                            },

                            {

                                num: NumberInt("1140"),

                                value: "https://modelzoo.co/model/shufflenet-v2-tensorflow"

                            },

                            {

                                num: NumberInt("1141"),

                                value: "https://modelzoo.co/model/pytorch-image-classification-with-kaggle-dogs"

                            },

                            {

                                num: NumberInt("1142"),

                                value: "https://modelzoo.co/model/torch-dcec"

                            },

                            {

                                num: NumberInt("1143"),

                                value: "https://modelzoo.co/model/srgan-pytorch-3"

                            },

                            {

                                num: NumberInt("1144"),

                                value: "https://modelzoo.co/model/3d-unet-pytorch-implementation"

                            },

                            {

                                num: NumberInt("1145"),

                                value: "https://modelzoo.co/model/tene"

                            },

                            {

                                num: NumberInt("1146"),

                                value: "https://modelzoo.co/model/posestylizer"

                            },

                            {

                                num: NumberInt("1147"),

                                value: "https://modelzoo.co/model/contiguous-succotash"

                            },

                            {

                                num: NumberInt("1148"),

                                value: "https://modelzoo.co/model/higgs"

                            },

                            {

                                num: NumberInt("1149"),

                                value: "https://modelzoo.co/model/im2im"

                            },

                            {

                                num: NumberInt("1150"),

                                value: "https://modelzoo.co/model/hred-attention-tensorflow"

                            },

                            {

                                num: NumberInt("1151"),

                                value: "https://modelzoo.co/model/pytorch-rl-cpp"

                            },

                            {

                                num: NumberInt("1152"),

                                value: "https://modelzoo.co/model/alpha-zero"

                            },

                            {

                                num: NumberInt("1153"),

                                value: "https://modelzoo.co/model/siamcrnn"

                            },

                            {

                                num: NumberInt("1154"),

                                value: "https://modelzoo.co/model/ganimation"

                            },

                            {

                                num: NumberInt("1155"),

                                value: "https://modelzoo.co/model/adversarial-pose-pytorch"

                            },

                            {

                                num: NumberInt("1156"),

                                value: "https://modelzoo.co/model/pytorch-srdensenet"

                            },

                            {

                                num: NumberInt("1157"),

                                value: "https://modelzoo.co/model/genesis"

                            },

                            {

                                num: NumberInt("1158"),

                                value: "https://modelzoo.co/model/nasnet-pytorch"

                            },

                            {

                                num: NumberInt("1159"),

                                value: "https://modelzoo.co/model/conditioned-source-separation-lasaft"

                            },

                            {

                                num: NumberInt("1160"),

                                value: "https://modelzoo.co/model/real-esrgan"

                            },

                            {

                                num: NumberInt("1161"),

                                value: "https://modelzoo.co/model/policy-gradient-methods"

                            },

                            {

                                num: NumberInt("1162"),

                                value: "https://modelzoo.co/model/tgan"

                            },

                            {

                                num: NumberInt("1163"),

                                value: "https://modelzoo.co/model/pointnet2-tensorflow2"

                            },

                            {

                                num: NumberInt("1164"),

                                value: "https://modelzoo.co/model/vision-transformer-keras-tensorflow-pytorch-examples"

                            },

                            {

                                num: NumberInt("1165"),

                                value: "https://modelzoo.co/model/one-cycle-policy"

                            },

                            {

                                num: NumberInt("1166"),

                                value: "https://modelzoo.co/model/pytorch-basic-nmt"

                            },

                            {

                                num: NumberInt("1167"),

                                value: "https://modelzoo.co/model/pytorch-a3c-mujoco"

                            },

                            {

                                num: NumberInt("1168"),

                                value: "https://modelzoo.co/model/ceit-pytorch"

                            },

                            {

                                num: NumberInt("1169"),

                                value: "https://modelzoo.co/model/xmunmt"

                            },

                            {

                                num: NumberInt("1170"),

                                value: "https://modelzoo.co/model/deep-association-learning"

                            },

                            {

                                num: NumberInt("1171"),

                                value: "https://modelzoo.co/model/wsdm2018-hyperqa"

                            },

                            {

                                num: NumberInt("1172"),

                                value: "https://modelzoo.co/model/awesome-segmentations"

                            },

                            {

                                num: NumberInt("1173"),

                                value: "https://modelzoo.co/model/segnetcmr"

                            },

                            {

                                num: NumberInt("1174"),

                                value: "https://modelzoo.co/model/video-generator"

                            },

                            {

                                num: NumberInt("1175"),

                                value: "https://modelzoo.co/model/symmetrical-synthesis"

                            },

                            {

                                num: NumberInt("1176"),

                                value: "https://modelzoo.co/model/embracenet"

                            },

                            {

                                num: NumberInt("1177"),

                                value: "https://modelzoo.co/model/3d-cnn-action-recognition"

                            },

                            {

                                num: NumberInt("1178"),

                                value: "https://modelzoo.co/model/vae-gumbel-softmax"

                            },

                            {

                                num: NumberInt("1179"),

                                value: "https://modelzoo.co/model/hit-gan"

                            },

                            {

                                num: NumberInt("1180"),

                                value: "https://modelzoo.co/model/voxelmorph-pytorch"

                            },

                            {

                                num: NumberInt("1181"),

                                value: "https://modelzoo.co/model/permutohedral-lattice"

                            },

                            {

                                num: NumberInt("1182"),

                                value: "https://modelzoo.co/model/deeplabv3-plus"

                            },

                            {

                                num: NumberInt("1183"),

                                value: "https://modelzoo.co/model/wavegan-pytorch"

                            },

                            {

                                num: NumberInt("1184"),

                                value: "https://modelzoo.co/model/mmtm"

                            },

                            {

                                num: NumberInt("1185"),

                                value: "https://modelzoo.co/model/document-image-unwarping-pytorch"

                            },

                            {

                                num: NumberInt("1186"),

                                value: "https://modelzoo.co/model/dreml"

                            },

                            {

                                num: NumberInt("1187"),

                                value: "https://modelzoo.co/model/metaaf"

                            },

                            {

                                num: NumberInt("1188"),

                                value: "https://modelzoo.co/model/yolov3-tensorflow"

                            },

                            {

                                num: NumberInt("1189"),

                                value: "https://modelzoo.co/model/dfi-tensorflow"

                            },

                            {

                                num: NumberInt("1190"),

                                value: "https://modelzoo.co/model/videogan"

                            },

                            {

                                num: NumberInt("1191"),

                                value: "https://modelzoo.co/model/affinity-loss"

                            },

                            {

                                num: NumberInt("1192"),

                                value: "https://modelzoo.co/model/maskrcnn-modanet"

                            },

                            {

                                num: NumberInt("1193"),

                                value: "https://modelzoo.co/model/dsmscn"

                            },

                            {

                                num: NumberInt("1194"),

                                value: "https://modelzoo.co/model/drowsydriverdetection"

                            },

                            {

                                num: NumberInt("1195"),

                                value: "https://modelzoo.co/model/openpose-pytorch"

                            },

                            {

                                num: NumberInt("1196"),

                                value: "https://modelzoo.co/model/fotspytorch"

                            },

                            {

                                num: NumberInt("1197"),

                                value: "https://modelzoo.co/model/dsc-pytorch"

                            },

                            {

                                num: NumberInt("1198"),

                                value: "https://modelzoo.co/model/casenet"

                            },

                            {

                                num: NumberInt("1199"),

                                value: "https://modelzoo.co/model/vqgan-jax"

                            },

                            {

                                num: NumberInt("1200"),

                                value: "https://modelzoo.co/model/progen"

                            },

                            {

                                num: NumberInt("1201"),

                                value: "https://modelzoo.co/model/tensorflow-som"

                            },

                            {

                                num: NumberInt("1202"),

                                value: "https://modelzoo.co/model/distributed-rl"

                            },

                            {

                                num: NumberInt("1203"),

                                value: "https://modelzoo.co/model/esrgan-pytorch"

                            },

                            {

                                num: NumberInt("1204"),

                                value: "https://modelzoo.co/model/pytorch-deep-image-steganography"

                            },

                            {

                                num: NumberInt("1205"),

                                value: "https://modelzoo.co/model/cyclegan-qp"

                            },

                            {

                                num: NumberInt("1206"),

                                value: "https://modelzoo.co/model/plenoxels"

                            },

                            {

                                num: NumberInt("1207"),

                                value: "https://modelzoo.co/model/cyclic-learning-rate"

                            },

                            {

                                num: NumberInt("1208"),

                                value: "https://modelzoo.co/model/keras-sincnet"

                            },

                            {

                                num: NumberInt("1209"),

                                value: "https://modelzoo.co/model/game2vec"

                            },

                            {

                                num: NumberInt("1210"),

                                value: "https://modelzoo.co/model/liteseg"

                            },

                            {

                                num: NumberInt("1211"),

                                value: "https://modelzoo.co/model/variational-autoencoder-pytorch-2"

                            },

                            {

                                num: NumberInt("1212"),

                                value: "https://modelzoo.co/model/3pu-pytorch"

                            },

                            {

                                num: NumberInt("1213"),

                                value: "https://modelzoo.co/model/deepclustering"

                            },

                            {

                                num: NumberInt("1214"),

                                value: "https://modelzoo.co/model/rljax"

                            },

                            {

                                num: NumberInt("1215"),

                                value: "https://modelzoo.co/model/score-flow"

                            },

                            {

                                num: NumberInt("1216"),

                                value: "https://modelzoo.co/model/photographicimagesynthesiswithcascadedrefinementnetworks-pytorch"

                            },

                            {

                                num: NumberInt("1217"),

                                value: "https://modelzoo.co/model/bottom-up-features"

                            },

                            {

                                num: NumberInt("1218"),

                                value: "https://modelzoo.co/model/gatedpixelcnnpytorch"

                            },

                            {

                                num: NumberInt("1219"),

                                value: "https://modelzoo.co/model/dgi"

                            },

                            {

                                num: NumberInt("1220"),

                                value: "https://modelzoo.co/model/deep-multimodal-subspace-clustering-networks"

                            },

                            {

                                num: NumberInt("1221"),

                                value: "https://modelzoo.co/model/rethinking-bnn-optimization"

                            },

                            {

                                num: NumberInt("1222"),

                                value: "https://modelzoo.co/model/breakout-deep-q-network"

                            },

                            {

                                num: NumberInt("1223"),

                                value: "https://modelzoo.co/model/dtan"

                            },

                            {

                                num: NumberInt("1224"),

                                value: "https://modelzoo.co/model/funmatch-distillation"

                            },

                            {

                                num: NumberInt("1225"),

                                value: "https://modelzoo.co/model/keras-vision-transformer"

                            },

                            {

                                num: NumberInt("1226"),

                                value: "https://modelzoo.co/model/renet"

                            },

                            {

                                num: NumberInt("1227"),

                                value: "https://modelzoo.co/model/dsnt"

                            },

                            {

                                num: NumberInt("1228"),

                                value: "https://modelzoo.co/model/tf-adain"

                            },

                            {

                                num: NumberInt("1229"),

                                value: "https://modelzoo.co/model/mtcnn-pytorch"

                            },

                            {

                                num: NumberInt("1230"),

                                value: "https://modelzoo.co/model/deepvo"

                            },

                            {

                                num: NumberInt("1231"),

                                value: "https://modelzoo.co/model/densenet-mura-pytorch"

                            },

                            {

                                num: NumberInt("1232"),

                                value: "https://modelzoo.co/model/distributedes"

                            },

                            {

                                num: NumberInt("1233"),

                                value: "https://modelzoo.co/model/transforming-autoencoder-tf"

                            },

                            {

                                num: NumberInt("1234"),

                                value: "https://modelzoo.co/model/capsulesem"

                            },

                            {

                                num: NumberInt("1235"),

                                value: "https://modelzoo.co/model/deblurgan-tf-tensorflow"

                            },

                            {

                                num: NumberInt("1236"),

                                value: "https://modelzoo.co/model/tracking-via-colorizing"

                            },

                            {

                                num: NumberInt("1237"),

                                value: "https://modelzoo.co/model/r-cnn"

                            },

                            {

                                num: NumberInt("1238"),

                                value: "https://modelzoo.co/model/skillful-nowcasting"

                            },

                            {

                                num: NumberInt("1239"),

                                value: "https://modelzoo.co/model/neurips18-hierchical-image-manipulation"

                            },

                            {

                                num: NumberInt("1240"),

                                value: "https://modelzoo.co/model/transformer-2"

                            },

                            {

                                num: NumberInt("1241"),

                                value: "https://modelzoo.co/model/dcgan-pytorch-3"

                            },

                            {

                                num: NumberInt("1242"),

                                value: "https://modelzoo.co/model/dialog"

                            },

                            {

                                num: NumberInt("1243"),

                                value: "https://modelzoo.co/model/chainer_caption_generation"

                            },

                            {

                                num: NumberInt("1244"),

                                value: "https://modelzoo.co/model/jaxb2-rich-contract-plugin"

                            },

                            {

                                num: NumberInt("1245"),

                                value: "https://modelzoo.co/model/kfac-jax"

                            },

                            {

                                num: NumberInt("1246"),

                                value: "https://modelzoo.co/model/nima"

                            },

                            {

                                num: NumberInt("1247"),

                                value: "https://modelzoo.co/model/lightrnn-nips2016-tensorflow-code"

                            },

                            {

                                num: NumberInt("1248"),

                                value: "https://modelzoo.co/model/entity-network"

                            },

                            {

                                num: NumberInt("1249"),

                                value: "https://modelzoo.co/model/senet-tensorflow-slim"

                            },

                            {

                                num: NumberInt("1250"),

                                value: "https://modelzoo.co/model/tensorflow-maxout"

                            },

                            {

                                num: NumberInt("1251"),

                                value: "https://modelzoo.co/model/pytorch-consistency-regularization"

                            },

                            {

                                num: NumberInt("1252"),

                                value: "https://modelzoo.co/model/fcrn-pytorch"

                            },

                            {

                                num: NumberInt("1253"),

                                value: "https://modelzoo.co/model/pcc-pytorch"

                            },

                            {

                                num: NumberInt("1254"),

                                value: "https://modelzoo.co/model/rescu"

                            },

                            {

                                num: NumberInt("1255"),

                                value: "https://modelzoo.co/model/qdax"

                            },

                            {

                                num: NumberInt("1256"),

                                value: "https://modelzoo.co/model/discogan-tf"

                            },

                            {

                                num: NumberInt("1257"),

                                value: "https://modelzoo.co/model/detr-tensorflow"

                            },

                            {

                                num: NumberInt("1258"),

                                value: "https://modelzoo.co/model/abae-pytorch"

                            },

                            {

                                num: NumberInt("1259"),

                                value: "https://modelzoo.co/model/xcloud"

                            },

                            {

                                num: NumberInt("1260"),

                                value: "https://modelzoo.co/model/spinenet-pytorch"

                            },

                            {

                                num: NumberInt("1261"),

                                value: "https://modelzoo.co/model/cloob-training"

                            },

                            {

                                num: NumberInt("1262"),

                                value: "https://modelzoo.co/model/torchlrp"

                            },

                            {

                                num: NumberInt("1263"),

                                value: "https://modelzoo.co/model/representation-learning-for-information-extraction"

                            },

                            {

                                num: NumberInt("1264"),

                                value: "https://modelzoo.co/model/cyclegan-pytorch"

                            },

                            {

                                num: NumberInt("1265"),

                                value: "https://modelzoo.co/model/mmdjmmdadabn"

                            },

                            {

                                num: NumberInt("1266"),

                                value: "https://modelzoo.co/model/soap-spring-boot-cxf"

                            },

                            {

                                num: NumberInt("1267"),

                                value: "https://modelzoo.co/model/jax-rl"

                            },

                            {

                                num: NumberInt("1268"),

                                value: "https://modelzoo.co/model/massface"

                            },

                            {

                                num: NumberInt("1269"),

                                value: "https://modelzoo.co/model/dcnn-textvae"

                            },

                            {

                                num: NumberInt("1270"),

                                value: "https://modelzoo.co/model/vae-captioning"

                            },

                            {

                                num: NumberInt("1271"),

                                value: "https://modelzoo.co/model/din"

                            },

                            {

                                num: NumberInt("1272"),

                                value: "https://modelzoo.co/model/gsoc-wav2vec2"

                            },

                            {

                                num: NumberInt("1273"),

                                value: "https://modelzoo.co/model/ppo_pytorch_cpp"

                            },

                            {

                                num: NumberInt("1274"),

                                value: "https://modelzoo.co/model/maxim-pytorch"

                            },

                            {

                                num: NumberInt("1275"),

                                value: "https://modelzoo.co/model/dispnet-tensorflow"

                            },

                            {

                                num: NumberInt("1276"),

                                value: "https://modelzoo.co/model/unet-tensorflow"

                            },

                            {

                                num: NumberInt("1277"),

                                value: "https://modelzoo.co/model/resemul"

                            },

                            {

                                num: NumberInt("1278"),

                                value: "https://modelzoo.co/model/super-slomo-tf2"

                            },

                            {

                                num: NumberInt("1279"),

                                value: "https://modelzoo.co/model/google_evolution"

                            },

                            {

                                num: NumberInt("1280"),

                                value: "https://modelzoo.co/model/graphx-conv"

                            },

                            {

                                num: NumberInt("1281"),

                                value: "https://modelzoo.co/model/pytorch-animegan"

                            },

                            {

                                num: NumberInt("1282"),

                                value: "https://modelzoo.co/model/deterministic-gail-pytorch"

                            },

                            {

                                num: NumberInt("1283"),

                                value: "https://modelzoo.co/model/alexnet-pytorch"

                            },

                            {

                                num: NumberInt("1284"),

                                value: "https://modelzoo.co/model/fcos"

                            },

                            {

                                num: NumberInt("1285"),

                                value: "https://modelzoo.co/model/reinforment-implementation-on-a-quadruped"

                            },

                            {

                                num: NumberInt("1286"),

                                value: "https://modelzoo.co/model/img2imggan"

                            },

                            {

                                num: NumberInt("1287"),

                                value: "https://modelzoo.co/model/crnn-tensorflow"

                            },

                            {

                                num: NumberInt("1288"),

                                value: "https://modelzoo.co/model/ifl-tpp"

                            },

                            {

                                num: NumberInt("1289"),

                                value: "https://modelzoo.co/model/centernet-lightning"

                            },

                            {

                                num: NumberInt("1290"),

                                value: "https://modelzoo.co/model/chainer-dfi"

                            },

                            {

                                num: NumberInt("1291"),

                                value: "https://modelzoo.co/model/y-ae"

                            },

                            {

                                num: NumberInt("1292"),

                                value: "https://modelzoo.co/model/parallel-wavenet"

                            },

                            {

                                num: NumberInt("1293"),

                                value: "https://modelzoo.co/model/improving-rnn-recommendation-model"

                            },

                            {

                                num: NumberInt("1294"),

                                value: "https://modelzoo.co/model/dec-tensorflow"

                            },

                            {

                                num: NumberInt("1295"),

                                value: "https://modelzoo.co/model/distributed-reinforcement-learning"

                            },

                            {

                                num: NumberInt("1296"),

                                value: "https://modelzoo.co/model/rolx"

                            },

                            {

                                num: NumberInt("1297"),

                                value: "https://modelzoo.co/model/temporal-ensembling-for-semi-supervised-learning"

                            },

                            {

                                num: NumberInt("1298"),

                                value: "https://modelzoo.co/model/cbam-tensorflow20"

                            },

                            {

                                num: NumberInt("1299"),

                                value: "https://modelzoo.co/model/code2seq"

                            },

                            {

                                num: NumberInt("1300"),

                                value: "https://modelzoo.co/model/sknet-pytorch"

                            },

                            {

                                num: NumberInt("1301"),

                                value: "https://modelzoo.co/model/x-punctuator"

                            },

                            {

                                num: NumberInt("1302"),

                                value: "https://modelzoo.co/model/neural-style-pytorch"

                            },

                            {

                                num: NumberInt("1303"),

                                value: "https://modelzoo.co/model/lsgan-chainer"

                            },

                            {

                                num: NumberInt("1304"),

                                value: "https://modelzoo.co/model/psenet-tensorflow"

                            },

                            {

                                num: NumberInt("1305"),

                                value: "https://modelzoo.co/model/tensorflow-espcn"

                            },

                            {

                                num: NumberInt("1306"),

                                value: "https://modelzoo.co/model/adaptive-segmentation-mask-attack-asma"

                            },

                            {

                                num: NumberInt("1307"),

                                value: "https://modelzoo.co/model/deepdyn"

                            },

                            {

                                num: NumberInt("1308"),

                                value: "https://modelzoo.co/model/pspnet-pytorch-2"

                            },

                            {

                                num: NumberInt("1309"),

                                value: "https://modelzoo.co/model/retinanetpytorch"

                            },

                            {

                                num: NumberInt("1310"),

                                value: "https://modelzoo.co/model/vgg16-pytorch"

                            },

                            {

                                num: NumberInt("1311"),

                                value: "https://modelzoo.co/model/mxnet-seq2seq"

                            },

                            {

                                num: NumberInt("1312"),

                                value: "https://modelzoo.co/model/crest"

                            },

                            {

                                num: NumberInt("1313"),

                                value: "https://modelzoo.co/model/sst-tensorflow"

                            },

                            {

                                num: NumberInt("1314"),

                                value: "https://modelzoo.co/model/deep-nlp"

                            },

                            {

                                num: NumberInt("1315"),

                                value: "https://modelzoo.co/model/commnet-bicnet"

                            },

                            {

                                num: NumberInt("1316"),

                                value: "https://modelzoo.co/model/tf-quaternion"

                            },

                            {

                                num: NumberInt("1317"),

                                value: "https://modelzoo.co/model/fots-ocr"

                            },

                            {

                                num: NumberInt("1318"),

                                value: "https://modelzoo.co/model/yolov5-tf"

                            },

                            {

                                num: NumberInt("1319"),

                                value: "https://modelzoo.co/model/two-step-task"

                            },

                            {

                                num: NumberInt("1320"),

                                value: "https://modelzoo.co/model/swin-transformer-tensorflow"

                            },

                            {

                                num: NumberInt("1321"),

                                value: "https://modelzoo.co/model/gpt-2xy"

                            },

                            {

                                num: NumberInt("1322"),

                                value: "https://modelzoo.co/model/ernie-text-classification-pytorch"

                            },

                            {

                                num: NumberInt("1323"),

                                value: "https://modelzoo.co/model/moldqn-pytorch"

                            },

                            {

                                num: NumberInt("1324"),

                                value: "https://modelzoo.co/model/densenet-pytorch"

                            },

                            {

                                num: NumberInt("1325"),

                                value: "https://modelzoo.co/model/c-rnn-ganpytorch"

                            },

                            {

                                num: NumberInt("1326"),

                                value: "https://modelzoo.co/model/pytorch-gan-metrics"

                            },

                            {

                                num: NumberInt("1327"),

                                value: "https://modelzoo.co/model/vision"

                            },

                            {

                                num: NumberInt("1328"),

                                value: "https://modelzoo.co/model/keras-seq2seq-example"

                            },

                            {

                                num: NumberInt("1329"),

                                value: "https://modelzoo.co/model/mlp-mixer-cifar10"

                            },

                            {

                                num: NumberInt("1330"),

                                value: "https://modelzoo.co/model/pose-estimation-detection"

                            },

                            {

                                num: NumberInt("1331"),

                                value: "https://modelzoo.co/model/deepvo-tensorflow"

                            },

                            {

                                num: NumberInt("1332"),

                                value: "https://modelzoo.co/model/keras-augmentation-layer"

                            },

                            {

                                num: NumberInt("1333"),

                                value: "https://modelzoo.co/model/tensorflow-ml-algorithms"

                            },

                            {

                                num: NumberInt("1334"),

                                value: "https://modelzoo.co/model/val"

                            },

                            {

                                num: NumberInt("1335"),

                                value: "https://modelzoo.co/model/sharpness-aware-minimization-tensorflow"

                            },

                            {

                                num: NumberInt("1336"),

                                value: "https://modelzoo.co/model/ppo"

                            },

                            {

                                num: NumberInt("1337"),

                                value: "https://modelzoo.co/model/simple-pytorch-3dgan"

                            },

                            {

                                num: NumberInt("1338"),

                                value: "https://modelzoo.co/model/pytorch-arda"

                            },

                            {

                                num: NumberInt("1339"),

                                value: "https://modelzoo.co/model/tf-a3c-gpu"

                            },

                            {

                                num: NumberInt("1340"),

                                value: "https://modelzoo.co/model/fdp-modelserver"

                            },

                            {

                                num: NumberInt("1341"),

                                value: "https://modelzoo.co/model/fcn8s-tensorflow"

                            },

                            {

                                num: NumberInt("1342"),

                                value: "https://modelzoo.co/model/dense-bilstm"

                            },

                            {

                                num: NumberInt("1343"),

                                value: "https://modelzoo.co/model/tensorflow-chatbot-chinese"

                            },

                            {

                                num: NumberInt("1344"),

                                value: "https://modelzoo.co/model/tensorflow-mnist-mlp-batch-normalization-weight-initializers"

                            },

                            {

                                num: NumberInt("1345"),

                                value: "https://modelzoo.co/model/semantic-segmentation-with-mobilenetv3"

                            },

                            {

                                num: NumberInt("1346"),

                                value: "https://modelzoo.co/model/mtl-homoscedastic-uncertainty"

                            },

                            {

                                num: NumberInt("1347"),

                                value: "https://modelzoo.co/model/csl-yolo"

                            },

                            {

                                num: NumberInt("1348"),

                                value: "https://modelzoo.co/model/kerod"

                            },

                            {

                                num: NumberInt("1349"),

                                value: "https://modelzoo.co/model/tesla-stocks-prediction"

                            },

                            {

                                num: NumberInt("1350"),

                                value: "https://modelzoo.co/model/eco-dqn"

                            },

                            {

                                num: NumberInt("1351"),

                                value: "https://modelzoo.co/model/yolo3-tensorflow"

                            },

                            {

                                num: NumberInt("1352"),

                                value: "https://modelzoo.co/model/attention-augmented-conv"

                            },

                            {

                                num: NumberInt("1353"),

                                value: "https://modelzoo.co/model/maml-tf"

                            },

                            {

                                num: NumberInt("1354"),

                                value: "https://modelzoo.co/model/bi-tbcnn"

                            },

                            {

                                num: NumberInt("1355"),

                                value: "https://modelzoo.co/model/sample-cnn"

                            },

                            {

                                num: NumberInt("1356"),

                                value: "https://modelzoo.co/model/simple-does-it-weakly-supervised-instance"

                            },

                            {

                                num: NumberInt("1357"),

                                value: "https://modelzoo.co/model/relation-network"

                            },

                            {

                                num: NumberInt("1358"),

                                value: "https://modelzoo.co/model/siamese-sentence-similarity"

                            },

                            {

                                num: NumberInt("1359"),

                                value: "https://modelzoo.co/model/bytenet"

                            },

                            {

                                num: NumberInt("1360"),

                                value: "https://modelzoo.co/model/cvdd-pytorch"

                            },

                            {

                                num: NumberInt("1361"),

                                value: "https://modelzoo.co/model/enet-sad-pytorch"

                            },

                            {

                                num: NumberInt("1362"),

                                value: "https://modelzoo.co/model/tvnet-pytorch"

                            },

                            {

                                num: NumberInt("1363"),

                                value: "https://modelzoo.co/model/semantic-segmentation-pytorch-3"

                            },

                            {

                                num: NumberInt("1364"),

                                value: "https://modelzoo.co/model/jax-rs-pac4j"

                            },

                            {

                                num: NumberInt("1365"),

                                value: "https://modelzoo.co/model/fast-dpsgd"

                            },

                            {

                                num: NumberInt("1366"),

                                value: "https://modelzoo.co/model/distribution-shift-framework"

                            },

                            {

                                num: NumberInt("1367"),

                                value: "https://modelzoo.co/model/tf-word2vec"

                            },

                            {

                                num: NumberInt("1368"),

                                value: "https://modelzoo.co/model/fcn-googlenet"

                            },

                            {

                                num: NumberInt("1369"),

                                value: "https://modelzoo.co/model/rcan-tensorflow"

                            },

                            {

                                num: NumberInt("1370"),

                                value: "https://modelzoo.co/model/faceboxes-tensorflow"

                            },

                            {

                                num: NumberInt("1371"),

                                value: "https://modelzoo.co/model/ml-in-tf"

                            },

                            {

                                num: NumberInt("1372"),

                                value: "https://modelzoo.co/model/vq-vae"

                            },

                            {

                                num: NumberInt("1373"),

                                value: "https://modelzoo.co/model/dcgan-pytorch"

                            },

                            {

                                num: NumberInt("1374"),

                                value: "https://modelzoo.co/model/deep-dream-pytorch"

                            },

                            {

                                num: NumberInt("1375"),

                                value: "https://modelzoo.co/model/pytorch-transformer-kor-eng"

                            },

                            {

                                num: NumberInt("1376"),

                                value: "https://modelzoo.co/model/pytorchsteerablepyramid"

                            },

                            {

                                num: NumberInt("1377"),

                                value: "https://modelzoo.co/model/madam"

                            },

                            {

                                num: NumberInt("1378"),

                                value: "https://modelzoo.co/model/mc-cnn-python"

                            },

                            {

                                num: NumberInt("1379"),

                                value: "https://modelzoo.co/model/deepspeech-pytorch"

                            },

                            {

                                num: NumberInt("1380"),

                                value: "https://modelzoo.co/model/attention-ocr"

                            },

                            {

                                num: NumberInt("1381"),

                                value: "https://modelzoo.co/model/mnasnet-pytorch-2"

                            },

                            {

                                num: NumberInt("1382"),

                                value: "https://modelzoo.co/model/language-modeling"

                            },

                            {

                                num: NumberInt("1383"),

                                value: "https://modelzoo.co/model/minimal-wgan"

                            },

                            {

                                num: NumberInt("1384"),

                                value: "https://modelzoo.co/model/lsgan-tf"

                            },

                            {

                                num: NumberInt("1385"),

                                value: "https://modelzoo.co/model/fgsm-pytorch"

                            },

                            {

                                num: NumberInt("1386"),

                                value: "https://modelzoo.co/model/universal-vocoder"

                            },

                            {

                                num: NumberInt("1387"),

                                value: "https://modelzoo.co/model/pytorch-implementation-of-yolov1"

                            },

                            {

                                num: NumberInt("1388"),

                                value: "https://modelzoo.co/model/pytorch-atda"

                            },

                            {

                                num: NumberInt("1389"),

                                value: "https://modelzoo.co/model/quasi-rnn"

                            },

                            {

                                num: NumberInt("1390"),

                                value: "https://modelzoo.co/model/monolingual-and-multilingual-image-captioning"

                            },

                            {

                                num: NumberInt("1391"),

                                value: "https://modelzoo.co/model/jax-privacy"

                            },

                            {

                                num: NumberInt("1392"),

                                value: "https://modelzoo.co/model/avo-pytorch"

                            },

                            {

                                num: NumberInt("1393"),

                                value: "https://modelzoo.co/model/kgcn-pytorch"

                            },

                            {

                                num: NumberInt("1394"),

                                value: "https://modelzoo.co/model/birdnet2"

                            },

                            {

                                num: NumberInt("1395"),

                                value: "https://modelzoo.co/model/cartoon-gan"

                            },

                            {

                                num: NumberInt("1396"),

                                value: "https://modelzoo.co/model/rnnsearch"

                            },

                            {

                                num: NumberInt("1397"),

                                value: "https://modelzoo.co/model/cdcgan"

                            },

                            {

                                num: NumberInt("1398"),

                                value: "https://modelzoo.co/model/mxnet-audio"

                            },

                            {

                                num: NumberInt("1399"),

                                value: "https://modelzoo.co/model/pytorch-glow"

                            },

                            {

                                num: NumberInt("1400"),

                                value: "https://modelzoo.co/model/stdn-pytorch"

                            },

                            {

                                num: NumberInt("1401"),

                                value: "https://modelzoo.co/model/sae-pytorch"

                            },

                            {

                                num: NumberInt("1402"),

                                value: "https://modelzoo.co/model/graphics-code-generating-model-using-processing"

                            },

                            {

                                num: NumberInt("1403"),

                                value: "https://modelzoo.co/model/pytorch-prnet"

                            },

                            {

                                num: NumberInt("1404"),

                                value: "https://modelzoo.co/model/ibc"

                            },

                            {

                                num: NumberInt("1405"),

                                value: "https://modelzoo.co/model/android-jaxb"

                            },

                            {

                                num: NumberInt("1406"),

                                value: "https://modelzoo.co/model/brave"

                            },

                            {

                                num: NumberInt("1407"),

                                value: "https://modelzoo.co/model/audax"

                            },

                            {

                                num: NumberInt("1408"),

                                value: "https://modelzoo.co/model/pytorch-rdpg"

                            },

                            {

                                num: NumberInt("1409"),

                                value: "https://modelzoo.co/model/pytorch-ricap"

                            },

                            {

                                num: NumberInt("1410"),

                                value: "https://modelzoo.co/model/dnn-hsmm"

                            },

                            {

                                num: NumberInt("1411"),

                                value: "https://modelzoo.co/model/seqgan-pytorch"

                            },

                            {

                                num: NumberInt("1412"),

                                value: "https://modelzoo.co/model/raml-jaxrs-codegen"

                            },

                            {

                                num: NumberInt("1413"),

                                value: "https://modelzoo.co/model/fedpa"

                            },

                            {

                                num: NumberInt("1414"),

                                value: "https://modelzoo.co/model/vdvae-jax"

                            },

                            {

                                num: NumberInt("1415"),

                                value: "https://modelzoo.co/model/asynchronous-advantage-actor-critic-in-pytorch"

                            },

                            {

                                num: NumberInt("1416"),

                                value: "https://modelzoo.co/model/hierarchical-attention-network-for-document-classification"

                            },

                            {

                                num: NumberInt("1417"),

                                value: "https://modelzoo.co/model/pytorch-ppo-rl"

                            },

                            {

                                num: NumberInt("1418"),

                                value: "https://modelzoo.co/model/domaintransfernetworkpytorch"

                            },

                            {

                                num: NumberInt("1419"),

                                value: "https://modelzoo.co/model/pytorch-cyclegan-2"

                            },

                            {

                                num: NumberInt("1420"),

                                value: "https://modelzoo.co/model/metro-jax-ws-2"

                            },

                            {

                                num: NumberInt("1421"),

                                value: "https://modelzoo.co/model/deblurgan-pytorch"

                            },

                            {

                                num: NumberInt("1422"),

                                value: "https://modelzoo.co/model/binary-nets"

                            },

                            {

                                num: NumberInt("1423"),

                                value: "https://modelzoo.co/model/pytorch-gym"

                            },

                            {

                                num: NumberInt("1424"),

                                value: "https://modelzoo.co/model/deep-photo-enhancer"

                            },

                            {

                                num: NumberInt("1425"),

                                value: "https://modelzoo.co/model/torch-scae"

                            },

                            {

                                num: NumberInt("1426"),

                                value: "https://modelzoo.co/model/dhmc-jax"

                            },

                            {

                                num: NumberInt("1427"),

                                value: "https://modelzoo.co/model/detectx-yolo-v3"

                            },

                            {

                                num: NumberInt("1428"),

                                value: "https://modelzoo.co/model/musculoskeletal-radiographs-abnormality-classifier"

                            },

                            {

                                num: NumberInt("1429"),

                                value: "https://modelzoo.co/model/gated-attention-reader"

                            },

                            {

                                num: NumberInt("1430"),

                                value: "https://modelzoo.co/model/timegan-pytorch"

                            },

                            {

                                num: NumberInt("1431"),

                                value: "https://modelzoo.co/model/tigercontrol"

                            },

                            {

                                num: NumberInt("1432"),

                                value: "https://modelzoo.co/model/flaxvision"

                            },

                            {

                                num: NumberInt("1433"),

                                value: "https://modelzoo.co/model/aegean"

                            },

                            {

                                num: NumberInt("1434"),

                                value: "https://modelzoo.co/model/pytorch-vae-cvae"

                            },

                            {

                                num: NumberInt("1435"),

                                value: "https://modelzoo.co/model/blazeface-personpytorch"

                            },

                            {

                                num: NumberInt("1436"),

                                value: "https://modelzoo.co/model/omd"

                            },

                            {

                                num: NumberInt("1437"),

                                value: "https://modelzoo.co/model/unrolled-gans"

                            },

                            {

                                num: NumberInt("1438"),

                                value: "https://modelzoo.co/model/pytorch-dann"

                            },

                            {

                                num: NumberInt("1439"),

                                value: "https://modelzoo.co/model/nasbench-pytorch"

                            },

                            {

                                num: NumberInt("1440"),

                                value: "https://modelzoo.co/model/t5-flax-gcp"

                            },

                            {

                                num: NumberInt("1441"),

                                value: "https://modelzoo.co/model/pytorch-vsum-ptr-gan"

                            },

                            {

                                num: NumberInt("1442"),

                                value: "https://modelzoo.co/model/semi-supervised-paper-implementation"

                            },

                            {

                                num: NumberInt("1443"),

                                value: "https://modelzoo.co/model/gans-for-1d-signal"

                            },

                            {

                                num: NumberInt("1444"),

                                value: "https://modelzoo.co/model/pytorch-vae-3"

                            },

                            {

                                num: NumberInt("1445"),

                                value: "https://modelzoo.co/model/planerecnet"

                            },

                            {

                                num: NumberInt("1446"),

                                value: "https://modelzoo.co/model/dks"

                            },

                            {

                                num: NumberInt("1447"),

                                value: "https://modelzoo.co/model/wax-ml"

                            },

                            {

                                num: NumberInt("1448"),

                                value: "https://modelzoo.co/model/jax-variational-diffwave"

                            },

                            {

                                num: NumberInt("1449"),

                                value: "https://modelzoo.co/model/infinite-ae-cf"

                            },

                            {

                                num: NumberInt("1450"),

                                value: "https://modelzoo.co/model/odcnn"

                            },

                            {

                                num: NumberInt("1451"),

                                value: "https://modelzoo.co/model/twinbert"

                            },

                            {

                                num: NumberInt("1452"),

                                value: "https://modelzoo.co/model/imagenet-vgg"

                            },

                            {

                                num: NumberInt("1453"),

                                value: "https://modelzoo.co/model/improved-gan"

                            },

                            {

                                num: NumberInt("1454"),

                                value: "https://modelzoo.co/model/gym"

                            },

                            {

                                num: NumberInt("1455"),

                                value: "https://modelzoo.co/model/simple-generative-adversarial-networks"

                            },

                            {

                                num: NumberInt("1456"),

                                value: "https://modelzoo.co/model/alexnet-pytorch-2"

                            },

                            {

                                num: NumberInt("1457"),

                                value: "https://modelzoo.co/model/pytorch-metrics"

                            },

                            {

                                num: NumberInt("1458"),

                                value: "https://modelzoo.co/model/jax-finufft"

                            },

                            {

                                num: NumberInt("1459"),

                                value: "https://modelzoo.co/model/vit-vqgan"

                            },

                            {

                                num: NumberInt("1460"),

                                value: "https://modelzoo.co/model/a2c"

                            },

                            {

                                num: NumberInt("1461"),

                                value: "https://modelzoo.co/model/drcn"

                            },

                            {

                                num: NumberInt("1462"),

                                value: "https://modelzoo.co/model/chainer-variational-autoencoder"

                            },

                            {

                                num: NumberInt("1463"),

                                value: "https://modelzoo.co/model/efax"

                            },

                            {

                                num: NumberInt("1464"),

                                value: "https://modelzoo.co/model/ppo-jax"

                            },

                            {

                                num: NumberInt("1465"),

                                value: "https://modelzoo.co/model/pixelcnn"

                            },

                            {

                                num: NumberInt("1466"),

                                value: "https://modelzoo.co/model/gail-pytorch"

                            },

                            {

                                num: NumberInt("1467"),

                                value: "https://modelzoo.co/model/deep-compressionpytorch"

                            },

                            {

                                num: NumberInt("1468"),

                                value: "https://modelzoo.co/model/tryongan"

                            },

                            {

                                num: NumberInt("1469"),

                                value: "https://modelzoo.co/model/dspnet"

                            },

                            {

                                num: NumberInt("1470"),

                                value: "https://modelzoo.co/model/multilabel"

                            },

                            {

                                num: NumberInt("1471"),

                                value: "https://modelzoo.co/model/vae"

                            },

                            {

                                num: NumberInt("1472"),

                                value: "https://modelzoo.co/model/chef-transformer"

                            },

                            {

                                num: NumberInt("1473"),

                                value: "https://modelzoo.co/model/erfnet-pytorch"

                            },

                            {

                                num: NumberInt("1474"),

                                value: "https://modelzoo.co/model/overlap-local-sgd"

                            },

                            {

                                num: NumberInt("1475"),

                                value: "https://modelzoo.co/model/vit-jax2tf"

                            },

                            {

                                num: NumberInt("1476"),

                                value: "https://modelzoo.co/model/shinrl"

                            },

                            {

                                num: NumberInt("1477"),

                                value: "https://modelzoo.co/model/deq-jax"

                            },

                            {

                                num: NumberInt("1478"),

                                value: "https://modelzoo.co/model/pytorch-cascaded-pyramid-network"

                            },

                            {

                                num: NumberInt("1479"),

                                value: "https://modelzoo.co/model/chainer-gan-denoising-feature-matching"

                            },

                            {

                                num: NumberInt("1480"),

                                value: "https://modelzoo.co/model/rl-with-resets"

                            },

                            {

                                num: NumberInt("1481"),

                                value: "https://modelzoo.co/model/ddpg-pytorch"

                            },

                            {

                                num: NumberInt("1482"),

                                value: "https://modelzoo.co/model/rest"

                            },

                            {

                                num: NumberInt("1483"),

                                value: "https://modelzoo.co/model/reactive-wizard"

                            },

                            {

                                num: NumberInt("1484"),

                                value: "https://modelzoo.co/model/yolov3-pytorch-2"

                            },

                            {

                                num: NumberInt("1485"),

                                value: "https://modelzoo.co/model/focuslitenn"

                            },

                            {

                                num: NumberInt("1486"),

                                value: "https://modelzoo.co/model/cwvae-jax"

                            },

                            {

                                num: NumberInt("1487"),

                                value: "https://modelzoo.co/model/image-captioning"

                            },

                            {

                                num: NumberInt("1488"),

                                value: "https://modelzoo.co/model/flaxoptimizers"

                            },

                            {

                                num: NumberInt("1489"),

                                value: "https://modelzoo.co/model/deep-feature-interporlation-face-attribute-manipulation"

                            },

                            {

                                num: NumberInt("1490"),

                                value: "https://modelzoo.co/model/traj-pred-irl"

                            },

                            {

                                num: NumberInt("1491"),

                                value: "https://modelzoo.co/model/manifold-mixup"

                            },

                            {

                                num: NumberInt("1492"),

                                value: "https://modelzoo.co/model/face-detection-flask-nginx-gunicorn-docker"

                            },

                            {

                                num: NumberInt("1493"),

                                value: "https://modelzoo.co/model/dcgan-pytorch-2"

                            },

                            {

                                num: NumberInt("1494"),

                                value: "https://modelzoo.co/model/nonlinear-ib-pytorch"

                            },

                            {

                                num: NumberInt("1495"),

                                value: "https://modelzoo.co/model/sqeezenet-mxnet"

                            },

                            {

                                num: NumberInt("1496"),

                                value: "https://modelzoo.co/model/adversarialautoencoder"

                            },

                            {

                                num: NumberInt("1497"),

                                value: "https://modelzoo.co/model/adda"

                            },

                            {

                                num: NumberInt("1498"),

                                value: "https://modelzoo.co/model/undertow-cdi-jaxrs"

                            },

                            {

                                num: NumberInt("1499"),

                                value: "https://modelzoo.co/model/jax-gcn"

                            },

                            {

                                num: NumberInt("1500"),

                                value: "https://modelzoo.co/model/sabertooth"

                            },

                            {

                                num: NumberInt("1501"),

                                value: "https://modelzoo.co/model/ecg-arrhythmia-classification-in-2d-cnn"

                            },

                            {

                                num: NumberInt("1502"),

                                value: "https://modelzoo.co/model/matching-networks-tf"

                            },

                            {

                                num: NumberInt("1503"),

                                value: "https://modelzoo.co/model/cacm"

                            },

                            {

                                num: NumberInt("1504"),

                                value: "https://modelzoo.co/model/ultrasound-nerve-segmentation-keras"

                            },

                            {

                                num: NumberInt("1505"),

                                value: "https://modelzoo.co/model/mathjaxview"

                            },

                            {

                                num: NumberInt("1506"),

                                value: "https://modelzoo.co/model/roberta-base-mr"

                            },

                            {

                                num: NumberInt("1507"),

                                value: "https://modelzoo.co/model/alexnet-tensorflow"

                            },

                            {

                                num: NumberInt("1508"),

                                value: "https://modelzoo.co/model/las"

                            },

                            {

                                num: NumberInt("1509"),

                                value: "https://modelzoo.co/model/crossgrad"

                            },

                            {

                                num: NumberInt("1510"),

                                value: "https://modelzoo.co/model/deepdomainadaptation"

                            },

                            {

                                num: NumberInt("1511"),

                                value: "https://modelzoo.co/model/tenet-kws"

                            },

                            {

                                num: NumberInt("1512"),

                                value: "https://modelzoo.co/model/vibration-gan"

                            },

                            {

                                num: NumberInt("1513"),

                                value: "https://modelzoo.co/model/tf-keras-gradcamplusplus"

                            },

                            {

                                num: NumberInt("1514"),

                                value: "https://modelzoo.co/model/deep-learning-algorithms-implementation"

                            },

                            {

                                num: NumberInt("1515"),

                                value: "https://modelzoo.co/model/paacpytorch"

                            },

                            {

                                num: NumberInt("1516"),

                                value: "https://modelzoo.co/model/sec"

                            },

                            {

                                num: NumberInt("1517"),

                                value: "https://modelzoo.co/model/jax-comln"

                            },

                            {

                                num: NumberInt("1518"),

                                value: "https://modelzoo.co/model/jax-dag-gflownet"

                            },

                            {

                                num: NumberInt("1519"),

                                value: "https://modelzoo.co/model/soft-attention-image-captioning"

                            },

                            {

                                num: NumberInt("1520"),

                                value: "https://modelzoo.co/model/handwritten-sequence-tensorflow"

                            },

                            {

                                num: NumberInt("1521"),

                                value: "https://modelzoo.co/model/tensorflow-lite-kotlin-samples"

                            },

                            {

                                num: NumberInt("1522"),

                                value: "https://modelzoo.co/model/deep-gaussian-process"

                            },

                            {

                                num: NumberInt("1523"),

                                value: "https://modelzoo.co/model/weight-normalization"

                            },

                            {

                                num: NumberInt("1524"),

                                value: "https://modelzoo.co/model/kervolution"

                            },

                            {

                                num: NumberInt("1525"),

                                value: "https://modelzoo.co/model/tf-cnn-casia-hwdb"

                            },

                            {

                                num: NumberInt("1526"),

                                value: "https://modelzoo.co/model/cmorlet-tensorflow"

                            },

                            {

                                num: NumberInt("1527"),

                                value: "https://modelzoo.co/model/tensorstyle"

                            },

                            {

                                num: NumberInt("1528"),

                                value: "https://modelzoo.co/model/tacotron-2"

                            },

                            {

                                num: NumberInt("1529"),

                                value: "https://modelzoo.co/model/transformer-implementations"

                            },

                            {

                                num: NumberInt("1530"),

                                value: "https://modelzoo.co/model/flax-sentence-embeddings"

                            },

                            {

                                num: NumberInt("1531"),

                                value: "https://modelzoo.co/model/mathjax-siunitx"

                            },

                            {

                                num: NumberInt("1532"),

                                value: "https://modelzoo.co/model/tf-capsnet"

                            },

                            {

                                num: NumberInt("1533"),

                                value: "https://modelzoo.co/model/recurrent-attention-model"

                            },

                            {

                                num: NumberInt("1534"),

                                value: "https://modelzoo.co/model/siamrpn-tf"

                            },

                            {

                                num: NumberInt("1535"),

                                value: "https://modelzoo.co/model/paican"

                            },

                            {

                                num: NumberInt("1536"),

                                value: "https://modelzoo.co/model/meuralpaint"

                            },

                            {

                                num: NumberInt("1537"),

                                value: "https://modelzoo.co/model/class-activation-mapping-tensorflow"

                            },

                            {

                                num: NumberInt("1538"),

                                value: "https://modelzoo.co/model/han"

                            },

                            {

                                num: NumberInt("1539"),

                                value: "https://modelzoo.co/model/tf-madgrad"

                            },

                            {

                                num: NumberInt("1540"),

                                value: "https://modelzoo.co/model/ali-g"

                            },

                            {

                                num: NumberInt("1541"),

                                value: "https://modelzoo.co/model/cross-modal-hasing-playground"

                            },

                            {

                                num: NumberInt("1542"),

                                value: "https://modelzoo.co/model/simclr-tensorflow"

                            },

                            {

                                num: NumberInt("1543"),

                                value: "https://modelzoo.co/model/remote-sensing-analysis"

                            },

                            {

                                num: NumberInt("1544"),

                                value: "https://modelzoo.co/model/softmax-triplet-loss"

                            },

                            {

                                num: NumberInt("1545"),

                                value: "https://modelzoo.co/model/mann-meta-learning"

                            },

                            {

                                num: NumberInt("1546"),

                                value: "https://modelzoo.co/model/full-reimplementation-of-unet"

                            },

                            {

                                num: NumberInt("1547"),

                                value: "https://modelzoo.co/model/anomaly-detect-lstm-vae"

                            },

                            {

                                num: NumberInt("1548"),

                                value: "https://modelzoo.co/model/variationalneuralannealing"

                            },

                            {

                                num: NumberInt("1549"),

                                value: "https://modelzoo.co/model/pytorch-edanet"

                            },

                            {

                                num: NumberInt("1550"),

                                value: "https://modelzoo.co/model/self-critical"

                            },

                            {

                                num: NumberInt("1551"),

                                value: "https://modelzoo.co/model/jaxmpp"

                            },

                            {

                                num: NumberInt("1552"),

                                value: "https://modelzoo.co/model/ninjax"

                            },

                            {

                                num: NumberInt("1553"),

                                value: "https://modelzoo.co/model/min-dalle-flax"

                            },

                            {

                                num: NumberInt("1554"),

                                value: "https://modelzoo.co/model/lip2word"

                            },

                            {

                                num: NumberInt("1555"),

                                value: "https://modelzoo.co/model/diffeomorphic-demons"

                            },

                            {

                                num: NumberInt("1556"),

                                value: "https://modelzoo.co/model/tf-invertible-resnet"

                            },

                            {

                                num: NumberInt("1557"),

                                value: "https://modelzoo.co/model/pokegan"

                            },

                            {

                                num: NumberInt("1558"),

                                value: "https://modelzoo.co/model/android-machine-learning-with-tensorflow"

                            },

                            {

                                num: NumberInt("1559"),

                                value: "https://modelzoo.co/model/genzoo"

                            },

                            {

                                num: NumberInt("1560"),

                                value: "https://modelzoo.co/model/maml-tensorflow"

                            },

                            {

                                num: NumberInt("1561"),

                                value: "https://modelzoo.co/model/denoised-smoothing-tf"

                            },

                            {

                                num: NumberInt("1562"),

                                value: "https://modelzoo.co/model/resnet-50-101-152"

                            },

                            {

                                num: NumberInt("1563"),

                                value: "https://modelzoo.co/model/autoregressive-models"

                            },

                            {

                                num: NumberInt("1564"),

                                value: "https://modelzoo.co/model/deeplabv3plus-tf2x"

                            },

                            {

                                num: NumberInt("1565"),

                                value: "https://modelzoo.co/model/translearn"

                            },

                            {

                                num: NumberInt("1566"),

                                value: "https://modelzoo.co/model/semisupervised-timeseries-infogan"

                            },

                            {

                                num: NumberInt("1567"),

                                value: "https://modelzoo.co/model/yolov3-pytorch"

                            },

                            {

                                num: NumberInt("1568"),

                                value: "https://modelzoo.co/model/tp-gan"

                            },

                            {

                                num: NumberInt("1569"),

                                value: "https://modelzoo.co/model/mxseq2seqgluon"

                            },

                            {

                                num: NumberInt("1570"),

                                value: "https://modelzoo.co/model/fastjson-jaxrs-json-provider"

                            },

                            {

                                num: NumberInt("1571"),

                                value: "https://modelzoo.co/model/xcauto"

                            },

                            {

                                num: NumberInt("1572"),

                                value: "https://modelzoo.co/model/jaxrs-beanvalidation-javaee6"

                            },

                            {

                                num: NumberInt("1573"),

                                value: "https://modelzoo.co/model/multilingual-vqa"

                            },

                            {

                                num: NumberInt("1574"),

                                value: "https://modelzoo.co/model/tf-ot-sinkhorn"

                            },

                            {

                                num: NumberInt("1575"),

                                value: "https://modelzoo.co/model/tf-nima"

                            },

                            {

                                num: NumberInt("1576"),

                                value: "https://modelzoo.co/model/stargan-tensorflow"

                            },

                            {

                                num: NumberInt("1577"),

                                value: "https://modelzoo.co/model/dnn-dependency-parser"

                            },

                            {

                                num: NumberInt("1578"),

                                value: "https://modelzoo.co/model/large-scale-ot-mapping-tf"

                            },

                            {

                                num: NumberInt("1579"),

                                value: "https://modelzoo.co/model/deepqa"

                            },

                            {

                                num: NumberInt("1580"),

                                value: "https://modelzoo.co/model/punctuation-restoration"

                            },

                            {

                                num: NumberInt("1581"),

                                value: "https://modelzoo.co/model/image-colorization-gan-tf20"

                            },

                            {

                                num: NumberInt("1582"),

                                value: "https://modelzoo.co/model/yolo-v1-v2-tensorflow"

                            },

                            {

                                num: NumberInt("1583"),

                                value: "https://modelzoo.co/model/binary-vae"

                            },

                            {

                                num: NumberInt("1584"),

                                value: "https://modelzoo.co/model/dcgan-cifar10"

                            },

                            {

                                num: NumberInt("1585"),

                                value: "https://modelzoo.co/model/mine"

                            },

                            {

                                num: NumberInt("1586"),

                                value: "https://modelzoo.co/model/metric-learning"

                            },

                            {

                                num: NumberInt("1587"),

                                value: "https://modelzoo.co/model/pytorch-super-resolution-implementations"

                            },

                            {

                                num: NumberInt("1588"),

                                value: "https://modelzoo.co/model/nalupytorch"

                            },

                            {

                                num: NumberInt("1589"),

                                value: "https://modelzoo.co/model/minijax"

                            },

                            {

                                num: NumberInt("1590"),

                                value: "https://modelzoo.co/model/variational-dropout"

                            },

                            {

                                num: NumberInt("1591"),

                                value: "https://modelzoo.co/model/linknet-tensorflow"

                            },

                            {

                                num: NumberInt("1592"),

                                value: "https://modelzoo.co/model/supervised-embedding-model"

                            },

                            {

                                num: NumberInt("1593"),

                                value: "https://modelzoo.co/model/cnn-lstm-for-link-prediction"

                            },

                            {

                                num: NumberInt("1594"),

                                value: "https://modelzoo.co/model/s2vt-seq2seq-video-captioning-attention"

                            },

                            {

                                num: NumberInt("1595"),

                                value: "https://modelzoo.co/model/memae-tf2"

                            },

                            {

                                num: NumberInt("1596"),

                                value: "https://modelzoo.co/model/logistic-lda"

                            },

                            {

                                num: NumberInt("1597"),

                                value: "https://modelzoo.co/model/simpnet-tensorflow"

                            },

                            {

                                num: NumberInt("1598"),

                                value: "https://modelzoo.co/model/machinelearning-tensorflow"

                            },

                            {

                                num: NumberInt("1599"),

                                value: "https://modelzoo.co/model/im2latex-tensorflow"

                            },

                            {

                                num: NumberInt("1600"),

                                value: "https://modelzoo.co/model/transformer-network-tensorflow"

                            },

                            {

                                num: NumberInt("1601"),

                                value: "https://modelzoo.co/model/capsnet-tensorflow-jupyter"

                            },

                            {

                                num: NumberInt("1602"),

                                value: "https://modelzoo.co/model/sphereface-tensorflow"

                            },

                            {

                                num: NumberInt("1603"),

                                value: "https://modelzoo.co/model/tf-eegnet"

                            },

                            {

                                num: NumberInt("1604"),

                                value: "https://modelzoo.co/model/stackgan"

                            },

                            {

                                num: NumberInt("1605"),

                                value: "https://modelzoo.co/model/resnext-tensorflow2"

                            },

                            {

                                num: NumberInt("1606"),

                                value: "https://modelzoo.co/model/gan-tensorflow-2"

                            },

                            {

                                num: NumberInt("1607"),

                                value: "https://modelzoo.co/model/tf-enhancedped"

                            },

                            {

                                num: NumberInt("1608"),

                                value: "https://modelzoo.co/model/pytorch-resnet"

                            },

                            {

                                num: NumberInt("1609"),

                                value: "https://modelzoo.co/model/lfw-siamese-pytorch"

                            },

                            {

                                num: NumberInt("1610"),

                                value: "https://modelzoo.co/model/focallosscuda"

                            },

                            {

                                num: NumberInt("1611"),

                                value: "https://modelzoo.co/model/lsgan"

                            },

                            {

                                num: NumberInt("1612"),

                                value: "https://modelzoo.co/model/seq2seq-speech"

                            },

                            {

                                num: NumberInt("1613"),

                                value: "https://modelzoo.co/model/jax-lensing"

                            },

                            {

                                num: NumberInt("1614"),

                                value: "https://modelzoo.co/model/deeperwin"

                            },

                            {

                                num: NumberInt("1615"),

                                value: "https://modelzoo.co/model/keras-gan-library"

                            },

                            {

                                num: NumberInt("1616"),

                                value: "https://modelzoo.co/model/alexnet-architecturetensorflow"

                            },

                            {

                                num: NumberInt("1617"),

                                value: "https://modelzoo.co/model/mrcnn"

                            },

                            {

                                num: NumberInt("1618"),

                                value: "https://modelzoo.co/model/dhsgan"

                            },

                            {

                                num: NumberInt("1619"),

                                value: "https://modelzoo.co/model/myalphagozeroonconnect4"

                            },

                            {

                                num: NumberInt("1620"),

                                value: "https://modelzoo.co/model/im2p"

                            },

                            {

                                num: NumberInt("1621"),

                                value: "https://modelzoo.co/model/soa-dorn-tf"

                            },

                            {

                                num: NumberInt("1622"),

                                value: "https://modelzoo.co/model/daml"

                            },

                            {

                                num: NumberInt("1623"),

                                value: "https://modelzoo.co/model/style-transfer-algorithm"

                            },

                            {

                                num: NumberInt("1624"),

                                value: "https://modelzoo.co/model/pytorch-implementation"

                            },

                            {

                                num: NumberInt("1625"),

                                value: "https://modelzoo.co/model/remude"

                            },

                            {

                                num: NumberInt("1626"),

                                value: "https://modelzoo.co/model/wadl-first-rest-webservice-cxf-example"

                            },

                            {

                                num: NumberInt("1627"),

                                value: "https://modelzoo.co/model/sonno"

                            },

                            {

                                num: NumberInt("1628"),

                                value: "https://modelzoo.co/model/jax-resnet-cifar10"

                            },

                            {

                                num: NumberInt("1629"),

                                value: "https://modelzoo.co/model/parallel-non-linear-gaussian-smoothers"

                            },

                            {

                                num: NumberInt("1630"),

                                value: "https://modelzoo.co/model/maml-flax"

                            },

                            {

                                num: NumberInt("1631"),

                                value: "https://modelzoo.co/model/mingpt"

                            },

                            {

                                num: NumberInt("1632"),

                                value: "https://modelzoo.co/model/haikumodels"

                            },

                            {

                                num: NumberInt("1633"),

                                value: "https://modelzoo.co/model/vgan-tensorflow"

                            },

                            {

                                num: NumberInt("1634"),

                                value: "https://modelzoo.co/model/deeplearningimplementations"

                            },

                            {

                                num: NumberInt("1635"),

                                value: "https://modelzoo.co/model/fbpconv-tf"

                            },

                            {

                                num: NumberInt("1636"),

                                value: "https://modelzoo.co/model/coordconv-implementation"

                            },

                            {

                                num: NumberInt("1637"),

                                value: "https://modelzoo.co/model/resnet-tensorflow"

                            },

                            {

                                num: NumberInt("1638"),

                                value: "https://modelzoo.co/model/dynamic-coattention-network-for-squad"

                            },

                            {

                                num: NumberInt("1639"),

                                value: "https://modelzoo.co/model/object-and-facial-detection-in-python"

                            },

                            {

                                num: NumberInt("1640"),

                                value: "https://modelzoo.co/model/hindsight-experience-replay"

                            },

                            {

                                num: NumberInt("1641"),

                                value: "https://modelzoo.co/model/dlincv"

                            },

                            {

                                num: NumberInt("1642"),

                                value: "https://modelzoo.co/model/center-loss-tensorflow"

                            },

                            {

                                num: NumberInt("1643"),

                                value: "https://modelzoo.co/model/support-vector-machine"

                            },

                            {

                                num: NumberInt("1644"),

                                value: "https://modelzoo.co/model/efficient-imagenet-classification"

                            },

                            {

                                num: NumberInt("1645"),

                                value: "https://modelzoo.co/model/jaxws-samples"

                            },

                            {

                                num: NumberInt("1646"),

                                value: "https://modelzoo.co/model/problem-details"

                            },

                            {

                                num: NumberInt("1647"),

                                value: "https://modelzoo.co/model/pax"

                            },

                            {

                                num: NumberInt("1648"),

                                value: "https://modelzoo.co/model/medclip"

                            },

                            {

                                num: NumberInt("1649"),

                                value: "https://modelzoo.co/model/adahessianjax"

                            },

                            {

                                num: NumberInt("1650"),

                                value: "https://modelzoo.co/model/jax-galsim"

                            },

                            {

                                num: NumberInt("1651"),

                                value: "https://modelzoo.co/model/pytorch-paper-implementations"

                            },

                            {

                                num: NumberInt("1652"),

                                value: "https://modelzoo.co/model/amortized-svgd"

                            },

                            {

                                num: NumberInt("1653"),

                                value: "https://modelzoo.co/model/pscapsnet"

                            },

                            {

                                num: NumberInt("1654"),

                                value: "https://modelzoo.co/model/smapgan"

                            },

                            {

                                num: NumberInt("1655"),

                                value: "https://modelzoo.co/model/pynmt"

                            },

                            {

                                num: NumberInt("1656"),

                                value: "https://modelzoo.co/model/multi-task"

                            },

                            {

                                num: NumberInt("1657"),

                                value: "https://modelzoo.co/model/flax-nerf"

                            },

                            {

                                num: NumberInt("1658"),

                                value: "https://modelzoo.co/model/mlpmixer-jax2tf"

                            },

                            {

                                num: NumberInt("1659"),

                                value: "https://modelzoo.co/model/diffqcqp"

                            },

                            {

                                num: NumberInt("1660"),

                                value: "https://modelzoo.co/model/hover-net"

                            },

                            {

                                num: NumberInt("1661"),

                                value: "https://modelzoo.co/model/pytorch-adversarialattacks"

                            },

                            {

                                num: NumberInt("1662"),

                                value: "https://modelzoo.co/model/cmn4recosys"

                            },

                            {

                                num: NumberInt("1663"),

                                value: "https://modelzoo.co/model/authlete-java-jaxrs"

                            },

                            {

                                num: NumberInt("1664"),

                                value: "https://modelzoo.co/model/s4-jax"

                            },

                            {

                                num: NumberInt("1665"),

                                value: "https://modelzoo.co/model/jersey-http2-jetty-connector"

                            },

                            {

                                num: NumberInt("1666"),

                                value: "https://modelzoo.co/model/bit-jax2tf"

                            },

                            {

                                num: NumberInt("1667"),

                                value: "https://modelzoo.co/model/omega"

                            },

                            {

                                num: NumberInt("1668"),

                                value: "https://modelzoo.co/model/progan-flax"

                            },

                            {

                                num: NumberInt("1669"),

                                value: "https://modelzoo.co/model/rouge-l-tensorflow"

                            },

                            {

                                num: NumberInt("1670"),

                                value: "https://modelzoo.co/model/lr-momentum-scheduler"

                            },

                            {

                                num: NumberInt("1671"),

                                value: "https://modelzoo.co/model/sst"

                            },

                            {

                                num: NumberInt("1672"),

                                value: "https://modelzoo.co/model/pytorch-peleenet"

                            },

                            {

                                num: NumberInt("1673"),

                                value: "https://modelzoo.co/model/l-gm-loss"

                            },

                            {

                                num: NumberInt("1674"),

                                value: "https://modelzoo.co/model/spring-hibernate-jersey"

                            },

                            {

                                num: NumberInt("1675"),

                                value: "https://modelzoo.co/model/guide-microprofile-opentracing"

                            },

                            {

                                num: NumberInt("1676"),

                                value: "https://modelzoo.co/model/patching-jax-rs"

                            },

                            {

                                num: NumberInt("1677"),

                                value: "https://modelzoo.co/model/http-matchers"

                            },

                            {

                                num: NumberInt("1678"),

                                value: "https://modelzoo.co/model/mingpt-flax"

                            },

                            {

                                num: NumberInt("1679"),

                                value: "https://modelzoo.co/model/mlagents"

                            },

                            {

                                num: NumberInt("1680"),

                                value: "https://modelzoo.co/model/patchvae"

                            },

                            {

                                num: NumberInt("1681"),

                                value: "https://modelzoo.co/model/irls-using-dl-frameworks"

                            },

                            {

                                num: NumberInt("1682"),

                                value: "https://modelzoo.co/model/gan_tutorial-pytorch"

                            },

                            {

                                num: NumberInt("1683"),

                                value: "https://modelzoo.co/model/npid"

                            },

                            {

                                num: NumberInt("1684"),

                                value: "https://modelzoo.co/model/discovering-reinforcement-learning-algorithms"

                            },

                            {

                                num: NumberInt("1685"),

                                value: "https://modelzoo.co/model/swagger4jaxrs"

                            },

                            {

                                num: NumberInt("1686"),

                                value: "https://modelzoo.co/model/androidjaxblib"

                            },

                            {

                                num: NumberInt("1687"),

                                value: "https://modelzoo.co/model/jive-sdk-java-jersey"

                            },

                            {

                                num: NumberInt("1688"),

                                value: "https://modelzoo.co/model/jax-chacha-prng"

                            },

                            {

                                num: NumberInt("1689"),

                                value: "https://modelzoo.co/model/jax-gat"

                            },

                            {

                                num: NumberInt("1690"),

                                value: "https://modelzoo.co/model/siren-jax"

                            },

                            {

                                num: NumberInt("1691"),

                                value: "https://modelzoo.co/model/fastpbrl"

                            },

                            {

                                num: NumberInt("1692"),

                                value: "https://modelzoo.co/model/ganjax"

                            },

                            {

                                num: NumberInt("1693"),

                                value: "https://modelzoo.co/model/alphago"

                            },

                            {

                                num: NumberInt("1694"),

                                value: "https://modelzoo.co/model/voice-filter-tensorflow"

                            },

                            {

                                num: NumberInt("1695"),

                                value: "https://modelzoo.co/model/photowct"

                            },

                            {

                                num: NumberInt("1696"),

                                value: "https://modelzoo.co/model/gan-tensorflow"

                            },

                            {

                                num: NumberInt("1697"),

                                value: "https://modelzoo.co/model/lda2vec-pytorch"

                            },

                            {

                                num: NumberInt("1698"),

                                value: "https://modelzoo.co/model/transearch"

                            },

                            {

                                num: NumberInt("1699"),

                                value: "https://modelzoo.co/model/vae-pytorch"

                            },

                            {

                                num: NumberInt("1700"),

                                value: "https://modelzoo.co/model/chainer_superresolution"

                            },

                            {

                                num: NumberInt("1701"),

                                value: "https://modelzoo.co/model/jaxb-delegate-plugin"

                            },

                            {

                                num: NumberInt("1702"),

                                value: "https://modelzoo.co/model/yahtzotron"

                            },

                            {

                                num: NumberInt("1703"),

                                value: "https://modelzoo.co/model/flaxo"

                            },

                            {

                                num: NumberInt("1704"),

                                value: "https://modelzoo.co/model/efficientdet-tensorflow2"

                            },

                            {

                                num: NumberInt("1705"),

                                value: "https://modelzoo.co/model/random-wired-nn-tensorflow"

                            },

                            {

                                num: NumberInt("1706"),

                                value: "https://modelzoo.co/model/language-detection-speech-using-dnn"

                            },

                            {

                                num: NumberInt("1707"),

                                value: "https://modelzoo.co/model/bayesian-neural-networks-tensorflow"

                            },

                            {

                                num: NumberInt("1708"),

                                value: "https://modelzoo.co/model/abcnn"

                            },

                            {

                                num: NumberInt("1709"),

                                value: "https://modelzoo.co/model/multi-process-unreal"

                            },

                            {

                                num: NumberInt("1710"),

                                value: "https://modelzoo.co/model/pyrrha-pynode"

                            },

                            {

                                num: NumberInt("1711"),

                                value: "https://modelzoo.co/model/hog"

                            },

                            {

                                num: NumberInt("1712"),

                                value: "https://modelzoo.co/model/custom-pooling"

                            },

                            {

                                num: NumberInt("1713"),

                                value: "https://modelzoo.co/model/superconv"

                            },

                            {

                                num: NumberInt("1714"),

                                value: "https://modelzoo.co/model/sam-tf"

                            },

                            {

                                num: NumberInt("1715"),

                                value: "https://modelzoo.co/model/gans-slides-code-paper"

                            },

                            {

                                num: NumberInt("1716"),

                                value: "https://modelzoo.co/model/tf-neural-style"

                            },

                            {

                                num: NumberInt("1717"),

                                value: "https://modelzoo.co/model/machine-learning"

                            },

                            {

                                num: NumberInt("1718"),

                                value: "https://modelzoo.co/model/semantic-style-transfer"

                            },

                            {

                                num: NumberInt("1719"),

                                value: "https://modelzoo.co/model/phaser"

                            },

                            {

                                num: NumberInt("1720"),

                                value: "https://modelzoo.co/model/mountain-car-continuous"

                            },

                            {

                                num: NumberInt("1721"),

                                value: "https://modelzoo.co/model/cyclegan-tf22-multigpu"

                            },

                            {

                                num: NumberInt("1722"),

                                value: "https://modelzoo.co/model/viraal"

                            },

                            {

                                num: NumberInt("1723"),

                                value: "https://modelzoo.co/model/pointcloud-based-row-detection-using-shellnet"

                            },

                            {

                                num: NumberInt("1724"),

                                value: "https://modelzoo.co/model/mdn-pyro"

                            },

                            {

                                num: NumberInt("1725"),

                                value: "https://modelzoo.co/model/lightning-semi-supervised-learning"

                            },

                            {

                                num: NumberInt("1726"),

                                value: "https://modelzoo.co/model/semantic-robustness"

                            },

                            {

                                num: NumberInt("1727"),

                                value: "https://modelzoo.co/model/neural-image-caption"

                            },

                            {

                                num: NumberInt("1728"),

                                value: "https://modelzoo.co/model/unrolled-gan"

                            },

                            {

                                num: NumberInt("1729"),

                                value: "https://modelzoo.co/model/fn-jrestless-example"

                            },

                            {

                                num: NumberInt("1730"),

                                value: "https://modelzoo.co/model/cql-jax"

                            },

                            {

                                num: NumberInt("1731"),

                                value: "https://modelzoo.co/model/vit-flax"

                            },

                            {

                                num: NumberInt("1732"),

                                value: "https://modelzoo.co/model/jax-fid"

                            },

                            {

                                num: NumberInt("1733"),

                                value: "https://modelzoo.co/model/jax-skip-gram-negative-sampling"

                            },

                            {

                                num: NumberInt("1734"),

                                value: "https://modelzoo.co/model/flax-66"

                            },

                            {

                                num: NumberInt("1735"),

                                value: "https://modelzoo.co/model/asu-net"

                            },

                            {

                                num: NumberInt("1736"),

                                value: "https://modelzoo.co/model/hotdog-not-hotdog"

                            },

                            {

                                num: NumberInt("1737"),

                                value: "https://modelzoo.co/model/tinyimagenet-benchmarks"

                            },

                            {

                                num: NumberInt("1738"),

                                value: "https://modelzoo.co/model/image-captioning-tensorflow"

                            },

                            {

                                num: NumberInt("1739"),

                                value: "https://modelzoo.co/model/wassersteingan-tensorflow"

                            },

                            {

                                num: NumberInt("1740"),

                                value: "https://modelzoo.co/model/lstm-tensorflow"

                            },

                            {

                                num: NumberInt("1741"),

                                value: "https://modelzoo.co/model/capsule-network-tensorflow"

                            },

                            {

                                num: NumberInt("1742"),

                                value: "https://modelzoo.co/model/pixelrnn"

                            },

                            {

                                num: NumberInt("1743"),

                                value: "https://modelzoo.co/model/shufflenetv2-tensorflow"

                            },

                            {

                                num: NumberInt("1744"),

                                value: "https://modelzoo.co/model/adversarialconvex"

                            },

                            {

                                num: NumberInt("1745"),

                                value: "https://modelzoo.co/model/videogan-tensorflow"

                            },

                            {

                                num: NumberInt("1746"),

                                value: "https://modelzoo.co/model/tf-gans"

                            },

                            {

                                num: NumberInt("1747"),

                                value: "https://modelzoo.co/model/modular-ssd-tensorflow"

                            },

                            {

                                num: NumberInt("1748"),

                                value: "https://modelzoo.co/model/infogan-tensorflow"

                            },

                            {

                                num: NumberInt("1749"),

                                value: "https://modelzoo.co/model/gan-basic"

                            },

                            {

                                num: NumberInt("1750"),

                                value: "https://modelzoo.co/model/document-image-unwarping-tensorflow"

                            },

                            {

                                num: NumberInt("1751"),

                                value: "https://modelzoo.co/model/deep-posemachine"

                            },

                            {

                                num: NumberInt("1752"),

                                value: "https://modelzoo.co/model/ssd-tensorflow"

                            },

                            {

                                num: NumberInt("1753"),

                                value: "https://modelzoo.co/model/shake-shake-tensorflow"

                            },

                            {

                                num: NumberInt("1754"),

                                value: "https://modelzoo.co/model/superpointpretraincpp-tensorflow"

                            },

                            {

                                num: NumberInt("1755"),

                                value: "https://modelzoo.co/model/u-net-tensorflow"

                            },

                            {

                                num: NumberInt("1756"),

                                value: "https://modelzoo.co/model/dynamic-memory-network-plus"

                            },

                            {

                                num: NumberInt("1757"),

                                value: "https://modelzoo.co/model/feature-eng"

                            },

                            {

                                num: NumberInt("1758"),

                                value: "https://modelzoo.co/model/1d-gan"

                            },

                            {

                                num: NumberInt("1759"),

                                value: "https://modelzoo.co/model/mnasnet"

                            },

                            {

                                num: NumberInt("1760"),

                                value: "https://modelzoo.co/model/pytorch-linear-gan"

                            },

                            {

                                num: NumberInt("1761"),

                                value: "https://modelzoo.co/model/rdgan"

                            },

                            {

                                num: NumberInt("1762"),

                                value: "https://modelzoo.co/model/spatialtransformer"

                            },

                            {

                                num: NumberInt("1763"),

                                value: "https://modelzoo.co/model/skeleton-based-action-recognition"

                            },

                            {

                                num: NumberInt("1764"),

                                value: "https://modelzoo.co/model/image-colorization"

                            },

                            {

                                num: NumberInt("1765"),

                                value: "https://modelzoo.co/model/retrieval-chatbot"

                            },

                            {

                                num: NumberInt("1766"),

                                value: "https://modelzoo.co/model/began"

                            },

                            {

                                num: NumberInt("1767"),

                                value: "https://modelzoo.co/model/jax-dreamer"

                            },

                            {

                                num: NumberInt("1768"),

                                value: "https://modelzoo.co/model/coodoo-listing"

                            },

                            {

                                num: NumberInt("1769"),

                                value: "https://modelzoo.co/model/micronaut-jaxrs"

                            },

                            {

                                num: NumberInt("1770"),

                                value: "https://modelzoo.co/model/holon-jaxrs"

                            },

                            {

                                num: NumberInt("1771"),

                                value: "https://modelzoo.co/model/jax-transformations3d"

                            },

                            {

                                num: NumberInt("1772"),

                                value: "https://modelzoo.co/model/jax-enhance"

                            },

                            {

                                num: NumberInt("1773"),

                                value: "https://modelzoo.co/model/tme"

                            },

                            {

                                num: NumberInt("1774"),

                                value: "https://modelzoo.co/model/som"

                            },

                            {

                                num: NumberInt("1775"),

                                value: "https://modelzoo.co/model/neural-style-transfer-tensorflow-keras"

                            },

                            {

                                num: NumberInt("1776"),

                                value: "https://modelzoo.co/model/arbitrary-style-transfer"

                            },

                            {

                                num: NumberInt("1777"),

                                value: "https://modelzoo.co/model/vae-gan-autoencoding-beyond-pixels-using"

                            },

                            {

                                num: NumberInt("1778"),

                                value: "https://modelzoo.co/model/neural-style-4"

                            },

                            {

                                num: NumberInt("1779"),

                                value: "https://modelzoo.co/model/sequence-labeling"

                            },

                            {

                                num: NumberInt("1780"),

                                value: "https://modelzoo.co/model/image-classification"

                            },

                            {

                                num: NumberInt("1781"),

                                value: "https://modelzoo.co/model/deeplabv3plus-tensorflow"

                            },

                            {

                                num: NumberInt("1782"),

                                value: "https://modelzoo.co/model/coteaching"

                            },

                            {

                                num: NumberInt("1783"),

                                value: "https://modelzoo.co/model/deeplearning-papers-implementation"

                            },

                            {

                                num: NumberInt("1784"),

                                value: "https://modelzoo.co/model/tf-transformer"

                            },

                            {

                                num: NumberInt("1785"),

                                value: "https://modelzoo.co/model/psmnettf"

                            },

                            {

                                num: NumberInt("1786"),

                                value: "https://modelzoo.co/model/style_transfer-tensorflow"

                            },

                            {

                                num: NumberInt("1787"),

                                value: "https://modelzoo.co/model/3dbpconv"

                            },

                            {

                                num: NumberInt("1788"),

                                value: "https://modelzoo.co/model/inception-module-tensorflow"

                            },

                            {

                                num: NumberInt("1789"),

                                value: "https://modelzoo.co/model/tf-transliteration"

                            },

                            {

                                num: NumberInt("1790"),

                                value: "https://modelzoo.co/model/pix2pix-tensorflow"

                            },

                            {

                                num: NumberInt("1791"),

                                value: "https://modelzoo.co/model/categorical-variational-autoencoder"

                            },

                            {

                                num: NumberInt("1792"),

                                value: "https://modelzoo.co/model/factorvae"

                            },

                            {

                                num: NumberInt("1793"),

                                value: "https://modelzoo.co/model/tf-glow-tts"

                            },

                            {

                                num: NumberInt("1794"),

                                value: "https://modelzoo.co/model/voice-authentication-cnn"

                            },

                            {

                                num: NumberInt("1795"),

                                value: "https://modelzoo.co/model/tensorflow-cvae"

                            },

                            {

                                num: NumberInt("1796"),

                                value: "https://modelzoo.co/model/gridmask-tensorflow"

                            },

                            {

                                num: NumberInt("1797"),

                                value: "https://modelzoo.co/model/text-flask"

                            },

                            {

                                num: NumberInt("1798"),

                                value: "https://modelzoo.co/model/sparse-auto-encoder"

                            },

                            {

                                num: NumberInt("1799"),

                                value: "https://modelzoo.co/model/tensorflow-dtn"

                            },

                            {

                                num: NumberInt("1800"),

                                value: "https://modelzoo.co/model/nec-tensorflow"

                            },

                            {

                                num: NumberInt("1801"),

                                value: "https://modelzoo.co/model/rnn-pixel-prediction"

                            },

                            {

                                num: NumberInt("1802"),

                                value: "https://modelzoo.co/model/tf-ft"

                            },

                            {

                                num: NumberInt("1803"),

                                value: "https://modelzoo.co/model/dqn-2"

                            },

                            {

                                num: NumberInt("1804"),

                                value: "https://modelzoo.co/model/x-ray-images-classification-with-keras"

                            },

                            {

                                num: NumberInt("1805"),

                                value: "https://modelzoo.co/model/adaptiveattention"

                            },

                            {

                                num: NumberInt("1806"),

                                value: "https://modelzoo.co/model/ali-mnist"

                            },

                            {

                                num: NumberInt("1807"),

                                value: "https://modelzoo.co/model/depth-eigen"

                            },

                            {

                                num: NumberInt("1808"),

                                value: "https://modelzoo.co/model/skip-gram-negative-sampling"

                            },

                            {

                                num: NumberInt("1809"),

                                value: "https://modelzoo.co/model/pytorch-fcn-2"

                            },

                            {

                                num: NumberInt("1810"),

                                value: "https://modelzoo.co/model/charades-algorithms"

                            },

                            {

                                num: NumberInt("1811"),

                                value: "https://modelzoo.co/model/text2imagegluon"

                            },

                            {

                                num: NumberInt("1812"),

                                value: "https://modelzoo.co/model/mxnet_kaldi"

                            },

                            {

                                num: NumberInt("1813"),

                                value: "https://modelzoo.co/model/vrp-attention-jax"

                            },

                            {

                                num: NumberInt("1814"),

                                value: "https://modelzoo.co/model/jax-meta-learning"

                            },

                            {

                                num: NumberInt("1815"),

                                value: "https://modelzoo.co/model/mlp-mixer"

                            },

                            {

                                num: NumberInt("1816"),

                                value: "https://modelzoo.co/model/jax-workshop"

                            },

                            {

                                num: NumberInt("1817"),

                                value: "https://modelzoo.co/model/grax"

                            },

                            {

                                num: NumberInt("1818"),

                                value: "https://modelzoo.co/model/jax-rs-linker"

                            },

                            {

                                num: NumberInt("1819"),

                                value: "https://modelzoo.co/model/windmill-api"

                            },

                            {

                                num: NumberInt("1820"),

                                value: "https://modelzoo.co/model/deep-illusion"

                            },

                            {

                                num: NumberInt("1821"),

                                value: "https://modelzoo.co/model/deepqlearning"

                            },

                            {

                                num: NumberInt("1822"),

                                value: "https://modelzoo.co/model/vision-transformer-pytorch-lightning"

                            },

                            {

                                num: NumberInt("1823"),

                                value: "https://modelzoo.co/model/herocrabplugin"

                            },

                            {

                                num: NumberInt("1824"),

                                value: "https://modelzoo.co/model/dbn-tf"

                            },

                            {

                                num: NumberInt("1825"),

                                value: "https://modelzoo.co/model/tensorflow_project_template-2"

                            },

                            {

                                num: NumberInt("1826"),

                                value: "https://modelzoo.co/model/rlntm-tensorflow"

                            },

                            {

                                num: NumberInt("1827"),

                                value: "https://modelzoo.co/model/capsnet-5"

                            },

                            {

                                num: NumberInt("1828"),

                                value: "https://modelzoo.co/model/yolov3-3"

                            },

                            {

                                num: NumberInt("1829"),

                                value: "https://modelzoo.co/model/stargan-tensorflow-2"

                            },

                            {

                                num: NumberInt("1830"),

                                value: "https://modelzoo.co/model/cnn-implementations"

                            },

                            {

                                num: NumberInt("1831"),

                                value: "https://modelzoo.co/model/chatbot-al"

                            },

                            {

                                num: NumberInt("1832"),

                                value: "https://modelzoo.co/model/pytfbusternet"

                            },

                            {

                                num: NumberInt("1833"),

                                value: "https://modelzoo.co/model/esim-2"

                            },

                            {

                                num: NumberInt("1834"),

                                value: "https://modelzoo.co/model/tensorflow-pix2pix"

                            },

                            {

                                num: NumberInt("1835"),

                                value: "https://modelzoo.co/model/actor-critic"

                            },

                            {

                                num: NumberInt("1836"),

                                value: "https://modelzoo.co/model/cyclegan-tensorflow-2"

                            },

                            {

                                num: NumberInt("1837"),

                                value: "https://modelzoo.co/model/convolutional-draw"

                            },

                            {

                                num: NumberInt("1838"),

                                value: "https://modelzoo.co/model/scrnn-tensorflow"

                            },

                            {

                                num: NumberInt("1839"),

                                value: "https://modelzoo.co/model/capsnet-python-tensorflow"

                            },

                            {

                                num: NumberInt("1840"),

                                value: "https://modelzoo.co/model/deep-convolutional-highway-network"

                            },

                            {

                                num: NumberInt("1841"),

                                value: "https://modelzoo.co/model/mamnet-tensorflow-2"

                            },

                            {

                                num: NumberInt("1842"),

                                value: "https://modelzoo.co/model/arch-deepspeech"

                            },

                            {

                                num: NumberInt("1843"),

                                value: "https://modelzoo.co/model/dl-stereo-matching"

                            },

                            {

                                num: NumberInt("1844"),

                                value: "https://modelzoo.co/model/toyrnntext"

                            },

                            {

                                num: NumberInt("1845"),

                                value: "https://modelzoo.co/model/deep-q-network-using-tensorflow"

                            },

                            {

                                num: NumberInt("1846"),

                                value: "https://modelzoo.co/model/fully-convolutional-networks-tf"

                            },

                            {

                                num: NumberInt("1847"),

                                value: "https://modelzoo.co/model/ddpg-agent"

                            },

                            {

                                num: NumberInt("1848"),

                                value: "https://modelzoo.co/model/residual-network"

                            },

                            {

                                num: NumberInt("1849"),

                                value: "https://modelzoo.co/model/nifi-deepspeech"

                            },

                            {

                                num: NumberInt("1850"),

                                value: "https://modelzoo.co/model/yolov4-swift-for-tensorflow"

                            },

                            {

                                num: NumberInt("1851"),

                                value: "https://modelzoo.co/model/neural-turing-machine"

                            },

                            {

                                num: NumberInt("1852"),

                                value: "https://modelzoo.co/model/deepdream"

                            },

                            {

                                num: NumberInt("1853"),

                                value: "https://modelzoo.co/model/neural-machine-translation"

                            },

                            {

                                num: NumberInt("1854"),

                                value: "https://modelzoo.co/model/qnn"

                            },

                            {

                                num: NumberInt("1855"),

                                value: "https://modelzoo.co/model/faster-rcnn-rpn"

                            },

                            {

                                num: NumberInt("1856"),

                                value: "https://modelzoo.co/model/wssdcnn"

                            },

                            {

                                num: NumberInt("1857"),

                                value: "https://modelzoo.co/model/asynchronous-1step"

                            },

                            {

                                num: NumberInt("1858"),

                                value: "https://modelzoo.co/model/image2image-translation"

                            },

                            {

                                num: NumberInt("1859"),

                                value: "https://modelzoo.co/model/attention-chatbot"

                            },

                            {

                                num: NumberInt("1860"),

                                value: "https://modelzoo.co/model/quick-nlp-tensorflow"

                            },

                            {

                                num: NumberInt("1861"),

                                value: "https://modelzoo.co/model/skipgram-model"

                            },

                            {

                                num: NumberInt("1862"),

                                value: "https://modelzoo.co/model/tdnn-tensorflow"

                            },

                            {

                                num: NumberInt("1863"),

                                value: "https://modelzoo.co/model/vdsr"

                            },

                            {

                                num: NumberInt("1864"),

                                value: "https://modelzoo.co/model/image-captioning-3"

                            },

                            {

                                num: NumberInt("1865"),

                                value: "https://modelzoo.co/model/paper-implementations"

                            },

                            {

                                num: NumberInt("1866"),

                                value: "https://modelzoo.co/model/text-normalization-in-pytorch"

                            },

                            {

                                num: NumberInt("1867"),

                                value: "https://modelzoo.co/model/lsgan-with-pytorch"

                            },

                            {

                                num: NumberInt("1868"),

                                value: "https://modelzoo.co/model/etos-tts"

                            },

                            {

                                num: NumberInt("1869"),

                                value: "https://modelzoo.co/model/detection-experiments"

                            },

                            {

                                num: NumberInt("1870"),

                                value: "https://modelzoo.co/model/neural-style-2"

                            },

                            {

                                num: NumberInt("1871"),

                                value: "https://modelzoo.co/model/pytorch-disn"

                            },

                            {

                                num: NumberInt("1872"),

                                value: "https://modelzoo.co/model/dl-playground"

                            },

                            {

                                num: NumberInt("1873"),

                                value: "https://modelzoo.co/model/srcnn-mxnet"

                            },

                            {

                                num: NumberInt("1874"),

                                value: "https://modelzoo.co/model/chainer-srcnn"

                            },

                            {

                                num: NumberInt("1875"),

                                value: "https://modelzoo.co/model/jaxcql"

                            },

                            {

                                num: NumberInt("1876"),

                                value: "https://modelzoo.co/model/jaxb"

                            },

                            {

                                num: NumberInt("1877"),

                                value: "https://modelzoo.co/model/vkjax"

                            },

                            {

                                num: NumberInt("1878"),

                                value: "https://modelzoo.co/model/glow-jax"

                            },

                            {

                                num: NumberInt("1879"),

                                value: "https://modelzoo.co/model/bart-base-jax"

                            },

                            {

                                num: NumberInt("1880"),

                                value: "https://modelzoo.co/model/bottleneck-transformer-flax"

                            },

                            {

                                num: NumberInt("1881"),

                                value: "https://modelzoo.co/model/mech"

                            },

                            {

                                num: NumberInt("1882"),

                                value: "https://modelzoo.co/model/rl-with-jax"

                            },

                            {

                                num: NumberInt("1883"),

                                value: "https://modelzoo.co/model/stylegan2jax"

                            },

                            {

                                num: NumberInt("1884"),

                                value: "https://modelzoo.co/model/rbm"

                            },

                            {

                                num: NumberInt("1885"),

                                value: "https://modelzoo.co/model/show-and-tell"

                            },

                            {

                                num: NumberInt("1886"),

                                value: "https://modelzoo.co/model/rgb-to-grayscale-autoencoder"

                            },

                            {

                                num: NumberInt("1887"),

                                value: "https://modelzoo.co/model/vdsr-tensorflow"

                            },

                            {

                                num: NumberInt("1888"),

                                value: "https://modelzoo.co/model/tensor-fcn"

                            },

                            {

                                num: NumberInt("1889"),

                                value: "https://modelzoo.co/model/learning-chaos"

                            },

                            {

                                num: NumberInt("1890"),

                                value: "https://modelzoo.co/model/cartpole-openai-tensorflow"

                            },

                            {

                                num: NumberInt("1891"),

                                value: "https://modelzoo.co/model/i3d-master"

                            },

                            {

                                num: NumberInt("1892"),

                                value: "https://modelzoo.co/model/speechdenoising"

                            },

                            {

                                num: NumberInt("1893"),

                                value: "https://modelzoo.co/model/text-siamese-network"

                            },

                            {

                                num: NumberInt("1894"),

                                value: "https://modelzoo.co/model/infogan-tensorflow20"

                            },

                            {

                                num: NumberInt("1895"),

                                value: "https://modelzoo.co/model/dive-into-machine-learning"

                            },

                            {

                                num: NumberInt("1896"),

                                value: "https://modelzoo.co/model/cvae-in-pytorch"

                            },

                            {

                                num: NumberInt("1897"),

                                value: "https://modelzoo.co/model/pytorch-tiny-darknet"

                            },

                            {

                                num: NumberInt("1898"),

                                value: "https://modelzoo.co/model/improved-contentdisentanglement"

                            },

                            {

                                num: NumberInt("1899"),

                                value: "https://modelzoo.co/model/bayes-by-backprop-pytorch"

                            },

                            {

                                num: NumberInt("1900"),

                                value: "https://modelzoo.co/model/spectral-stein-gradient"

                            },

                            {

                                num: NumberInt("1901"),

                                value: "https://modelzoo.co/model/pytorch-rnns"

                            },

                            {

                                num: NumberInt("1902"),

                                value: "https://modelzoo.co/model/disentangling-by-factorising"

                            },

                            {

                                num: NumberInt("1903"),

                                value: "https://modelzoo.co/model/ddr"

                            },

                            {

                                num: NumberInt("1904"),

                                value: "https://modelzoo.co/model/centernet-detection-kitti"

                            },

                            {

                                num: NumberInt("1905"),

                                value: "https://modelzoo.co/model/ssdfpn"

                            },

                            {

                                num: NumberInt("1906"),

                                value: "https://modelzoo.co/model/jax-nn-template"

                            },

                            {

                                num: NumberInt("1907"),

                                value: "https://modelzoo.co/model/tensorf-jax"

                            },

                            {

                                num: NumberInt("1908"),

                                value: "https://modelzoo.co/model/jax-reactor"

                            },

                            {

                                num: NumberInt("1909"),

                                value: "https://modelzoo.co/model/unet-jax"

                            },

                            {

                                num: NumberInt("1910"),

                                value: "https://modelzoo.co/model/openapi-jaxb"

                            },

                            {

                                num: NumberInt("1911"),

                                value: "https://modelzoo.co/model/jax-rs-jpa-crud"

                            },

                            {

                                num: NumberInt("1912"),

                                value: "https://modelzoo.co/model/springbootecommerceapijersey"

                            },

                            {

                                num: NumberInt("1913"),

                                value: "https://modelzoo.co/model/rsmvc"

                            },

                            {

                                num: NumberInt("1914"),

                                value: "https://modelzoo.co/model/jax-rl-2"

                            },

                            {

                                num: NumberInt("1915"),

                                value: "https://modelzoo.co/model/svgd-jax"

                            },

                            {

                                num: NumberInt("1916"),

                                value: "https://modelzoo.co/model/sxml-jaxp"

                            },

                            {

                                num: NumberInt("1917"),

                                value: "https://modelzoo.co/model/jaxb-format-plugin"

                            },

                            {

                                num: NumberInt("1918"),

                                value: "https://modelzoo.co/model/swin-transformer-v2-jax"

                            },

                            {

                                num: NumberInt("1919"),

                                value: "https://modelzoo.co/model/pathfinder"

                            },

                            {

                                num: NumberInt("1920"),

                                value: "https://modelzoo.co/model/dynaql"

                            },

                            {

                                num: NumberInt("1921"),

                                value: "https://modelzoo.co/model/sympais"

                            },

                            {

                                num: NumberInt("1922"),

                                value: "https://modelzoo.co/model/trajectory-optimisation-in-learned-multimodal-dynamical"

                            },

                            {

                                num: NumberInt("1923"),

                                value: "https://modelzoo.co/model/lift-json-jsr311-provider"

                            },

                            {

                                num: NumberInt("1924"),

                                value: "https://modelzoo.co/model/trust-region-policy-optimization"

                            },

                            {

                                num: NumberInt("1925"),

                                value: "https://modelzoo.co/model/efficientnet-pytorch-3"

                            },

                            {

                                num: NumberInt("1926"),

                                value: "https://modelzoo.co/model/dcgan-celeba"

                            },

                            {

                                num: NumberInt("1927"),

                                value: "https://modelzoo.co/model/speech2face"

                            },

                            {

                                num: NumberInt("1928"),

                                value: "https://modelzoo.co/model/pytorch-implementations-2"

                            },

                            {

                                num: NumberInt("1929"),

                                value: "https://modelzoo.co/model/nnutils"

                            },

                            {

                                num: NumberInt("1930"),

                                value: "https://modelzoo.co/model/drn-pytorch"

                            },

                            {

                                num: NumberInt("1931"),

                                value: "https://modelzoo.co/model/dcgan-2"

                            },

                            {

                                num: NumberInt("1932"),

                                value: "https://modelzoo.co/model/colorizedepthnet"

                            },

                            {

                                num: NumberInt("1933"),

                                value: "https://modelzoo.co/model/unet-pytorch-2"

                            },

                            {

                                num: NumberInt("1934"),

                                value: "https://modelzoo.co/model/meta-learning"

                            },

                            {

                                num: NumberInt("1935"),

                                value: "https://modelzoo.co/model/disturblabel-pytorch"

                            },

                            {

                                num: NumberInt("1936"),

                                value: "https://modelzoo.co/model/deepdeblur"

                            },

                            {

                                num: NumberInt("1937"),

                                value: "https://modelzoo.co/model/sngan"

                            },

                            {

                                num: NumberInt("1938"),

                                value: "https://modelzoo.co/model/mobilenetv2"

                            },

                            {

                                num: NumberInt("1939"),

                                value: "https://modelzoo.co/model/vdsr-pytorch-tf2"

                            },

                            {

                                num: NumberInt("1940"),

                                value: "https://modelzoo.co/model/yolov3-2"

                            },

                            {

                                num: NumberInt("1941"),

                                value: "https://modelzoo.co/model/openpose-pytorch-2"

                            },

                            {

                                num: NumberInt("1942"),

                                value: "https://modelzoo.co/model/densenet-pytorch-2"

                            },

                            {

                                num: NumberInt("1943"),

                                value: "https://modelzoo.co/model/deep-coloring"

                            },

                            {

                                num: NumberInt("1944"),

                                value: "https://modelzoo.co/model/mobilenet-customdata"

                            },

                            {

                                num: NumberInt("1945"),

                                value: "https://modelzoo.co/model/neural-style-3"

                            },

                            {

                                num: NumberInt("1946"),

                                value: "https://modelzoo.co/model/capsulenet"

                            },

                            {

                                num: NumberInt("1947"),

                                value: "https://modelzoo.co/model/scene-text-segmentation"

                            },

                            {

                                num: NumberInt("1948"),

                                value: "https://modelzoo.co/model/vst"

                            },

                            {

                                num: NumberInt("1949"),

                                value: "https://modelzoo.co/model/deep-learning-cnn"

                            },

                            {

                                num: NumberInt("1950"),

                                value: "https://modelzoo.co/model/pt-splitter"

                            },

                            {

                                num: NumberInt("1951"),

                                value: "https://modelzoo.co/model/self-attention-gan-master-pytorch"

                            },

                            {

                                num: NumberInt("1952"),

                                value: "https://modelzoo.co/model/nscupa-pytorch"

                            },

                            {

                                num: NumberInt("1953"),

                                value: "https://modelzoo.co/model/forces"

                            },

                            {

                                num: NumberInt("1954"),

                                value: "https://modelzoo.co/model/caps-em-routing-cifar"

                            },

                            {

                                num: NumberInt("1955"),

                                value: "https://modelzoo.co/model/image_colorization-pytorch"

                            },

                            {

                                num: NumberInt("1956"),

                                value: "https://modelzoo.co/model/alphadraughts"

                            },

                            {

                                num: NumberInt("1957"),

                                value: "https://modelzoo.co/model/pytorch-in-nlp-research"

                            },

                            {

                                num: NumberInt("1958"),

                                value: "https://modelzoo.co/model/deep-reinforcement-learning"

                            },

                            {

                                num: NumberInt("1959"),

                                value: "https://modelzoo.co/model/mingrid-improved-rl-methods"

                            },

                            {

                                num: NumberInt("1960"),

                                value: "https://modelzoo.co/model/pytorch-unsupervised-domain-adatation"

                            },

                            {

                                num: NumberInt("1961"),

                                value: "https://modelzoo.co/model/td3-pytorch"

                            },

                            {

                                num: NumberInt("1962"),

                                value: "https://modelzoo.co/model/image-style-transfer"

                            },

                            {

                                num: NumberInt("1963"),

                                value: "https://modelzoo.co/model/indices-net"

                            },

                            {

                                num: NumberInt("1964"),

                                value: "https://modelzoo.co/model/translatr"

                            },

                            {

                                num: NumberInt("1965"),

                                value: "https://modelzoo.co/model/chainer-gan-trainer"

                            },

                            {

                                num: NumberInt("1966"),

                                value: "https://modelzoo.co/model/gradle-java-rest-api"

                            },

                            {

                                num: NumberInt("1967"),

                                value: "https://modelzoo.co/model/jaxdl"

                            },

                            {

                                num: NumberInt("1968"),

                                value: "https://modelzoo.co/model/jaxdb"

                            },

                            {

                                num: NumberInt("1969"),

                                value: "https://modelzoo.co/model/jackson-jakarta-rs-providers"

                            },

                            {

                                num: NumberInt("1970"),

                                value: "https://modelzoo.co/model/jax-anchors"

                            },

                            {

                                num: NumberInt("1971"),

                                value: "https://modelzoo.co/model/jax-rs-labs"

                            },

                            {

                                num: NumberInt("1972"),

                                value: "https://modelzoo.co/model/siren-flax"

                            },

                            {

                                num: NumberInt("1973"),

                                value: "https://modelzoo.co/model/a2c-jax"

                            },

                            {

                                num: NumberInt("1974"),

                                value: "https://modelzoo.co/model/learning-drl"

                            },

                            {

                                num: NumberInt("1975"),

                                value: "https://modelzoo.co/model/hyper-nn"

                            },

                            {

                                num: NumberInt("1976"),

                                value: "https://modelzoo.co/model/player-zoo"

                            },

                            {

                                num: NumberInt("1977"),

                                value: "https://modelzoo.co/model/pt-unet"

                            },

                            {

                                num: NumberInt("1978"),

                                value: "https://modelzoo.co/model/semantic-segmentation"

                            },

                            {

                                num: NumberInt("1979"),

                                value: "https://modelzoo.co/model/generative-adversarial-networks"

                            },

                            {

                                num: NumberInt("1980"),

                                value: "https://modelzoo.co/model/ppo-pytorch-3"

                            },

                            {

                                num: NumberInt("1981"),

                                value: "https://modelzoo.co/model/variational-autoencoder-pytorch-3"

                            },

                            {

                                num: NumberInt("1982"),

                                value: "https://modelzoo.co/model/hierarchical-question-imagee-co-attention"

                            },

                            {

                                num: NumberInt("1983"),

                                value: "https://modelzoo.co/model/lpips-j"

                            },

                            {

                                num: NumberInt("1984"),

                                value: "https://modelzoo.co/model/flaxoptimizersbenchmark"

                            },

                            {

                                num: NumberInt("1985"),

                                value: "https://modelzoo.co/model/flax-44"

                            },

                            {

                                num: NumberInt("1986"),

                                value: "https://modelzoo.co/model/speech-jax"

                            },

                            {

                                num: NumberInt("1987"),

                                value: "https://modelzoo.co/model/nerf-jax-flax-practice"

                            },

                            {

                                num: NumberInt("1988"),

                                value: "https://modelzoo.co/model/palm-flax"

                            },

                            {

                                num: NumberInt("1989"),

                                value: "https://modelzoo.co/model/gmlp"

                            },

                            {

                                num: NumberInt("1990"),

                                value: "https://modelzoo.co/model/xpag"

                            },

                            {

                                num: NumberInt("1991"),

                                value: "https://modelzoo.co/model/nerf"

                            },

                            {

                                num: NumberInt("1992"),

                                value: "https://modelzoo.co/model/h-former"

                            },

                            {

                                num: NumberInt("1993"),

                                value: "https://modelzoo.co/model/flax-u2net"

                            },

                            {

                                num: NumberInt("1994"),

                                value: "https://modelzoo.co/model/ebgan-celeba"

                            },

                            {

                                num: NumberInt("1995"),

                                value: "https://modelzoo.co/model/evolutionary-reinforcement-learning-for-openai-gym"

                            },

                            {

                                num: NumberInt("1996"),

                                value: "https://modelzoo.co/model/pytorch_sac-2"

                            },

                            {

                                num: NumberInt("1997"),

                                value: "https://modelzoo.co/model/flax-48"

                            },

                            {

                                num: NumberInt("1998"),

                                value: "https://modelzoo.co/model/protein-bert-jax"

                            },

                            {

                                num: NumberInt("1999"),

                                value: "https://modelzoo.co/model/set-transformer"

                            },

                            {

                                num: NumberInt("2000"),

                                value: "https://modelzoo.co/model/nedem"

                            },

                            {

                                num: NumberInt("2001"),

                                value: "https://modelzoo.co/model/flax-extra"

                            },

                            {

                                num: NumberInt("2002"),

                                value: "https://modelzoo.co/model/resmlp-flax"

                            },

                            {

                                num: NumberInt("2003"),

                                value: "https://modelzoo.co/model/implementation-deep-learning"

                            },

                            {

                                num: NumberInt("2004"),

                                value: "https://modelzoo.co/model/zero-dce-jax"

                            },

                            {

                                num: NumberInt("2005"),

                                value: "https://modelzoo.co/model/tf-torch-jax"

                            },

                            {

                                num: NumberInt("2006"),

                                value: "https://modelzoo.co/model/deepvit-flax"

                            },

                            {

                                num: NumberInt("2007"),

                                value: "https://modelzoo.co/model/fourier-neural-operator-flax"

                            },

                            {

                                num: NumberInt("2008"),

                                value: "https://modelzoo.co/model/flax-t5-pre-training"

                            },

                            {

                                num: NumberInt("2009"),

                                value: "https://modelzoo.co/model/ml-params-flax"

                            },

                            {

                                num: NumberInt("2010"),

                                value: "https://modelzoo.co/model/jax-ddim"

                            },

                            {

                                num: NumberInt("2011"),

                                value: "https://modelzoo.co/model/jax-rl-finetuning"

                            },

                            {

                                num: NumberInt("2012"),

                                value: "https://modelzoo.co/model/human-body-segmentation"

                            },

                            {

                                num: NumberInt("2013"),

                                value: "https://modelzoo.co/model/simple-rl-jax"

                            },

                            {

                                num: NumberInt("2014"),

                                value: "https://modelzoo.co/model/adversarialcrypto"

                            },

                            {

                                num: NumberInt("2015"),

                                value: "https://modelzoo.co/model/adversarialtext"

                            },

                            {

                                num: NumberInt("2016"),

                                value: "https://modelzoo.co/model/attentionocr"

                            },

                            {

                                num: NumberInt("2017"),

                                value: "https://modelzoo.co/model/audioset"

                            },

                            {

                                num: NumberInt("2018"),

                                value: "https://modelzoo.co/model/braincoder"

                            },

                            {

                                num: NumberInt("2019"),

                                value: "https://modelzoo.co/model/cognitivemappinganplanning"

                            },

                            {

                                num: NumberInt("2020"),

                                value: "https://modelzoo.co/model/compression"

                            },

                            {

                                num: NumberInt("2021"),

                                value: "https://modelzoo.co/model/deepspeech"

                            },

                            {

                                num: NumberInt("2022"),

                                value: "https://modelzoo.co/model/deeplab"

                            },

                            {

                                num: NumberInt("2023"),

                                value: "https://modelzoo.co/model/delf"

                            },

                            {

                                num: NumberInt("2024"),

                                value: "https://modelzoo.co/model/gan"

                            },

                            {

                                num: NumberInt("2025"),

                                value: "https://modelzoo.co/model/im2txt"

                            },

                            {

                                num: NumberInt("2026"),

                                value: "https://modelzoo.co/model/learningunsupervisedlearning"

                            },

                            {

                                num: NumberInt("2027"),

                                value: "https://modelzoo.co/model/lfads"

                            },

                            {

                                num: NumberInt("2028"),

                                value: "https://modelzoo.co/model/maskgan"

                            },

                            {

                                num: NumberInt("2029"),

                                value: "https://modelzoo.co/model/objectdetection"

                            },

                            {

                                num: NumberInt("2030"),

                                value: "https://modelzoo.co/model/pclrl"

                            },

                            {

                                num: NumberInt("2031"),

                                value: "https://modelzoo.co/model/slim"

                            },

                            {

                                num: NumberInt("2032"),

                                value: "https://modelzoo.co/model/street"

                            },

                            {

                                num: NumberInt("2033"),

                                value: "https://modelzoo.co/model/vid2depth"

                            },

                            {

                                num: NumberInt("2034"),

                                value: "https://modelzoo.co/model/policy-gradient"

                            },

                            {

                                num: NumberInt("2035"),

                                value: "https://modelzoo.co/model/fully-convolutional-networks-for-semantic-segmentation"

                            },

                            {

                                num: NumberInt("2036"),

                                value: "https://modelzoo.co/model/deep-learning-of-binary-hash-codes"

                            },

                            {

                                num: NumberInt("2037"),

                                value: "https://modelzoo.co/model/googlenet_cars-on-car-model-classification"

                            },

                            {

                                num: NumberInt("2038"),

                                value: "https://modelzoo.co/model/segnet-and-bayesian-segnet"

                            },

                            {

                                num: NumberInt("2039"),

                                value: "https://modelzoo.co/model/emotion-recognition-in-the-wild-via"

                            },

                            {

                                num: NumberInt("2040"),

                                value: "https://modelzoo.co/model/resnets"

                            },

                            {

                                num: NumberInt("2041"),

                                value: "https://modelzoo.co/model/cnn-object-proposal-models-for-salient"

                            },

                            {

                                num: NumberInt("2042"),

                                value: "https://modelzoo.co/model/deep-hand"

                            },

                            {

                                num: NumberInt("2043"),

                                value: "https://modelzoo.co/model/inception-bn-full-imagenet-model"

                            },

                            {

                                num: NumberInt("2044"),

                                value: "https://modelzoo.co/model/deepyeast"

                            },

                            {

                                num: NumberInt("2045"),

                                value: "https://modelzoo.co/model/imagenet-pre-trained-models-with-batch-normalization"

                            },

                            {

                                num: NumberInt("2046"),

                                value: "https://modelzoo.co/model/resnet-101-for-regressing-3d-morphable-face"

                            },

                            {

                                num: NumberInt("2047"),

                                value: "https://modelzoo.co/model/cascaded-fully-convolutional-networks-for-biomedical"

                            },

                            {

                                num: NumberInt("2048"),

                                value: "https://modelzoo.co/model/deep-networks-for-earth-observation"

                            },

                            {

                                num: NumberInt("2049"),

                                value: "https://modelzoo.co/model/supervised-learning-of-semantics-preserving-hash-via"

                            },

                            {

                                num: NumberInt("2050"),

                                value: "https://modelzoo.co/model/bvlc-alexnet"

                            },

                            {

                                num: NumberInt("2051"),

                                value: "https://modelzoo.co/model/bvlc-reference-caffenet"

                            },

                            {

                                num: NumberInt("2052"),

                                value: "https://modelzoo.co/model/detectron"

                            },

                            {

                                num: NumberInt("2053"),

                                value: "https://modelzoo.co/model/resnet-50"

                            },

                            {

                                num: NumberInt("2054"),

                                value: "https://modelzoo.co/model/infogan"

                            },

                            {

                                num: NumberInt("2055"),

                                value: "https://modelzoo.co/model/pix2pix-keras"

                            },

                            {

                                num: NumberInt("2056"),

                                value: "https://modelzoo.co/model/colorful-image-colorization-keras"

                            },

                            {

                                num: NumberInt("2057"),

                                value: "https://modelzoo.co/model/auxiliary-classifier-gan"

                            },

                            {

                                num: NumberInt("2058"),

                                value: "https://modelzoo.co/model/adversarial-autoencoder-keras"

                            },

                            {

                                num: NumberInt("2059"),

                                value: "https://modelzoo.co/model/bidirectional-gan"

                            },

                            {

                                num: NumberInt("2060"),

                                value: "https://modelzoo.co/model/boundary-seeking-gan"

                            },

                            {

                                num: NumberInt("2061"),

                                value: "https://modelzoo.co/model/conditional-gan"

                            },

                            {

                                num: NumberInt("2062"),

                                value: "https://modelzoo.co/model/context-conditional-gan"

                            },

                            {

                                num: NumberInt("2063"),

                                value: "https://modelzoo.co/model/coupled-gans"

                            },

                            {

                                num: NumberInt("2064"),

                                value: "https://modelzoo.co/model/cyclegan"

                            },

                            {

                                num: NumberInt("2065"),

                                value: "https://modelzoo.co/model/deep-convolutional-gan"

                            },

                            {

                                num: NumberInt("2066"),

                                value: "https://modelzoo.co/model/discogan-keras"

                            },

                            {

                                num: NumberInt("2067"),

                                value: "https://modelzoo.co/model/dualgan"

                            },

                            {

                                num: NumberInt("2068"),

                                value: "https://modelzoo.co/model/generative-adversarial-network"

                            },

                            {

                                num: NumberInt("2069"),

                                value: "https://modelzoo.co/model/infogan-keras"

                            },

                            {

                                num: NumberInt("2070"),

                                value: "https://modelzoo.co/model/lsgan-keras"

                            },

                            {

                                num: NumberInt("2071"),

                                value: "https://modelzoo.co/model/pix2pix-2"

                            },

                            {

                                num: NumberInt("2072"),

                                value: "https://modelzoo.co/model/pixelda"

                            },

                            {

                                num: NumberInt("2073"),

                                value: "https://modelzoo.co/model/semi-supervised-gan"

                            },

                            {

                                num: NumberInt("2074"),

                                value: "https://modelzoo.co/model/super-resolution-gan"

                            },

                            {

                                num: NumberInt("2075"),

                                value: "https://modelzoo.co/model/wasserstein-gan-keras"

                            },

                            {

                                num: NumberInt("2076"),

                                value: "https://modelzoo.co/model/wasserstein-gan-gp"

                            },

                            {

                                num: NumberInt("2077"),

                                value: "https://modelzoo.co/model/chainer_encoder_decoder"

                            },

                            {

                                num: NumberInt("2078"),

                                value: "https://modelzoo.co/model/generative-adversarial-nets-gan"

                            },

                            {

                                num: NumberInt("2079"),

                                value: "https://modelzoo.co/model/hyperface-tensorflow-implementation"

                            },

                            {

                                num: NumberInt("2080"),

                                value: "https://modelzoo.co/model/adversarial-auto-encoders"

                            },

                            {

                                num: NumberInt("2081"),

                                value: "https://modelzoo.co/model/dcgangluon"

                            },

                            {

                                num: NumberInt("2082"),

                                value: "https://modelzoo.co/model/dcgan-face-generationgluon"

                            },

                            {

                                num: NumberInt("2083"),

                                value: "https://modelzoo.co/model/variational-autoencoder-with-deconvolutions"

                            },

                            {

                                num: NumberInt("2084"),

                                value: "https://modelzoo.co/model/t-sne-of-image-cnn-fc7-activations"

                            },

                            {

                                num: NumberInt("2085"),

                                value: "https://modelzoo.co/model/uni-fold-jax"

                            },

                            {

                                num: NumberInt("2086"),

                                value: "https://modelzoo.co/model/jaxline"

                            },

                            {

                                num: NumberInt("2087"),

                                value: "https://modelzoo.co/model/tf2jax"

                            },

                            {

                                num: NumberInt("2088"),

                                value: "https://modelzoo.co/model/transformer-in-transformer-flax"

                            },

                            {

                                num: NumberInt("2089"),

                                value: "https://modelzoo.co/model/jax-influence"

                            },

                            {

                                num: NumberInt("2090"),

                                value: "https://modelzoo.co/model/iree-jax"

                            },

                            {

                                num: NumberInt("2091"),

                                value: "https://modelzoo.co/model/jaxb-visitor"

                            },

                            {

                                num: NumberInt("2092"),

                                value: "https://modelzoo.co/model/sb3-jax"

                            },

                            {

                                num: NumberInt("2093"),

                                value: "https://modelzoo.co/model/swagger-spring-jaxrs-sample-app"

                            },

                            {

                                num: NumberInt("2094"),

                                value: "https://modelzoo.co/model/jaxb-fi"

                            },

                            {

                                num: NumberInt("2095"),

                                value: "https://modelzoo.co/model/rl-jax"

                            },

                            {

                                num: NumberInt("2096"),

                                value: "https://modelzoo.co/model/python-flax-id"

                            },

                            {

                                num: NumberInt("2097"),

                                value: "https://modelzoo.co/model/cait-flax"

                            },

                            {

                                num: NumberInt("2098"),

                                value: "https://modelzoo.co/model/simple-vit-flax"

                            },

                            {

                                num: NumberInt("2099"),

                                value: "https://modelzoo.co/model/flax-cifar"

                            },

                            {

                                num: NumberInt("2100"),

                                value: "https://modelzoo.co/model/docker-flax"

                            },

                            {

                                num: NumberInt("2101"),

                                value: "https://modelzoo.co/model/crossvit-flax"

                            },

                            {

                                num: NumberInt("2102"),

                                value: "https://modelzoo.co/model/nest-flax"

                            },

                            {

                                num: NumberInt("2103"),

                                value: "https://modelzoo.co/model/pytorch-pretrained-bert"

                            },

                            {

                                num: NumberInt("2104"),

                                value: "https://modelzoo.co/model/transformers"

                            },

                            {

                                num: NumberInt("2105"),

                                value: "https://modelzoo.co/model/fastai"

                            },

                            {

                                num: NumberInt("2106"),

                                value: "https://modelzoo.co/model/pytorch-lightning"

                            },

                            {

                                num: NumberInt("2107"),

                                value: "https://modelzoo.co/model/magenta"

                            },

                            {

                                num: NumberInt("2108"),

                                value: "https://modelzoo.co/model/pytorch_geometric"

                            },

                            {

                                num: NumberInt("2109"),

                                value: "https://modelzoo.co/model/insightface"

                            },

                            {

                                num: NumberInt("2110"),

                                value: "https://modelzoo.co/model/kubeflow"

                            },

                            {

                                num: NumberInt("2111"),

                                value: "https://modelzoo.co/model/kaldi"

                            },

                            {

                                num: NumberInt("2112"),

                                value: "https://modelzoo.co/model/flair"

                            },

                            {

                                num: NumberInt("2113"),

                                value: "https://modelzoo.co/model/pytorch-vision"

                            },

                            {

                                num: NumberInt("2114"),

                                value: "https://modelzoo.co/model/allennlp"

                            },

                            {

                                num: NumberInt("2115"),

                                value: "https://modelzoo.co/model/dgl"

                            },

                            {

                                num: NumberInt("2116"),

                                value: "https://modelzoo.co/model/yolov3"

                            },

                            {

                                num: NumberInt("2117"),

                                value: "https://modelzoo.co/model/pretrained-modelspytorch"

                            },

                            {

                                num: NumberInt("2118"),

                                value: "https://modelzoo.co/model/faster-r-cnn-caffe"

                            },

                            {

                                num: NumberInt("2119"),

                                value: "https://modelzoo.co/model/pyro"

                            },

                            {

                                num: NumberInt("2120"),

                                value: "https://modelzoo.co/model/keras-yolov3"

                            },

                            {

                                num: NumberInt("2121"),

                                value: "https://modelzoo.co/model/efficientnet-pytorch"

                            },

                            {

                                num: NumberInt("2122"),

                                value: "https://modelzoo.co/model/collection-of-generative-models-with-pytorch"

                            },

                            {

                                num: NumberInt("2123"),

                                value: "https://modelzoo.co/model/attention-is-all-you-need-pytorch"

                            },

                            {

                                num: NumberInt("2124"),

                                value: "https://modelzoo.co/model/striving-for-simplicity-pytorch"

                            },

                            {

                                num: NumberInt("2125"),

                                value: "https://modelzoo.co/model/densepose"

                            },

                            {

                                num: NumberInt("2126"),

                                value: "https://modelzoo.co/model/pytext"

                            },

                            {

                                num: NumberInt("2127"),

                                value: "https://modelzoo.co/model/kornia"

                            },

                            {

                                num: NumberInt("2128"),

                                value: "https://modelzoo.co/model/apex"

                            },

                            {

                                num: NumberInt("2129"),

                                value: "https://modelzoo.co/model/torchgeometry"

                            },

                            {

                                num: NumberInt("2130"),

                                value: "https://modelzoo.co/model/pulse"

                            },

                            {

                                num: NumberInt("2131"),

                                value: "https://modelzoo.co/model/alphapose"

                            },

                            {

                                num: NumberInt("2132"),

                                value: "https://modelzoo.co/model/deep-residual-networks"

                            },

                            {

                                num: NumberInt("2133"),

                                value: "https://modelzoo.co/model/pytorch3d"

                            },

                            {

                                num: NumberInt("2134"),

                                value: "https://modelzoo.co/model/face-alignment"

                            },

                            {

                                num: NumberInt("2135"),

                                value: "https://modelzoo.co/model/neural-style-tensorflow"

                            },

                            {

                                num: NumberInt("2136"),

                                value: "https://modelzoo.co/model/sentence-classification-with-cnn"

                            },

                            {

                                num: NumberInt("2137"),

                                value: "https://modelzoo.co/model/pythia"

                            },

                            {

                                num: NumberInt("2138"),

                                value: "https://modelzoo.co/model/bert-pytorch"

                            },

                            {

                                num: NumberInt("2139"),

                                value: "https://modelzoo.co/model/realtime-multi-person-pose-estimation-tensorflow"

                            },

                            {

                                num: NumberInt("2140"),

                                value: "https://modelzoo.co/model/grad-cam"

                            },

                            {

                                num: NumberInt("2141"),

                                value: "https://modelzoo.co/model/single-shot-multibox-detector"

                            },

                            {

                                num: NumberInt("2142"),

                                value: "https://modelzoo.co/model/cifar-10-on-pytorch-with-vgg-resnet"

                            },

                            {

                                num: NumberInt("2143"),

                                value: "https://modelzoo.co/model/densenet-caffe"

                            },

                            {

                                num: NumberInt("2144"),

                                value: "https://modelzoo.co/model/inferno-sklearn"

                            },

                            {

                                num: NumberInt("2145"),

                                value: "https://modelzoo.co/model/skorch"

                            },

                            {

                                num: NumberInt("2146"),

                                value: "https://modelzoo.co/model/pytorch-metric-learning"

                            },

                            {

                                num: NumberInt("2147"),

                                value: "https://modelzoo.co/model/mesh-transformer-jax"

                            },

                            {

                                num: NumberInt("2148"),

                                value: "https://modelzoo.co/model/pygcn"

                            },

                            {

                                num: NumberInt("2149"),

                                value: "https://modelzoo.co/model/reading-wikipedia-to-answer-open-domain-questions"

                            },

                            {

                                num: NumberInt("2150"),

                                value: "https://modelzoo.co/model/nemo"

                            },

                            {

                                num: NumberInt("2151"),

                                value: "https://modelzoo.co/model/torchdiffeq"

                            },

                            {

                                num: NumberInt("2152"),

                                value: "https://modelzoo.co/model/ignite"

                            },

                            {

                                num: NumberInt("2153"),

                                value: "https://modelzoo.co/model/capsnet-tensorflow"

                            },

                            {

                                num: NumberInt("2154"),

                                value: "https://modelzoo.co/model/faster-rcnndeeplabr-fcndeformable-convnetsfpnsoftnms"

                            },

                            {

                                num: NumberInt("2155"),

                                value: "https://modelzoo.co/model/simple-faster-rcnn-pytorch"

                            },

                            {

                                num: NumberInt("2156"),

                                value: "https://modelzoo.co/model/tensorflow-project-template"

                            },

                            {

                                num: NumberInt("2157"),

                                value: "https://modelzoo.co/model/tacotron2"

                            },

                            {

                                num: NumberInt("2158"),

                                value: "https://modelzoo.co/model/pytorch-summary"

                            },

                            {

                                num: NumberInt("2159"),

                                value: "https://modelzoo.co/model/pytorch-opcounter"

                            },

                            {

                                num: NumberInt("2160"),

                                value: "https://modelzoo.co/model/minigo"

                            },

                            {

                                num: NumberInt("2161"),

                                value: "https://modelzoo.co/model/3d-resnets-pytorch"

                            },

                            {

                                num: NumberInt("2162"),

                                value: "https://modelzoo.co/model/elf"

                            },

                            {

                                num: NumberInt("2163"),

                                value: "https://modelzoo.co/model/person-reid_pytorch"

                            },

                            {

                                num: NumberInt("2164"),

                                value: "https://modelzoo.co/model/tcn-pytorch"

                            },

                            {

                                num: NumberInt("2165"),

                                value: "https://modelzoo.co/model/3ddfa"

                            },

                            {

                                num: NumberInt("2166"),

                                value: "https://modelzoo.co/model/fast-r-cnn"

                            },

                            {

                                num: NumberInt("2167"),

                                value: "https://modelzoo.co/model/transformer-xl"

                            },

                            {

                                num: NumberInt("2168"),

                                value: "https://modelzoo.co/model/neural-style"

                            },

                            {

                                num: NumberInt("2169"),

                                value: "https://modelzoo.co/model/pytorch-text"

                            },

                            {

                                num: NumberInt("2170"),

                                value: "https://modelzoo.co/model/laser"

                            },

                            {

                                num: NumberInt("2171"),

                                value: "https://modelzoo.co/model/kaolin"

                            },

                            {

                                num: NumberInt("2172"),

                                value: "https://modelzoo.co/model/adabound"

                            },

                            {

                                num: NumberInt("2173"),

                                value: "https://modelzoo.co/model/catalyst"

                            },

                            {

                                num: NumberInt("2174"),

                                value: "https://modelzoo.co/model/detectronpytorch"

                            },

                            {

                                num: NumberInt("2175"),

                                value: "https://modelzoo.co/model/facenet-pytorch"

                            },

                            {

                                num: NumberInt("2176"),

                                value: "https://modelzoo.co/model/deepjazz"

                            },

                            {

                                num: NumberInt("2177"),

                                value: "https://modelzoo.co/model/gpytorch"

                            },

                            {

                                num: NumberInt("2178"),

                                value: "https://modelzoo.co/model/spotlight"

                            },

                            {

                                num: NumberInt("2179"),

                                value: "https://modelzoo.co/model/gpytorch-pytorch"

                            },

                            {

                                num: NumberInt("2180"),

                                value: "https://modelzoo.co/model/flownet-20"

                            },

                            {

                                num: NumberInt("2181"),

                                value: "https://modelzoo.co/model/xlm"

                            },

                            {

                                num: NumberInt("2182"),

                                value: "https://modelzoo.co/model/enas-pytorch"

                            },

                            {

                                num: NumberInt("2183"),

                                value: "https://modelzoo.co/model/neuralcoref"

                            },

                            {

                                num: NumberInt("2184"),

                                value: "https://modelzoo.co/model/pytorch-optimizer"

                            },

                            {

                                num: NumberInt("2185"),

                                value: "https://modelzoo.co/model/capsnet-keras"

                            },

                            {

                                num: NumberInt("2186"),

                                value: "https://modelzoo.co/model/pytorch-playground"

                            },

                            {

                                num: NumberInt("2187"),

                                value: "https://modelzoo.co/model/pytorch-generative-model-collections"

                            },

                            {

                                num: NumberInt("2188"),

                                value: "https://modelzoo.co/model/botorch"

                            },

                            {

                                num: NumberInt("2189"),

                                value: "https://modelzoo.co/model/infersent"

                            },

                            {

                                num: NumberInt("2190"),

                                value: "https://modelzoo.co/model/torchcv"

                            },

                            {

                                num: NumberInt("2191"),

                                value: "https://modelzoo.co/model/pytorchviz"

                            },

                            {

                                num: NumberInt("2192"),

                                value: "https://modelzoo.co/model/minimalrl"

                            },

                            {

                                num: NumberInt("2193"),

                                value: "https://modelzoo.co/model/squeezenet-caffe"

                            },

                            {

                                num: NumberInt("2194"),

                                value: "https://modelzoo.co/model/pytorch-nlp"

                            },

                            {

                                num: NumberInt("2195"),

                                value: "https://modelzoo.co/model/neural-style-transfer-2"

                            },

                            {

                                num: NumberInt("2196"),

                                value: "https://modelzoo.co/model/loss-landscape"

                            },

                            {

                                num: NumberInt("2197"),

                                value: "https://modelzoo.co/model/mmaction2"

                            },

                            {

                                num: NumberInt("2198"),

                                value: "https://modelzoo.co/model/averaged-stochastic-gradient-descent-with-weight"

                            },

                            {

                                num: NumberInt("2199"),

                                value: "https://modelzoo.co/model/mmpose"

                            },

                            {

                                num: NumberInt("2200"),

                                value: "https://modelzoo.co/model/pytorch-encoding"

                            },

                            {

                                num: NumberInt("2201"),

                                value: "https://modelzoo.co/model/pytorch-faster-rcnn"

                            },

                            {

                                num: NumberInt("2202"),

                                value: "https://modelzoo.co/model/data-augmentation-and-sampling-for-pytorch"

                            },

                            {

                                num: NumberInt("2203"),

                                value: "https://modelzoo.co/model/ax"

                            },

                            {

                                num: NumberInt("2204"),

                                value: "https://modelzoo.co/model/learn2learn"

                            },

                            {

                                num: NumberInt("2205"),

                                value: "https://modelzoo.co/model/mask-r-cnn-mxnet"

                            },

                            {

                                num: NumberInt("2206"),

                                value: "https://modelzoo.co/model/pytorch-fid"

                            },

                            {

                                num: NumberInt("2207"),

                                value: "https://modelzoo.co/model/reformer-pytorch"

                            },

                            {

                                num: NumberInt("2208"),

                                value: "https://modelzoo.co/model/pytorch-fcn"

                            },

                            {

                                num: NumberInt("2209"),

                                value: "https://modelzoo.co/model/sparseconvnet"

                            },

                            {

                                num: NumberInt("2210"),

                                value: "https://modelzoo.co/model/lightly"

                            },

                            {

                                num: NumberInt("2211"),

                                value: "https://modelzoo.co/model/minkowskiengine"

                            },

                            {

                                num: NumberInt("2212"),

                                value: "https://modelzoo.co/model/pytorchxla"

                            },

                            {

                                num: NumberInt("2213"),

                                value: "https://modelzoo.co/model/fcis"

                            },

                            {

                                num: NumberInt("2214"),

                                value: "https://modelzoo.co/model/style-transfer"

                            },

                            {

                                num: NumberInt("2215"),

                                value: "https://modelzoo.co/model/yolo2"

                            },

                            {

                                num: NumberInt("2216"),

                                value: "https://modelzoo.co/model/poincare-embeddings"

                            },

                            {

                                num: NumberInt("2217"),

                                value: "https://modelzoo.co/model/pytorch-geometric-temporal"

                            },

                            {

                                num: NumberInt("2218"),

                                value: "https://modelzoo.co/model/chainercv"

                            },

                            {

                                num: NumberInt("2219"),

                                value: "https://modelzoo.co/model/end-to-end-negotiator"

                            },

                            {

                                num: NumberInt("2220"),

                                value: "https://modelzoo.co/model/efficient_densenet_pytorch"

                            },

                            {

                                num: NumberInt("2221"),

                                value: "https://modelzoo.co/model/pytorch-openai-transformer-lm"

                            },

                            {

                                num: NumberInt("2222"),

                                value: "https://modelzoo.co/model/jiant"

                            },

                            {

                                num: NumberInt("2223"),

                                value: "https://modelzoo.co/model/qnnpack"

                            },

                            {

                                num: NumberInt("2224"),

                                value: "https://modelzoo.co/model/higher"

                            },

                            {

                                num: NumberInt("2225"),

                                value: "https://modelzoo.co/model/crf-rnn"

                            },

                            {

                                num: NumberInt("2226"),

                                value: "https://modelzoo.co/model/attention-transfer"

                            },

                            {

                                num: NumberInt("2227"),

                                value: "https://modelzoo.co/model/cvxpylayers"

                            },

                            {

                                num: NumberInt("2228"),

                                value: "https://modelzoo.co/model/repdistiller"

                            },

                            {

                                num: NumberInt("2229"),

                                value: "https://modelzoo.co/model/deep-feature-flow"

                            },

                            {

                                num: NumberInt("2230"),

                                value: "https://modelzoo.co/model/pretty-tensor"

                            },

                            {

                                num: NumberInt("2231"),

                                value: "https://modelzoo.co/model/center-loss"

                            },

                            {

                                num: NumberInt("2232"),

                                value: "https://modelzoo.co/model/realtime_multi-person_pose_estimation"

                            },

                            {

                                num: NumberInt("2233"),

                                value: "https://modelzoo.co/model/pytorch-qrnn"

                            },

                            {

                                num: NumberInt("2234"),

                                value: "https://modelzoo.co/model/deep-head-pose"

                            },

                            {

                                num: NumberInt("2235"),

                                value: "https://modelzoo.co/model/inplace_abn"

                            },

                            {

                                num: NumberInt("2236"),

                                value: "https://modelzoo.co/model/torchstat"

                            },

                            {

                                num: NumberInt("2237"),

                                value: "https://modelzoo.co/model/redner"

                            },

                            {

                                num: NumberInt("2238"),

                                value: "https://modelzoo.co/model/pytorch-toolbelt"

                            },

                            {

                                num: NumberInt("2239"),

                                value: "https://modelzoo.co/model/nvlabsdg-net"

                            },

                            {

                                num: NumberInt("2240"),

                                value: "https://modelzoo.co/model/human-pose-estimation-with-tensorflow"

                            },

                            {

                                num: NumberInt("2241"),

                                value: "https://modelzoo.co/model/capsgnn"

                            },

                            {

                                num: NumberInt("2242"),

                                value: "https://modelzoo.co/model/dilated-resnet-combination-with-dilated-convolutions"

                            },

                            {

                                num: NumberInt("2243"),

                                value: "https://modelzoo.co/model/bindsnet"

                            },

                            {

                                num: NumberInt("2244"),

                                value: "https://modelzoo.co/model/hub"

                            },

                            {

                                num: NumberInt("2245"),

                                value: "https://modelzoo.co/model/crypten"

                            },

                            {

                                num: NumberInt("2246"),

                                value: "https://modelzoo.co/model/sockeye"

                            },

                            {

                                num: NumberInt("2247"),

                                value: "https://modelzoo.co/model/single-shot-multibox-detector-keras"

                            },

                            {

                                num: NumberInt("2248"),

                                value: "https://modelzoo.co/model/pytorchtext"

                            },

                            {

                                num: NumberInt("2249"),

                                value: "https://modelzoo.co/model/neural-turing-machine-in-tensorflow"

                            },

                            {

                                num: NumberInt("2250"),

                                value: "https://modelzoo.co/model/tensornets"

                            },

                            {

                                num: NumberInt("2251"),

                                value: "https://modelzoo.co/model/pytorch-pose"

                            },

                            {

                                num: NumberInt("2252"),

                                value: "https://modelzoo.co/model/bert-ner"

                            },

                            {

                                num: NumberInt("2253"),

                                value: "https://modelzoo.co/model/pytorch-struct"

                            },

                            {

                                num: NumberInt("2254"),

                                value: "https://modelzoo.co/model/pytorch-retinanet"

                            },

                            {

                                num: NumberInt("2255"),

                                value: "https://modelzoo.co/model/tsn-pytorch"

                            },

                            {

                                num: NumberInt("2256"),

                                value: "https://modelzoo.co/model/video-frame-interpolation-via-adaptive-separable"

                            },

                            {

                                num: NumberInt("2257"),

                                value: "https://modelzoo.co/model/mask-rcnn"

                            },

                            {

                                num: NumberInt("2258"),

                                value: "https://modelzoo.co/model/cnn-text-classification"

                            },

                            {

                                num: NumberInt("2259"),

                                value: "https://modelzoo.co/model/pytorch-deform-conv"

                            },

                            {

                                num: NumberInt("2260"),

                                value: "https://modelzoo.co/model/sfmlearner-pytorch"

                            },

                            {

                                num: NumberInt("2261"),

                                value: "https://modelzoo.co/model/pytorch-style-transfer"

                            },

                            {

                                num: NumberInt("2262"),

                                value: "https://modelzoo.co/model/torchmoji"

                            },

                            {

                                num: NumberInt("2263"),

                                value: "https://modelzoo.co/model/probtorch"

                            },

                            {

                                num: NumberInt("2264"),

                                value: "https://modelzoo.co/model/lm-lstm-crf"

                            },

                            {

                                num: NumberInt("2265"),

                                value: "https://modelzoo.co/model/voicefilter"

                            },

                            {

                                num: NumberInt("2266"),

                                value: "https://modelzoo.co/model/pytorch-pruning"

                            },

                            {

                                num: NumberInt("2267"),

                                value: "https://modelzoo.co/model/pytorch-wavenet"

                            },

                            {

                                num: NumberInt("2268"),

                                value: "https://modelzoo.co/model/yusuketomotochainer-fast-neuralstyle"

                            },

                            {

                                num: NumberInt("2269"),

                                value: "https://modelzoo.co/model/relational-networks"

                            },

                            {

                                num: NumberInt("2270"),

                                value: "https://modelzoo.co/model/pytorch2keras"

                            },

                            {

                                num: NumberInt("2271"),

                                value: "https://modelzoo.co/model/webdataset"

                            },

                            {

                                num: NumberInt("2272"),

                                value: "https://modelzoo.co/model/prototypical-networks-for-few-shot-learning-pytorch"

                            },

                            {

                                num: NumberInt("2273"),

                                value: "https://modelzoo.co/model/cnn-visualization-using-tensorflow"

                            },

                            {

                                num: NumberInt("2274"),

                                value: "https://modelzoo.co/model/graphsage-simple"

                            },

                            {

                                num: NumberInt("2275"),

                                value: "https://modelzoo.co/model/medicaltorch"

                            },

                            {

                                num: NumberInt("2276"),

                                value: "https://modelzoo.co/model/pytorch-center-loss"

                            },

                            {

                                num: NumberInt("2277"),

                                value: "https://modelzoo.co/model/keras-realtime-multi-person-pose-estimation"

                            },

                            {

                                num: NumberInt("2278"),

                                value: "https://modelzoo.co/model/inferring-and-executing-programs-for-visual"

                            },

                            {

                                num: NumberInt("2279"),

                                value: "https://modelzoo.co/model/extension-cpp"

                            },

                            {

                                num: NumberInt("2280"),

                                value: "https://modelzoo.co/model/faceboxespytorch"

                            },

                            {

                                num: NumberInt("2281"),

                                value: "https://modelzoo.co/model/densenet"

                            },

                            {

                                num: NumberInt("2282"),

                                value: "https://modelzoo.co/model/3d-convolutional-neural-networks-in-tensorflow"

                            },

                            {

                                num: NumberInt("2283"),

                                value: "https://modelzoo.co/model/character-aware-neural-language-models"

                            },

                            {

                                num: NumberInt("2284"),

                                value: "https://modelzoo.co/model/translate"

                            },

                            {

                                num: NumberInt("2285"),

                                value: "https://modelzoo.co/model/flownet"

                            },

                            {

                                num: NumberInt("2286"),

                                value: "https://modelzoo.co/model/gpt-2-pytorch"

                            },

                            {

                                num: NumberInt("2287"),

                                value: "https://modelzoo.co/model/texar-pytorch"

                            },

                            {

                                num: NumberInt("2288"),

                                value: "https://modelzoo.co/model/breast_cancer_classifier"

                            },

                            {

                                num: NumberInt("2289"),

                                value: "https://modelzoo.co/model/bottom-up-attention-vqa"

                            },

                            {

                                num: NumberInt("2290"),

                                value: "https://modelzoo.co/model/convolutional-lstm-network"

                            },

                            {

                                num: NumberInt("2291"),

                                value: "https://modelzoo.co/model/densely-connected-convolutional-networks-2"

                            },

                            {

                                num: NumberInt("2292"),

                                value: "https://modelzoo.co/model/ncrf"

                            },

                            {

                                num: NumberInt("2293"),

                                value: "https://modelzoo.co/model/mtcnn-original-detector"

                            },

                            {

                                num: NumberInt("2294"),

                                value: "https://modelzoo.co/model/flow-guided-feature-aggregation"

                            },

                            {

                                num: NumberInt("2295"),

                                value: "https://modelzoo.co/model/condensenet"

                            },

                            {

                                num: NumberInt("2296"),

                                value: "https://modelzoo.co/model/neural-style-pt"

                            },

                            {

                                num: NumberInt("2297"),

                                value: "https://modelzoo.co/model/pytorch-cnn-finetune"

                            },

                            {

                                num: NumberInt("2298"),

                                value: "https://modelzoo.co/model/generative-handwriting-demo-using-tensorflow"

                            },

                            {

                                num: NumberInt("2299"),

                                value: "https://modelzoo.co/model/sphereface_pytorch"

                            },

                            {

                                num: NumberInt("2300"),

                                value: "https://modelzoo.co/model/former"

                            },

                            {

                                num: NumberInt("2301"),

                                value: "https://modelzoo.co/model/federated-learning"

                            },

                            {

                                num: NumberInt("2302"),

                                value: "https://modelzoo.co/model/flashtorch"

                            },

                            {

                                num: NumberInt("2303"),

                                value: "https://modelzoo.co/model/vqapytorch"

                            },

                            {

                                num: NumberInt("2304"),

                                value: "https://modelzoo.co/model/pvanet"

                            },

                            {

                                num: NumberInt("2305"),

                                value: "https://modelzoo.co/model/torchgpipe"

                            },

                            {

                                num: NumberInt("2306"),

                                value: "https://modelzoo.co/model/clustergcn"

                            },

                            {

                                num: NumberInt("2307"),

                                value: "https://modelzoo.co/model/illustration2vec"

                            },

                            {

                                num: NumberInt("2308"),

                                value: "https://modelzoo.co/model/torchbeast"

                            },

                            {

                                num: NumberInt("2309"),

                                value: "https://modelzoo.co/model/torchbearer"

                            },

                            {

                                num: NumberInt("2310"),

                                value: "https://modelzoo.co/model/random-erasing"

                            },

                            {

                                num: NumberInt("2311"),

                                value: "https://modelzoo.co/model/euclidesdb"

                            },

                            {

                                num: NumberInt("2312"),

                                value: "https://modelzoo.co/model/pytorch-capsule"

                            },

                            {

                                num: NumberInt("2313"),

                                value: "https://modelzoo.co/model/deep-compression-alexnet"

                            },

                            {

                                num: NumberInt("2314"),

                                value: "https://modelzoo.co/model/pytorch-deeplab-resnet"

                            },

                            {

                                num: NumberInt("2315"),

                                value: "https://modelzoo.co/model/mtcnn"

                            },

                            {

                                num: NumberInt("2316"),

                                value: "https://modelzoo.co/model/alexnet-vgg-16-vgg-19-and"

                            },

                            {

                                num: NumberInt("2317"),

                                value: "https://modelzoo.co/model/torchprof"

                            },

                            {

                                num: NumberInt("2318"),

                                value: "https://modelzoo.co/model/duc"

                            },

                            {

                                num: NumberInt("2319"),

                                value: "https://modelzoo.co/model/diracnets"

                            },

                            {

                                num: NumberInt("2320"),

                                value: "https://modelzoo.co/model/wide-resnet-model-in-pytorch"

                            },

                            {

                                num: NumberInt("2321"),

                                value: "https://modelzoo.co/model/pytorch-pose-hg-3d"

                            },

                            {

                                num: NumberInt("2322"),

                                value: "https://modelzoo.co/model/geoopt"

                            },

                            {

                                num: NumberInt("2323"),

                                value: "https://modelzoo.co/model/spatial-transformer-networks"

                            },

                            {

                                num: NumberInt("2324"),

                                value: "https://modelzoo.co/model/mxnet-face"

                            },

                            {

                                num: NumberInt("2325"),

                                value: "https://modelzoo.co/model/pytorch2caffe"

                            },

                            {

                                num: NumberInt("2326"),

                                value: "https://modelzoo.co/model/conve"

                            },

                            {

                                num: NumberInt("2327"),

                                value: "https://modelzoo.co/model/dpn"

                            },

                            {

                                num: NumberInt("2328"),

                                value: "https://modelzoo.co/model/qp-solver"

                            },

                            {

                                num: NumberInt("2329"),

                                value: "https://modelzoo.co/model/pytorch-flows"

                            },

                            {

                                num: NumberInt("2330"),

                                value: "https://modelzoo.co/model/yolo-in-caffe"

                            },

                            {

                                num: NumberInt("2331"),

                                value: "https://modelzoo.co/model/resnet-mxnet"

                            },

                            {

                                num: NumberInt("2332"),

                                value: "https://modelzoo.co/model/pytoune"

                            },

                            {

                                num: NumberInt("2333"),

                                value: "https://modelzoo.co/model/poutyne"

                            },

                            {

                                num: NumberInt("2334"),

                                value: "https://modelzoo.co/model/treelstmpytorch"

                            },

                            {

                                num: NumberInt("2335"),

                                value: "https://modelzoo.co/model/colorization-pytorch"

                            },

                            {

                                num: NumberInt("2336"),

                                value: "https://modelzoo.co/model/roialignpytorch"

                            },

                            {

                                num: NumberInt("2337"),

                                value: "https://modelzoo.co/model/convert_torch_to_pytorch"

                            },

                            {

                                num: NumberInt("2338"),

                                value: "https://modelzoo.co/model/pytorch_cluster"

                            },

                            {

                                num: NumberInt("2339"),

                                value: "https://modelzoo.co/model/pytorch-ntm"

                            },

                            {

                                num: NumberInt("2340"),

                                value: "https://modelzoo.co/model/pytorch-dense-correspondence"

                            },

                            {

                                num: NumberInt("2341"),

                                value: "https://modelzoo.co/model/pytorch-maml"

                            },

                            {

                                num: NumberInt("2342"),

                                value: "https://modelzoo.co/model/ban-vqa"

                            },

                            {

                                num: NumberInt("2343"),

                                value: "https://modelzoo.co/model/matchbox"

                            },

                            {

                                num: NumberInt("2344"),

                                value: "https://modelzoo.co/model/neuralart"

                            },

                            {

                                num: NumberInt("2345"),

                                value: "https://modelzoo.co/model/stn-ocr"

                            },

                            {

                                num: NumberInt("2346"),

                                value: "https://modelzoo.co/model/pytorch-made"

                            },

                            {

                                num: NumberInt("2347"),

                                value: "https://modelzoo.co/model/structured-self-attention"

                            },

                            {

                                num: NumberInt("2348"),

                                value: "https://modelzoo.co/model/attn2d"

                            },

                            {

                                num: NumberInt("2349"),

                                value: "https://modelzoo.co/model/arnold"

                            },

                            {

                                num: NumberInt("2350"),

                                value: "https://modelzoo.co/model/smash"

                            },

                            {

                                num: NumberInt("2351"),

                                value: "https://modelzoo.co/model/visual-question-answering"

                            },

                            {

                                num: NumberInt("2352"),

                                value: "https://modelzoo.co/model/pytorch-coviar"

                            },

                            {

                                num: NumberInt("2353"),

                                value: "https://modelzoo.co/model/simgnn"

                            },

                            {

                                num: NumberInt("2354"),

                                value: "https://modelzoo.co/model/capsnet-pytorch"

                            },

                            {

                                num: NumberInt("2355"),

                                value: "https://modelzoo.co/model/resnextpytorch"

                            },

                            {

                                num: NumberInt("2356"),

                                value: "https://modelzoo.co/model/graphwaveletneuralnetwork"

                            },

                            {

                                num: NumberInt("2357"),

                                value: "https://modelzoo.co/model/steal"

                            },

                            {

                                num: NumberInt("2358"),

                                value: "https://modelzoo.co/model/lucent"

                            },

                            {

                                num: NumberInt("2359"),

                                value: "https://modelzoo.co/model/honk"

                            },

                            {

                                num: NumberInt("2360"),

                                value: "https://modelzoo.co/model/trellisnet"

                            },

                            {

                                num: NumberInt("2361"),

                                value: "https://modelzoo.co/model/openchem"

                            },

                            {

                                num: NumberInt("2362"),

                                value: "https://modelzoo.co/model/pixyz"

                            },

                            {

                                num: NumberInt("2363"),

                                value: "https://modelzoo.co/model/pytorch-lbfgs"

                            },

                            {

                                num: NumberInt("2364"),

                                value: "https://modelzoo.co/model/wavetorch"

                            },

                            {

                                num: NumberInt("2365"),

                                value: "https://modelzoo.co/model/yolo2-pytorch"

                            },

                            {

                                num: NumberInt("2366"),

                                value: "https://modelzoo.co/model/xlearn"

                            },

                            {

                                num: NumberInt("2367"),

                                value: "https://modelzoo.co/model/a-structured-self-attentive-sentence-embedding"

                            },

                            {

                                num: NumberInt("2368"),

                                value: "https://modelzoo.co/model/flappybird-dqn"

                            },

                            {

                                num: NumberInt("2369"),

                                value: "https://modelzoo.co/model/vsepp"

                            },

                            {

                                num: NumberInt("2370"),

                                value: "https://modelzoo.co/model/neural-ode"

                            },

                            {

                                num: NumberInt("2371"),

                                value: "https://modelzoo.co/model/deformable-convolution-pytorch"

                            },

                            {

                                num: NumberInt("2372"),

                                value: "https://modelzoo.co/model/shufflenet-v2-pytorch"

                            },

                            {

                                num: NumberInt("2373"),

                                value: "https://modelzoo.co/model/fast-neural-style"

                            },

                            {

                                num: NumberInt("2374"),

                                value: "https://modelzoo.co/model/ggnnpytorch"

                            },

                            {

                                num: NumberInt("2375"),

                                value: "https://modelzoo.co/model/densebody_pytorch"

                            },

                            {

                                num: NumberInt("2376"),

                                value: "https://modelzoo.co/model/pytorch-human-pose-estimation"

                            },

                            {

                                num: NumberInt("2377"),

                                value: "https://modelzoo.co/model/deeppose"

                            },

                            {

                                num: NumberInt("2378"),

                                value: "https://modelzoo.co/model/optnet"

                            },

                            {

                                num: NumberInt("2379"),

                                value: "https://modelzoo.co/model/drqa"

                            },

                            {

                                num: NumberInt("2380"),

                                value: "https://modelzoo.co/model/pytorch-contrib"

                            },

                            {

                                num: NumberInt("2381"),

                                value: "https://modelzoo.co/model/pytorchneuralstyletransfer"

                            },

                            {

                                num: NumberInt("2382"),

                                value: "https://modelzoo.co/model/glow-pytorch"

                            },

                            {

                                num: NumberInt("2383"),

                                value: "https://modelzoo.co/model/ngcn"

                            },

                            {

                                num: NumberInt("2384"),

                                value: "https://modelzoo.co/model/ngcn-pytorch"

                            },

                            {

                                num: NumberInt("2385"),

                                value: "https://modelzoo.co/model/coordconv-pytorch"

                            },

                            {

                                num: NumberInt("2386"),

                                value: "https://modelzoo.co/model/jointbert"

                            },

                            {

                                num: NumberInt("2387"),

                                value: "https://modelzoo.co/model/torch2coreml"

                            },

                            {

                                num: NumberInt("2388"),

                                value: "https://modelzoo.co/model/pywick"

                            },

                            {

                                num: NumberInt("2389"),

                                value: "https://modelzoo.co/model/precipitation-nowcasting"

                            },

                            {

                                num: NumberInt("2390"),

                                value: "https://modelzoo.co/model/torchnca"

                            },

                            {

                                num: NumberInt("2391"),

                                value: "https://modelzoo.co/model/pytorch-i-revnet"

                            },

                            {

                                num: NumberInt("2392"),

                                value: "https://modelzoo.co/model/weakly_detector"

                            },

                            {

                                num: NumberInt("2393"),

                                value: "https://modelzoo.co/model/magnet"

                            },

                            {

                                num: NumberInt("2394"),

                                value: "https://modelzoo.co/model/deepfloat"

                            },

                            {

                                num: NumberInt("2395"),

                                value: "https://modelzoo.co/model/googlenet-convolutional-neural-network-groups-movie"

                            },

                            {

                                num: NumberInt("2396"),

                                value: "https://modelzoo.co/model/tbd-nets"

                            },

                            {

                                num: NumberInt("2397"),

                                value: "https://modelzoo.co/model/pytorch-toolbox"

                            },

                            {

                                num: NumberInt("2398"),

                                value: "https://modelzoo.co/model/bmxnet"

                            },

                            {

                                num: NumberInt("2399"),

                                value: "https://modelzoo.co/model/nonechucks"

                            },

                            {

                                num: NumberInt("2400"),

                                value: "https://modelzoo.co/model/gradientepisodicmemory"

                            },

                            {

                                num: NumberInt("2401"),

                                value: "https://modelzoo.co/model/qanet-pytorch"

                            },

                            {

                                num: NumberInt("2402"),

                                value: "https://modelzoo.co/model/end-to-end-memory-networks"

                            },

                            {

                                num: NumberInt("2403"),

                                value: "https://modelzoo.co/model/yolov2-chainer"

                            },

                            {

                                num: NumberInt("2404"),

                                value: "https://modelzoo.co/model/pyvarinf"

                            },

                            {

                                num: NumberInt("2405"),

                                value: "https://modelzoo.co/model/resnet-38"

                            },

                            {

                                num: NumberInt("2406"),

                                value: "https://modelzoo.co/model/r2plus1d-pytorch"

                            },

                            {

                                num: NumberInt("2407"),

                                value: "https://modelzoo.co/model/argus-tensor-stream"

                            },

                            {

                                num: NumberInt("2408"),

                                value: "https://modelzoo.co/model/pytorch-dqn"

                            },

                            {

                                num: NumberInt("2409"),

                                value: "https://modelzoo.co/model/esim"

                            },

                            {

                                num: NumberInt("2410"),

                                value: "https://modelzoo.co/model/tripletlossfacenet"

                            },

                            {

                                num: NumberInt("2411"),

                                value: "https://modelzoo.co/model/pytorch-es"

                            },

                            {

                                num: NumberInt("2412"),

                                value: "https://modelzoo.co/model/caffemodel2pytorch"

                            },

                            {

                                num: NumberInt("2413"),

                                value: "https://modelzoo.co/model/mnist-center-loss-pytorch"

                            },

                            {

                                num: NumberInt("2414"),

                                value: "https://modelzoo.co/model/pytorch-explain-black-box"

                            },

                            {

                                num: NumberInt("2415"),

                                value: "https://modelzoo.co/model/linformer-pytorch"

                            },

                            {

                                num: NumberInt("2416"),

                                value: "https://modelzoo.co/model/groupy"

                            },

                            {

                                num: NumberInt("2417"),

                                value: "https://modelzoo.co/model/generative-query-network-pytorch"

                            },

                            {

                                num: NumberInt("2418"),

                                value: "https://modelzoo.co/model/torchani"

                            },

                            {

                                num: NumberInt("2419"),

                                value: "https://modelzoo.co/model/pytorch_fft"

                            },

                            {

                                num: NumberInt("2420"),

                                value: "https://modelzoo.co/model/context_encoder_pytorch"

                            },

                            {

                                num: NumberInt("2421"),

                                value: "https://modelzoo.co/model/face_attention_network"

                            },

                            {

                                num: NumberInt("2422"),

                                value: "https://modelzoo.co/model/gensen"

                            },

                            {

                                num: NumberInt("2423"),

                                value: "https://modelzoo.co/model/tensorflow-fasttext"

                            },

                            {

                                num: NumberInt("2424"),

                                value: "https://modelzoo.co/model/nmp_qc"

                            },

                            {

                                num: NumberInt("2425"),

                                value: "https://modelzoo.co/model/appnp"

                            },

                            {

                                num: NumberInt("2426"),

                                value: "https://modelzoo.co/model/salad"

                            },

                            {

                                num: NumberInt("2427"),

                                value: "https://modelzoo.co/model/gogh"

                            },

                            {

                                num: NumberInt("2428"),

                                value: "https://modelzoo.co/model/pytorch-ner-bilstm-cnn-crf"

                            },

                            {

                                num: NumberInt("2429"),

                                value: "https://modelzoo.co/model/retinanet"

                            },

                            {

                                num: NumberInt("2430"),

                                value: "https://modelzoo.co/model/dnc"

                            },

                            {

                                num: NumberInt("2431"),

                                value: "https://modelzoo.co/model/snapshot-ensembles"

                            },

                            {

                                num: NumberInt("2432"),

                                value: "https://modelzoo.co/model/efficientnets-pytorch"

                            },

                            {

                                num: NumberInt("2433"),

                                value: "https://modelzoo.co/model/learning-to-learn-by-gradient-descent"

                            },

                            {

                                num: NumberInt("2434"),

                                value: "https://modelzoo.co/model/attentionwalk"

                            },

                            {

                                num: NumberInt("2435"),

                                value: "https://modelzoo.co/model/faster-rcnn-chainer"

                            },

                            {

                                num: NumberInt("2436"),

                                value: "https://modelzoo.co/model/transfer-nlp"

                            },

                            {

                                num: NumberInt("2437"),

                                value: "https://modelzoo.co/model/pytorch-value-iteration-networks-pytorch"

                            },

                            {

                                num: NumberInt("2438"),

                                value: "https://modelzoo.co/model/yellowfin_pytorch"

                            },

                            {

                                num: NumberInt("2439"),

                                value: "https://modelzoo.co/model/pyscatwave"

                            },

                            {

                                num: NumberInt("2440"),

                                value: "https://modelzoo.co/model/graph_convnets_pytorch"

                            },

                            {

                                num: NumberInt("2441"),

                                value: "https://modelzoo.co/model/continuous-deep-q-learning-with-model-based-acceleration"

                            },

                            {

                                num: NumberInt("2442"),

                                value: "https://modelzoo.co/model/quick-nlp"

                            },

                            {

                                num: NumberInt("2443"),

                                value: "https://modelzoo.co/model/deepfm-with-pytorch"

                            },

                            {

                                num: NumberInt("2444"),

                                value: "https://modelzoo.co/model/clarinet"

                            },

                            {

                                num: NumberInt("2445"),

                                value: "https://modelzoo.co/model/pytorch-sac"

                            },

                            {

                                num: NumberInt("2446"),

                                value: "https://modelzoo.co/model/hmm-in-tensorflow"

                            },

                            {

                                num: NumberInt("2447"),

                                value: "https://modelzoo.co/model/wideresnets"

                            },

                            {

                                num: NumberInt("2448"),

                                value: "https://modelzoo.co/model/pytorch-sgns"

                            },

                            {

                                num: NumberInt("2449"),

                                value: "https://modelzoo.co/model/pytorch-hessian-eigenthings"

                            },

                            {

                                num: NumberInt("2450"),

                                value: "https://modelzoo.co/model/pytorch-nce"

                            },

                            {

                                num: NumberInt("2451"),

                                value: "https://modelzoo.co/model/pyinn"

                            },

                            {

                                num: NumberInt("2452"),

                                value: "https://modelzoo.co/model/vel"

                            },

                            {

                                num: NumberInt("2453"),

                                value: "https://modelzoo.co/model/volksdep"

                            },

                            {

                                num: NumberInt("2454"),

                                value: "https://modelzoo.co/model/pytorch-dnc"

                            },

                            {

                                num: NumberInt("2455"),

                                value: "https://modelzoo.co/model/tucker"

                            },

                            {

                                num: NumberInt("2456"),

                                value: "https://modelzoo.co/model/neural-art-mini"

                            },

                            {

                                num: NumberInt("2457"),

                                value: "https://modelzoo.co/model/simple-effective-text-matching-pytorch"

                            },

                            {

                                num: NumberInt("2458"),

                                value: "https://modelzoo.co/model/deeplog"

                            },

                            {

                                num: NumberInt("2459"),

                                value: "https://modelzoo.co/model/sparktorch"

                            },

                            {

                                num: NumberInt("2460"),

                                value: "https://modelzoo.co/model/gam"

                            },

                            {

                                num: NumberInt("2461"),

                                value: "https://modelzoo.co/model/pyramidnet-pytorch"

                            },

                            {

                                num: NumberInt("2462"),

                                value: "https://modelzoo.co/model/r-bert"

                            },

                            {

                                num: NumberInt("2463"),

                                value: "https://modelzoo.co/model/pytorch-siamese"

                            },

                            {

                                num: NumberInt("2464"),

                                value: "https://modelzoo.co/model/optical-flow-estimation-using-a-spatial"

                            },

                            {

                                num: NumberInt("2465"),

                                value: "https://modelzoo.co/model/flambe"

                            },

                            {

                                num: NumberInt("2466"),

                                value: "https://modelzoo.co/model/lora"

                            },

                            {

                                num: NumberInt("2467"),

                                value: "https://modelzoo.co/model/neural-programmer-interpreter"

                            },

                            {

                                num: NumberInt("2468"),

                                value: "https://modelzoo.co/model/mtcnn_face_detection_alignment"

                            },

                            {

                                num: NumberInt("2469"),

                                value: "https://modelzoo.co/model/inferno"

                            },

                            {

                                num: NumberInt("2470"),

                                value: "https://modelzoo.co/model/summarunner"

                            },

                            {

                                num: NumberInt("2471"),

                                value: "https://modelzoo.co/model/learningtocompare-pytorch"

                            },

                            {

                                num: NumberInt("2472"),

                                value: "https://modelzoo.co/model/pytorch-reinforce"

                            },

                            {

                                num: NumberInt("2473"),

                                value: "https://modelzoo.co/model/pytorchwavelets"

                            },

                            {

                                num: NumberInt("2474"),

                                value: "https://modelzoo.co/model/character-cnn"

                            },

                            {

                                num: NumberInt("2475"),

                                value: "https://modelzoo.co/model/yoloyolov2"

                            },

                            {

                                num: NumberInt("2476"),

                                value: "https://modelzoo.co/model/relational-rnn-pytorch"

                            },

                            {

                                num: NumberInt("2477"),

                                value: "https://modelzoo.co/model/sgcn"

                            },

                            {

                                num: NumberInt("2478"),

                                value: "https://modelzoo.co/model/sfd_pytorch"

                            },

                            {

                                num: NumberInt("2479"),

                                value: "https://modelzoo.co/model/mask-r-cnn"

                            },

                            {

                                num: NumberInt("2480"),

                                value: "https://modelzoo.co/model/fewshotlearning"

                            },

                            {

                                num: NumberInt("2481"),

                                value: "https://modelzoo.co/model/deeprl-grounding"

                            },

                            {

                                num: NumberInt("2482"),

                                value: "https://modelzoo.co/model/ncf"

                            },

                            {

                                num: NumberInt("2483"),

                                value: "https://modelzoo.co/model/fusenet"

                            },

                            {

                                num: NumberInt("2484"),

                                value: "https://modelzoo.co/model/tinytpu"

                            },

                            {

                                num: NumberInt("2485"),

                                value: "https://modelzoo.co/model/vrnn"

                            },

                            {

                                num: NumberInt("2486"),

                                value: "https://modelzoo.co/model/dni-pytorch"

                            },

                            {

                                num: NumberInt("2487"),

                                value: "https://modelzoo.co/model/cs224n-2019"

                            },

                            {

                                num: NumberInt("2488"),

                                value: "https://modelzoo.co/model/pytorch-transformer"

                            },

                            {

                                num: NumberInt("2489"),

                                value: "https://modelzoo.co/model/universal-transformer-pytorch"

                            },

                            {

                                num: NumberInt("2490"),

                                value: "https://modelzoo.co/model/pytorch_compact_bilinear_pooling-v1"

                            },

                            {

                                num: NumberInt("2491"),

                                value: "https://modelzoo.co/model/skip-thought-vectors"

                            },

                            {

                                num: NumberInt("2492"),

                                value: "https://modelzoo.co/model/pytorch-tools"

                            },

                            {

                                num: NumberInt("2493"),

                                value: "https://modelzoo.co/model/delira"

                            },

                            {

                                num: NumberInt("2494"),

                                value: "https://modelzoo.co/model/mine-mutual-information-neural-estimation"

                            },

                            {

                                num: NumberInt("2495"),

                                value: "https://modelzoo.co/model/embedded-spring-boot-keycloak-server"

                            },

                            {

                                num: NumberInt("2496"),

                                value: "https://modelzoo.co/model/visual-search-gluon"

                            },

                            {

                                num: NumberInt("2497"),

                                value: "https://modelzoo.co/model/pytorch-tensor-decompositions"

                            },

                            {

                                num: NumberInt("2498"),

                                value: "https://modelzoo.co/model/orn"

                            },

                            {

                                num: NumberInt("2499"),

                                value: "https://modelzoo.co/model/fcn"

                            },

                            {

                                num: NumberInt("2500"),

                                value: "https://modelzoo.co/model/dqn"

                            },

                            {

                                num: NumberInt("2501"),

                                value: "https://modelzoo.co/model/vin_pytorch_visdom"

                            },

                            {

                                num: NumberInt("2502"),

                                value: "https://modelzoo.co/model/pytorch-realtime-multi-person-pose-estimation-2"

                            },

                            {

                                num: NumberInt("2503"),

                                value: "https://modelzoo.co/model/pydlt"

                            },

                            {

                                num: NumberInt("2504"),

                                value: "https://modelzoo.co/model/conditional-similarity-networks"

                            },

                            {

                                num: NumberInt("2505"),

                                value: "https://modelzoo.co/model/per"

                            },

                            {

                                num: NumberInt("2506"),

                                value: "https://modelzoo.co/model/dqn-keras"

                            },

                            {

                                num: NumberInt("2507"),

                                value: "https://modelzoo.co/model/hcn-pytorch"

                            },

                            {

                                num: NumberInt("2508"),

                                value: "https://modelzoo.co/model/chainermn"

                            },

                            {

                                num: NumberInt("2509"),

                                value: "https://modelzoo.co/model/freezeout"

                            },

                            {

                                num: NumberInt("2510"),

                                value: "https://modelzoo.co/model/dqn-chainer"

                            },

                            {

                                num: NumberInt("2511"),

                                value: "https://modelzoo.co/model/packnet"

                            },

                            {

                                num: NumberInt("2512"),

                                value: "https://modelzoo.co/model/accsgd"

                            },

                            {

                                num: NumberInt("2513"),

                                value: "https://modelzoo.co/model/splitter"

                            },

                            {

                                num: NumberInt("2514"),

                                value: "https://modelzoo.co/model/cosface-pytorch"

                            },

                            {

                                num: NumberInt("2515"),

                                value: "https://modelzoo.co/model/pytorch-adacos"

                            },

                            {

                                num: NumberInt("2516"),

                                value: "https://modelzoo.co/model/pt-dilate-rnn"

                            },

                            {

                                num: NumberInt("2517"),

                                value: "https://modelzoo.co/model/torch-two-sample"

                            },

                            {

                                num: NumberInt("2518"),

                                value: "https://modelzoo.co/model/grnet"

                            },

                            {

                                num: NumberInt("2519"),

                                value: "https://modelzoo.co/model/vgg-cam"

                            },

                            {

                                num: NumberInt("2520"),

                                value: "https://modelzoo.co/model/seal-ci"

                            },

                            {

                                num: NumberInt("2521"),

                                value: "https://modelzoo.co/model/dcc"

                            },

                            {

                                num: NumberInt("2522"),

                                value: "https://modelzoo.co/model/pytorch-zssr"

                            },

                            {

                                num: NumberInt("2523"),

                                value: "https://modelzoo.co/model/beauty-net"

                            },

                            {

                                num: NumberInt("2524"),

                                value: "https://modelzoo.co/model/drrn-pytorch"

                            },

                            {

                                num: NumberInt("2525"),

                                value: "https://modelzoo.co/model/attention-based-recurrent-neural-network-models-for"

                            },

                            {

                                num: NumberInt("2526"),

                                value: "https://modelzoo.co/model/mctorch"

                            },

                            {

                                num: NumberInt("2527"),

                                value: "https://modelzoo.co/model/jax-rs-performance-comparison"

                            },

                            {

                                num: NumberInt("2528"),

                                value: "https://modelzoo.co/model/odin-pytorch"

                            },

                            {

                                num: NumberInt("2529"),

                                value: "https://modelzoo.co/model/deepcoral"

                            },

                            {

                                num: NumberInt("2530"),

                                value: "https://modelzoo.co/model/pywarm"

                            },

                            {

                                num: NumberInt("2531"),

                                value: "https://modelzoo.co/model/crnn-mxnet-chinese-text-recognition"

                            },

                            {

                                num: NumberInt("2532"),

                                value: "https://modelzoo.co/model/nalu-pytorch"

                            },

                            {

                                num: NumberInt("2533"),

                                value: "https://modelzoo.co/model/dgc-net"

                            },

                            {

                                num: NumberInt("2534"),

                                value: "https://modelzoo.co/model/tutel"

                            },

                            {

                                num: NumberInt("2535"),

                                value: "https://modelzoo.co/model/dockerface"

                            },

                            {

                                num: NumberInt("2536"),

                                value: "https://modelzoo.co/model/pytorch-text-recognition"

                            },

                            {

                                num: NumberInt("2537"),

                                value: "https://modelzoo.co/model/mplpytorch"

                            },

                            {

                                num: NumberInt("2538"),

                                value: "https://modelzoo.co/model/hessian"

                            },

                            {

                                num: NumberInt("2539"),

                                value: "https://modelzoo.co/model/video-super-resolution-pytorch"

                            },

                            {

                                num: NumberInt("2540"),

                                value: "https://modelzoo.co/model/c3d"

                            },

                            {

                                num: NumberInt("2541"),

                                value: "https://modelzoo.co/model/noisy-networks-for-exploration"

                            },

                            {

                                num: NumberInt("2542"),

                                value: "https://modelzoo.co/model/pytorchchamferdistance"

                            },

                            {

                                num: NumberInt("2543"),

                                value: "https://modelzoo.co/model/convnet-aig"

                            },

                            {

                                num: NumberInt("2544"),

                                value: "https://modelzoo.co/model/smiles-transformer"

                            },

                            {

                                num: NumberInt("2545"),

                                value: "https://modelzoo.co/model/openfacepytorch"

                            },

                            {

                                num: NumberInt("2546"),

                                value: "https://modelzoo.co/model/pysnn"

                            },

                            {

                                num: NumberInt("2547"),

                                value: "https://modelzoo.co/model/pytorch-weights-pruning"

                            },

                            {

                                num: NumberInt("2548"),

                                value: "https://modelzoo.co/model/fenchel-young-losses"

                            },

                            {

                                num: NumberInt("2549"),

                                value: "https://modelzoo.co/model/chainerui"

                            },

                            {

                                num: NumberInt("2550"),

                                value: "https://modelzoo.co/model/pytorch-retraining"

                            },

                            {

                                num: NumberInt("2551"),

                                value: "https://modelzoo.co/model/vqa-winner-cvprw-2017"

                            },

                            {

                                num: NumberInt("2552"),

                                value: "https://modelzoo.co/model/convolution-vision-transformers"

                            },

                            {

                                num: NumberInt("2553"),

                                value: "https://modelzoo.co/model/a-hierarchical-latent-structure-for-variational"

                            },

                            {

                                num: NumberInt("2554"),

                                value: "https://modelzoo.co/model/chainer-char-rnn"

                            },

                            {

                                num: NumberInt("2555"),

                                value: "https://modelzoo.co/model/skip-gram-pytorch"

                            },

                            {

                                num: NumberInt("2556"),

                                value: "https://modelzoo.co/model/distance-encoding"

                            },

                            {

                                num: NumberInt("2557"),

                                value: "https://modelzoo.co/model/pytorch-sketch-rnn"

                            },

                            {

                                num: NumberInt("2558"),

                                value: "https://modelzoo.co/model/fmpytorch"

                            },

                            {

                                num: NumberInt("2559"),

                                value: "https://modelzoo.co/model/visual-interaction-networks-pytorch"

                            },

                            {

                                num: NumberInt("2560"),

                                value: "https://modelzoo.co/model/transducer"

                            },

                            {

                                num: NumberInt("2561"),

                                value: "https://modelzoo.co/model/qucumber"

                            },

                            {

                                num: NumberInt("2562"),

                                value: "https://modelzoo.co/model/deeplabv3-plus-tensorflow20"

                            },

                            {

                                num: NumberInt("2563"),

                                value: "https://modelzoo.co/model/e2e-model-learning"

                            },

                            {

                                num: NumberInt("2564"),

                                value: "https://modelzoo.co/model/bert-bilstm-crf-pytorch"

                            },

                            {

                                num: NumberInt("2565"),

                                value: "https://modelzoo.co/model/compactbilinearpooling-pytorch-v2"

                            },

                            {

                                num: NumberInt("2566"),

                                value: "https://modelzoo.co/model/piggyback"

                            },

                            {

                                num: NumberInt("2567"),

                                value: "https://modelzoo.co/model/lookahead-pytorch"

                            },

                            {

                                num: NumberInt("2568"),

                                value: "https://modelzoo.co/model/untrimmednets"

                            },

                            {

                                num: NumberInt("2569"),

                                value: "https://modelzoo.co/model/pytorch-pose-estimation"

                            },

                            {

                                num: NumberInt("2570"),

                                value: "https://modelzoo.co/model/real-time-style-transfer"

                            },

                            {

                                num: NumberInt("2571"),

                                value: "https://modelzoo.co/model/rainbow-pytorch"

                            },

                            {

                                num: NumberInt("2572"),

                                value: "https://modelzoo.co/model/senet"

                            },

                            {

                                num: NumberInt("2573"),

                                value: "https://modelzoo.co/model/fractalnet-keras"

                            },

                            {

                                num: NumberInt("2574"),

                                value: "https://modelzoo.co/model/gccpm-look-into-person-cvpr19pytorch"

                            },

                            {

                                num: NumberInt("2575"),

                                value: "https://modelzoo.co/model/fcn-pytorch-easiest"

                            },

                            {

                                num: NumberInt("2576"),

                                value: "https://modelzoo.co/model/caffe_to_torch_to_pytorch"

                            },

                            {

                                num: NumberInt("2577"),

                                value: "https://modelzoo.co/model/deep-q-networks"

                            },

                            {

                                num: NumberInt("2578"),

                                value: "https://modelzoo.co/model/cnn-sentence-classification-pytorch"

                            },

                            {

                                num: NumberInt("2579"),

                                value: "https://modelzoo.co/model/functional-transformer"

                            },

                            {

                                num: NumberInt("2580"),

                                value: "https://modelzoo.co/model/attentive-object-tracking"

                            },

                            {

                                num: NumberInt("2581"),

                                value: "https://modelzoo.co/model/attentive-recurrent-comparators"

                            },

                            {

                                num: NumberInt("2582"),

                                value: "https://modelzoo.co/model/hypernetworks"

                            },

                            {

                                num: NumberInt("2583"),

                                value: "https://modelzoo.co/model/mobilenet"

                            },

                            {

                                num: NumberInt("2584"),

                                value: "https://modelzoo.co/model/ewcpytorch"

                            },

                            {

                                num: NumberInt("2585"),

                                value: "https://modelzoo.co/model/deep-forecast-pytorch"

                            },

                            {

                                num: NumberInt("2586"),

                                value: "https://modelzoo.co/model/bi-lstm-crf"

                            },

                            {

                                num: NumberInt("2587"),

                                value: "https://modelzoo.co/model/pytorch-auto-augment"

                            },

                            {

                                num: NumberInt("2588"),

                                value: "https://modelzoo.co/model/bigbatch"

                            },

                            {

                                num: NumberInt("2589"),

                                value: "https://modelzoo.co/model/wide-residual-networks"

                            },

                            {

                                num: NumberInt("2590"),

                                value: "https://modelzoo.co/model/stacknn"

                            },

                            {

                                num: NumberInt("2591"),

                                value: "https://modelzoo.co/model/pytorch-sift"

                            },

                            {

                                num: NumberInt("2592"),

                                value: "https://modelzoo.co/model/bayes-by-backprop"

                            },

                            {

                                num: NumberInt("2593"),

                                value: "https://modelzoo.co/model/word2vec-pytorch-2"

                            },

                            {

                                num: NumberInt("2594"),

                                value: "https://modelzoo.co/model/deeppose-tensorflow"

                            },

                            {

                                num: NumberInt("2595"),

                                value: "https://modelzoo.co/model/pytorch-prunes"

                            },

                            {

                                num: NumberInt("2596"),

                                value: "https://modelzoo.co/model/deep-networks-with-stochastic-depth"

                            },

                            {

                                num: NumberInt("2597"),

                                value: "https://modelzoo.co/model/pytorch-convlstm"

                            },

                            {

                                num: NumberInt("2598"),

                                value: "https://modelzoo.co/model/neural-style-transfer"

                            },

                            {

                                num: NumberInt("2599"),

                                value: "https://modelzoo.co/model/pytorch-smoothgrad"

                            },

                            {

                                num: NumberInt("2600"),

                                value: "https://modelzoo.co/model/aognet"

                            },

                            {

                                num: NumberInt("2601"),

                                value: "https://modelzoo.co/model/smile-detection-with-a-cnn"

                            },

                            {

                                num: NumberInt("2602"),

                                value: "https://modelzoo.co/model/facedetection-convnet-3d"

                            },

                            {

                                num: NumberInt("2603"),

                                value: "https://modelzoo.co/model/cifar10"

                            },

                            {

                                num: NumberInt("2604"),

                                value: "https://modelzoo.co/model/deep-auto-punctuation"

                            },

                            {

                                num: NumberInt("2605"),

                                value: "https://modelzoo.co/model/knowledge-aware-reader"

                            },

                            {

                                num: NumberInt("2606"),

                                value: "https://modelzoo.co/model/resnet-pytorch"

                            },

                            {

                                num: NumberInt("2607"),

                                value: "https://modelzoo.co/model/fcnt"

                            },

                            {

                                num: NumberInt("2608"),

                                value: "https://modelzoo.co/model/torch-gqn"

                            },

                            {

                                num: NumberInt("2609"),

                                value: "https://modelzoo.co/model/cnn-lstm-ctcgluon"

                            },

                            {

                                num: NumberInt("2610"),

                                value: "https://modelzoo.co/model/pix2pix"

                            },

                            {

                                num: NumberInt("2611"),

                                value: "https://modelzoo.co/model/neural-decision-forests"

                            },

                            {

                                num: NumberInt("2612"),

                                value: "https://modelzoo.co/model/googlenet-v2"

                            },

                            {

                                num: NumberInt("2613"),

                                value: "https://modelzoo.co/model/deepbox"

                            },

                            {

                                num: NumberInt("2614"),

                                value: "https://modelzoo.co/model/integrated-gradient-pytorch"

                            },

                            {

                                num: NumberInt("2615"),

                                value: "https://modelzoo.co/model/logger"

                            },

                            {

                                num: NumberInt("2616"),

                                value: "https://modelzoo.co/model/dynamic-memory-networks-plus-pytorch"

                            },

                            {

                                num: NumberInt("2617"),

                                value: "https://modelzoo.co/model/realtime-multi-person-pose-estimation"

                            },

                            {

                                num: NumberInt("2618"),

                                value: "https://modelzoo.co/model/msg-netgluon"

                            },

                            {

                                num: NumberInt("2619"),

                                value: "https://modelzoo.co/model/rnn-transducer"

                            },

                            {

                                num: NumberInt("2620"),

                                value: "https://modelzoo.co/model/doomnet"

                            },

                            {

                                num: NumberInt("2621"),

                                value: "https://modelzoo.co/model/binary-wide-resnet"

                            },

                            {

                                num: NumberInt("2622"),

                                value: "https://modelzoo.co/model/densenet-mxnet"

                            },

                            {

                                num: NumberInt("2623"),

                                value: "https://modelzoo.co/model/pytorch_neg_loss"

                            },

                            {

                                num: NumberInt("2624"),

                                value: "https://modelzoo.co/model/lstmspth"

                            },

                            {

                                num: NumberInt("2625"),

                                value: "https://modelzoo.co/model/3d-action-recognition"

                            },

                            {

                                num: NumberInt("2626"),

                                value: "https://modelzoo.co/model/radio-transformer-networks"

                            },

                            {

                                num: NumberInt("2627"),

                                value: "https://modelzoo.co/model/mixup_pytorch"

                            },

                            {

                                num: NumberInt("2628"),

                                value: "https://modelzoo.co/model/keras-realtime-multi-person-pose-estimation-keras"

                            },

                            {

                                num: NumberInt("2629"),

                                value: "https://modelzoo.co/model/noisynaturalgradient"

                            },

                            {

                                num: NumberInt("2630"),

                                value: "https://modelzoo.co/model/pytorch-convolutional-rnn"

                            },

                            {

                                num: NumberInt("2631"),

                                value: "https://modelzoo.co/model/draw-like-bob-ross"

                            },

                            {

                                num: NumberInt("2632"),

                                value: "https://modelzoo.co/model/pytorch-extension"

                            },

                            {

                                num: NumberInt("2633"),

                                value: "https://modelzoo.co/model/dssdtdm"

                            },

                            {

                                num: NumberInt("2634"),

                                value: "https://modelzoo.co/model/depthnet"

                            },

                            {

                                num: NumberInt("2635"),

                                value: "https://modelzoo.co/model/minimal_glo"

                            },

                            {

                                num: NumberInt("2636"),

                                value: "https://modelzoo.co/model/dni"

                            },

                            {

                                num: NumberInt("2637"),

                                value: "https://modelzoo.co/model/nmn-pytorch"

                            },

                            {

                                num: NumberInt("2638"),

                                value: "https://modelzoo.co/model/srdensenet-pytorch"

                            },

                            {

                                num: NumberInt("2639"),

                                value: "https://modelzoo.co/model/nalu"

                            },

                            {

                                num: NumberInt("2640"),

                                value: "https://modelzoo.co/model/memory-efficient-attention"

                            },

                            {

                                num: NumberInt("2641"),

                                value: "https://modelzoo.co/model/a3c-pytorch"

                            },

                            {

                                num: NumberInt("2642"),

                                value: "https://modelzoo.co/model/macarico"

                            },

                            {

                                num: NumberInt("2643"),

                                value: "https://modelzoo.co/model/interaction_network_pytorch"

                            },

                            {

                                num: NumberInt("2644"),

                                value: "https://modelzoo.co/model/pytorch_gbw_lm"

                            },

                            {

                                num: NumberInt("2645"),

                                value: "https://modelzoo.co/model/neural-dream"

                            },

                            {

                                num: NumberInt("2646"),

                                value: "https://modelzoo.co/model/meprop"

                            },

                            {

                                num: NumberInt("2647"),

                                value: "https://modelzoo.co/model/probabilistic-programming-and-statistical-inference-in"

                            },

                            {

                                num: NumberInt("2648"),

                                value: "https://modelzoo.co/model/perceiver-io"

                            },

                            {

                                num: NumberInt("2649"),

                                value: "https://modelzoo.co/model/eigendamage-pytorch"

                            },

                            {

                                num: NumberInt("2650"),

                                value: "https://modelzoo.co/model/pytorch-multi-class-focal-loss"

                            },

                            {

                                num: NumberInt("2651"),

                                value: "https://modelzoo.co/model/head-pose"

                            },

                            {

                                num: NumberInt("2652"),

                                value: "https://modelzoo.co/model/bimpm-pytorch"

                            },

                            {

                                num: NumberInt("2653"),

                                value: "https://modelzoo.co/model/lang-emerge-parlai"

                            },

                            {

                                num: NumberInt("2654"),

                                value: "https://modelzoo.co/model/torchelie"

                            },

                            {

                                num: NumberInt("2655"),

                                value: "https://modelzoo.co/model/treelstmsentiment"

                            },

                            {

                                num: NumberInt("2656"),

                                value: "https://modelzoo.co/model/bilstm-crf-ner-pytorch"

                            },

                            {

                                num: NumberInt("2657"),

                                value: "https://modelzoo.co/model/coordconv"

                            },

                            {

                                num: NumberInt("2658"),

                                value: "https://modelzoo.co/model/wide-residual-networks-keras"

                            },

                            {

                                num: NumberInt("2659"),

                                value: "https://modelzoo.co/model/captcharecognition"

                            },

                            {

                                num: NumberInt("2660"),

                                value: "https://modelzoo.co/model/match-lstm"

                            },

                            {

                                num: NumberInt("2661"),

                                value: "https://modelzoo.co/model/tdd"

                            },

                            {

                                num: NumberInt("2662"),

                                value: "https://modelzoo.co/model/mixup-mxnet"

                            },

                            {

                                num: NumberInt("2663"),

                                value: "https://modelzoo.co/model/binary_net"

                            },

                            {

                                num: NumberInt("2664"),

                                value: "https://modelzoo.co/model/deep-dream-in-pytorch"

                            },

                            {

                                num: NumberInt("2665"),

                                value: "https://modelzoo.co/model/torch-metrics"

                            },

                            {

                                num: NumberInt("2666"),

                                value: "https://modelzoo.co/model/toward-controlled-generation-of-text-pytorch"

                            },

                            {

                                num: NumberInt("2667"),

                                value: "https://modelzoo.co/model/mia"

                            },

                            {

                                num: NumberInt("2668"),

                                value: "https://modelzoo.co/model/fednova"

                            },

                            {

                                num: NumberInt("2669"),

                                value: "https://modelzoo.co/model/sampytorch"

                            },

                            {

                                num: NumberInt("2670"),

                                value: "https://modelzoo.co/model/ladder-network"

                            },

                            {

                                num: NumberInt("2671"),

                                value: "https://modelzoo.co/model/tiny-face-original-detector"

                            },

                            {

                                num: NumberInt("2672"),

                                value: "https://modelzoo.co/model/faux-jax"

                            },

                            {

                                num: NumberInt("2673"),

                                value: "https://modelzoo.co/model/highway-networks-caffe"

                            },

                            {

                                num: NumberInt("2674"),

                                value: "https://modelzoo.co/model/rl-multishot-reid"

                            },

                            {

                                num: NumberInt("2675"),

                                value: "https://modelzoo.co/model/wavenet"

                            },

                            {

                                num: NumberInt("2676"),

                                value: "https://modelzoo.co/model/whale-detector"

                            },

                            {

                                num: NumberInt("2677"),

                                value: "https://modelzoo.co/model/pytorch-mcn"

                            },

                            {

                                num: NumberInt("2678"),

                                value: "https://modelzoo.co/model/ssd-text-detection"

                            },

                            {

                                num: NumberInt("2679"),

                                value: "https://modelzoo.co/model/qanet-pytorch-2"

                            },

                            {

                                num: NumberInt("2680"),

                                value: "https://modelzoo.co/model/pytorch-neucom"

                            },

                            {

                                num: NumberInt("2681"),

                                value: "https://modelzoo.co/model/goemotions-pytorch"

                            },

                            {

                                num: NumberInt("2682"),

                                value: "https://modelzoo.co/model/kmeans-pytorch"

                            },

                            {

                                num: NumberInt("2683"),

                                value: "https://modelzoo.co/model/sdtw-pytorch"

                            },

                            {

                                num: NumberInt("2684"),

                                value: "https://modelzoo.co/model/groundbreaking-papers"

                            },

                            {

                                num: NumberInt("2685"),

                                value: "https://modelzoo.co/model/jax-rs-moshi"

                            },

                            {

                                num: NumberInt("2686"),

                                value: "https://modelzoo.co/model/bpr-pytorch"

                            },

                            {

                                num: NumberInt("2687"),

                                value: "https://modelzoo.co/model/extremely-fine-grained-entity-typing"

                            },

                            {

                                num: NumberInt("2688"),

                                value: "https://modelzoo.co/model/pt-sdae"

                            },

                            {

                                num: NumberInt("2689"),

                                value: "https://modelzoo.co/model/muzero"

                            },

                            {

                                num: NumberInt("2690"),

                                value: "https://modelzoo.co/model/pytorch-tree-lstm"

                            },

                            {

                                num: NumberInt("2691"),

                                value: "https://modelzoo.co/model/torch-sampling"

                            },

                            {

                                num: NumberInt("2692"),

                                value: "https://modelzoo.co/model/real-time-text-detection-dbnet"

                            },

                            {

                                num: NumberInt("2693"),

                                value: "https://modelzoo.co/model/fftnet"

                            },

                            {

                                num: NumberInt("2694"),

                                value: "https://modelzoo.co/model/triplet-reid-pytorch"

                            },

                            {

                                num: NumberInt("2695"),

                                value: "https://modelzoo.co/model/pytorch-fitmodule"

                            },

                            {

                                num: NumberInt("2696"),

                                value: "https://modelzoo.co/model/maskrcnn-benchmarkcpp"

                            },

                            {

                                num: NumberInt("2697"),

                                value: "https://modelzoo.co/model/neural-style-mmd"

                            },

                            {

                                num: NumberInt("2698"),

                                value: "https://modelzoo.co/model/sqeezenet"

                            },

                            {

                                num: NumberInt("2699"),

                                value: "https://modelzoo.co/model/lola_dice"

                            },

                            {

                                num: NumberInt("2700"),

                                value: "https://modelzoo.co/model/pytorch-radial-basis-function-layer"

                            },

                            {

                                num: NumberInt("2701"),

                                value: "https://modelzoo.co/model/admm"

                            },

                            {

                                num: NumberInt("2702"),

                                value: "https://modelzoo.co/model/pytorch_tdnn"

                            },

                            {

                                num: NumberInt("2703"),

                                value: "https://modelzoo.co/model/molencoder"

                            },

                            {

                                num: NumberInt("2704"),

                                value: "https://modelzoo.co/model/nasnet-a-mobile-ported-weights"

                            },

                            {

                                num: NumberInt("2705"),

                                value: "https://modelzoo.co/model/deep-belief-network-pytorch"

                            },

                            {

                                num: NumberInt("2706"),

                                value: "https://modelzoo.co/model/pytorch-value-iteration-networks"

                            },

                            {

                                num: NumberInt("2707"),

                                value: "https://modelzoo.co/model/quantile-regression-dqn-pytorch"

                            },

                            {

                                num: NumberInt("2708"),

                                value: "https://modelzoo.co/model/dropblock-pytorch"

                            },

                            {

                                num: NumberInt("2709"),

                                value: "https://modelzoo.co/model/yolo-v1-pytorch"

                            },

                            {

                                num: NumberInt("2710"),

                                value: "https://modelzoo.co/model/epsr"

                            },

                            {

                                num: NumberInt("2711"),

                                value: "https://modelzoo.co/model/mxnet-model"

                            },

                            {

                                num: NumberInt("2712"),

                                value: "https://modelzoo.co/model/e2far"

                            },

                            {

                                num: NumberInt("2713"),

                                value: "https://modelzoo.co/model/pspnet"

                            },

                            {

                                num: NumberInt("2714"),

                                value: "https://modelzoo.co/model/imsat"

                            },

                            {

                                num: NumberInt("2715"),

                                value: "https://modelzoo.co/model/cogitare"

                            },

                            {

                                num: NumberInt("2716"),

                                value: "https://modelzoo.co/model/pathnet-pytorch"

                            },

                            {

                                num: NumberInt("2717"),

                                value: "https://modelzoo.co/model/pytorch_highway"

                            },

                            {

                                num: NumberInt("2718"),

                                value: "https://modelzoo.co/model/pytorch-model-parallel"

                            },

                            {

                                num: NumberInt("2719"),

                                value: "https://modelzoo.co/model/federated-averaging-pytorch"

                            },

                            {

                                num: NumberInt("2720"),

                                value: "https://modelzoo.co/model/scalingscattering"

                            },

                            {

                                num: NumberInt("2721"),

                                value: "https://modelzoo.co/model/pytorch-ard"

                            },

                            {

                                num: NumberInt("2722"),

                                value: "https://modelzoo.co/model/ctpnmxnet"

                            },

                            {

                                num: NumberInt("2723"),

                                value: "https://modelzoo.co/model/character-level-convolutional-neural-nets-for-text"

                            },

                            {

                                num: NumberInt("2724"),

                                value: "https://modelzoo.co/model/torchcraft-py"

                            },

                            {

                                num: NumberInt("2725"),

                                value: "https://modelzoo.co/model/jax-rs-kotlinx-serialization"

                            },

                            {

                                num: NumberInt("2726"),

                                value: "https://modelzoo.co/model/entropy-sgd"

                            },

                            {

                                num: NumberInt("2727"),

                                value: "https://modelzoo.co/model/nninit"

                            },

                            {

                                num: NumberInt("2728"),

                                value: "https://modelzoo.co/model/pedestrian-attribute-recognition-with-gcn"

                            },

                            {

                                num: NumberInt("2729"),

                                value: "https://modelzoo.co/model/kaggle_cifar10"

                            },

                            {

                                num: NumberInt("2730"),

                                value: "https://modelzoo.co/model/sine"

                            },

                            {

                                num: NumberInt("2731"),

                                value: "https://modelzoo.co/model/candlegp"

                            },

                            {

                                num: NumberInt("2732"),

                                value: "https://modelzoo.co/model/neural-attentive-session-based-recommendation-pytorch"

                            },

                            {

                                num: NumberInt("2733"),

                                value: "https://modelzoo.co/model/recurrent-neural-networks-for-sentiment-analysis"

                            },

                            {

                                num: NumberInt("2734"),

                                value: "https://modelzoo.co/model/roialign-roipool-pytorch"

                            },

                            {

                                num: NumberInt("2735"),

                                value: "https://modelzoo.co/model/graph-cnn"

                            },

                            {

                                num: NumberInt("2736"),

                                value: "https://modelzoo.co/model/drqn"

                            },

                            {

                                num: NumberInt("2737"),

                                value: "https://modelzoo.co/model/shampoopytorch"

                            },

                            {

                                num: NumberInt("2738"),

                                value: "https://modelzoo.co/model/cspn-monodepth"

                            },

                            {

                                num: NumberInt("2739"),

                                value: "https://modelzoo.co/model/mocha-pytorch"

                            },

                            {

                                num: NumberInt("2740"),

                                value: "https://modelzoo.co/model/factorized-bilinear-network"

                            },

                            {

                                num: NumberInt("2741"),

                                value: "https://modelzoo.co/model/chainer-ssd"

                            },

                            {

                                num: NumberInt("2742"),

                                value: "https://modelzoo.co/model/dagger"

                            },

                            {

                                num: NumberInt("2743"),

                                value: "https://modelzoo.co/model/forward-thinking-pytorch"

                            },

                            {

                                num: NumberInt("2744"),

                                value: "https://modelzoo.co/model/cnn-based-text-classification"

                            },

                            {

                                num: NumberInt("2745"),

                                value: "https://modelzoo.co/model/bttr"

                            },

                            {

                                num: NumberInt("2746"),

                                value: "https://modelzoo.co/model/deep-packet"

                            },

                            {

                                num: NumberInt("2747"),

                                value: "https://modelzoo.co/model/ge2e-loss"

                            },

                            {

                                num: NumberInt("2748"),

                                value: "https://modelzoo.co/model/faster-rcnngluon"

                            },

                            {

                                num: NumberInt("2749"),

                                value: "https://modelzoo.co/model/lstnet"

                            },

                            {

                                num: NumberInt("2750"),

                                value: "https://modelzoo.co/model/aorun"

                            },

                            {

                                num: NumberInt("2751"),

                                value: "https://modelzoo.co/model/ko_en_nmtgluon"

                            },

                            {

                                num: NumberInt("2752"),

                                value: "https://modelzoo.co/model/chainer-visualization"

                            },

                            {

                                num: NumberInt("2753"),

                                value: "https://modelzoo.co/model/tor10"

                            },

                            {

                                num: NumberInt("2754"),

                                value: "https://modelzoo.co/model/srvp"

                            },

                            {

                                num: NumberInt("2755"),

                                value: "https://modelzoo.co/model/the-clean-transformer"

                            },

                            {

                                num: NumberInt("2756"),

                                value: "https://modelzoo.co/model/pytorch-deep-sets"

                            },

                            {

                                num: NumberInt("2757"),

                                value: "https://modelzoo.co/model/attentive-neural-process"

                            },

                            {

                                num: NumberInt("2758"),

                                value: "https://modelzoo.co/model/char-rnngluon"

                            },

                            {

                                num: NumberInt("2759"),

                                value: "https://modelzoo.co/model/pytorch_highway_networks"

                            },

                            {

                                num: NumberInt("2760"),

                                value: "https://modelzoo.co/model/pnnpytorch"

                            },

                            {

                                num: NumberInt("2761"),

                                value: "https://modelzoo.co/model/efficientdetpytorch"

                            },

                            {

                                num: NumberInt("2762"),

                                value: "https://modelzoo.co/model/highway-network"

                            },

                            {

                                num: NumberInt("2763"),

                                value: "https://modelzoo.co/model/binary-stochastic-neurons"

                            },

                            {

                                num: NumberInt("2764"),

                                value: "https://modelzoo.co/model/malconv-pytorch"

                            },

                            {

                                num: NumberInt("2765"),

                                value: "https://modelzoo.co/model/gluon-dynamic-batchinggluon"

                            },

                            {

                                num: NumberInt("2766"),

                                value: "https://modelzoo.co/model/chainer-resnet"

                            },

                            {

                                num: NumberInt("2767"),

                                value: "https://modelzoo.co/model/chainer-gogh"

                            },

                            {

                                num: NumberInt("2768"),

                                value: "https://modelzoo.co/model/diffdist"

                            },

                            {

                                num: NumberInt("2769"),

                                value: "https://modelzoo.co/model/dfw"

                            },

                            {

                                num: NumberInt("2770"),

                                value: "https://modelzoo.co/model/co-attention"

                            },

                            {

                                num: NumberInt("2771"),

                                value: "https://modelzoo.co/model/cat-net"

                            },

                            {

                                num: NumberInt("2772"),

                                value: "https://modelzoo.co/model/dpwa"

                            },

                            {

                                num: NumberInt("2773"),

                                value: "https://modelzoo.co/model/generative_zoo"

                            },

                            {

                                num: NumberInt("2774"),

                                value: "https://modelzoo.co/model/psmm"

                            },

                            {

                                num: NumberInt("2775"),

                                value: "https://modelzoo.co/model/osqpth"

                            },

                            {

                                num: NumberInt("2776"),

                                value: "https://modelzoo.co/model/sentence-similarity-classifier-for-pytorch"

                            },

                            {

                                num: NumberInt("2777"),

                                value: "https://modelzoo.co/model/r-bert-pytorch"

                            },

                            {

                                num: NumberInt("2778"),

                                value: "https://modelzoo.co/model/darkrank"

                            },

                            {

                                num: NumberInt("2779"),

                                value: "https://modelzoo.co/model/yelp-restaurant-photo-classifacation"

                            },

                            {

                                num: NumberInt("2780"),

                                value: "https://modelzoo.co/model/mlp-gpt-jax"

                            },

                            {

                                num: NumberInt("2781"),

                                value: "https://modelzoo.co/model/mxnet-for-ctr"

                            },

                            {

                                num: NumberInt("2782"),

                                value: "https://modelzoo.co/model/fast-rcnn"

                            },

                            {

                                num: NumberInt("2783"),

                                value: "https://modelzoo.co/model/capsnet-3"

                            },

                            {

                                num: NumberInt("2784"),

                                value: "https://modelzoo.co/model/fluidnet_cxx"

                            },

                            {

                                num: NumberInt("2785"),

                                value: "https://modelzoo.co/model/pytorch-extras"

                            },

                            {

                                num: NumberInt("2786"),

                                value: "https://modelzoo.co/model/lsuv-pytorch"

                            },

                            {

                                num: NumberInt("2787"),

                                value: "https://modelzoo.co/model/crnn"

                            },

                            {

                                num: NumberInt("2788"),

                                value: "https://modelzoo.co/model/cdl"

                            },

                            {

                                num: NumberInt("2789"),

                                value: "https://modelzoo.co/model/mobilenetv3-pytorch"

                            },

                            {

                                num: NumberInt("2790"),

                                value: "https://modelzoo.co/model/shake-drop-pytorch"

                            },

                            {

                                num: NumberInt("2791"),

                                value: "https://modelzoo.co/model/reseg-pytorch"

                            },

                            {

                                num: NumberInt("2792"),

                                value: "https://modelzoo.co/model/batchbald-redux"

                            },

                            {

                                num: NumberInt("2793"),

                                value: "https://modelzoo.co/model/prunnable-layers-pytorch"

                            },

                            {

                                num: NumberInt("2794"),

                                value: "https://modelzoo.co/model/chinese-word2vec-pytorch"

                            },

                            {

                                num: NumberInt("2795"),

                                value: "https://modelzoo.co/model/crnn-with-chinese-support"

                            },

                            {

                                num: NumberInt("2796"),

                                value: "https://modelzoo.co/model/deep-leafsnap"

                            },

                            {

                                num: NumberInt("2797"),

                                value: "https://modelzoo.co/model/cortexnet"

                            },

                            {

                                num: NumberInt("2798"),

                                value: "https://modelzoo.co/model/cru-net"

                            },

                            {

                                num: NumberInt("2799"),

                                value: "https://modelzoo.co/model/trpo"

                            },

                            {

                                num: NumberInt("2800"),

                                value: "https://modelzoo.co/model/diffmask"

                            },

                            {

                                num: NumberInt("2801"),

                                value: "https://modelzoo.co/model/shake-shake-pytorch"

                            },

                            {

                                num: NumberInt("2802"),

                                value: "https://modelzoo.co/model/mxnet-videoio"

                            },

                            {

                                num: NumberInt("2803"),

                                value: "https://modelzoo.co/model/dropwizard-jaxws"

                            },

                            {

                                num: NumberInt("2804"),

                                value: "https://modelzoo.co/model/ram"

                            },

                            {

                                num: NumberInt("2805"),

                                value: "https://modelzoo.co/model/associative_compression_networks"

                            },

                            {

                                num: NumberInt("2806"),

                                value: "https://modelzoo.co/model/self-tuning-networks"

                            },

                            {

                                num: NumberInt("2807"),

                                value: "https://modelzoo.co/model/flow"

                            },

                            {

                                num: NumberInt("2808"),

                                value: "https://modelzoo.co/model/contractive-autoencoder-in-pytorch"

                            },

                            {

                                num: NumberInt("2809"),

                                value: "https://modelzoo.co/model/shufflenet"

                            },

                            {

                                num: NumberInt("2810"),

                                value: "https://modelzoo.co/model/segnet"

                            },

                            {

                                num: NumberInt("2811"),

                                value: "https://modelzoo.co/model/segnet-chainer"

                            },

                            {

                                num: NumberInt("2812"),

                                value: "https://modelzoo.co/model/simple-fast-rnn"

                            },

                            {

                                num: NumberInt("2813"),

                                value: "https://modelzoo.co/model/alexnet3d"

                            },

                            {

                                num: NumberInt("2814"),

                                value: "https://modelzoo.co/model/e2c-pytorch"

                            },

                            {

                                num: NumberInt("2815"),

                                value: "https://modelzoo.co/model/pytorch_hmax"

                            },

                            {

                                num: NumberInt("2816"),

                                value: "https://modelzoo.co/model/pytorch-ctc"

                            },

                            {

                                num: NumberInt("2817"),

                                value: "https://modelzoo.co/model/strassennets"

                            },

                            {

                                num: NumberInt("2818"),

                                value: "https://modelzoo.co/model/character-level-cnn-text-classification-gluon"

                            },

                            {

                                num: NumberInt("2819"),

                                value: "https://modelzoo.co/model/pytorch_nce"

                            },

                            {

                                num: NumberInt("2820"),

                                value: "https://modelzoo.co/model/pytorch-autoneb"

                            },

                            {

                                num: NumberInt("2821"),

                                value: "https://modelzoo.co/model/faciallandmark"

                            },

                            {

                                num: NumberInt("2822"),

                                value: "https://modelzoo.co/model/mlpnlp-nmt"

                            },

                            {

                                num: NumberInt("2823"),

                                value: "https://modelzoo.co/model/chainer-resdrop"

                            },

                            {

                                num: NumberInt("2824"),

                                value: "https://modelzoo.co/model/siamese"

                            },

                            {

                                num: NumberInt("2825"),

                                value: "https://modelzoo.co/model/chamfer-distance"

                            },

                            {

                                num: NumberInt("2826"),

                                value: "https://modelzoo.co/model/pytorch-charrnn"

                            },

                            {

                                num: NumberInt("2827"),

                                value: "https://modelzoo.co/model/triplet-deep-hash-pytorch"

                            },

                            {

                                num: NumberInt("2828"),

                                value: "https://modelzoo.co/model/lstm-to-predict-gender-of-a"

                            },

                            {

                                num: NumberInt("2829"),

                                value: "https://modelzoo.co/model/chainer-densenet"

                            },

                            {

                                num: NumberInt("2830"),

                                value: "https://modelzoo.co/model/spatial-transformer-networks-tensorflow"

                            },

                            {

                                num: NumberInt("2831"),

                                value: "https://modelzoo.co/model/proxprop"

                            },

                            {

                                num: NumberInt("2832"),

                                value: "https://modelzoo.co/model/hred-py"

                            },

                            {

                                num: NumberInt("2833"),

                                value: "https://modelzoo.co/model/tdnn-pytorch"

                            },

                            {

                                num: NumberInt("2834"),

                                value: "https://modelzoo.co/model/sidewindowfilter"

                            },

                            {

                                num: NumberInt("2835"),

                                value: "https://modelzoo.co/model/java-jaxrs"

                            },

                            {

                                num: NumberInt("2836"),

                                value: "https://modelzoo.co/model/ml-optimizers-jax"

                            },

                            {

                                num: NumberInt("2837"),

                                value: "https://modelzoo.co/model/deep-alignment-network-pytorch"

                            },

                            {

                                num: NumberInt("2838"),

                                value: "https://modelzoo.co/model/netharn"

                            },

                            {

                                num: NumberInt("2839"),

                                value: "https://modelzoo.co/model/abcnn-pytorch"

                            },

                            {

                                num: NumberInt("2840"),

                                value: "https://modelzoo.co/model/pytorch-nice"

                            },

                            {

                                num: NumberInt("2841"),

                                value: "https://modelzoo.co/model/torch-gel"

                            },

                            {

                                num: NumberInt("2842"),

                                value: "https://modelzoo.co/model/pytorch-minimal-gaussian-process"

                            },

                            {

                                num: NumberInt("2843"),

                                value: "https://modelzoo.co/model/pban-pytorch"

                            },

                            {

                                num: NumberInt("2844"),

                                value: "https://modelzoo.co/model/mixuppytorch"

                            },

                            {

                                num: NumberInt("2845"),

                                value: "https://modelzoo.co/model/torchlite"

                            },

                            {

                                num: NumberInt("2846"),

                                value: "https://modelzoo.co/model/learning-at-home"

                            },

                            {

                                num: NumberInt("2847"),

                                value: "https://modelzoo.co/model/u-netgluon"

                            },

                            {

                                num: NumberInt("2848"),

                                value: "https://modelzoo.co/model/evepytorch"

                            },

                            {

                                num: NumberInt("2849"),

                                value: "https://modelzoo.co/model/zalando-pytorch"

                            },

                            {

                                num: NumberInt("2850"),

                                value: "https://modelzoo.co/model/word2vec-pytorch"

                            },

                            {

                                num: NumberInt("2851"),

                                value: "https://modelzoo.co/model/yologluon"

                            },

                            {

                                num: NumberInt("2852"),

                                value: "https://modelzoo.co/model/pt-styletransfer"

                            },

                            {

                                num: NumberInt("2853"),

                                value: "https://modelzoo.co/model/pytorch-hessianfree"

                            },

                            {

                                num: NumberInt("2854"),

                                value: "https://modelzoo.co/model/capsnet"

                            },

                            {

                                num: NumberInt("2855"),

                                value: "https://modelzoo.co/model/chainer_stylenet"

                            },

                            {

                                num: NumberInt("2856"),

                                value: "https://modelzoo.co/model/orthnet"

                            },

                            {

                                num: NumberInt("2857"),

                                value: "https://modelzoo.co/model/mmi-anti-pytorch"

                            },

                            {

                                num: NumberInt("2858"),

                                value: "https://modelzoo.co/model/variational-autoencoder-pytorch"

                            },

                            {

                                num: NumberInt("2859"),

                                value: "https://modelzoo.co/model/spleeter-pytorch"

                            },

                            {

                                num: NumberInt("2860"),

                                value: "https://modelzoo.co/model/jax-muzero"

                            },

                            {

                                num: NumberInt("2861"),

                                value: "https://modelzoo.co/model/poisson-convolution-sum"

                            },

                            {

                                num: NumberInt("2862"),

                                value: "https://modelzoo.co/model/pytorch-docset"

                            },

                            {

                                num: NumberInt("2863"),

                                value: "https://modelzoo.co/model/pytorch-cns"

                            },

                            {

                                num: NumberInt("2864"),

                                value: "https://modelzoo.co/model/neural-assembly-compiler"

                            },

                            {

                                num: NumberInt("2865"),

                                value: "https://modelzoo.co/model/pinn"

                            },

                            {

                                num: NumberInt("2866"),

                                value: "https://modelzoo.co/model/svm"

                            },

                            {

                                num: NumberInt("2867"),

                                value: "https://modelzoo.co/model/jaxrs-osgi-extender"

                            },

                            {

                                num: NumberInt("2868"),

                                value: "https://modelzoo.co/model/aries-jax-rs-whiteboard"

                            },

                            {

                                num: NumberInt("2869"),

                                value: "https://modelzoo.co/model/yolov3-gradcam"

                            },

                            {

                                num: NumberInt("2870"),

                                value: "https://modelzoo.co/model/convolutional-neural-fabrics"

                            },

                            {

                                num: NumberInt("2871"),

                                value: "https://modelzoo.co/model/c3d-lstm-pytorch"

                            },

                            {

                                num: NumberInt("2872"),

                                value: "https://modelzoo.co/model/openpose"

                            },

                            {

                                num: NumberInt("2873"),

                                value: "https://modelzoo.co/model/sentiment-analysisgluon"

                            },

                            {

                                num: NumberInt("2874"),

                                value: "https://modelzoo.co/model/lgamma"

                            },

                            {

                                num: NumberInt("2875"),

                                value: "https://modelzoo.co/model/nonlocalsenet"

                            },

                            {

                                num: NumberInt("2876"),

                                value: "https://modelzoo.co/model/vanillacnn"

                            },

                            {

                                num: NumberInt("2877"),

                                value: "https://modelzoo.co/model/everrest"

                            },

                            {

                                num: NumberInt("2878"),

                                value: "https://modelzoo.co/model/aws-lambda-servlet"

                            },

                            {

                                num: NumberInt("2879"),

                                value: "https://modelzoo.co/model/pyprob"

                            },

                            {

                                num: NumberInt("2880"),

                                value: "https://modelzoo.co/model/pix2code-pytorch"

                            },

                            {

                                num: NumberInt("2881"),

                                value: "https://modelzoo.co/model/multi-agent-ddpg-using-pttorch-and"

                            },

                            {

                                num: NumberInt("2882"),

                                value: "https://modelzoo.co/model/ssdfocal-loss"

                            },

                            {

                                num: NumberInt("2883"),

                                value: "https://modelzoo.co/model/deeplab-v2"

                            },

                            {

                                num: NumberInt("2884"),

                                value: "https://modelzoo.co/model/federated-learning-implementations"

                            },

                            {

                                num: NumberInt("2885"),

                                value: "https://modelzoo.co/model/traffic-sign-classification"

                            },

                            {

                                num: NumberInt("2886"),

                                value: "https://modelzoo.co/model/ac-blstm"

                            },

                            {

                                num: NumberInt("2887"),

                                value: "https://modelzoo.co/model/wavenet-mxnet"

                            },

                            {

                                num: NumberInt("2888"),

                                value: "https://modelzoo.co/model/variational-autoencoder"

                            },

                            {

                                num: NumberInt("2889"),

                                value: "https://modelzoo.co/model/im2latex"

                            },

                            {

                                num: NumberInt("2890"),

                                value: "https://modelzoo.co/model/galapagos_nao"

                            },

                            {

                                num: NumberInt("2891"),

                                value: "https://modelzoo.co/model/jaxrs-versioning"

                            },

                            {

                                num: NumberInt("2892"),

                                value: "https://modelzoo.co/model/anuvada"

                            },

                            {

                                num: NumberInt("2893"),

                                value: "https://modelzoo.co/model/xception"

                            },

                            {

                                num: NumberInt("2894"),

                                value: "https://modelzoo.co/model/jax-rs-jersey-application-sample"

                            },

                            {

                                num: NumberInt("2895"),

                                value: "https://modelzoo.co/model/nxparser"

                            },

                            {

                                num: NumberInt("2896"),

                                value: "https://modelzoo.co/model/hashed-nets"

                            },

                            {

                                num: NumberInt("2897"),

                                value: "https://modelzoo.co/model/squeezedet"

                            },

                            {

                                num: NumberInt("2898"),

                                value: "https://modelzoo.co/model/visual-semantic-embedding"

                            },

                            {

                                num: NumberInt("2899"),

                                value: "https://modelzoo.co/model/jaxmapp"

                            },

                            {

                                num: NumberInt("2900"),

                                value: "https://modelzoo.co/model/flink-modelserver"

                            },

                            {

                                num: NumberInt("2901"),

                                value: "https://modelzoo.co/model/deephumanprediction"

                            },

                            {

                                num: NumberInt("2902"),

                                value: "https://modelzoo.co/model/sequential-matching-networkgluon"

                            },

                            {

                                num: NumberInt("2903"),

                                value: "https://modelzoo.co/model/defgluon"

                            },

                            {

                                num: NumberInt("2904"),

                                value: "https://modelzoo.co/model/jumpingjax"

                            },

                            {

                                num: NumberInt("2905"),

                                value: "https://modelzoo.co/model/yolodark2mxnet"

                            },

                            {

                                num: NumberInt("2906"),

                                value: "https://modelzoo.co/model/mx-pointnet"

                            },

                            {

                                num: NumberInt("2907"),

                                value: "https://modelzoo.co/model/pointcnnmx"

                            },

                            {

                                num: NumberInt("2908"),

                                value: "https://modelzoo.co/model/conv-vis"

                            },

                            {

                                num: NumberInt("2909"),

                                value: "https://modelzoo.co/model/jaxws-spring"

                            },

                            {

                                num: NumberInt("2910"),

                                value: "https://modelzoo.co/model/advanced-ml-techniques"

                            },

                            {

                                num: NumberInt("2911"),

                                value: "https://modelzoo.co/model/sdpoint"

                            },

                            {

                                num: NumberInt("2912"),

                                value: "https://modelzoo.co/model/impala-pytorch"

                            },

                            {

                                num: NumberInt("2913"),

                                value: "https://modelzoo.co/model/u-netkaggle-dstl"

                            },

                            {

                                num: NumberInt("2914"),

                                value: "https://modelzoo.co/model/vqagluon"

                            },

                            {

                                num: NumberInt("2915"),

                                value: "https://modelzoo.co/model/jax-ekf"

                            },

                            {

                                num: NumberInt("2916"),

                                value: "https://modelzoo.co/model/keras-sde-net"

                            },

                            {

                                num: NumberInt("2917"),

                                value: "https://modelzoo.co/model/pytorch-glove"

                            },

                            {

                                num: NumberInt("2918"),

                                value: "https://modelzoo.co/model/languagedialect-identification-with-multiple-character-level-cnns"

                            },

                            {

                                num: NumberInt("2919"),

                                value: "https://modelzoo.co/model/zero-shot-intent-capsnet"

                            },

                            {

                                num: NumberInt("2920"),

                                value: "https://modelzoo.co/model/tiny-face-w-training"

                            },

                            {

                                num: NumberInt("2921"),

                                value: "https://modelzoo.co/model/siamese-mxnet"

                            },

                            {

                                num: NumberInt("2922"),

                                value: "https://modelzoo.co/model/p3d"

                            },

                            {

                                num: NumberInt("2923"),

                                value: "https://modelzoo.co/model/cnnhighway-net"

                            },

                            {

                                num: NumberInt("2924"),

                                value: "https://modelzoo.co/model/spectrallda"

                            },

                            {

                                num: NumberInt("2925"),

                                value: "https://modelzoo.co/model/memnn"

                            },

                            {

                                num: NumberInt("2926"),

                                value: "https://modelzoo.co/model/chainer-example-overfeat-classify"

                            },

                            {

                                num: NumberInt("2927"),

                                value: "https://modelzoo.co/model/yolotiny_v2"

                            },

                            {

                                num: NumberInt("2928"),

                                value: "https://modelzoo.co/model/sparsegpax"

                            },

                            {

                                num: NumberInt("2929"),

                                value: "https://modelzoo.co/model/haiku-mup"

                            },

                            {

                                num: NumberInt("2930"),

                                value: "https://modelzoo.co/model/mucko"

                            },

                            {

                                num: NumberInt("2931"),

                                value: "https://modelzoo.co/model/lightcnn"

                            },

                            {

                                num: NumberInt("2932"),

                                value: "https://modelzoo.co/model/netty-jax-ws"

                            },

                            {

                                num: NumberInt("2933"),

                                value: "https://modelzoo.co/model/dxp-rest-example"

                            },

                            {

                                num: NumberInt("2934"),

                                value: "https://modelzoo.co/model/spring-boot-jaxws-demo"

                            },

                            {

                                num: NumberInt("2935"),

                                value: "https://modelzoo.co/model/federated-learning-pytorch"

                            },

                            {

                                num: NumberInt("2936"),

                                value: "https://modelzoo.co/model/point-transformer-cls"

                            },

                            {

                                num: NumberInt("2937"),

                                value: "https://modelzoo.co/model/memn2n"

                            },

                            {

                                num: NumberInt("2938"),

                                value: "https://modelzoo.co/model/rnn-transducerrnnt-loss-using-cpp"

                            },

                            {

                                num: NumberInt("2939"),

                                value: "https://modelzoo.co/model/deformable-conv"

                            },

                            {

                                num: NumberInt("2940"),

                                value: "https://modelzoo.co/model/jax-ws-client"

                            },

                            {

                                num: NumberInt("2941"),

                                value: "https://modelzoo.co/model/vertx-jersey"

                            },

                            {

                                num: NumberInt("2942"),

                                value: "https://modelzoo.co/model/jax-spectral"

                            },

                            {

                                num: NumberInt("2943"),

                                value: "https://modelzoo.co/model/pointwise-convolutional-neural-network"

                            },

                            {

                                num: NumberInt("2944"),

                                value: "https://modelzoo.co/model/siamese_network_on_omniglotgluon"

                            },

                            {

                                num: NumberInt("2945"),

                                value: "https://modelzoo.co/model/tacotron"

                            },

                            {

                                num: NumberInt("2946"),

                                value: "https://modelzoo.co/model/dreamerv2-jax"

                            },

                            {

                                num: NumberInt("2947"),

                                value: "https://modelzoo.co/model/nerfjax"

                            },

                            {

                                num: NumberInt("2948"),

                                value: "https://modelzoo.co/model/st-resnet"

                            },

                            {

                                num: NumberInt("2949"),

                                value: "https://modelzoo.co/model/class-activation-mapping"

                            },

                            {

                                num: NumberInt("2950"),

                                value: "https://modelzoo.co/model/mxnet-recommendergluon"

                            },

                            {

                                num: NumberInt("2951"),

                                value: "https://modelzoo.co/model/dreamax"

                            },

                            {

                                num: NumberInt("2952"),

                                value: "https://modelzoo.co/model/svd2"

                            },

                            {

                                num: NumberInt("2953"),

                                value: "https://modelzoo.co/model/ngd-in-wide-nn"

                            },

                            {

                                num: NumberInt("2954"),

                                value: "https://modelzoo.co/model/perceiver-jax"

                            },

                            {

                                num: NumberInt("2955"),

                                value: "https://modelzoo.co/model/networksample"

                            },

                            {

                                num: NumberInt("2956"),

                                value: "https://modelzoo.co/model/dynamic-capacity-networks"

                            },

                            {

                                num: NumberInt("2957"),

                                value: "https://modelzoo.co/model/neural-attention-model-abstractive-summarization"

                            },

                            {

                                num: NumberInt("2958"),

                                value: "https://modelzoo.co/model/torchplus"

                            },

                            {

                                num: NumberInt("2959"),

                                value: "https://modelzoo.co/model/deepdep"

                            },

                            {

                                num: NumberInt("2960"),

                                value: "https://modelzoo.co/model/xceptionkeras2mxnet"

                            },

                            {

                                num: NumberInt("2961"),

                                value: "https://modelzoo.co/model/visualbackprop"

                            },

                            {

                                num: NumberInt("2962"),

                                value: "https://modelzoo.co/model/vat"

                            },

                            {

                                num: NumberInt("2963"),

                                value: "https://modelzoo.co/model/jax-transformer"

                            },

                            {

                                num: NumberInt("2964"),

                                value: "https://modelzoo.co/model/spring-boot-hibernate-multitenant-jaxrs-api"

                            },

                            {

                                num: NumberInt("2965"),

                                value: "https://modelzoo.co/model/soapstone"

                            },

                            {

                                num: NumberInt("2966"),

                                value: "https://modelzoo.co/model/ofbiz-rest-impl"

                            },

                            {

                                num: NumberInt("2967"),

                                value: "https://modelzoo.co/model/laxy"

                            },

                            {

                                num: NumberInt("2968"),

                                value: "https://modelzoo.co/model/flaxton-proxy"

                            },

                            {

                                num: NumberInt("2969"),

                                value: "https://modelzoo.co/model/cartoon-gan-tf20"

                            },

                            {

                                num: NumberInt("2970"),

                                value: "https://modelzoo.co/model/3d-u-net-pytorch-model-parallel"

                            },

                            {

                                num: NumberInt("2971"),

                                value: "https://modelzoo.co/model/pytorch-mixup"

                            },

                            {

                                num: NumberInt("2972"),

                                value: "https://modelzoo.co/model/range-loss"

                            },

                            {

                                num: NumberInt("2973"),

                                value: "https://modelzoo.co/model/rangelossgluon"

                            },

                            {

                                num: NumberInt("2974"),

                                value: "https://modelzoo.co/model/superresolutioncnn"

                            },

                            {

                                num: NumberInt("2975"),

                                value: "https://modelzoo.co/model/fast-style-transfer"

                            },

                            {

                                num: NumberInt("2976"),

                                value: "https://modelzoo.co/model/loss-surfaces"

                            },

                            {

                                num: NumberInt("2977"),

                                value: "https://modelzoo.co/model/ysnotesoap"

                            },

                            {

                                num: NumberInt("2978"),

                                value: "https://modelzoo.co/model/jaxrk"

                            },

                            {

                                num: NumberInt("2979"),

                                value: "https://modelzoo.co/model/nlp-journey-jax"

                            },

                            {

                                num: NumberInt("2980"),

                                value: "https://modelzoo.co/model/private-cross-silo-fl"

                            },

                            {

                                num: NumberInt("2981"),

                                value: "https://modelzoo.co/model/jax-rs"

                            },

                            {

                                num: NumberInt("2982"),

                                value: "https://modelzoo.co/model/madgrad"

                            },

                            {

                                num: NumberInt("2983"),

                                value: "https://modelzoo.co/model/schnax"

                            },

                            {

                                num: NumberInt("2984"),

                                value: "https://modelzoo.co/model/training-rnns-as-fast-as-cnns"

                            },

                            {

                                num: NumberInt("2985"),

                                value: "https://modelzoo.co/model/charlstm"

                            },

                            {

                                num: NumberInt("2986"),

                                value: "https://modelzoo.co/model/pytorch-deep-learning-models"

                            },

                            {

                                num: NumberInt("2987"),

                                value: "https://modelzoo.co/model/chest-xray"

                            },

                            {

                                num: NumberInt("2988"),

                                value: "https://modelzoo.co/model/ppogluon"

                            },

                            {

                                num: NumberInt("2989"),

                                value: "https://modelzoo.co/model/mini-hmc-jax"

                            },

                            {

                                num: NumberInt("2990"),

                                value: "https://modelzoo.co/model/backbone-wine-cellar"

                            },

                            {

                                num: NumberInt("2991"),

                                value: "https://modelzoo.co/model/relaxed-machines"

                            },

                            {

                                num: NumberInt("2992"),

                                value: "https://modelzoo.co/model/heroes-service"

                            },

                            {

                                num: NumberInt("2993"),

                                value: "https://modelzoo.co/model/apirestgenerator"

                            },

                            {

                                num: NumberInt("2994"),

                                value: "https://modelzoo.co/model/nepali-poet-generation-with-char-rnn"

                            },

                            {

                                num: NumberInt("2995"),

                                value: "https://modelzoo.co/model/transformer-tensorflow"

                            },

                            {

                                num: NumberInt("2996"),

                                value: "https://modelzoo.co/model/neural-network-pruning-sparsification"

                            },

                            {

                                num: NumberInt("2997"),

                                value: "https://modelzoo.co/model/am-softmax"

                            },

                            {

                                num: NumberInt("2998"),

                                value: "https://modelzoo.co/model/pytorch-text-crf"

                            },

                            {

                                num: NumberInt("2999"),

                                value: "https://modelzoo.co/model/senetfrom-caffe"

                            },

                            {

                                num: NumberInt("3000"),

                                value: "https://modelzoo.co/model/convolutional-sketch-inversion"

                            },

                            {

                                num: NumberInt("3001"),

                                value: "https://modelzoo.co/model/dynamic-pose-estimation"

                            },

                            {

                                num: NumberInt("3002"),

                                value: "https://modelzoo.co/model/reinspect"

                            },

                            {

                                num: NumberInt("3003"),

                                value: "https://modelzoo.co/model/parserchianggluon"

                            },

                            {

                                num: NumberInt("3004"),

                                value: "https://modelzoo.co/model/ner-with-bidirectional-lstm-cnns"

                            },

                            {

                                num: NumberInt("3005"),

                                value: "https://modelzoo.co/model/prednet"

                            },

                            {

                                num: NumberInt("3006"),

                                value: "https://modelzoo.co/model/adgm"

                            },

                            {

                                num: NumberInt("3007"),

                                value: "https://modelzoo.co/model/imsat-chainer"

                            },

                            {

                                num: NumberInt("3008"),

                                value: "https://modelzoo.co/model/reproduce-j1j2model-via-cnn"

                            },

                            {

                                num: NumberInt("3009"),

                                value: "https://modelzoo.co/model/onlineplatformsteam"

                            },

                            {

                                num: NumberInt("3010"),

                                value: "https://modelzoo.co/model/poc-jax-rs"

                            },

                            {

                                num: NumberInt("3011"),

                                value: "https://modelzoo.co/model/resteasy-sse"

                            },

                            {

                                num: NumberInt("3012"),

                                value: "https://modelzoo.co/model/ebikeconnect-api"

                            },

                            {

                                num: NumberInt("3013"),

                                value: "https://modelzoo.co/model/entmax-jax"

                            },

                            {

                                num: NumberInt("3014"),

                                value: "https://modelzoo.co/model/jaxb-inherit"

                            },

                            {

                                num: NumberInt("3015"),

                                value: "https://modelzoo.co/model/jaxon-dialogs"

                            },

                            {

                                num: NumberInt("3016"),

                                value: "https://modelzoo.co/model/jaxrs-cxf-camel-spring-example"

                            },

                            {

                                num: NumberInt("3017"),

                                value: "https://modelzoo.co/model/pytorch-phocnet"

                            },

                            {

                                num: NumberInt("3018"),

                                value: "https://modelzoo.co/model/pytorch-neuroevolution"

                            },

                            {

                                num: NumberInt("3019"),

                                value: "https://modelzoo.co/model/pytorch-resnext"

                            },

                            {

                                num: NumberInt("3020"),

                                value: "https://modelzoo.co/model/ppo-pytorch-2"

                            },

                            {

                                num: NumberInt("3021"),

                                value: "https://modelzoo.co/model/convolutional-pose-machines"

                            },

                            {

                                num: NumberInt("3022"),

                                value: "https://modelzoo.co/model/netvlad"

                            },

                            {

                                num: NumberInt("3023"),

                                value: "https://modelzoo.co/model/go-flax-id"

                            },

                            {

                                num: NumberInt("3024"),

                                value: "https://modelzoo.co/model/jaxbee"

                            },

                            {

                                num: NumberInt("3025"),

                                value: "https://modelzoo.co/model/spring-jaxws-cxf"

                            },

                            {

                                num: NumberInt("3026"),

                                value: "https://modelzoo.co/model/rest-jaxrs-example"

                            },

                            {

                                num: NumberInt("3027"),

                                value: "https://modelzoo.co/model/jju"

                            },

                            {

                                num: NumberInt("3028"),

                                value: "https://modelzoo.co/model/jaxro"

                            },

                            {

                                num: NumberInt("3029"),

                                value: "https://modelzoo.co/model/lynx"

                            },

                            {

                                num: NumberInt("3030"),

                                value: "https://modelzoo.co/model/infinispan-discovery"

                            },

                            {

                                num: NumberInt("3031"),

                                value: "https://modelzoo.co/model/xjc-immutable-plugin"

                            },

                            {

                                num: NumberInt("3032"),

                                value: "https://modelzoo.co/model/jaxws-jersey-client-api"

                            },

                            {

                                num: NumberInt("3033"),

                                value: "https://modelzoo.co/model/htng-property-2009b-guestselfservice"

                            },

                            {

                                num: NumberInt("3034"),

                                value: "https://modelzoo.co/model/resnext"

                            },

                            {

                                num: NumberInt("3035"),

                                value: "https://modelzoo.co/model/autoregressive-novelty-detection"

                            },

                            {

                                num: NumberInt("3036"),

                                value: "https://modelzoo.co/model/ssd-pytorch-2"

                            },

                            {

                                num: NumberInt("3037"),

                                value: "https://modelzoo.co/model/capsnet-4"

                            },

                            {

                                num: NumberInt("3038"),

                                value: "https://modelzoo.co/model/tabnet-pytorch"

                            },

                            {

                                num: NumberInt("3039"),

                                value: "https://modelzoo.co/model/pytorch-implementation-of-highway-networks"

                            },

                            {

                                num: NumberInt("3040"),

                                value: "https://modelzoo.co/model/artnet-pytorch"

                            },

                            {

                                num: NumberInt("3041"),

                                value: "https://modelzoo.co/model/building-efficient-convnets-using-redundant-feature"

                            },

                            {

                                num: NumberInt("3042"),

                                value: "https://modelzoo.co/model/pytorch-cifar10"

                            },

                            {

                                num: NumberInt("3043"),

                                value: "https://modelzoo.co/model/perceptron-pytorch-autograd"

                            },

                            {

                                num: NumberInt("3044"),

                                value: "https://modelzoo.co/model/faster-rcnn-2"

                            },

                            {

                                num: NumberInt("3045"),

                                value: "https://modelzoo.co/model/pytorch-workspace"

                            },

                            {

                                num: NumberInt("3046"),

                                value: "https://modelzoo.co/model/semi-supervised-models"

                            },

                            {

                                num: NumberInt("3047"),

                                value: "https://modelzoo.co/model/exponentiated-gradient-pytorch"

                            },

                            {

                                num: NumberInt("3048"),

                                value: "https://modelzoo.co/model/flashnet"

                            },

                            {

                                num: NumberInt("3049"),

                                value: "https://modelzoo.co/model/classification-pytorch-colab"

                            },

                            {

                                num: NumberInt("3050"),

                                value: "https://modelzoo.co/model/openai-mxnet"

                            },

                            {

                                num: NumberInt("3051"),

                                value: "https://modelzoo.co/model/mnist-oneshot"

                            },

                            {

                                num: NumberInt("3052"),

                                value: "https://modelzoo.co/model/diffsats"

                            },

                            {

                                num: NumberInt("3053"),

                                value: "https://modelzoo.co/model/jax-gru"

                            },

                            {

                                num: NumberInt("3054"),

                                value: "https://modelzoo.co/model/pytorch-word2vec-2"

                            },

                            {

                                num: NumberInt("3055"),

                                value: "https://modelzoo.co/model/bert-for-retrieval-based-dialog-system"

                            },

                            {

                                num: NumberInt("3056"),

                                value: "https://modelzoo.co/model/siamese_pytorch-2"

                            },

                            {

                                num: NumberInt("3057"),

                                value: "https://modelzoo.co/model/siam-rpn"

                            },

                            {

                                num: NumberInt("3058"),

                                value: "https://modelzoo.co/model/word2vec"

                            },

                            {

                                num: NumberInt("3059"),

                                value: "https://modelzoo.co/model/capsule-networks-pytorch"

                            },

                            {

                                num: NumberInt("3060"),

                                value: "https://modelzoo.co/model/lucad"

                            },

                            {

                                num: NumberInt("3061"),

                                value: "https://modelzoo.co/model/vqa"

                            },

                            {

                                num: NumberInt("3062"),

                                value: "https://modelzoo.co/model/geometric-matching"

                            },

                            {

                                num: NumberInt("3063"),

                                value: "https://modelzoo.co/model/collaborative_filtering"

                            },

                            {

                                num: NumberInt("3064"),

                                value: "https://modelzoo.co/model/chainer-fluid"

                            },

                            {

                                num: NumberInt("3065"),

                                value: "https://modelzoo.co/model/ddgm"

                            },

                            {

                                num: NumberInt("3066"),

                                value: "https://modelzoo.co/model/flax-bert"

                            },

                            {

                                num: NumberInt("3067"),

                                value: "https://modelzoo.co/model/nodejs-flaxton"

                            },

                            {

                                num: NumberInt("3068"),

                                value: "https://modelzoo.co/model/jaxfss"

                            },

                            {

                                num: NumberInt("3069"),

                                value: "https://modelzoo.co/model/onlineplatformxboxlive"

                            },

                            {

                                num: NumberInt("3070"),

                                value: "https://modelzoo.co/model/vivit-weights-converter"

                            },

                            {

                                num: NumberInt("3071"),

                                value: "https://modelzoo.co/model/deep-learning-book-implementations"

                            },

                            {

                                num: NumberInt("3072"),

                                value: "https://modelzoo.co/model/fractalnet"

                            },

                            {

                                num: NumberInt("3073"),

                                value: "https://modelzoo.co/model/iouloss"

                            },

                            {

                                num: NumberInt("3074"),

                                value: "https://modelzoo.co/model/cicada-classification"

                            },

                            {

                                num: NumberInt("3075"),

                                value: "https://modelzoo.co/model/dpsh"

                            },

                            {

                                num: NumberInt("3076"),

                                value: "https://modelzoo.co/model/memn2ngluon"

                            },

                            {

                                num: NumberInt("3077"),

                                value: "https://modelzoo.co/model/sequence-sampling"

                            },

                            {

                                num: NumberInt("3078"),

                                value: "https://modelzoo.co/model/flaxcrawler-jax"

                            },

                            {

                                num: NumberInt("3079"),

                                value: "https://modelzoo.co/model/flax-bspline-experiment"

                            },

                            {

                                num: NumberInt("3080"),

                                value: "https://modelzoo.co/model/jax-v-pytorch"

                            },

                            {

                                num: NumberInt("3081"),

                                value: "https://modelzoo.co/model/holographic-embeddings-for-graph-completion-and"

                            },

                            {

                                num: NumberInt("3082"),

                                value: "https://modelzoo.co/model/pytorch-implementations"

                            },

                            {

                                num: NumberInt("3083"),

                                value: "https://modelzoo.co/model/character-aware-language-models-pytorch-implementation"

                            },

                            {

                                num: NumberInt("3084"),

                                value: "https://modelzoo.co/model/minibatch_discrimination"

                            },

                            {

                                num: NumberInt("3085"),

                                value: "https://modelzoo.co/model/mineclone-unity"

                            },

                            {

                                num: NumberInt("3086"),

                                value: "https://modelzoo.co/model/gpt-2-haiku"

                            },

                            {

                                num: NumberInt("3087"),

                                value: "https://modelzoo.co/model/tpu-tutorial"

                            },

                            {

                                num: NumberInt("3088"),

                                value: "https://modelzoo.co/model/flax-28"

                            },

                            {

                                num: NumberInt("3089"),

                                value: "https://modelzoo.co/model/flaxbot-jax"

                            },

                            {

                                num: NumberInt("3090"),

                                value: "https://modelzoo.co/model/flax-57"

                            },

                            {

                                num: NumberInt("3091"),

                                value: "https://modelzoo.co/model/flax-online"

                            },

                            {

                                num: NumberInt("3092"),

                                value: "https://modelzoo.co/model/deep-vit-flax"

                            },

                            {

                                num: NumberInt("3093"),

                                value: "https://modelzoo.co/model/rationalnets"

                            },

                            {

                                num: NumberInt("3094"),

                                value: "https://modelzoo.co/model/jax_practice-2"

                            },

                            {

                                num: NumberInt("3095"),

                                value: "https://modelzoo.co/model/marge"

                            },

                            {

                                num: NumberInt("3096"),

                                value: "https://modelzoo.co/model/jax-implementations"

                            },

                            {

                                num: NumberInt("3097"),

                                value: "https://modelzoo.co/model/autoencoder"

                            },

                            {

                                num: NumberInt("3098"),

                                value: "https://modelzoo.co/model/deepcontextualbandits"

                            },

                            {

                                num: NumberInt("3099"),

                                value: "https://modelzoo.co/model/differentialprivacy"

                            },

                            {

                                num: NumberInt("3100"),

                                value: "https://modelzoo.co/model/domainadaptation"

                            },

                            {

                                num: NumberInt("3101"),

                                value: "https://modelzoo.co/model/inception"

                            },

                            {

                                num: NumberInt("3102"),

                                value: "https://modelzoo.co/model/keypointnet"

                            },

                            {

                                num: NumberInt("3103"),

                                value: "https://modelzoo.co/model/learningtorememberrareevents"

                            },

                            {

                                num: NumberInt("3104"),

                                value: "https://modelzoo.co/model/lexnetc"

                            },

                            {

                                num: NumberInt("3105"),

                                value: "https://modelzoo.co/model/lm1b"

                            },

                            {

                                num: NumberInt("3106"),

                                value: "https://modelzoo.co/model/lmcommonsense"

                            },

                            {

                                num: NumberInt("3107"),

                                value: "https://modelzoo.co/model/namignizer"

                            },

                            {

                                num: NumberInt("3108"),

                                value: "https://modelzoo.co/model/neuralgpu"

                            },

                            {

                                num: NumberInt("3109"),

                                value: "https://modelzoo.co/model/neuralprogrammer"

                            },

                            {

                                num: NumberInt("3110"),

                                value: "https://modelzoo.co/model/nextframeprediction"

                            },

                            {

                                num: NumberInt("3111"),

                                value: "https://modelzoo.co/model/ptn"

                            },

                            {

                                num: NumberInt("3112"),

                                value: "https://modelzoo.co/model/marco"

                            },

                            {

                                num: NumberInt("3113"),

                                value: "https://modelzoo.co/model/qakg"

                            },

                            {

                                num: NumberInt("3114"),

                                value: "https://modelzoo.co/model/realnvp"

                            },

                            {

                                num: NumberInt("3115"),

                                value: "https://modelzoo.co/model/rebar"

                            },

                            {

                                num: NumberInt("3116"),

                                value: "https://modelzoo.co/model/resnet"

                            },

                            {

                                num: NumberInt("3117"),

                                value: "https://modelzoo.co/model/seq2species"

                            },

                            {

                                num: NumberInt("3118"),

                                value: "https://modelzoo.co/model/skipthoughts"

                            },

                            {

                                num: NumberInt("3119"),

                                value: "https://modelzoo.co/model/swivel"

                            },

                            {

                                num: NumberInt("3120"),

                                value: "https://modelzoo.co/model/syntaxnet"

                            },

                            {

                                num: NumberInt("3121"),

                                value: "https://modelzoo.co/model/tcn"

                            },

                            {

                                num: NumberInt("3122"),

                                value: "https://modelzoo.co/model/textsum"

                            },

                            {

                                num: NumberInt("3123"),

                                value: "https://modelzoo.co/model/transformer"

                            },

                            {

                                num: NumberInt("3124"),

                                value: "https://modelzoo.co/model/videoprediction"

                            },

                            {

                                num: NumberInt("3125"),

                                value: "https://modelzoo.co/model/deep-q-network"

                            },

                            {

                                num: NumberInt("3126"),

                                value: "https://modelzoo.co/model/ac"

                            },

                            {

                                num: NumberInt("3127"),

                                value: "https://modelzoo.co/model/a3c"

                            },

                            {

                                num: NumberInt("3128"),

                                value: "https://modelzoo.co/model/network-in-network-model"

                            },

                            {

                                num: NumberInt("3129"),

                                value: "https://modelzoo.co/model/models-from-the-bmvc-2014-paper-return"

                            },

                            {

                                num: NumberInt("3130"),

                                value: "https://modelzoo.co/model/models-used-by-the-vgg-team"

                            },

                            {

                                num: NumberInt("3131"),

                                value: "https://modelzoo.co/model/places-cnn-model-from-mit"

                            },

                            {

                                num: NumberInt("3132"),

                                value: "https://modelzoo.co/model/googlenet-gpu-implementation-from-princeton"

                            },

                            {

                                num: NumberInt("3133"),

                                value: "https://modelzoo.co/model/caffenet-fine-tuned-for-oxford-flowers-dataset"

                            },

                            {

                                num: NumberInt("3134"),

                                value: "https://modelzoo.co/model/cnn-models-for-salient-object-subitizing"

                            },

                            {

                                num: NumberInt("3135"),

                                value: "https://modelzoo.co/model/places_cnds_models-on-scene-recognition"

                            },

                            {

                                num: NumberInt("3136"),

                                value: "https://modelzoo.co/model/models-for-age-and-gender-classification"

                            },

                            {

                                num: NumberInt("3137"),

                                value: "https://modelzoo.co/model/parsenet"

                            },

                            {

                                num: NumberInt("3138"),

                                value: "https://modelzoo.co/model/conditional-random-fields-as-recurrent-neural"

                            },

                            {

                                num: NumberInt("3139"),

                                value: "https://modelzoo.co/model/holistically-nested-edge-detection"

                            },

                            {

                                num: NumberInt("3140"),

                                value: "https://modelzoo.co/model/translating-videos-to-natural-language"

                            },

                            {

                                num: NumberInt("3141"),

                                value: "https://modelzoo.co/model/vgg-face-cnn-descriptor"

                            },

                            {

                                num: NumberInt("3142"),

                                value: "https://modelzoo.co/model/yearbook-photo-dating"

                            },

                            {

                                num: NumberInt("3143"),

                                value: "https://modelzoo.co/model/ccnn"

                            },

                            {

                                num: NumberInt("3144"),

                                value: "https://modelzoo.co/model/facial-landmark-detection-with-tweaked-convolutional"

                            },

                            {

                                num: NumberInt("3145"),

                                value: "https://modelzoo.co/model/faster-r-cnn"

                            },

                            {

                                num: NumberInt("3146"),

                                value: "https://modelzoo.co/model/sequence-to-sequence-video-to"

                            },

                            {

                                num: NumberInt("3147"),

                                value: "https://modelzoo.co/model/pascal-voc-2012-multilabel-classification-model"

                            },

                            {

                                num: NumberInt("3148"),

                                value: "https://modelzoo.co/model/squeezenet"

                            },

                            {

                                num: NumberInt("3149"),

                                value: "https://modelzoo.co/model/mixture-dcnn"

                            },

                            {

                                num: NumberInt("3150"),

                                value: "https://modelzoo.co/model/mulimodal-compact-bilinear-pooling-for-vqa"

                            },

                            {

                                num: NumberInt("3151"),

                                value: "https://modelzoo.co/model/pose-aware-cnn-models-pams-for-face"

                            },

                            {

                                num: NumberInt("3152"),

                                value: "https://modelzoo.co/model/learning-structured-sparsity-in-deep-neural"

                            },

                            {

                                num: NumberInt("3153"),

                                value: "https://modelzoo.co/model/neural-activation-constellations"

                            },

                            {

                                num: NumberInt("3154"),

                                value: "https://modelzoo.co/model/resface101"

                            },

                            {

                                num: NumberInt("3155"),

                                value: "https://modelzoo.co/model/striving-for-simplicity"

                            },

                            {

                                num: NumberInt("3156"),

                                value: "https://modelzoo.co/model/vgg-4x-without-degradation"

                            },

                            {

                                num: NumberInt("3157"),

                                value: "https://modelzoo.co/model/using-ranking-cnn-for-age-estimation"

                            },

                            {

                                num: NumberInt("3158"),

                                value: "https://modelzoo.co/model/lets-keep-it-simple"

                            },

                            {

                                num: NumberInt("3159"),

                                value: "https://modelzoo.co/model/ssd-caffe"

                            },

                            {

                                num: NumberInt("3160"),

                                value: "https://modelzoo.co/model/bvlc-googlenet"

                            },

                            {

                                num: NumberInt("3161"),

                                value: "https://modelzoo.co/model/bvlc-reference-rcnn-ilsvrc13"

                            },

                            {

                                num: NumberInt("3162"),

                                value: "https://modelzoo.co/model/densenet-121"

                            },

                            {

                                num: NumberInt("3163"),

                                value: "https://modelzoo.co/model/inception-v1"

                            },

                            {

                                num: NumberInt("3164"),

                                value: "https://modelzoo.co/model/squeezenet-caffe2"

                            },

                            {

                                num: NumberInt("3165"),

                                value: "https://modelzoo.co/model/zfnet-512"

                            },

                            {

                                num: NumberInt("3166"),

                                value: "https://modelzoo.co/model/learning-local-feature-descriptors-with-triplets"

                            },

                            {

                                num: NumberInt("3167"),

                                value: "https://modelzoo.co/model/self-norm-nets"

                            },

                            {

                                num: NumberInt("3168"),

                                value: "https://modelzoo.co/model/lstm-for-har"

                            },

                            {

                                num: NumberInt("3169"),

                                value: "https://modelzoo.co/model/pix2pix-mxnet"

                            },

                            {

                                num: NumberInt("3170"),

                                value: "https://modelzoo.co/model/dirnet"

                            },

                            {

                                num: NumberInt("3171"),

                                value: "https://modelzoo.co/model/densely-connected-convolutional-networks-keras"

                            },

                            {

                                num: NumberInt("3172"),

                                value: "https://modelzoo.co/model/dfi"

                            },

                            {

                                num: NumberInt("3173"),

                                value: "https://modelzoo.co/model/context-encoder"

                            },

                            {

                                num: NumberInt("3174"),

                                value: "https://modelzoo.co/model/chainer_rnnlm"

                            },

                            {

                                num: NumberInt("3175"),

                                value: "https://modelzoo.co/model/chainer_examples-chainer"

                            },

                            {

                                num: NumberInt("3176"),

                                value: "https://modelzoo.co/model/qrnn"

                            },

                            {

                                num: NumberInt("3177"),

                                value: "https://modelzoo.co/model/chainer_ca"

                            },

                            {

                                num: NumberInt("3178"),

                                value: "https://modelzoo.co/model/chainer-libdnn"

                            },

                            {

                                num: NumberInt("3179"),

                                value: "https://modelzoo.co/model/face68pts"

                            },

                            {

                                num: NumberInt("3180"),

                                value: "https://modelzoo.co/model/uis-rnn"

                            },

                            {

                                num: NumberInt("3181"),

                                value: "https://modelzoo.co/model/vgg16-deconvolution-network"

                            },

                            {

                                num: NumberInt("3182"),

                                value: "https://modelzoo.co/model/mxnet_tetris"

                            },

                            {

                                num: NumberInt("3183"),

                                value: "https://modelzoo.co/model/gluon-nlpgluon"

                            },

                            {

                                num: NumberInt("3184"),

                                value: "https://modelzoo.co/model/segnet-caffe"

                            },

                            {

                                num: NumberInt("3185"),

                                value: "https://modelzoo.co/model/dqngluon"

                            },

                            {

                                num: NumberInt("3186"),

                                value: "https://modelzoo.co/model/gluonseggluon"

                            },

                            {

                                num: NumberInt("3187"),

                                value: "https://modelzoo.co/model/double-dqngluon"

                            },

                            {

                                num: NumberInt("3188"),

                                value: "https://modelzoo.co/model/matchnet"

                            },

                            {

                                num: NumberInt("3189"),

                                value: "https://modelzoo.co/model/deepid-v1"

                            },

                            {

                                num: NumberInt("3190"),

                                value: "https://modelzoo.co/model/c3d-mxnet"

                            },

                            {

                                num: NumberInt("3191"),

                                value: "https://modelzoo.co/model/drl"

                            },

                            {

                                num: NumberInt("3192"),

                                value: "https://modelzoo.co/model/fcn-aspp"

                            },

                            {

                                num: NumberInt("3193"),

                                value: "https://modelzoo.co/model/deep-q-learning-pong-with-tensorflow-and"

                            },

                            {

                                num: NumberInt("3194"),

                                value: "https://modelzoo.co/model/deeplab-caffe"

                            },

                            {

                                num: NumberInt("3195"),

                                value: "https://modelzoo.co/model/vgg-face"

                            },

                            {

                                num: NumberInt("3196"),

                                value: "https://modelzoo.co/model/lrcn"

                            },

                            {

                                num: NumberInt("3197"),

                                value: "https://modelzoo.co/model/places-cnn"

                            },

                            {

                                num: NumberInt("3198"),

                                value: "https://modelzoo.co/model/srcnn"

                            },

                            {

                                num: NumberInt("3199"),

                                value: "https://modelzoo.co/model/deepdrive"

                            },

                            {

                                num: NumberInt("3200"),

                                value: "https://modelzoo.co/model/berkeley-deepdrive"

                            },

                            {

                                num: NumberInt("3201"),

                                value: "https://modelzoo.co/model/princeton-deepdriving"

                            },

                            {

                                num: NumberInt("3202"),

                                value: "https://modelzoo.co/model/sentiment-analysis"

                            },

                            {

                                num: NumberInt("3203"),

                                value: "https://modelzoo.co/model/alexnet"

                            },

                            {

                                num: NumberInt("3204"),

                                value: "https://modelzoo.co/model/inception-v2"

                            },

                            {

                                num: NumberInt("3205"),

                                value: "https://modelzoo.co/model/styletransfer"

                            },

                            {

                                num: NumberInt("3206"),

                                value: "https://modelzoo.co/model/vgg19"

                            },

                            {

                                num: NumberInt("3207"),

                                value: "https://modelzoo.co/model/multi-gpu-multi-label-densenet-gluon"

                            },

                            {

                                num: NumberInt("3208"),

                                value: "https://modelzoo.co/model/nasnet-agluon"

                            },

                            {

                                num: NumberInt("3209"),

                                value: "https://modelzoo.co/model/light-head-r-cnn"

                            },

                            {

                                num: NumberInt("3210"),

                                value: "https://modelzoo.co/model/segnet-mxnet"

                            },

                            {

                                num: NumberInt("3211"),

                                value: "https://modelzoo.co/model/east"

                            },

                            {

                                num: NumberInt("3212"),

                                value: "https://modelzoo.co/model/rc3d"

                            },

                            {

                                num: NumberInt("3213"),

                                value: "https://modelzoo.co/model/receptive-field-tool"

                            },

                            {

                                num: NumberInt("3214"),

                                value: "https://modelzoo.co/model/reuters-topic-classification"

                            },

                            {

                                num: NumberInt("3215"),

                                value: "https://modelzoo.co/model/lstm-on-the-imdb-dataset-text"

                            },

                            {

                                num: NumberInt("3216"),

                                value: "https://modelzoo.co/model/bidirectional-lstm-on-the-imdb-dataset"

                            },

                            {

                                num: NumberInt("3217"),

                                value: "https://modelzoo.co/model/1d-cnn-on-the-imdb-dataset"

                            },

                            {

                                num: NumberInt("3218"),

                                value: "https://modelzoo.co/model/1d-cnn-lstm-on-the-imdb-dataset"

                            },

                            {

                                num: NumberInt("3219"),

                                value: "https://modelzoo.co/model/lstm-based-network-on-the-babi-dataset"

                            },

                            {

                                num: NumberInt("3220"),

                                value: "https://modelzoo.co/model/memory-network-on-the-babi-dataset"

                            },

                            {

                                num: NumberInt("3221"),

                                value: "https://modelzoo.co/model/sequence-to-sequence-learning-for-performing"

                            },

                            {

                                num: NumberInt("3222"),

                                value: "https://modelzoo.co/model/lstm-text-generation"

                            },

                            {

                                num: NumberInt("3223"),

                                value: "https://modelzoo.co/model/using-pre-trained-word-embeddings"

                            },

                            {

                                num: NumberInt("3224"),

                                value: "https://modelzoo.co/model/fasttext-on-the-imdb-dataset"

                            },

                            {

                                num: NumberInt("3225"),

                                value: "https://modelzoo.co/model/structurally-constrained-recurrent-nets-text-generation"

                            },

                            {

                                num: NumberInt("3226"),

                                value: "https://modelzoo.co/model/simple-cnn-on-mnist"

                            },

                            {

                                num: NumberInt("3227"),

                                value: "https://modelzoo.co/model/simple-cnn-on-cifar10-with-data"

                            },

                            {

                                num: NumberInt("3228"),

                                value: "https://modelzoo.co/model/inception-v3"

                            },

                            {

                                num: NumberInt("3229"),

                                value: "https://modelzoo.co/model/vgg-16-with-pre-trained-weights"

                            },

                            {

                                num: NumberInt("3230"),

                                value: "https://modelzoo.co/model/vgg-19-with-pre-trained-weights"

                            },

                            {

                                num: NumberInt("3231"),

                                value: "https://modelzoo.co/model/neural-style-transfer-keras"

                            },

                            {

                                num: NumberInt("3232"),

                                value: "https://modelzoo.co/model/visualizing-the-filters-learned-by-a"

                            },

                            {

                                num: NumberInt("3233"),

                                value: "https://modelzoo.co/model/deep-dreams"

                            },

                            {

                                num: NumberInt("3234"),

                                value: "https://modelzoo.co/model/stateful-lstm"

                            },

                            {

                                num: NumberInt("3235"),

                                value: "https://modelzoo.co/model/siamese-network"

                            },

                            {

                                num: NumberInt("3236"),

                                value: "https://modelzoo.co/model/pretraining-on-a-different-dataset"

                            },

                            {

                                num: NumberInt("3237"),

                                value: "https://modelzoo.co/model/s2cnn"

                            },

                            {

                                num: NumberInt("3238"),

                                value: "https://modelzoo.co/model/jackson-jaxrs-propertyfiltering"

                            },

                            {

                                num: NumberInt("3239"),

                                value: "https://modelzoo.co/model/e3nn-jax"

                            },

                            {

                                num: NumberInt("3240"),

                                value: "https://modelzoo.co/model/jaxtorch"

                            },

                            {

                                num: NumberInt("3241"),

                                value: "https://modelzoo.co/model/osgi-jaxrs-extracted"

                            },

                            {

                                num: NumberInt("3242"),

                                value: "https://modelzoo.co/model/pytorch-implementation-2"

                            },

                            {

                                num: NumberInt("3243"),

                                value: "https://modelzoo.co/model/flax-bert-jax"

                            },

                            {

                                num: NumberInt("3244"),

                                value: "https://modelzoo.co/model/lecun1989-flax"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://modelzoo.co/",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://modelzoo.co/"

        }

    ],

    links: "https://modelzoo.co/",

    name: "modelzoo",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_linktext",

            desc: "",

            type: "string",

            exampleValue: "OpenPose 24000OpenPose represents the first real-time multi-person system to jointly detect human body, hand, and facial keypoints (in total 130 keypoints) on single images.\nCaffeCV"

        },

        {

            id: NumberInt("1"),

            name: "para2_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://modelzoo.co/model/openpose-caffe"

        }

    ],

    url: "https://modelzoo.co/"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63edd241c85da553b7a9d503"),

    containJudge: false,

    desc: "http://www.ceic.ac.cn/history",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "http://www.ceic.ac.cn/history",

                links: "http://www.ceic.ac.cn/history",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Del Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环输入",

            sequence: [

                NumberInt("6"),

                NumberInt("7"),

                NumberInt("10")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "3",

                pathList: "",

                textList: "20\n50",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \n        "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n        \n            \n                历史查询\n                \n                    \n                        \n                            时间：　至　\n                        \n                        \n                            纬度：大于 　小于  单位：度 范围:-90至90\n\n                        \n                        \n                            经度：大于 　小于  单位：度 范围:-180至180\n                        \n                        \n                            深度：大于 　小于  单位：千米\n                        \n                        \n                            震级：大于 　小于 \n                            查询\n                        \n                    \n                \n\n                \n                    查询结果：显示到地图保存到本地\n\n                    \n                        \n                        \n                            \n                                震级(M)\n                                发震时刻(UTC+8)\n\n                                纬度(°)\n                                经度(°)\n                                深度(千米)\n                                参考位置\n\n                            \n                            \n                        \n                        \n                        当前页:　总页数:\n                        \n                                                     \n                    \n                \n            \n\n\n"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/h1[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "历史查询"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[1]/form[1]/div[2]/input[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("6"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "输入内容",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"weidu1\"]",

                wait: NumberInt("0"),

                value: "1"

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击查询",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"search\"]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination\")]/ul[1]/li[10]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("10"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("12"),

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination\")]/ul[1]/li/a[text()='»']",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("11"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击下一页",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination\")]/ul[1]/li[10]/a[1]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("12"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("13")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("2"),

                pathList: "//*[contains(@class, \"tr-red\")]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[3]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[4]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[5]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[6]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[7]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[8]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[9]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[10]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[11]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[12]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[13]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[14]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[15]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[16]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[17]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[18]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[19]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[20]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[21]",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("13"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "保存数据",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/td[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "6.1"

                            },

                            {

                                num: NumberInt("1"),

                                value: "5.6"

                            },

                            {

                                num: NumberInt("2"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("3"),

                                value: "3.6"

                            },

                            {

                                num: NumberInt("4"),

                                value: "4.3"

                            },

                            {

                                num: NumberInt("5"),

                                value: "3.6"

                            },

                            {

                                num: NumberInt("6"),

                                value: "3.1"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2.8"

                            },

                            {

                                num: NumberInt("8"),

                                value: "3.2"

                            },

                            {

                                num: NumberInt("9"),

                                value: "3.3"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2.9"

                            },

                            {

                                num: NumberInt("11"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("12"),

                                value: "4.2"

                            },

                            {

                                num: NumberInt("13"),

                                value: "3.1"

                            },

                            {

                                num: NumberInt("14"),

                                value: "5.8"

                            },

                            {

                                num: NumberInt("15"),

                                value: "2.9"

                            },

                            {

                                num: NumberInt("16"),

                                value: "2.8"

                            },

                            {

                                num: NumberInt("17"),

                                value: "4.3"

                            },

                            {

                                num: NumberInt("18"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("19"),

                                value: "3.0"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "/td[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2023-02-1602:10:08"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2023-02-1421:16:51"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2023-02-1414:40:16"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2023-02-1403:35:10"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2023-02-1402:38:48"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2023-02-1318:38:47"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2023-02-1301:23:35"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2023-02-1216:42:23"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2023-02-1211:37:27"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2023-02-1208:27:45"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2023-02-1200:32:03"

                            },

                            {

                                num: NumberInt("11"),

                                value: "2023-02-1120:29:48"

                            },

                            {

                                num: NumberInt("12"),

                                value: "2023-02-1119:35:47"

                            },

                            {

                                num: NumberInt("13"),

                                value: "2023-02-1117:47:29"

                            },

                            {

                                num: NumberInt("14"),

                                value: "2023-02-1116:55:06"

                            },

                            {

                                num: NumberInt("15"),

                                value: "2023-02-1114:39:53"

                            },

                            {

                                num: NumberInt("16"),

                                value: "2023-02-1114:35:30"

                            },

                            {

                                num: NumberInt("17"),

                                value: "2023-02-1110:41:42"

                            },

                            {

                                num: NumberInt("18"),

                                value: "2023-02-1015:30:27"

                            },

                            {

                                num: NumberInt("19"),

                                value: "2023-02-1000:06:31"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "/td[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "12.50"

                            },

                            {

                                num: NumberInt("1"),

                                value: "45.15"

                            },

                            {

                                num: NumberInt("2"),

                                value: "41.14"

                            },

                            {

                                num: NumberInt("3"),

                                value: "46.62"

                            },

                            {

                                num: NumberInt("4"),

                                value: "38.96"

                            },

                            {

                                num: NumberInt("5"),

                                value: "43.78"

                            },

                            {

                                num: NumberInt("6"),

                                value: "29.66"

                            },

                            {

                                num: NumberInt("7"),

                                value: "39.76"

                            },

                            {

                                num: NumberInt("8"),

                                value: "42.26"

                            },

                            {

                                num: NumberInt("9"),

                                value: "39.93"

                            },

                            {

                                num: NumberInt("10"),

                                value: "26.39"

                            },

                            {

                                num: NumberInt("11"),

                                value: "41.22"

                            },

                            {

                                num: NumberInt("12"),

                                value: "23.40"

                            },

                            {

                                num: NumberInt("13"),

                                value: "38.28"

                            },

                            {

                                num: NumberInt("14"),

                                value: "3.70"

                            },

                            {

                                num: NumberInt("15"),

                                value: "39.92"

                            },

                            {

                                num: NumberInt("16"),

                                value: "23.76"

                            },

                            {

                                num: NumberInt("17"),

                                value: "23.76"

                            },

                            {

                                num: NumberInt("18"),

                                value: "36.17"

                            },

                            {

                                num: NumberInt("19"),

                                value: "31.94"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "/td[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "123.95"

                            },

                            {

                                num: NumberInt("1"),

                                value: "23.30"

                            },

                            {

                                num: NumberInt("2"),

                                value: "83.47"

                            },

                            {

                                num: NumberInt("3"),

                                value: "119.92"

                            },

                            {

                                num: NumberInt("4"),

                                value: "92.75"

                            },

                            {

                                num: NumberInt("5"),

                                value: "84.82"

                            },

                            {

                                num: NumberInt("6"),

                                value: "102.01"

                            },

                            {

                                num: NumberInt("7"),

                                value: "115.63"

                            },

                            {

                                num: NumberInt("8"),

                                value: "85.14"

                            },

                            {

                                num: NumberInt("9"),

                                value: "96.41"

                            },

                            {

                                num: NumberInt("10"),

                                value: "99.91"

                            },

                            {

                                num: NumberInt("11"),

                                value: "83.26"

                            },

                            {

                                num: NumberInt("12"),

                                value: "121.69"

                            },

                            {

                                num: NumberInt("13"),

                                value: "75.09"

                            },

                            {

                                num: NumberInt("14"),

                                value: "126.95"

                            },

                            {

                                num: NumberInt("15"),

                                value: "96.37"

                            },

                            {

                                num: NumberInt("16"),

                                value: "114.63"

                            },

                            {

                                num: NumberInt("17"),

                                value: "114.64"

                            },

                            {

                                num: NumberInt("18"),

                                value: "77.51"

                            },

                            {

                                num: NumberInt("19"),

                                value: "92.84"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para9_text",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "20"

                            },

                            {

                                num: NumberInt("1"),

                                value: "10"

                            },

                            {

                                num: NumberInt("2"),

                                value: "15"

                            },

                            {

                                num: NumberInt("3"),

                                value: "16"

                            },

                            {

                                num: NumberInt("4"),

                                value: "10"

                            },

                            {

                                num: NumberInt("5"),

                                value: "18"

                            },

                            {

                                num: NumberInt("6"),

                                value: "12"

                            },

                            {

                                num: NumberInt("7"),

                                value: "14"

                            },

                            {

                                num: NumberInt("8"),

                                value: "10"

                            },

                            {

                                num: NumberInt("9"),

                                value: "11"

                            },

                            {

                                num: NumberInt("10"),

                                value: "10"

                            },

                            {

                                num: NumberInt("11"),

                                value: "10"

                            },

                            {

                                num: NumberInt("12"),

                                value: "29"

                            },

                            {

                                num: NumberInt("13"),

                                value: "122"

                            },

                            {

                                num: NumberInt("14"),

                                value: "20"

                            },

                            {

                                num: NumberInt("15"),

                                value: "11"

                            },

                            {

                                num: NumberInt("16"),

                                value: "10"

                            },

                            {

                                num: NumberInt("17"),

                                value: "11"

                            },

                            {

                                num: NumberInt("18"),

                                value: "85"

                            },

                            {

                                num: NumberInt("19"),

                                value: "10"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para10_linktext",

                        desc: "",

                        relativeXPath: "/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "菲律宾"

                            },

                            {

                                num: NumberInt("1"),

                                value: "罗马尼亚"

                            },

                            {

                                num: NumberInt("2"),

                                value: "新疆阿克苏地区库车市"

                            },

                            {

                                num: NumberInt("3"),

                                value: "内蒙古锡林郭勒盟东乌珠穆沁旗"

                            },

                            {

                                num: NumberInt("4"),

                                value: "青海海西州茫崖市"

                            },

                            {

                                num: NumberInt("5"),

                                value: "新疆塔城地区乌苏市"

                            },

                            {

                                num: NumberInt("6"),

                                value: "四川甘孜州泸定县"

                            },

                            {

                                num: NumberInt("7"),

                                value: "北京房山区"

                            },

                            {

                                num: NumberInt("8"),

                                value: "新疆巴音郭楞州轮台县"

                            },

                            {

                                num: NumberInt("9"),

                                value: "甘肃酒泉市瓜州县"

                            },

                            {

                                num: NumberInt("10"),

                                value: "云南大理州剑川县"

                            },

                            {

                                num: NumberInt("11"),

                                value: "新疆阿克苏地区库车市"

                            },

                            {

                                num: NumberInt("12"),

                                value: "台湾台东县海域"

                            },

                            {

                                num: NumberInt("13"),

                                value: "新疆克孜勒苏州阿克陶县"

                            },

                            {

                                num: NumberInt("14"),

                                value: "印尼塔劳群岛"

                            },

                            {

                                num: NumberInt("15"),

                                value: "甘肃酒泉市瓜州县"

                            },

                            {

                                num: NumberInt("16"),

                                value: "广东河源市源城区（有感）"

                            },

                            {

                                num: NumberInt("17"),

                                value: "广东河源市源城区"

                            },

                            {

                                num: NumberInt("18"),

                                value: "新疆喀什地区叶城县"

                            },

                            {

                                num: NumberInt("19"),

                                value: "西藏那曲市比如县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para11_linkAddress",

                        desc: "",

                        relativeXPath: "/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://news.ceic.ac.cn/CC20230216021009.html"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://news.ceic.ac.cn/CC20230214211651.html"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://news.ceic.ac.cn/CD20230214144016.html"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://news.ceic.ac.cn/CD20230214033510.html"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://news.ceic.ac.cn/CC20230214023849.html"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://news.ceic.ac.cn/CD20230213183848.html"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://news.ceic.ac.cn/CD20230213012336.html"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://news.ceic.ac.cn/CD20230212164224.html"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://news.ceic.ac.cn/CD20230212113728.html"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://news.ceic.ac.cn/CD20230212082746.html"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://news.ceic.ac.cn/CD20230212003204.html"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://news.ceic.ac.cn/CD20230211202949.html"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://news.ceic.ac.cn/CD20230211193548.html"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://news.ceic.ac.cn/CD20230211174729.html"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://news.ceic.ac.cn/CC20230211165507.html"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://news.ceic.ac.cn/CD20230211143954.html"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://news.ceic.ac.cn/CD20230211143530.html"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://news.ceic.ac.cn/CC20230211104143.html"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://news.ceic.ac.cn/CD20230210153027.html"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://news.ceic.ac.cn/CD20230210000631.html"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("2")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "http://www.ceic.ac.cn/history",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "http://www.ceic.ac.cn/history"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("4"),

            nodeName: "循环输入",

            desc: "Text/URL to be entered, multiple lines should be separated by \\n",

            type: "string",

            exampleValue: "20\n50",

            value: "20\n50"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_循环点击下一页_2",

            nodeId: NumberInt("10"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "http://www.ceic.ac.cn/history",

    name: "地震局历史内容爬取",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: "6.1"

        },

        {

            id: NumberInt("1"),

            name: "para6_text",

            desc: "",

            type: "string",

            exampleValue: "2023-02-1602:10:08"

        },

        {

            id: NumberInt("2"),

            name: "para7_text",

            desc: "",

            type: "string",

            exampleValue: "12.50"

        },

        {

            id: NumberInt("3"),

            name: "para8_text",

            desc: "",

            type: "string",

            exampleValue: "123.95"

        },

        {

            id: NumberInt("4"),

            name: "para9_text",

            desc: "",

            type: "string",

            exampleValue: "20"

        },

        {

            id: NumberInt("5"),

            name: "para10_linktext",

            desc: "",

            type: "string",

            exampleValue: "菲律宾"

        },

        {

            id: NumberInt("6"),

            name: "para11_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://news.ceic.ac.cn/CC20230216021009.html"

        }

    ],

    url: "http://www.ceic.ac.cn/history"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63edefed869cb52a8a8f6ed3"),

    containJudge: false,

    desc: "http://www.ceic.ac.cn/history",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("7"),

                NumberInt("8"),

                NumberInt("16")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("2")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "打开网页",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "http://www.ceic.ac.cn/history",

                links: "http://www.ceic.ac.cn/history",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "打开网页",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "打开网页",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("7"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "输入文本",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"weidu1\"]",

                wait: NumberInt("0"),

                value: "2"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("8"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击查询",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"search\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("10")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("2"),

                pathList: "//*[contains(@class, \"tr-red\")]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[3]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[4]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[5]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[6]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[7]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[8]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[9]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[10]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[11]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[12]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[13]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[14]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[15]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[16]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[17]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[18]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[19]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[20]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[21]",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "6.12023-02-16 02:10:0812.50123.9520菲律宾"

                            },

                            {

                                num: NumberInt("1"),

                                value: "5.62023-02-14 21:16:5145.1523.3010罗马尼亚"

                            },

                            {

                                num: NumberInt("2"),

                                value: "3.02023-02-14 14:40:1641.1483.4715新疆阿克苏地区库车市"

                            },

                            {

                                num: NumberInt("3"),

                                value: "3.62023-02-14 03:35:1046.62119.9216内蒙古锡林郭勒盟东乌珠穆沁旗"

                            },

                            {

                                num: NumberInt("4"),

                                value: "4.32023-02-14 02:38:4838.9692.7510青海海西州茫崖市"

                            },

                            {

                                num: NumberInt("5"),

                                value: "3.62023-02-13 18:38:4743.7884.8218新疆塔城地区乌苏市"

                            },

                            {

                                num: NumberInt("6"),

                                value: "3.12023-02-13 01:23:3529.66102.0112四川甘孜州泸定县"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2.82023-02-12 16:42:2339.76115.6314北京房山区"

                            },

                            {

                                num: NumberInt("8"),

                                value: "3.22023-02-12 11:37:2742.2685.1410新疆巴音郭楞州轮台县"

                            },

                            {

                                num: NumberInt("9"),

                                value: "3.32023-02-12 08:27:4539.9396.4111甘肃酒泉市瓜州县"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2.92023-02-12 00:32:0326.3999.9110云南大理州剑川县"

                            },

                            {

                                num: NumberInt("11"),

                                value: "3.02023-02-11 20:29:4841.2283.2610新疆阿克苏地区库车市"

                            },

                            {

                                num: NumberInt("12"),

                                value: "4.22023-02-11 19:35:4723.40121.6929台湾台东县海域"

                            },

                            {

                                num: NumberInt("13"),

                                value: "3.12023-02-11 17:47:2938.2875.09122新疆克孜勒苏州阿克陶县"

                            },

                            {

                                num: NumberInt("14"),

                                value: "5.82023-02-11 16:55:063.70126.9520印尼塔劳群岛"

                            },

                            {

                                num: NumberInt("15"),

                                value: "2.92023-02-11 14:39:5339.9296.3711甘肃酒泉市瓜州县"

                            },

                            {

                                num: NumberInt("16"),

                                value: "2.82023-02-11 14:35:3023.76114.6310广东河源市源城区（有感）"

                            },

                            {

                                num: NumberInt("17"),

                                value: "4.32023-02-11 10:41:4223.76114.6411广东河源市源城区"

                            },

                            {

                                num: NumberInt("18"),

                                value: "3.02023-02-10 15:30:2736.1777.5185新疆喀什地区叶城县"

                            },

                            {

                                num: NumberInt("19"),

                                value: "3.02023-02-10 00:06:3131.9492.8410西藏那曲市比如县"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"tr-red\")]/td[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"cid\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "6.12023-02-16 02:10:0812.50123.9520菲律宾"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "震级(M)发震时刻(UTC+8)纬度(°)经度(°)深度(千米)参考位置"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "5.62023-02-14 21:16:5145.1523.3010罗马尼亚"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.02023-02-14 14:40:1641.1483.4715新疆阿克苏地区库车市"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.62023-02-14 03:35:1046.62119.9216内蒙古锡林郭勒盟东乌珠穆沁旗"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[6]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "4.32023-02-14 02:38:4838.9692.7510青海海西州茫崖市"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[7]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.62023-02-13 18:38:4743.7884.8218新疆塔城地区乌苏市"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para9_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[8]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.12023-02-13 01:23:3529.66102.0112四川甘孜州泸定县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para10_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[9]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2.82023-02-12 16:42:2339.76115.6314北京房山区"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para11_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[10]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.22023-02-12 11:37:2742.2685.1410新疆巴音郭楞州轮台县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para12_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[11]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.32023-02-12 08:27:4539.9396.4111甘肃酒泉市瓜州县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para13_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[12]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2.92023-02-12 00:32:0326.3999.9110云南大理州剑川县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para14_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[13]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.02023-02-11 20:29:4841.2283.2610新疆阿克苏地区库车市"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para15_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[14]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "4.22023-02-11 19:35:4723.40121.6929台湾台东县海域"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para16_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[15]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.12023-02-11 17:47:2938.2875.09122新疆克孜勒苏州阿克陶县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para17_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[16]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "5.82023-02-11 16:55:063.70126.9520印尼塔劳群岛"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para18_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[17]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2.92023-02-11 14:39:5339.9296.3711甘肃酒泉市瓜州县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para19_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[18]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2.82023-02-11 14:35:3023.76114.6310广东河源市源城区（有感）"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para20_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[19]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "4.32023-02-11 10:41:4223.76114.6411广东河源市源城区"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para21_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[20]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.02023-02-10 15:30:2736.1777.5185新疆喀什地区叶城县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para22_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[21]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "3.02023-02-10 00:06:3131.9492.8410西藏那曲市比如县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para23_linktext",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[2]/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "菲律宾"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para24_linkAddress",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[2]/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://news.ceic.ac.cn/CC20230216021009.html"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("14"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("15")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("15"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("16"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("17"),

                NumberInt("18"),

                NumberInt("19")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("2"),

                pathList: "//*[contains(@class, \"tr-red\")]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[3]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[4]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[5]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[6]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[7]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[8]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[9]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[10]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[11]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[12]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[13]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[14]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[15]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[16]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[17]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[18]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[19]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[20]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[21]",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("17"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para25_text",

                        desc: "",

                        relativeXPath: "/td",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "6.1"

                            },

                            {

                                num: NumberInt("1"),

                                value: "5.6"

                            },

                            {

                                num: NumberInt("2"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("3"),

                                value: "3.6"

                            },

                            {

                                num: NumberInt("4"),

                                value: "4.3"

                            },

                            {

                                num: NumberInt("5"),

                                value: "3.6"

                            },

                            {

                                num: NumberInt("6"),

                                value: "3.1"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2.8"

                            },

                            {

                                num: NumberInt("8"),

                                value: "3.2"

                            },

                            {

                                num: NumberInt("9"),

                                value: "3.3"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2.9"

                            },

                            {

                                num: NumberInt("11"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("12"),

                                value: "4.2"

                            },

                            {

                                num: NumberInt("13"),

                                value: "3.1"

                            },

                            {

                                num: NumberInt("14"),

                                value: "5.8"

                            },

                            {

                                num: NumberInt("15"),

                                value: "2.9"

                            },

                            {

                                num: NumberInt("16"),

                                value: "2.8"

                            },

                            {

                                num: NumberInt("17"),

                                value: "4.3"

                            },

                            {

                                num: NumberInt("18"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("19"),

                                value: "3.0"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para26_text",

                        desc: "",

                        relativeXPath: "/td[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2023-02-1602:10:08"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2023-02-1421:16:51"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2023-02-1414:40:16"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2023-02-1403:35:10"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2023-02-1402:38:48"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2023-02-1318:38:47"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2023-02-1301:23:35"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2023-02-1216:42:23"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2023-02-1211:37:27"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2023-02-1208:27:45"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2023-02-1200:32:03"

                            },

                            {

                                num: NumberInt("11"),

                                value: "2023-02-1120:29:48"

                            },

                            {

                                num: NumberInt("12"),

                                value: "2023-02-1119:35:47"

                            },

                            {

                                num: NumberInt("13"),

                                value: "2023-02-1117:47:29"

                            },

                            {

                                num: NumberInt("14"),

                                value: "2023-02-1116:55:06"

                            },

                            {

                                num: NumberInt("15"),

                                value: "2023-02-1114:39:53"

                            },

                            {

                                num: NumberInt("16"),

                                value: "2023-02-1114:35:30"

                            },

                            {

                                num: NumberInt("17"),

                                value: "2023-02-1110:41:42"

                            },

                            {

                                num: NumberInt("18"),

                                value: "2023-02-1015:30:27"

                            },

                            {

                                num: NumberInt("19"),

                                value: "2023-02-1000:06:31"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para27_text",

                        desc: "",

                        relativeXPath: "/td[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "12.50"

                            },

                            {

                                num: NumberInt("1"),

                                value: "45.15"

                            },

                            {

                                num: NumberInt("2"),

                                value: "41.14"

                            },

                            {

                                num: NumberInt("3"),

                                value: "46.62"

                            },

                            {

                                num: NumberInt("4"),

                                value: "38.96"

                            },

                            {

                                num: NumberInt("5"),

                                value: "43.78"

                            },

                            {

                                num: NumberInt("6"),

                                value: "29.66"

                            },

                            {

                                num: NumberInt("7"),

                                value: "39.76"

                            },

                            {

                                num: NumberInt("8"),

                                value: "42.26"

                            },

                            {

                                num: NumberInt("9"),

                                value: "39.93"

                            },

                            {

                                num: NumberInt("10"),

                                value: "26.39"

                            },

                            {

                                num: NumberInt("11"),

                                value: "41.22"

                            },

                            {

                                num: NumberInt("12"),

                                value: "23.40"

                            },

                            {

                                num: NumberInt("13"),

                                value: "38.28"

                            },

                            {

                                num: NumberInt("14"),

                                value: "3.70"

                            },

                            {

                                num: NumberInt("15"),

                                value: "39.92"

                            },

                            {

                                num: NumberInt("16"),

                                value: "23.76"

                            },

                            {

                                num: NumberInt("17"),

                                value: "23.76"

                            },

                            {

                                num: NumberInt("18"),

                                value: "36.17"

                            },

                            {

                                num: NumberInt("19"),

                                value: "31.94"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para28_text",

                        desc: "",

                        relativeXPath: "/td[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "123.95"

                            },

                            {

                                num: NumberInt("1"),

                                value: "23.30"

                            },

                            {

                                num: NumberInt("2"),

                                value: "83.47"

                            },

                            {

                                num: NumberInt("3"),

                                value: "119.92"

                            },

                            {

                                num: NumberInt("4"),

                                value: "92.75"

                            },

                            {

                                num: NumberInt("5"),

                                value: "84.82"

                            },

                            {

                                num: NumberInt("6"),

                                value: "102.01"

                            },

                            {

                                num: NumberInt("7"),

                                value: "115.63"

                            },

                            {

                                num: NumberInt("8"),

                                value: "85.14"

                            },

                            {

                                num: NumberInt("9"),

                                value: "96.41"

                            },

                            {

                                num: NumberInt("10"),

                                value: "99.91"

                            },

                            {

                                num: NumberInt("11"),

                                value: "83.26"

                            },

                            {

                                num: NumberInt("12"),

                                value: "121.69"

                            },

                            {

                                num: NumberInt("13"),

                                value: "75.09"

                            },

                            {

                                num: NumberInt("14"),

                                value: "126.95"

                            },

                            {

                                num: NumberInt("15"),

                                value: "96.37"

                            },

                            {

                                num: NumberInt("16"),

                                value: "114.63"

                            },

                            {

                                num: NumberInt("17"),

                                value: "114.64"

                            },

                            {

                                num: NumberInt("18"),

                                value: "77.51"

                            },

                            {

                                num: NumberInt("19"),

                                value: "92.84"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para29_text",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "20"

                            },

                            {

                                num: NumberInt("1"),

                                value: "10"

                            },

                            {

                                num: NumberInt("2"),

                                value: "15"

                            },

                            {

                                num: NumberInt("3"),

                                value: "16"

                            },

                            {

                                num: NumberInt("4"),

                                value: "10"

                            },

                            {

                                num: NumberInt("5"),

                                value: "18"

                            },

                            {

                                num: NumberInt("6"),

                                value: "12"

                            },

                            {

                                num: NumberInt("7"),

                                value: "14"

                            },

                            {

                                num: NumberInt("8"),

                                value: "10"

                            },

                            {

                                num: NumberInt("9"),

                                value: "11"

                            },

                            {

                                num: NumberInt("10"),

                                value: "10"

                            },

                            {

                                num: NumberInt("11"),

                                value: "10"

                            },

                            {

                                num: NumberInt("12"),

                                value: "29"

                            },

                            {

                                num: NumberInt("13"),

                                value: "122"

                            },

                            {

                                num: NumberInt("14"),

                                value: "20"

                            },

                            {

                                num: NumberInt("15"),

                                value: "11"

                            },

                            {

                                num: NumberInt("16"),

                                value: "10"

                            },

                            {

                                num: NumberInt("17"),

                                value: "11"

                            },

                            {

                                num: NumberInt("18"),

                                value: "85"

                            },

                            {

                                num: NumberInt("19"),

                                value: "10"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para30_linktext",

                        desc: "",

                        relativeXPath: "/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "菲律宾"

                            },

                            {

                                num: NumberInt("1"),

                                value: "罗马尼亚"

                            },

                            {

                                num: NumberInt("2"),

                                value: "新疆阿克苏地区库车市"

                            },

                            {

                                num: NumberInt("3"),

                                value: "内蒙古锡林郭勒盟东乌珠穆沁旗"

                            },

                            {

                                num: NumberInt("4"),

                                value: "青海海西州茫崖市"

                            },

                            {

                                num: NumberInt("5"),

                                value: "新疆塔城地区乌苏市"

                            },

                            {

                                num: NumberInt("6"),

                                value: "四川甘孜州泸定县"

                            },

                            {

                                num: NumberInt("7"),

                                value: "北京房山区"

                            },

                            {

                                num: NumberInt("8"),

                                value: "新疆巴音郭楞州轮台县"

                            },

                            {

                                num: NumberInt("9"),

                                value: "甘肃酒泉市瓜州县"

                            },

                            {

                                num: NumberInt("10"),

                                value: "云南大理州剑川县"

                            },

                            {

                                num: NumberInt("11"),

                                value: "新疆阿克苏地区库车市"

                            },

                            {

                                num: NumberInt("12"),

                                value: "台湾台东县海域"

                            },

                            {

                                num: NumberInt("13"),

                                value: "新疆克孜勒苏州阿克陶县"

                            },

                            {

                                num: NumberInt("14"),

                                value: "印尼塔劳群岛"

                            },

                            {

                                num: NumberInt("15"),

                                value: "甘肃酒泉市瓜州县"

                            },

                            {

                                num: NumberInt("16"),

                                value: "广东河源市源城区（有感）"

                            },

                            {

                                num: NumberInt("17"),

                                value: "广东河源市源城区"

                            },

                            {

                                num: NumberInt("18"),

                                value: "新疆喀什地区叶城县"

                            },

                            {

                                num: NumberInt("19"),

                                value: "西藏那曲市比如县"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para31_linkAddress",

                        desc: "",

                        relativeXPath: "/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://news.ceic.ac.cn/CC20230216021009.html"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://news.ceic.ac.cn/CC20230214211651.html"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://news.ceic.ac.cn/CD20230214144016.html"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://news.ceic.ac.cn/CD20230214033510.html"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://news.ceic.ac.cn/CC20230214023849.html"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://news.ceic.ac.cn/CD20230213183848.html"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://news.ceic.ac.cn/CD20230213012336.html"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://news.ceic.ac.cn/CD20230212164224.html"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://news.ceic.ac.cn/CD20230212113728.html"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://news.ceic.ac.cn/CD20230212082746.html"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://news.ceic.ac.cn/CD20230212003204.html"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://news.ceic.ac.cn/CD20230211202949.html"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://news.ceic.ac.cn/CD20230211193548.html"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://news.ceic.ac.cn/CD20230211174729.html"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://news.ceic.ac.cn/CC20230211165507.html"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://news.ceic.ac.cn/CD20230211143954.html"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://news.ceic.ac.cn/CD20230211143530.html"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://news.ceic.ac.cn/CC20230211104143.html"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://news.ceic.ac.cn/CD20230210153027.html"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://news.ceic.ac.cn/CD20230210000631.html"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("18"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击详情页面",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"cid\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("19"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("20")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[3]/div[1]/div[1]/div[2]/table[1]/tbody[1]/tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("20"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "存储详情页具体内容",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para32_text",

                        desc: "",

                        relativeXPath: "/th",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "发震时刻："

                            },

                            {

                                num: NumberInt("1"),

                                value: "纬度："

                            },

                            {

                                num: NumberInt("2"),

                                value: "经度："

                            },

                            {

                                num: NumberInt("3"),

                                value: "深度："

                            },

                            {

                                num: NumberInt("4"),

                                value: "震级："

                            },

                            {

                                num: NumberInt("5"),

                                value: "参考位置："

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para33_text",

                        desc: "",

                        relativeXPath: "/td[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2023-02-1602:10:08"

                            },

                            {

                                num: NumberInt("1"),

                                value: "12.50°"

                            },

                            {

                                num: NumberInt("2"),

                                value: "123.95°"

                            },

                            {

                                num: NumberInt("3"),

                                value: "20千米"

                            },

                            {

                                num: NumberInt("4"),

                                value: "6.1"

                            },

                            {

                                num: NumberInt("5"),

                                value: "菲律宾"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "打开网页",

            value: "http://www.ceic.ac.cn/history",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "http://www.ceic.ac.cn/history"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "输入文本",

            nodeId: NumberInt("7"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "2",

            value: "2"

        }

    ],

    links: "http://www.ceic.ac.cn/history",

    name: "地震局新的测试",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para25_text",

            desc: "",

            type: "string",

            exampleValue: "6.1"

        },

        {

            id: NumberInt("1"),

            name: "para26_text",

            desc: "",

            type: "string",

            exampleValue: "2023-02-1602:10:08"

        },

        {

            id: NumberInt("2"),

            name: "para27_text",

            desc: "",

            type: "string",

            exampleValue: "12.50"

        },

        {

            id: NumberInt("3"),

            name: "para28_text",

            desc: "",

            type: "string",

            exampleValue: "123.95"

        },

        {

            id: NumberInt("4"),

            name: "para29_text",

            desc: "",

            type: "string",

            exampleValue: "20"

        },

        {

            id: NumberInt("5"),

            name: "para30_linktext",

            desc: "",

            type: "string",

            exampleValue: "菲律宾"

        },

        {

            id: NumberInt("6"),

            name: "para31_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://news.ceic.ac.cn/CC20230216021009.html"

        },

        {

            id: NumberInt("7"),

            name: "para32_text",

            desc: "",

            type: "string",

            exampleValue: "发震时刻："

        },

        {

            id: NumberInt("8"),

            name: "para33_text",

            desc: "",

            type: "string",

            exampleValue: "2023-02-1602:10:08"

        }

    ],

    url: "http://www.ceic.ac.cn/history"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63ee0e64869cb52a8a8f6ed5"),

    containJudge: false,

    desc: "chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6"),

                NumberInt("10")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "0",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Loop",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("6"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("10"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("12"),

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("11"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("12"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("14"),

                NumberInt("15")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("4"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[1]/div[4]/p",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("4"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　【基本案情】"

                            },

                            {

                                num: NumberInt("1"),

                                value: "　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。"

                            },

                            {

                                num: NumberInt("2"),

                                value: "　　【裁判结果】"

                            },

                            {

                                num: NumberInt("3"),

                                value: "　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。"

                            },

                            {

                                num: NumberInt("4"),

                                value: "　　【典型意义】"

                            },

                            {

                                num: NumberInt("5"),

                                value: "　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。"

                            },

                            {

                                num: NumberInt("1"),

                                value: "　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。"

                            },

                            {

                                num: NumberInt("2"),

                                value: "　　【裁判结果】"

                            },

                            {

                                num: NumberInt("3"),

                                value: "　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。"

                            },

                            {

                                num: NumberInt("4"),

                                value: "　　【典型意义】"

                            },

                            {

                                num: NumberInt("5"),

                                value: "　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　【基本案情】"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("14"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("15"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("16"),

                NumberInt("17")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("4"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[1]/div[4]/p",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("16"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("4"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　【基本案情】"

                            },

                            {

                                num: NumberInt("1"),

                                value: "　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。"

                            },

                            {

                                num: NumberInt("2"),

                                value: "　　【裁判结果】"

                            },

                            {

                                num: NumberInt("3"),

                                value: "　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。"

                            },

                            {

                                num: NumberInt("4"),

                                value: "　　【典型意义】"

                            },

                            {

                                num: NumberInt("5"),

                                value: "　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。"

                            },

                            {

                                num: NumberInt("1"),

                                value: "　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。"

                            },

                            {

                                num: NumberInt("2"),

                                value: "　　【裁判结果】"

                            },

                            {

                                num: NumberInt("3"),

                                value: "　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。"

                            },

                            {

                                num: NumberInt("4"),

                                value: "　　【典型意义】"

                            },

                            {

                                num: NumberInt("5"),

                                value: "　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　【基本案情】"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("10"),

            index: NumberInt("17"),

            parentId: NumberInt("8"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("18")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("18"),

            parentId: NumberInt("10"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("2"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("10"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        },

        {

            id: NumberInt("3"),

            name: "loopTimes_Loop_3",

            nodeId: NumberInt("17"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法网自测",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para3_text",

            desc: "",

            type: "string",

            exampleValue: "　　【基本案情】"

        }

    ],

    url: "chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63ef19ebca6c77f85032efad"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_linktext",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

                            },

                            {

                                num: NumberInt("1"),

                                value: "灵宝豫翔水产养殖有限公司诉三门峡市城乡一体化示范区管理委员会、灵宝市大王镇人民.."

                            },

                            {

                                num: NumberInt("2"),

                                value: "碌曲县人民检察院诉碌曲县水务水电局行政公益诉讼案"

                            },

                            {

                                num: NumberInt("3"),

                                value: "新乡市生态环境局与封丘县龙润精细化工有限公司生态环境损害赔偿司法确认案"

                            },

                            {

                                num: NumberInt("4"),

                                value: "黑龙江阳光种业有限公司诉植物新品种复审委员会植物新品种申请驳回复审行政纠纷案"

                            },

                            {

                                num: NumberInt("5"),

                                value: "贵州省遵义县巾英铁厂诉贵州省遵义市人民政府行政征收补偿案"

                            },

                            {

                                num: NumberInt("6"),

                                value: "王某某诉云南省保山市自然资源和规划局限期拆除决定及云南省保山市人民政府行政复议案"

                            },

                            {

                                num: NumberInt("7"),

                                value: "邹某某等17人诉重庆绿岛新区管理委员会行政协议五案"

                            },

                            {

                                num: NumberInt("8"),

                                value: "旬阳县润农房地产开发有限公司诉陕西省旬阳县住房和城乡建设局行政行为违法及行政赔.."

                            },

                            {

                                num: NumberInt("9"),

                                value: "彭某某等40人诉福建省福安市人民政府等四单位强制拆除行为案"

                            },

                            {

                                num: NumberInt("10"),

                                value: "发得顺实业（深圳）有限公司诉广东省佛山市禅城区人民政府房屋征收补偿决定及广东省.."

                            },

                            {

                                num: NumberInt("11"),

                                value: "衢州金宏建设工程有限公司诉浙江省衢州市社会保险事业管理局行政给付案"

                            },

                            {

                                num: NumberInt("12"),

                                value: "沈某某诉浙江省宁波市奉化区综合行政执法局政府信息公开案"

                            },

                            {

                                num: NumberInt("13"),

                                value: "湖北省京山昌盛园林有限公司诉湖北省京山市人民政府、湖北省京山市新市镇人民政府行.."

                            },

                            {

                                num: NumberInt("14"),

                                value: "蔡某某诉山东省泗水县人民政府土地征收案"

                            },

                            {

                                num: NumberInt("15"),

                                value: "毕某某诉内蒙古自治区宁城县市场监督管理局行政处罚案"

                            },

                            {

                                num: NumberInt("16"),

                                value: "王某某诉吉林省白山市人力资源和社会保障局行政确认案"

                            },

                            {

                                num: NumberInt("17"),

                                value: "江苏中厦集团有限公司诉黑龙江省大庆市让胡路区人民政府住房和城乡建设局行政处罚案；"

                            },

                            {

                                num: NumberInt("18"),

                                value: "北京富宁经贸有限责任公司宁夏特产连锁超市诉北京市东城区市场监督管理局行政处罚决.."

                            },

                            {

                                num: NumberInt("19"),

                                value: "海口博泰隆房地产开发有限公司诉海口市人民政府有偿收回国有土地使用权案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_linkAddress",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397580.shtml"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397563.shtml"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397553.shtml"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397536.shtml"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.chinacourt.org/article/detail/2021/09/id/6250921.shtml"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174681.shtml"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174680.shtml"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174679.shtml"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174677.shtml"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174673.shtml"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174671.shtml"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174669.shtml"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174668.shtml"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174662.shtml"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174661.shtml"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174658.shtml"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174655.shtml"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174654.shtml"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174651.shtml"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.chinacourt.org/article/detail/2020/07/id/5378776.shtml"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案[2021-11-25]"

                            },

                            {

                                num: NumberInt("1"),

                                value: "灵宝豫翔水产养殖有限公司诉三门峡市城乡一体化示范区管理委员会、灵宝市大王镇人民..[2021-11-25]"

                            },

                            {

                                num: NumberInt("2"),

                                value: "碌曲县人民检察院诉碌曲县水务水电局行政公益诉讼案[2021-11-25]"

                            },

                            {

                                num: NumberInt("3"),

                                value: "新乡市生态环境局与封丘县龙润精细化工有限公司生态环境损害赔偿司法确认案[2021-11-25]"

                            },

                            {

                                num: NumberInt("4"),

                                value: "黑龙江阳光种业有限公司诉植物新品种复审委员会植物新品种申请驳回复审行政纠纷案[2021-09-07]"

                            },

                            {

                                num: NumberInt("5"),

                                value: "贵州省遵义县巾英铁厂诉贵州省遵义市人民政府行政征收补偿案[2021-07-29]"

                            },

                            {

                                num: NumberInt("6"),

                                value: "王某某诉云南省保山市自然资源和规划局限期拆除决定及云南省保山市人民政府行政复议案[2021-07-29]"

                            },

                            {

                                num: NumberInt("7"),

                                value: "邹某某等17人诉重庆绿岛新区管理委员会行政协议五案[2021-07-29]"

                            },

                            {

                                num: NumberInt("8"),

                                value: "旬阳县润农房地产开发有限公司诉陕西省旬阳县住房和城乡建设局行政行为违法及行政赔..[2021-07-29]"

                            },

                            {

                                num: NumberInt("9"),

                                value: "彭某某等40人诉福建省福安市人民政府等四单位强制拆除行为案[2021-07-29]"

                            },

                            {

                                num: NumberInt("10"),

                                value: "发得顺实业（深圳）有限公司诉广东省佛山市禅城区人民政府房屋征收补偿决定及广东省..[2021-07-29]"

                            },

                            {

                                num: NumberInt("11"),

                                value: "衢州金宏建设工程有限公司诉浙江省衢州市社会保险事业管理局行政给付案[2021-07-29]"

                            },

                            {

                                num: NumberInt("12"),

                                value: "沈某某诉浙江省宁波市奉化区综合行政执法局政府信息公开案[2021-07-29]"

                            },

                            {

                                num: NumberInt("13"),

                                value: "湖北省京山昌盛园林有限公司诉湖北省京山市人民政府、湖北省京山市新市镇人民政府行..[2021-07-29]"

                            },

                            {

                                num: NumberInt("14"),

                                value: "蔡某某诉山东省泗水县人民政府土地征收案[2021-07-29]"

                            },

                            {

                                num: NumberInt("15"),

                                value: "毕某某诉内蒙古自治区宁城县市场监督管理局行政处罚案[2021-07-29]"

                            },

                            {

                                num: NumberInt("16"),

                                value: "王某某诉吉林省白山市人力资源和社会保障局行政确认案[2021-07-29]"

                            },

                            {

                                num: NumberInt("17"),

                                value: "江苏中厦集团有限公司诉黑龙江省大庆市让胡路区人民政府住房和城乡建设局行政处罚案；[2021-07-29]"

                            },

                            {

                                num: NumberInt("18"),

                                value: "北京富宁经贸有限责任公司宁夏特产连锁超市诉北京市东城区市场监督管理局行政处罚决..[2021-07-29]"

                            },

                            {

                                num: NumberInt("19"),

                                value: "海口博泰隆房地产开发有限公司诉海口市人民政府有偿收回国有土地使用权案[2020-07-27]"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("8"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("9")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("9"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para4_linktext",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

                            },

                            {

                                num: NumberInt("1"),

                                value: "灵宝豫翔水产养殖有限公司诉三门峡市城乡一体化示范区管理委员会、灵宝市大王镇人民.."

                            },

                            {

                                num: NumberInt("2"),

                                value: "碌曲县人民检察院诉碌曲县水务水电局行政公益诉讼案"

                            },

                            {

                                num: NumberInt("3"),

                                value: "新乡市生态环境局与封丘县龙润精细化工有限公司生态环境损害赔偿司法确认案"

                            },

                            {

                                num: NumberInt("4"),

                                value: "黑龙江阳光种业有限公司诉植物新品种复审委员会植物新品种申请驳回复审行政纠纷案"

                            },

                            {

                                num: NumberInt("5"),

                                value: "贵州省遵义县巾英铁厂诉贵州省遵义市人民政府行政征收补偿案"

                            },

                            {

                                num: NumberInt("6"),

                                value: "王某某诉云南省保山市自然资源和规划局限期拆除决定及云南省保山市人民政府行政复议案"

                            },

                            {

                                num: NumberInt("7"),

                                value: "邹某某等17人诉重庆绿岛新区管理委员会行政协议五案"

                            },

                            {

                                num: NumberInt("8"),

                                value: "旬阳县润农房地产开发有限公司诉陕西省旬阳县住房和城乡建设局行政行为违法及行政赔.."

                            },

                            {

                                num: NumberInt("9"),

                                value: "彭某某等40人诉福建省福安市人民政府等四单位强制拆除行为案"

                            },

                            {

                                num: NumberInt("10"),

                                value: "发得顺实业（深圳）有限公司诉广东省佛山市禅城区人民政府房屋征收补偿决定及广东省.."

                            },

                            {

                                num: NumberInt("11"),

                                value: "衢州金宏建设工程有限公司诉浙江省衢州市社会保险事业管理局行政给付案"

                            },

                            {

                                num: NumberInt("12"),

                                value: "沈某某诉浙江省宁波市奉化区综合行政执法局政府信息公开案"

                            },

                            {

                                num: NumberInt("13"),

                                value: "湖北省京山昌盛园林有限公司诉湖北省京山市人民政府、湖北省京山市新市镇人民政府行.."

                            },

                            {

                                num: NumberInt("14"),

                                value: "蔡某某诉山东省泗水县人民政府土地征收案"

                            },

                            {

                                num: NumberInt("15"),

                                value: "毕某某诉内蒙古自治区宁城县市场监督管理局行政处罚案"

                            },

                            {

                                num: NumberInt("16"),

                                value: "王某某诉吉林省白山市人力资源和社会保障局行政确认案"

                            },

                            {

                                num: NumberInt("17"),

                                value: "江苏中厦集团有限公司诉黑龙江省大庆市让胡路区人民政府住房和城乡建设局行政处罚案；"

                            },

                            {

                                num: NumberInt("18"),

                                value: "北京富宁经贸有限责任公司宁夏特产连锁超市诉北京市东城区市场监督管理局行政处罚决.."

                            },

                            {

                                num: NumberInt("19"),

                                value: "海口博泰隆房地产开发有限公司诉海口市人民政府有偿收回国有土地使用权案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para5_linkAddress",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397580.shtml"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397563.shtml"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397553.shtml"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397536.shtml"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.chinacourt.org/article/detail/2021/09/id/6250921.shtml"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174681.shtml"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174680.shtml"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174679.shtml"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174677.shtml"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174673.shtml"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174671.shtml"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174669.shtml"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174668.shtml"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174662.shtml"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174661.shtml"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174658.shtml"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174655.shtml"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174654.shtml"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174651.shtml"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.chinacourt.org/article/detail/2020/07/id/5378776.shtml"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法网大分类测试",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para4_linktext",

            desc: "",

            type: "string",

            exampleValue: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

        },

        {

            id: NumberInt("1"),

            name: "para5_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/detail/2021/11/id/6397580.shtml"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63ef274fa496190e317dc61c"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA/page/1.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA/page/1.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA/page/1.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA/page/1.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA/page/1.shtml"

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA/page/1.shtml",

    name: "中国法网翻页测试",

    outputParameters: [ ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA/page/1.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63ef2dddca6c77f85032efaf"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3"),

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "0",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案[2021-11-25]"

                            },

                            {

                                num: NumberInt("1"),

                                value: "灵宝豫翔水产养殖有限公司诉三门峡市城乡一体化示范区管理委员会、灵宝市大王镇人民..[2021-11-25]"

                            },

                            {

                                num: NumberInt("2"),

                                value: "碌曲县人民检察院诉碌曲县水务水电局行政公益诉讼案[2021-11-25]"

                            },

                            {

                                num: NumberInt("3"),

                                value: "新乡市生态环境局与封丘县龙润精细化工有限公司生态环境损害赔偿司法确认案[2021-11-25]"

                            },

                            {

                                num: NumberInt("4"),

                                value: "黑龙江阳光种业有限公司诉植物新品种复审委员会植物新品种申请驳回复审行政纠纷案[2021-09-07]"

                            },

                            {

                                num: NumberInt("5"),

                                value: "贵州省遵义县巾英铁厂诉贵州省遵义市人民政府行政征收补偿案[2021-07-29]"

                            },

                            {

                                num: NumberInt("6"),

                                value: "王某某诉云南省保山市自然资源和规划局限期拆除决定及云南省保山市人民政府行政复议案[2021-07-29]"

                            },

                            {

                                num: NumberInt("7"),

                                value: "邹某某等17人诉重庆绿岛新区管理委员会行政协议五案[2021-07-29]"

                            },

                            {

                                num: NumberInt("8"),

                                value: "旬阳县润农房地产开发有限公司诉陕西省旬阳县住房和城乡建设局行政行为违法及行政赔..[2021-07-29]"

                            },

                            {

                                num: NumberInt("9"),

                                value: "彭某某等40人诉福建省福安市人民政府等四单位强制拆除行为案[2021-07-29]"

                            },

                            {

                                num: NumberInt("10"),

                                value: "发得顺实业（深圳）有限公司诉广东省佛山市禅城区人民政府房屋征收补偿决定及广东省..[2021-07-29]"

                            },

                            {

                                num: NumberInt("11"),

                                value: "衢州金宏建设工程有限公司诉浙江省衢州市社会保险事业管理局行政给付案[2021-07-29]"

                            },

                            {

                                num: NumberInt("12"),

                                value: "沈某某诉浙江省宁波市奉化区综合行政执法局政府信息公开案[2021-07-29]"

                            },

                            {

                                num: NumberInt("13"),

                                value: "湖北省京山昌盛园林有限公司诉湖北省京山市人民政府、湖北省京山市新市镇人民政府行..[2021-07-29]"

                            },

                            {

                                num: NumberInt("14"),

                                value: "蔡某某诉山东省泗水县人民政府土地征收案[2021-07-29]"

                            },

                            {

                                num: NumberInt("15"),

                                value: "毕某某诉内蒙古自治区宁城县市场监督管理局行政处罚案[2021-07-29]"

                            },

                            {

                                num: NumberInt("16"),

                                value: "王某某诉吉林省白山市人力资源和社会保障局行政确认案[2021-07-29]"

                            },

                            {

                                num: NumberInt("17"),

                                value: "江苏中厦集团有限公司诉黑龙江省大庆市让胡路区人民政府住房和城乡建设局行政处罚案；[2021-07-29]"

                            },

                            {

                                num: NumberInt("18"),

                                value: "北京富宁经贸有限责任公司宁夏特产连锁超市诉北京市东城区市场监督管理局行政处罚决..[2021-07-29]"

                            },

                            {

                                num: NumberInt("19"),

                                value: "海口博泰隆房地产开发有限公司诉海口市人民政府有偿收回国有土地使用权案[2020-07-27]"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("4"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法律网翻页",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案[2021-11-25]"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f2b347a496190e317dc624"),

    containJudge: false,

    desc: "http://aiwork.huilan.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4"),

                NumberInt("5")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "http://aiwork.huilan.com",

                links: "http://aiwork.huilan.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"el-form\")]/div[1]/div[1]/div[1]/input[1]",

                wait: NumberInt("0"),

                value: "duyp"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"el-input--small\")]/input[1]",

                wait: NumberInt("0"),

                value: "wozaijia3456"

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"el-button\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("10"),

                NumberInt("9")

            ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div/div[2]/div[2]/div[3]/div/div[1]/div[2]/div/div/div/div[1]/div/div/div/div[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"tab-2022\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[2]/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[3]/table[1]/tbody[1]/tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/td[1]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "一月"

                            },

                            {

                                num: NumberInt("1"),

                                value: "二月"

                            },

                            {

                                num: NumberInt("2"),

                                value: "三月"

                            },

                            {

                                num: NumberInt("3"),

                                value: "四月"

                            },

                            {

                                num: NumberInt("4"),

                                value: "五月"

                            },

                            {

                                num: NumberInt("5"),

                                value: "六月"

                            },

                            {

                                num: NumberInt("6"),

                                value: "七月"

                            },

                            {

                                num: NumberInt("7"),

                                value: "八月"

                            },

                            {

                                num: NumberInt("8"),

                                value: "九月"

                            },

                            {

                                num: NumberInt("9"),

                                value: "十月"

                            },

                            {

                                num: NumberInt("10"),

                                value: "十一月"

                            },

                            {

                                num: NumberInt("11"),

                                value: "十二月"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("1"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("2"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("3"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("4"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("5"),

                                value: "吴金妹"

                            },

                            {

                                num: NumberInt("6"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("7"),

                                value: "周志伟"

                            },

                            {

                                num: NumberInt("8"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("9"),

                                value: "范殿炜"

                            },

                            {

                                num: NumberInt("10"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("11"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/td[3]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("1"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("2"),

                                value: "邵亚瑞"

                            },

                            {

                                num: NumberInt("3"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("4"),

                                value: "杜丹丹"

                            },

                            {

                                num: NumberInt("5"),

                                value: "周志伟"

                            },

                            {

                                num: NumberInt("6"),

                                value: "蔡号"

                            },

                            {

                                num: NumberInt("7"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("8"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("9"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("10"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("11"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/td[4]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "任慧慧，戴武宁"

                            },

                            {

                                num: NumberInt("2"),

                                value: "秦曙野"

                            },

                            {

                                num: NumberInt("3"),

                                value: "任慧慧"

                            },

                            {

                                num: NumberInt("4"),

                                value: "杨波"

                            },

                            {

                                num: NumberInt("5"),

                                value: "丁鹏"

                            },

                            {

                                num: NumberInt("6"),

                                value: ""

                            },

                            {

                                num: NumberInt("7"),

                                value: "徐志勇"

                            },

                            {

                                num: NumberInt("8"),

                                value: "刘会宾，王涛"

                            },

                            {

                                num: NumberInt("9"),

                                value: "丁慧珍"

                            },

                            {

                                num: NumberInt("10"),

                                value: "王志飞"

                            },

                            {

                                num: NumberInt("11"),

                                value: "乔瑞晓"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("9"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[2]/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[3]/table[1]/tbody[1]/tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("11"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/td[1]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "一月"

                            },

                            {

                                num: NumberInt("1"),

                                value: "二月"

                            },

                            {

                                num: NumberInt("2"),

                                value: "三月"

                            },

                            {

                                num: NumberInt("3"),

                                value: "四月"

                            },

                            {

                                num: NumberInt("4"),

                                value: "五月"

                            },

                            {

                                num: NumberInt("5"),

                                value: "六月"

                            },

                            {

                                num: NumberInt("6"),

                                value: "七月"

                            },

                            {

                                num: NumberInt("7"),

                                value: "八月"

                            },

                            {

                                num: NumberInt("8"),

                                value: "九月"

                            },

                            {

                                num: NumberInt("9"),

                                value: "十月"

                            },

                            {

                                num: NumberInt("10"),

                                value: "十一月"

                            },

                            {

                                num: NumberInt("11"),

                                value: "十二月"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("1"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("2"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("3"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("4"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("5"),

                                value: "吴金妹"

                            },

                            {

                                num: NumberInt("6"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("7"),

                                value: "周志伟"

                            },

                            {

                                num: NumberInt("8"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("9"),

                                value: "范殿炜"

                            },

                            {

                                num: NumberInt("10"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("11"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "/td[3]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("1"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("2"),

                                value: "邵亚瑞"

                            },

                            {

                                num: NumberInt("3"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("4"),

                                value: "杜丹丹"

                            },

                            {

                                num: NumberInt("5"),

                                value: "周志伟"

                            },

                            {

                                num: NumberInt("6"),

                                value: "蔡号"

                            },

                            {

                                num: NumberInt("7"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("8"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("9"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("10"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("11"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "/td[4]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "任慧慧，戴武宁"

                            },

                            {

                                num: NumberInt("2"),

                                value: "秦曙野"

                            },

                            {

                                num: NumberInt("3"),

                                value: "任慧慧"

                            },

                            {

                                num: NumberInt("4"),

                                value: "杨波"

                            },

                            {

                                num: NumberInt("5"),

                                value: "丁鹏"

                            },

                            {

                                num: NumberInt("6"),

                                value: ""

                            },

                            {

                                num: NumberInt("7"),

                                value: "徐志勇"

                            },

                            {

                                num: NumberInt("8"),

                                value: "刘会宾，王涛"

                            },

                            {

                                num: NumberInt("9"),

                                value: "丁慧珍"

                            },

                            {

                                num: NumberInt("10"),

                                value: "王志飞"

                            },

                            {

                                num: NumberInt("11"),

                                value: "乔瑞晓"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "http://aiwork.huilan.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "http://aiwork.huilan.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "duyp",

            value: "duyp"

        },

        {

            id: NumberInt("2"),

            name: "inputText_2",

            nodeName: "Input Text",

            nodeId: NumberInt("3"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "wozaijia3456",

            value: "wozaijia3456"

        }

    ],

    links: "http://aiwork.huilan.com",

    name: "huilan",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: "一月"

        },

        {

            id: NumberInt("1"),

            name: "para6_text",

            desc: "",

            type: "string",

            exampleValue: "张荣"

        },

        {

            id: NumberInt("2"),

            name: "para7_text",

            desc: "",

            type: "string",

            exampleValue: "张荣"

        },

        {

            id: NumberInt("3"),

            name: "para8_text",

            desc: "",

            type: "string",

            exampleValue: "任慧慧，戴武宁"

        }

    ],

    url: "http://aiwork.huilan.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f2db56a496190e317dc626"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3"),

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5"),

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　【基本案情】　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。　　【裁判结果】　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。　　【典型意义】　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。            "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n        \n        \n            \n    \t\t首页 >审判 > 典型案例\n            \n            \n                \n                石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案\n                \n            \n\t\t\t \n            2021-11-25 15:50:06   |   来源：最高人民法院   \n            \n            \n                                               \n            \n            \t　　　【基本案情】　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。　　【裁判结果】　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。　　【典型意义】　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。            \n             \n\t\t\t\n\t\t\t\n\t\t\t\n            \n\t\t\t\t\n                 责任编辑：于子平\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n                        \n            \n            \t\n                \t相关新闻：\n                    \n                                             \t碌曲县人民检察院诉碌曲县水务水电局行政公益诉讼案子女不履行赡养义务可作为公益诉讼立案受理吗？潮州饶平法院宣判一起刑附民公益诉讼案\n中国生物多样性保护与绿色发展基金会诉秦皇岛方圆包装玻璃有限公司大气环境责任纠...岳阳法检两院环境公益诉讼座谈会在君山召开检方规范个人信息保护公益诉讼案件办理重庆江津法院一审宣判一起涉古树公益诉讼案                    \n                \n                \n                \n            \n            \n            \n             \n             \n\t\t\t\t\t\t“黑物流”刘晓强等人敲..\n\t\t\t\t\t\t程海明等人敲诈勒索企业..\n\t\t\t\t\t\t华士中等人火车站敲诈勒..\n\t\t\t\t\t\t王维刚等人电子市场“软..\n\t\t\t\t\t\t房屋“黑中介”刘康等人..\n\t\t\t\t\t\t陈海涛等人组织、领导、..                \n            \n        \n        \n        \n        \n        \t\n\n            \t要闻\n                \n                \t\n                    \t\n                    \t周强主持最高人民法院党组理论学习中心组集体学习研讨时强调 ...                    \t\n                        \n                        　　12月7日上午，最高人民法院党组理论学习中心组就网络舆论传播工作开展集体学习研讨，最高人民法院党组书记、院长周强主持...  【详情】                        \n                    \n                    新时代推动法治进程十大案件启动网络投票中国应用法学研究所招收博士后研究人员公告最高法知识产权法庭改进文书样式推动技...最高人民法院民二庭破产审判研究中心（...工信部下架106款侵害用户权益APP                \n            \n\n            \n            \n            \t庭审直播\n                \n                \n                \n            \n\n            \n            \n                点击排行\n                \n                    \n                    上海一中院公开宣判被告人顾国平等集资诈骗案新时代推动法治进程十大案件启动网络投票曾经的法官党建赋能“三新”引领法院工作高质量发展王某某诉某康复器具公司侵权责任纠纷案习近平出席全国宗教工作会议并发表重要讲话杞县法院开展“12.4”国家宪法日宣传活动遗产继承，有“典”护着尽孝者山东警方通报被拐儿童孙卓、符建涛户籍初查情况审理人身损害赔偿案件适用法律若干问题的解释(征...\t\t\t\t\t \n                \n            \n\n            \n            \n                图文直播\n                \n                \n\t\t\t\t\t\t最高法 最高检 公安部 司法部 《关于加强减刑、假释案件实质化审理的意见》新闻发布会\n\t\t\t\t\t\t生物多样性保护专题指导性案例暨“新时代推动法治进程十大案件——2021年度”宣传活动启动新闻发布会\n\t\t\t\t\t\t残疾人权益保护十大典型案例新闻发布会\n\t\t\t\t\t\t全国法院整治年底不立案新闻发布会\n\t\t\t\t\t\t执行领域突出问题集中整治阶段性进展暨全国法院执行案款集中发放日活动新闻发布会                \n                        \n        \n    "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("7"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　【基本案情】　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。　　【裁判结果】　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。　　【典型意义】　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。            "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("2"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法律网站测试1",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

        },

        {

            id: NumberInt("1"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: "\n            \t　　　【基本案情】　　2006 年以来，王晓红等在黄河河道上建设养殖场。石嘴山市惠农区人民检察院（以下简称惠农区检察院）调查发现，上述养殖场的建筑未经相关行政部门审批，属于在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，严重影响黄河行洪、防洪安全；石嘴山市惠农区农业农村和水务局（以下简称惠农区农水局）对上述情况存在未履行监管职责的问题。惠农区检察院遂于2019年7月向惠农区农水局发出检察建议。2019年11月惠农区检察院提起环境行政公益诉讼，请求确认惠农区农水局未依法履行河道监管职责的行为违法，判令惠农区农水局依法履行监管职责，及时恢复土地原状。2019年11月26日，惠农区检察院收到惠农区农水局回复并经实地查看后，认为惠农区农水局已经履行了对涉案养殖场的违法建筑设施拆除的法定监管职责，遂撤回了该项诉讼请求，保留确认违法的诉讼请求。　　【裁判结果】　　宁夏回族自治区石嘴山市大武口区人民法院作出判决：确认被告惠农区农水局未依法履行责令王晓红等拆除在惠农区黄河河道管理范围内的养殖场违法建筑的河道监管职责的行为违法。一审判决后，双方均未提起上诉。　　【典型意义】　　本案系违法占用黄河河道建设生产场所及居住房屋引发的行政公益诉讼案件。在河道管理范围内修建阻碍行洪建筑物、构筑物的乱建行为，违反了国家河道管理规定，也严重影响行洪、防洪安全，对黄河两岸居民生活和生产安全造成潜在危害。本案通过行政公益诉讼，人民法院依法确认行政主管机关行为违法，有效促使行政主管机关积极履行法定监管职责，为黄河流域生态保护提供了有力司法支撑。            "

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f30049ca6c77f85032efbe"),

    containJudge: false,

    desc: "https://aiwork.huilan.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4"),

                NumberInt("5")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://aiwork.huilan.com",

                links: "https://aiwork.huilan.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"el-form\")]/div[1]/div[1]/div[1]/input[1]",

                wait: NumberInt("0"),

                value: "duyp"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"el-input--small\")]/input[1]",

                wait: NumberInt("0"),

                value: "wozaijia3456"

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"el-button\")]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6"),

                NumberInt("7")

            ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[2]/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("6"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"tab-2022\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[2]/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[3]/table[1]/tbody[1]/tr",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("8"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/td[1]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "一月"

                            },

                            {

                                num: NumberInt("1"),

                                value: "二月"

                            },

                            {

                                num: NumberInt("2"),

                                value: "三月"

                            },

                            {

                                num: NumberInt("3"),

                                value: "四月"

                            },

                            {

                                num: NumberInt("4"),

                                value: "五月"

                            },

                            {

                                num: NumberInt("5"),

                                value: "六月"

                            },

                            {

                                num: NumberInt("6"),

                                value: "七月"

                            },

                            {

                                num: NumberInt("7"),

                                value: "八月"

                            },

                            {

                                num: NumberInt("8"),

                                value: "九月"

                            },

                            {

                                num: NumberInt("9"),

                                value: "十月"

                            },

                            {

                                num: NumberInt("10"),

                                value: "十一月"

                            },

                            {

                                num: NumberInt("11"),

                                value: "十二月"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/td[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("1"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("2"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("3"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("4"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("5"),

                                value: "吴金妹"

                            },

                            {

                                num: NumberInt("6"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("7"),

                                value: "周志伟"

                            },

                            {

                                num: NumberInt("8"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("9"),

                                value: "范殿炜"

                            },

                            {

                                num: NumberInt("10"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("11"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/td[3]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("1"),

                                value: "孙金宝"

                            },

                            {

                                num: NumberInt("2"),

                                value: "邵亚瑞"

                            },

                            {

                                num: NumberInt("3"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("4"),

                                value: "杜丹丹"

                            },

                            {

                                num: NumberInt("5"),

                                value: "周志伟"

                            },

                            {

                                num: NumberInt("6"),

                                value: "蔡号"

                            },

                            {

                                num: NumberInt("7"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("8"),

                                value: "张荣"

                            },

                            {

                                num: NumberInt("9"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("10"),

                                value: "张晓东"

                            },

                            {

                                num: NumberInt("11"),

                                value: ""

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/td[4]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "任慧慧，戴武宁"

                            },

                            {

                                num: NumberInt("2"),

                                value: "秦曙野"

                            },

                            {

                                num: NumberInt("3"),

                                value: "任慧慧"

                            },

                            {

                                num: NumberInt("4"),

                                value: "杨波"

                            },

                            {

                                num: NumberInt("5"),

                                value: "丁鹏"

                            },

                            {

                                num: NumberInt("6"),

                                value: ""

                            },

                            {

                                num: NumberInt("7"),

                                value: "徐志勇"

                            },

                            {

                                num: NumberInt("8"),

                                value: "刘会宾，王涛"

                            },

                            {

                                num: NumberInt("9"),

                                value: "丁慧珍"

                            },

                            {

                                num: NumberInt("10"),

                                value: "王志飞"

                            },

                            {

                                num: NumberInt("11"),

                                value: "乔瑞晓"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://aiwork.huilan.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://aiwork.huilan.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "duyp",

            value: "duyp"

        },

        {

            id: NumberInt("2"),

            name: "inputText_2",

            nodeName: "Input Text",

            nodeId: NumberInt("3"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "wozaijia3456",

            value: "wozaijia3456"

        }

    ],

    links: "https://aiwork.huilan.com",

    name: "汇联网站测试1",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "一月"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "张荣"

        },

        {

            id: NumberInt("2"),

            name: "para3_text",

            desc: "",

            type: "string",

            exampleValue: "张荣"

        },

        {

            id: NumberInt("3"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: "任慧慧，戴武宁"

        }

    ],

    url: "https://aiwork.huilan.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f31e00ca6c77f85032efc2"),

    containJudge: false,

    desc: "https://www.baidu.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.baidu.com",

                links: "https://www.baidu.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[5]/div[1]/div[1]/div[3]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_linktext",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "0春耕备耕扎实推进"

                            },

                            {

                                num: NumberInt("1"),

                                value: "3续写大众冰雪运动新辉煌"

                            },

                            {

                                num: NumberInt("2"),

                                value: "1杭州两学校现阳性 15例均为首次感染"

                            },

                            {

                                num: NumberInt("3"),

                                value: "4曾对疫情一问三不知的唐主任有新职"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2医院回应弄错试管婴儿：没必要计较"

                            },

                            {

                                num: NumberInt("5"),

                                value: "5桑姓艺人欠1.5万不还成老赖"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_linkAddress",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.baidu.com/s?wd=%E6%98%A5%E8%80%95%E5%A4%87%E8%80%95%E6%89%8E%E5%AE%9E%E6%8E%A8%E8%BF%9B&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.baidu.com/s?wd=%E7%BB%AD%E5%86%99%E5%A4%A7%E4%BC%97%E5%86%B0%E9%9B%AA%E8%BF%90%E5%8A%A8%E6%96%B0%E8%BE%89%E7%85%8C&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.baidu.com/s?wd=%E6%9D%AD%E5%B7%9E%E4%B8%A4%E5%AD%A6%E6%A0%A1%E7%8E%B0%E9%98%B3%E6%80%A7+15%E4%BE%8B%E5%9D%87%E4%B8%BA%E9%A6%96%E6%AC%A1%E6%84%9F%E6%9F%93&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.baidu.com/s?wd=%E6%9B%BE%E5%AF%B9%E7%96%AB%E6%83%85%E4%B8%80%E9%97%AE%E4%B8%89%E4%B8%8D%E7%9F%A5%E7%9A%84%E5%94%90%E4%B8%BB%E4%BB%BB%E6%9C%89%E6%96%B0%E8%81%8C&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.baidu.com/s?wd=%E5%8C%BB%E9%99%A2%E5%9B%9E%E5%BA%94%E5%BC%84%E9%94%99%E8%AF%95%E7%AE%A1%E5%A9%B4%E5%84%BF%EF%BC%9A%E6%B2%A1%E5%BF%85%E8%A6%81%E8%AE%A1%E8%BE%83&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.baidu.com/s?wd=%E6%A1%91%E5%A7%93%E8%89%BA%E4%BA%BA%E6%AC%A01.5%E4%B8%87%E4%B8%8D%E8%BF%98%E6%88%90%E8%80%81%E8%B5%96&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.baidu.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.baidu.com"

        }

    ],

    links: "https://www.baidu.com",

    name: "百度网站测试",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_linktext",

            desc: "",

            type: "string",

            exampleValue: "0春耕备耕扎实推进"

        },

        {

            id: NumberInt("1"),

            name: "para2_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://www.baidu.com/s?wd=%E6%98%A5%E8%80%95%E5%A4%87%E8%80%95%E6%89%8E%E5%AE%9E%E6%8E%A8%E8%BF%9B&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

        }

    ],

    url: "https://www.baidu.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f49387a496190e317dc63d"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "最外层点击行政案例",

            sequence: [

                NumberInt("4"),

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[2]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[text()='下一页']",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("3"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "点击每一页的主题细节",

            sequence: [

                NumberInt("7"),

                NumberInt("9")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18   |   来源：最高人民法院   "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　（一）基本案情　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。　　（二）裁判结果　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。　　（三）典型意义　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。              "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("9"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　（一）基本案情　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。　　（二）裁判结果　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。　　（三）典型意义　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。              "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　（二）裁判结果"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para9_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　（三）典型意义"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para10_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[6]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_循环点击下一页_1",

            nodeId: NumberInt("4"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法院爬取测试",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

        },

        {

            id: NumberInt("1"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: "2020-07-27 16:44:18"

        },

        {

            id: NumberInt("2"),

            name: "para6_text",

            desc: "",

            type: "string",

            exampleValue: "\n            \t　　　（一）基本案情　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。　　（二）裁判结果　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。　　（三）典型意义　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。              "

        },

        {

            id: NumberInt("3"),

            name: "para7_text",

            desc: "",

            type: "string",

            exampleValue: "　　（二）裁判结果"

        },

        {

            id: NumberInt("4"),

            name: "para8_text",

            desc: "",

            type: "string",

            exampleValue: "　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。"

        },

        {

            id: NumberInt("5"),

            name: "para9_text",

            desc: "",

            type: "string",

            exampleValue: "　　（三）典型意义"

        },

        {

            id: NumberInt("6"),

            name: "para10_text",

            desc: "",

            type: "string",

            exampleValue: "　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f57bf5a496190e317dc640"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3"),

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"morepage\"]/div[2]/div[1]/div[2]/ul/li/a",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[2]/div[2]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_linktext",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

                            },

                            {

                                num: NumberInt("1"),

                                value: "灵宝豫翔水产养殖有限公司诉三门峡市城乡一体化示范区管理委员会、灵宝市大王镇人民.."

                            },

                            {

                                num: NumberInt("2"),

                                value: "碌曲县人民检察院诉碌曲县水务水电局行政公益诉讼案"

                            },

                            {

                                num: NumberInt("3"),

                                value: "新乡市生态环境局与封丘县龙润精细化工有限公司生态环境损害赔偿司法确认案"

                            },

                            {

                                num: NumberInt("4"),

                                value: "黑龙江阳光种业有限公司诉植物新品种复审委员会植物新品种申请驳回复审行政纠纷案"

                            },

                            {

                                num: NumberInt("5"),

                                value: "贵州省遵义县巾英铁厂诉贵州省遵义市人民政府行政征收补偿案"

                            },

                            {

                                num: NumberInt("6"),

                                value: "王某某诉云南省保山市自然资源和规划局限期拆除决定及云南省保山市人民政府行政复议案"

                            },

                            {

                                num: NumberInt("7"),

                                value: "邹某某等17人诉重庆绿岛新区管理委员会行政协议五案"

                            },

                            {

                                num: NumberInt("8"),

                                value: "旬阳县润农房地产开发有限公司诉陕西省旬阳县住房和城乡建设局行政行为违法及行政赔.."

                            },

                            {

                                num: NumberInt("9"),

                                value: "彭某某等40人诉福建省福安市人民政府等四单位强制拆除行为案"

                            },

                            {

                                num: NumberInt("10"),

                                value: "发得顺实业（深圳）有限公司诉广东省佛山市禅城区人民政府房屋征收补偿决定及广东省.."

                            },

                            {

                                num: NumberInt("11"),

                                value: "衢州金宏建设工程有限公司诉浙江省衢州市社会保险事业管理局行政给付案"

                            },

                            {

                                num: NumberInt("12"),

                                value: "沈某某诉浙江省宁波市奉化区综合行政执法局政府信息公开案"

                            },

                            {

                                num: NumberInt("13"),

                                value: "湖北省京山昌盛园林有限公司诉湖北省京山市人民政府、湖北省京山市新市镇人民政府行.."

                            },

                            {

                                num: NumberInt("14"),

                                value: "蔡某某诉山东省泗水县人民政府土地征收案"

                            },

                            {

                                num: NumberInt("15"),

                                value: "毕某某诉内蒙古自治区宁城县市场监督管理局行政处罚案"

                            },

                            {

                                num: NumberInt("16"),

                                value: "王某某诉吉林省白山市人力资源和社会保障局行政确认案"

                            },

                            {

                                num: NumberInt("17"),

                                value: "江苏中厦集团有限公司诉黑龙江省大庆市让胡路区人民政府住房和城乡建设局行政处罚案；"

                            },

                            {

                                num: NumberInt("18"),

                                value: "北京富宁经贸有限责任公司宁夏特产连锁超市诉北京市东城区市场监督管理局行政处罚决.."

                            },

                            {

                                num: NumberInt("19"),

                                value: "海口博泰隆房地产开发有限公司诉海口市人民政府有偿收回国有土地使用权案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_linkAddress",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]//p",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397580.shtml"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397563.shtml"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397553.shtml"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.chinacourt.org/article/detail/2021/11/id/6397536.shtml"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.chinacourt.org/article/detail/2021/09/id/6250921.shtml"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174681.shtml"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174680.shtml"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174679.shtml"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174677.shtml"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174673.shtml"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174671.shtml"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174669.shtml"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174668.shtml"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174662.shtml"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174661.shtml"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174658.shtml"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174655.shtml"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174654.shtml"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.chinacourt.org/article/detail/2021/07/id/6174651.shtml"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.chinacourt.org/article/detail/2020/07/id/5378776.shtml"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法律网测试翻页",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_linktext",

            desc: "",

            type: "string",

            exampleValue: "石嘴山市惠农区人民检察院诉石嘴山市惠农区农业农村和水务局行政公益诉讼案"

        },

        {

            id: NumberInt("1"),

            name: "para2_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/detail/2021/11/id/6397580.shtml"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f57d09ca6c77f85032efd6"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "最外层点击行政案例",

            sequence: [

                NumberInt("4"),

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"morepage\"]/div[2]/div[1]/div[2]/ul/li/a",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[text()='下一页']",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("3"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "点击每一页的主题细节",

            sequence: [

                NumberInt("7"),

                NumberInt("9")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18   |   来源：最高人民法院   "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　（一）基本案情　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。　　（二）裁判结果　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。　　（三）典型意义　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。              "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("9"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n            \t　　　（一）基本案情　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。　　（二）裁判结果　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。　　（三）典型意义　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。              "

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　（二）裁判结果"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para9_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　（三）典型意义"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para10_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[4]/p[6]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_循环点击下一页_1",

            nodeId: NumberInt("4"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法院爬取测试",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

        },

        {

            id: NumberInt("1"),

            name: "para5_text",

            desc: "",

            type: "string",

            exampleValue: "2020-07-27 16:44:18"

        },

        {

            id: NumberInt("2"),

            name: "para6_text",

            desc: "",

            type: "string",

            exampleValue: "\n            \t　　　（一）基本案情　　2014年7月3日，古田县人民政府(以下简称古田县政府)与福建爱乐投资有限公司(以下简称福建爱乐公司)签订了《古田县翠屏湖片区项目投资框架协议书》，约定项目总投资约50亿元，用地总面积约1000亩，项目定位为酒店、居住、旅游为一体的现代化高端生态城市综合体。其后，双方又签订了《补充协议》。2015年4月23日，福建爱乐公司指派庄某某通过公开拍卖竞得首期开发建设用地103084平方米，并与原古田县国土资源局签订《国有建设用地使用权出让合同》，支付了土地出让金人民币1.2亿元。2015年5月8日，古田翠屏湖爱乐置业有限公司（以下简称古田爱乐公司）成立，作为案涉投资开发项目的落地公司。2015年7月13日，古田爱乐公司与原古田县国土资源局签订《国有建设用地使用权出让合同》(合同补充条款)，约定由古田爱乐公司承接庄某某之前签订的《国有建设用地使用权出让合同》中全部权利义务。随后，古田爱乐公司进行项目建设，不同程度建设了酒店、附属楼及50余栋别墅并预售了部分别墅。其后，古田县政府及有关部门以适应省生态文明实验区建设需要，依照新颁布的水资源、国有林场的有关行政管理规定，按照省有关主管部门的意见和建议，以停止翠屏湖沿线公路内侧地产类开发项目的实施、对翠屏湖高头岭片区规划进行新的调整等为由，叫停了案涉项目的开发建设和经营销售。同时，古田县政府成立整改对接工作小组，启动协商收回国有建设用地使用权等工作。后因收回及补偿事宜协商未果，古田爱乐公司、福建爱乐公司提起行政诉讼，请求解除双方签订的招商引资合同（《古田县翠屏湖片区项目投资框架协议书》和《补充协议》）及补偿损失约2.6亿元。　　（二）裁判结果　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。　　（三）典型意义　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。              "

        },

        {

            id: NumberInt("3"),

            name: "para7_text",

            desc: "",

            type: "string",

            exampleValue: "　　（二）裁判结果"

        },

        {

            id: NumberInt("4"),

            name: "para8_text",

            desc: "",

            type: "string",

            exampleValue: "　　福建省福州市中级人民法院一审认为，因政策、规划、用途等调整，涉案行政协议已无法履行，福建爱乐公司和古田爱乐公司请求解除案涉行政协议应予支持。同时，以相关评估机构对收回涉案土地使用权及在建工程的评估价格作为解除案涉行政协议造成损失金额的计算依据，确定支付给古田爱乐公司的损失金额。为此，一审判决：解除双方签订的《古田县翠屏湖片区项目投资框架协议书》及《补充协议》；由古田县政府向古田爱乐公司支付302146933元及相关利息的损失；驳回古田爱乐公司和福建爱乐公司的其他诉讼请求。福建省高级人民法院二审期间，经多方组织调解，促成各方就案涉行政协议的解除、企业损失的支付、项目建设用地收回、在建工程的交接、相关购房户及建筑商款项的善后工作等事项自愿达成调解协议。根据调解协议，二审法院依法作出了《行政调解书》。"

        },

        {

            id: NumberInt("5"),

            name: "para9_text",

            desc: "",

            type: "string",

            exampleValue: "　　（三）典型意义"

        },

        {

            id: NumberInt("6"),

            name: "para10_text",

            desc: "",

            type: "string",

            exampleValue: "　　行政机关与民营企业依法签订的行政协议应受法律保护，行政机关应对符合法律规定解除行政协议给民营企业合法产权造成的损失依法给予补偿，切实保护民营企业的合法产权。行政协议具有双方意思表示一致的特点，审理行政协议案件可适用审理民事合同纠纷的相关规则，因此，属于可适用调解的行政案件。二审法院为认真贯彻落实生态文明实验区建设要求，切实保护好民营企业的合法产权，有效化解和实质性解决行政争议，积极组织各方当事人协商调解。在查明事实、分清责任的基础上，为双方厘清是非、释明法理，终于使各方取得共识，达成调解协议。不仅有效化解了案涉行政协议的争议，还一揽子解决了因解除案涉行政协议引起的土地使用权出让合同解除、土地使用权收回、在建工程交接以及有关购房户、工程款纠纷等一系列相关问题。既为生态文明建设大局提供司法服务，又为民营企业合法产权提供司法保障，促进了法治政府、诚信政府建设，有利于营造良好的营商环境，取得了较好的法律效果和社会效果。"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f58550ca6c77f85032efd7"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "New Crawler Task",

    outputParameters: [ ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f589c8ca6c77f85032efd9"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("4"),

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[text='下一页']",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "每次点击下一页",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环当前页每个标题链接",

            sequence: [

                NumberInt("5"),

                NumberInt("6")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "循环当前页每个标题内容",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("6"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_循环点击下一页_1",

            nodeId: NumberInt("2"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法律网站翻页标题类型合集",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "2020-07-27 16:44:18"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f58bc0a496190e317dc643"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("4"),

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[text()='下一页']",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "每次点击下一页",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环当前页每个标题链接",

            sequence: [

                NumberInt("5"),

                NumberInt("6")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "循环当前页每个标题内容",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("6"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[2]/div[2]/p[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_循环点击下一页_1",

            nodeId: NumberInt("2"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml",

    name: "中国法律网站翻页标题类型合集",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "2020-07-27 16:44:18"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwMjAwNjAwAAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f5c7c5ca6c77f85032efdb"),

    containJudge: false,

    desc: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwAiMDAA.shtml",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwAiMDAA.shtml",

                links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwAiMDAA.shtml",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "典型案例循环",

            sequence: [

                NumberInt("3"),

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "典型案例循环点击",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"more_left\")]/div[2]/ul[1]/li[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[text()='下一页']",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击下一页",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"paginationControl\")]/a[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击当前页的每个标题链接",

            sequence: [

                NumberInt("7"),

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "循环点击当前页标题的每个链接",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"list_br\")]/div[1]/ul[1]/li[1]/span[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "提取数据",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "//*[@id=\"detail\"]/div[2]/div[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[1]/div[1]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2020-07-27 16:44:18"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwAiMDAA.shtml",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwAiMDAA.shtml"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_循环点击下一页_1",

            nodeId: NumberInt("4"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwAiMDAA.shtml",

    name: "中国法律网站数据爬取",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "古田翠屏湖爱乐置业有限公司、福建爱乐投资有限公司诉古田县人民政府行政协议及赔偿案"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "2020-07-27 16:44:18"

        }

    ],

    url: "https://www.chinacourt.org/article/subjectdetail/type/more/id/MzAwNEiqNDAwAiMDAA.shtml"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63f856c0ca6c77f85032efdc"),

    containJudge: false,

    desc: "https://www.baidu.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.baidu.com",

                links: "https://www.baidu.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3"),

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"hotsearch-content-wrapper\"]/li/a[1]/span[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"hotsearch-content-wrapper\"]/li[1]/a[1]/span[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[4]/div[1]/div[3]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/p[1]/a[1]/em[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "新春加速度 中国经济跑出新活力"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[4]/div[1]/div[3]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/p[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n                近日，从中央到地方，各行各业开启加速模式。RCEP原产地证书签证量增长、春运期间全国日均邮件2.59亿件、中巴经济...\n                详细 >"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.baidu.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.baidu.com"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("2"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.baidu.com",

    name: "百度翻页测试",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "新春加速度 中国经济跑出新活力"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "\n                近日，从中央到地方，各行各业开启加速模式。RCEP原产地证书签证量增长、春运期间全国日均邮件2.59亿件、中巴经济...\n                详细 >"

        }

    ],

    url: "https://www.baidu.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("63fd5ff5a496190e317dc649"),

    containJudge: false,

    desc: "https://www.baidu.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "打开网页",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.baidu.com",

                links: "https://www.baidu.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环",

            sequence: [

                NumberInt("3"),

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"hotsearch-content-wrapper\"]/li/a[1]/span[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "1",

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击元素",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"hotsearch-content-wrapper\"]/li[1]/a[1]/span[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "提取数据",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[4]/div[1]/div[3]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/p[1]/a[1]/em[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "数字中国建设整体布局规划"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[4]/div[1]/div[3]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/p[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n                近日，中共中央、国务院印发了《数字中国建设整体布局规划》。《规划》指出，建设数字中国是推进中国式现代化的重要引擎、构筑国家竞争新优势的支撑。\n                详细 >"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "打开网页",

            value: "https://www.baidu.com",

            desc: "要采集的网址列表,多行以\\n分开",

            type: "string",

            exampleValue: "https://www.jd.com"

        }

    ],

    links: "https://www.baidu.com",

    name: "新的百度任务",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "数字中国建设整体布局规划"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "\n                近日，中共中央、国务院印发了《数字中国建设整体布局规划》。《规划》指出，建设数字中国是推进中国式现代化的重要引擎、构筑国家竞争新优势的支撑。\n                详细 >"

        }

    ],

    url: "https://www.baidu.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("6407e6f3e9c32379f083e86e"),

    containJudge: false,

    desc: "https://www.ncbi.nlm.nih.gov/protein",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("13"),

                NumberInt("14"),

                NumberInt("17")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ncbi.nlm.nih.gov/protein",

                links: "https://www.ncbi.nlm.nih.gov/protein",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"_seqlen\"]/li[1]/div[1]/h3[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"_seqlen\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[1]/div[2]/div[2]/div[1]/dl[1]/dd[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[1]/div[1]/input[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[1]/div[2]/div[2]/div[1]/dl[1]/dd[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            }

                        ]

                    },

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[2]/div[1]/input[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200203"

                            }

                        ]

                    },

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para5_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[3]/div[1]/input[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200202"

                            }

                        ]

                    },

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para6_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[4]/div[1]/input[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200201"

                            }

                        ]

                    },

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para7_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[5]/div[1]/input[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "222447004"

                            }

                        ]

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para8_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n        Summary20 per pageSort by Default orderFormatSummaryGenPeptGenPept (full)FASTAFASTA (text)ASN.1Revision HistoryAccession ListGI ListItems per page5102050100200Sort byDefault orderAccessionDate ModifiedDate ReleasedOrganism NameTaxonomy IDApplySend to:\n                        jQuery(document).ready( function () {\n                            jQuery(\"#send_to_menu input[type='radio']\").click( function () {\n                                var selectedValue = jQuery(this).val().toLowerCase();\n                                var selectedDiv = jQuery(\"#send_to_menu div.\" + selectedValue);\n                                \n                                if(selectedDiv.is(\":hidden\")){ \n                                jQuery(\"#send_to_menu div.submenu:visible\").slideUp();\n                                selectedDiv.slideDown();\n                                }\n                            });\n                        \n                        });\n                        \n                        jQuery(\"#sendto\").bind(\"ncbipopperclose\", function(){\n                            jQuery(\"#send_to_menu div.submenu:visible\").css(\"display\",\"none\");\n                            jQuery(\"#send_to_menu input[type='radio']:checked\").attr(\"checked\",false);\n                        });\n                        \n                    Choose DestinationFileClipboardCollectionsFormatSummaryGenPeptGenPept (full)FASTAASN.1XMLINSDSeq XMLTinySeq XMLFeature TableFASTA CDSAccession ListGI ListGFF3Sort byDefault orderAccessionDate ModifiedDate ReleasedOrganism NameTaxonomy ID\n                    function x_showgi(el) {\n                    // ID-4455\n                    var elSeq = document.getElementById(\"file_showgi_section\");\n                        if (el.options[el.selectedIndex].getAttribute(\"showgi\") === \"true\") {\n                            elSeq.style.display = \"\";\n                        } else {\n                            elSeq.style.display = \"none\";\n                        }\n                    }\n                    setTimeout(function() {\n                        x_showgi(document.getElementById(\"file_format\"));\n                    }, 1000);\n                Show GICreate FileAdd to ClipboardStart from citationAdd to Collections\n        \n    \n    \n    \n    \n    \n    See the results of this search (480 items) in our new Identical Protein Groups database.\n\n        \n            Items: 1 to 20 of 198253Selected: 5\n            << First< PrevPage  of 9913Next >Last >>\n               \n        \n            \n            \n            \n            \n        \n        Select item 232002041.Chain S, 10-mer Peptide10 aa proteinAccession: 1JUI_S GI: 23200204PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 232002032.Chain R, 10-mer Peptide10 aa proteinAccession: 1JUI_R GI: 23200203PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 232002023.Chain Q, 10-mer Peptide10 aa proteinAccession: 1JUI_Q GI: 23200202PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 232002014.Chain P, 10-mer Peptide10 aa proteinAccession: 1JUI_P GI: 23200201PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 2224470045.Chain F, Latent membrane protein 2 peptide9 aa proteinAccession: 3BVN_F GI: 222447004PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 2224470016.Chain C, Latent membrane protein 2 peptide9 aa proteinAccession: 3BVN_C GI: 222447001PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 2537224357.Chain P, PEPTIDE LIGAND CONTAINING HPQ10 aa proteinAccession: 1VWH_P GI: 253722435PubMed GenPeptIdentical ProteinsFASTAGraphicsSelect item 2537224348.Chain P, PEPTIDE LIGAND CONTAINING HPQ10 aa proteinAccession: 1VWG_P GI: 253722434PubMed GenPeptIdentical ProteinsFASTAGraphicsSelect item 21940229.Chain P, STREP-TAG PEPTIDE9 aa proteinAccession: 1RST_P GI: 2194022PubMed GenPeptIdentical ProteinsFASTAGraphicsSelect item 219402010.Chain P, STREP-TAG II PEPTIDE10 aa proteinAccession: 1RSU_P GI: 2194020PubMed GenPeptIdentical ProteinsFASTAGraphicsSelect item 40324241311.Chain P, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWJ_P GI: 403242413PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 40324241212.Chain M, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWJ_M GI: 403242412PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 35738089113.Chain P, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWR_P GI: 357380891PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 35738089014.Chain P, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWQ_P GI: 357380890PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 35738088915.Chain P, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWL_P GI: 357380889PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 35738088816.Chain M, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWL_M GI: 357380888PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 35738088617.Chain P, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWK_P GI: 357380886PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 35738088518.Chain M, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWK_M GI: 357380885PubMed Taxonomy GenPeptIdentical ProteinsFASTAGraphicsSelect item 34510055519.Chain P, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWI_P GI: 345100555PubMed GenPeptIdentical ProteinsFASTAGraphicsSelect item 34510055420.Chain M, PEPTIDE LIGAND CONTAINING HPQ9 aa proteinAccession: 1VWI_M GI: 345100554PubMed GenPeptIdentical ProteinsFASTAGraphics\n        \n            \n        \n        \n            << First< PrevPage  of 9913Next >Last >>\n        \n        Summary20 per pageSort by Default orderFormatSummaryGenPeptGenPept (full)FASTAFASTA (text)ASN.1Revision HistoryAccession ListGI ListItems per page5102050100200Sort byDefault orderAccessionDate ModifiedDate ReleasedOrganism NameTaxonomy IDApplySend to:\n                        jQuery(document).ready( function () {\n                            jQuery(\"#send_to_menu2 input[type='radio']\").click( function () {\n                                var selectedValue = jQuery(this).val().toLowerCase();\n                                var selectedDiv = jQuery(\"#send_to_menu2 div.\" + selectedValue);\n                                \n                                if(selectedDiv.is(\":hidden\")){ \n                                    jQuery(\"#send_to_menu2 div.submenu:visible\").slideUp();\n                                    selectedDiv.slideDown();\n                                }\n                            });\n                        \n                        });\n                        \n                        jQuery(\"#sendto2\").bind(\"ncbipopperclose\", function(){\n                            jQuery(\"#send_to_menu2 div.submenu:visible\").css(\"display\",\"none\");\n                            jQuery(\"#send_to_menu2 input[type='radio']:checked\").attr(\"checked\",false);\n                        });\n                        \n                    Choose DestinationFileClipboardCollectionsFormatSummaryGenPeptGenPept (full)FASTAASN.1XMLINSDSeq XMLTinySeq XMLFeature TableFASTA CDSAccession ListGI ListGFF3Sort byDefault orderAccessionDate ModifiedDate ReleasedOrganism NameTaxonomy ID\n                    function x_showgi(el) {\n                    // ID-4455\n                    var elSeq = document.getElementById(\"file_showgi_section\");\n                        if (el.options[el.selectedIndex].getAttribute(\"showgi\") === \"true\") {\n                            elSeq.style.display = \"\";\n                        } else {\n                            elSeq.style.display = \"none\";\n                        }\n                    }\n                    setTimeout(function() {\n                        x_showgi(document.getElementById(\"file_format\"));\n                    }, 1000);\n                Show GICreate FileAdd to ClipboardStart from citationAdd to Collections\n    "

                            }

                        ]

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6"),

                NumberInt("7")

            ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("8"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("8"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para9_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            },

                            {

                                num: NumberInt("1"),

                                value: "23200203"

                            },

                            {

                                num: NumberInt("2"),

                                value: "23200202"

                            },

                            {

                                num: NumberInt("3"),

                                value: "23200201"

                            },

                            {

                                num: NumberInt("4"),

                                value: "222447004"

                            },

                            {

                                num: NumberInt("5"),

                                value: "222447001"

                            },

                            {

                                num: NumberInt("6"),

                                value: "253722435"

                            },

                            {

                                num: NumberInt("7"),

                                value: "253722434"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2194022"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2194020"

                            },

                            {

                                num: NumberInt("10"),

                                value: "403242413"

                            },

                            {

                                num: NumberInt("11"),

                                value: "403242412"

                            },

                            {

                                num: NumberInt("12"),

                                value: "357380891"

                            },

                            {

                                num: NumberInt("13"),

                                value: "357380890"

                            },

                            {

                                num: NumberInt("14"),

                                value: "357380889"

                            },

                            {

                                num: NumberInt("15"),

                                value: "357380888"

                            },

                            {

                                num: NumberInt("16"),

                                value: "357380886"

                            },

                            {

                                num: NumberInt("17"),

                                value: "357380885"

                            },

                            {

                                num: NumberInt("18"),

                                value: "345100555"

                            },

                            {

                                num: NumberInt("19"),

                                value: "345100554"

                            },

                            {

                                num: NumberInt("20"),

                                value: "253722439"

                            },

                            {

                                num: NumberInt("21"),

                                value: "253722438"

                            },

                            {

                                num: NumberInt("22"),

                                value: "253722437"

                            },

                            {

                                num: NumberInt("23"),

                                value: "253722436"

                            },

                            {

                                num: NumberInt("24"),

                                value: "253722433"

                            },

                            {

                                num: NumberInt("25"),

                                value: "253722432"

                            },

                            {

                                num: NumberInt("26"),

                                value: "253722431"

                            },

                            {

                                num: NumberInt("27"),

                                value: "253722430"

                            },

                            {

                                num: NumberInt("28"),

                                value: "253722429"

                            },

                            {

                                num: NumberInt("29"),

                                value: "253722428"

                            },

                            {

                                num: NumberInt("30"),

                                value: "2981824"

                            },

                            {

                                num: NumberInt("31"),

                                value: "443014"

                            },

                            {

                                num: NumberInt("32"),

                                value: "443011"

                            },

                            {

                                num: NumberInt("33"),

                                value: "1036305139"

                            },

                            {

                                num: NumberInt("34"),

                                value: "1036305138"

                            },

                            {

                                num: NumberInt("35"),

                                value: "1036305137"

                            },

                            {

                                num: NumberInt("36"),

                                value: "1036305136"

                            },

                            {

                                num: NumberInt("37"),

                                value: "1036305135"

                            },

                            {

                                num: NumberInt("38"),

                                value: "1036305134"

                            },

                            {

                                num: NumberInt("39"),

                                value: "228312556"

                            },

                            {

                                num: NumberInt("40"),

                                value: "20150903"

                            },

                            {

                                num: NumberInt("41"),

                                value: "20150902"

                            },

                            {

                                num: NumberInt("42"),

                                value: "20150901"

                            },

                            {

                                num: NumberInt("43"),

                                value: "20150900"

                            },

                            {

                                num: NumberInt("44"),

                                value: "409187959"

                            },

                            {

                                num: NumberInt("45"),

                                value: "354459760"

                            },

                            {

                                num: NumberInt("46"),

                                value: "354459759"

                            },

                            {

                                num: NumberInt("47"),

                                value: "347948701"

                            },

                            {

                                num: NumberInt("48"),

                                value: "228312287"

                            },

                            {

                                num: NumberInt("49"),

                                value: "228312284"

                            },

                            {

                                num: NumberInt("50"),

                                value: "119389935"

                            },

                            {

                                num: NumberInt("51"),

                                value: "75765233"

                            },

                            {

                                num: NumberInt("52"),

                                value: "75765230"

                            },

                            {

                                num: NumberInt("53"),

                                value: "75765227"

                            },

                            {

                                num: NumberInt("54"),

                                value: "75765224"

                            },

                            {

                                num: NumberInt("55"),

                                value: "75765221"

                            },

                            {

                                num: NumberInt("56"),

                                value: "75765218"

                            },

                            {

                                num: NumberInt("57"),

                                value: "75765215"

                            },

                            {

                                num: NumberInt("58"),

                                value: "75765178"

                            },

                            {

                                num: NumberInt("59"),

                                value: "461641"

                            },

                            {

                                num: NumberInt("60"),

                                value: "1700031052"

                            },

                            {

                                num: NumberInt("61"),

                                value: "1700031050"

                            },

                            {

                                num: NumberInt("62"),

                                value: "134104482"

                            },

                            {

                                num: NumberInt("63"),

                                value: "134104480"

                            },

                            {

                                num: NumberInt("64"),

                                value: "134104478"

                            },

                            {

                                num: NumberInt("65"),

                                value: "134104476"

                            },

                            {

                                num: NumberInt("66"),

                                value: "134104474"

                            },

                            {

                                num: NumberInt("67"),

                                value: "134104472"

                            },

                            {

                                num: NumberInt("68"),

                                value: "134104470"

                            },

                            {

                                num: NumberInt("69"),

                                value: "34810318"

                            },

                            {

                                num: NumberInt("70"),

                                value: "34810312"

                            },

                            {

                                num: NumberInt("71"),

                                value: "380259128"

                            },

                            {

                                num: NumberInt("72"),

                                value: "323714393"

                            },

                            {

                                num: NumberInt("73"),

                                value: "323714392"

                            },

                            {

                                num: NumberInt("74"),

                                value: "323714391"

                            },

                            {

                                num: NumberInt("75"),

                                value: "323714390"

                            },

                            {

                                num: NumberInt("76"),

                                value: "323714387"

                            },

                            {

                                num: NumberInt("77"),

                                value: "323714386"

                            },

                            {

                                num: NumberInt("78"),

                                value: "323714385"

                            },

                            {

                                num: NumberInt("79"),

                                value: "67464074"

                            },

                            {

                                num: NumberInt("80"),

                                value: "67464069"

                            },

                            {

                                num: NumberInt("81"),

                                value: "999917"

                            },

                            {

                                num: NumberInt("82"),

                                value: "999914"

                            },

                            {

                                num: NumberInt("83"),

                                value: "159164758"

                            },

                            {

                                num: NumberInt("84"),

                                value: "2152672176"

                            },

                            {

                                num: NumberInt("85"),

                                value: "1393955870"

                            },

                            {

                                num: NumberInt("86"),

                                value: "1393955869"

                            },

                            {

                                num: NumberInt("87"),

                                value: "1393955868"

                            },

                            {

                                num: NumberInt("88"),

                                value: "1393955867"

                            },

                            {

                                num: NumberInt("89"),

                                value: "1393955866"

                            },

                            {

                                num: NumberInt("90"),

                                value: "1393955865"

                            },

                            {

                                num: NumberInt("91"),

                                value: "1279526455"

                            },

                            {

                                num: NumberInt("92"),

                                value: "1279526454"

                            },

                            {

                                num: NumberInt("93"),

                                value: "1279526453"

                            },

                            {

                                num: NumberInt("94"),

                                value: "1279526452"

                            },

                            {

                                num: NumberInt("95"),

                                value: "641389948"

                            },

                            {

                                num: NumberInt("96"),

                                value: "641389947"

                            },

                            {

                                num: NumberInt("97"),

                                value: "641389946"

                            },

                            {

                                num: NumberInt("98"),

                                value: "520728720"

                            },

                            {

                                num: NumberInt("99"),

                                value: "520728719"

                            },

                            {

                                num: NumberInt("100"),

                                value: "520728718"

                            },

                            {

                                num: NumberInt("101"),

                                value: "520728717"

                            },

                            {

                                num: NumberInt("102"),

                                value: "520728716"

                            },

                            {

                                num: NumberInt("103"),

                                value: "520728715"

                            },

                            {

                                num: NumberInt("104"),

                                value: "520728714"

                            },

                            {

                                num: NumberInt("105"),

                                value: "520728713"

                            },

                            {

                                num: NumberInt("106"),

                                value: "520728712"

                            },

                            {

                                num: NumberInt("107"),

                                value: "520728711"

                            },

                            {

                                num: NumberInt("108"),

                                value: "520728710"

                            },

                            {

                                num: NumberInt("109"),

                                value: "520728709"

                            },

                            {

                                num: NumberInt("110"),

                                value: "480312031"

                            },

                            {

                                num: NumberInt("111"),

                                value: "480312030"

                            },

                            {

                                num: NumberInt("112"),

                                value: "480312027"

                            },

                            {

                                num: NumberInt("113"),

                                value: "480312026"

                            },

                            {

                                num: NumberInt("114"),

                                value: "480312025"

                            },

                            {

                                num: NumberInt("115"),

                                value: "480312024"

                            },

                            {

                                num: NumberInt("116"),

                                value: "215261317"

                            },

                            {

                                num: NumberInt("117"),

                                value: "215261316"

                            },

                            {

                                num: NumberInt("118"),

                                value: "83754702"

                            },

                            {

                                num: NumberInt("119"),

                                value: "83754701"

                            },

                            {

                                num: NumberInt("120"),

                                value: "71042779"

                            },

                            {

                                num: NumberInt("121"),

                                value: "71042778"

                            },

                            {

                                num: NumberInt("122"),

                                value: "24987445"

                            },

                            {

                                num: NumberInt("123"),

                                value: "2554845"

                            },

                            {

                                num: NumberInt("124"),

                                value: "1064968"

                            },

                            {

                                num: NumberInt("125"),

                                value: "230018"

                            },

                            {

                                num: NumberInt("126"),

                                value: "230015"

                            },

                            {

                                num: NumberInt("127"),

                                value: "2230345817"

                            },

                            {

                                num: NumberInt("128"),

                                value: "365813032"

                            },

                            {

                                num: NumberInt("129"),

                                value: "365813029"

                            },

                            {

                                num: NumberInt("130"),

                                value: "311772216"

                            },

                            {

                                num: NumberInt("131"),

                                value: "20150183"

                            },

                            {

                                num: NumberInt("132"),

                                value: "955264934"

                            },

                            {

                                num: NumberInt("133"),

                                value: "955264933"

                            },

                            {

                                num: NumberInt("134"),

                                value: "588292920"

                            },

                            {

                                num: NumberInt("135"),

                                value: "588292919"

                            },

                            {

                                num: NumberInt("136"),

                                value: "588292918"

                            },

                            {

                                num: NumberInt("137"),

                                value: "588292917"

                            },

                            {

                                num: NumberInt("138"),

                                value: "575403330"

                            },

                            {

                                num: NumberInt("139"),

                                value: "575403328"

                            },

                            {

                                num: NumberInt("140"),

                                value: "575403326"

                            },

                            {

                                num: NumberInt("141"),

                                value: "575403325"

                            },

                            {

                                num: NumberInt("142"),

                                value: "575403322"

                            },

                            {

                                num: NumberInt("143"),

                                value: "575403321"

                            },

                            {

                                num: NumberInt("144"),

                                value: "575403310"

                            },

                            {

                                num: NumberInt("145"),

                                value: "575403309"

                            },

                            {

                                num: NumberInt("146"),

                                value: "575403306"

                            },

                            {

                                num: NumberInt("147"),

                                value: "575403305"

                            },

                            {

                                num: NumberInt("148"),

                                value: "575403302"

                            },

                            {

                                num: NumberInt("149"),

                                value: "575403301"

                            },

                            {

                                num: NumberInt("150"),

                                value: "575403298"

                            },

                            {

                                num: NumberInt("151"),

                                value: "575403297"

                            },

                            {

                                num: NumberInt("152"),

                                value: "575403294"

                            },

                            {

                                num: NumberInt("153"),

                                value: "575403293"

                            },

                            {

                                num: NumberInt("154"),

                                value: "575403290"

                            },

                            {

                                num: NumberInt("155"),

                                value: "575403289"

                            },

                            {

                                num: NumberInt("156"),

                                value: "24987408"

                            },

                            {

                                num: NumberInt("157"),

                                value: "7245960"

                            },

                            {

                                num: NumberInt("158"),

                                value: "7245957"

                            },

                            {

                                num: NumberInt("159"),

                                value: "6730519"

                            },

                            {

                                num: NumberInt("160"),

                                value: "1064966"

                            },

                            {

                                num: NumberInt("161"),

                                value: "226192643"

                            },

                            {

                                num: NumberInt("162"),

                                value: "226192641"

                            },

                            {

                                num: NumberInt("163"),

                                value: "226192635"

                            },

                            {

                                num: NumberInt("164"),

                                value: "313471757"

                            },

                            {

                                num: NumberInt("165"),

                                value: "380764138"

                            },

                            {

                                num: NumberInt("166"),

                                value: "380764135"

                            },

                            {

                                num: NumberInt("167"),

                                value: "380764132"

                            },

                            {

                                num: NumberInt("168"),

                                value: "380764129"

                            },

                            {

                                num: NumberInt("169"),

                                value: "380764126"

                            },

                            {

                                num: NumberInt("170"),

                                value: "380764123"

                            },

                            {

                                num: NumberInt("171"),

                                value: "380764120"

                            },

                            {

                                num: NumberInt("172"),

                                value: "380764111"

                            },

                            {

                                num: NumberInt("173"),

                                value: "380764108"

                            },

                            {

                                num: NumberInt("174"),

                                value: "213424211"

                            },

                            {

                                num: NumberInt("175"),

                                value: "213424210"

                            },

                            {

                                num: NumberInt("176"),

                                value: "206582000"

                            },

                            {

                                num: NumberInt("177"),

                                value: "206581999"

                            },

                            {

                                num: NumberInt("178"),

                                value: "6730547"

                            },

                            {

                                num: NumberInt("179"),

                                value: "6730542"

                            },

                            {

                                num: NumberInt("180"),

                                value: "827343371"

                            },

                            {

                                num: NumberInt("181"),

                                value: "378792145"

                            },

                            {

                                num: NumberInt("182"),

                                value: "378792142"

                            },

                            {

                                num: NumberInt("183"),

                                value: "319443778"

                            },

                            {

                                num: NumberInt("184"),

                                value: "319443777"

                            },

                            {

                                num: NumberInt("185"),

                                value: "56553909"

                            },

                            {

                                num: NumberInt("186"),

                                value: "1752309654"

                            },

                            {

                                num: NumberInt("187"),

                                value: "1690533021"

                            },

                            {

                                num: NumberInt("188"),

                                value: "971826035"

                            },

                            {

                                num: NumberInt("189"),

                                value: "971826034"

                            },

                            {

                                num: NumberInt("190"),

                                value: "971826031"

                            },

                            {

                                num: NumberInt("191"),

                                value: "971826030"

                            },

                            {

                                num: NumberInt("192"),

                                value: "403242416"

                            },

                            {

                                num: NumberInt("193"),

                                value: "361130616"

                            },

                            {

                                num: NumberInt("194"),

                                value: "361130614"

                            },

                            {

                                num: NumberInt("195"),

                                value: "354459822"

                            },

                            {

                                num: NumberInt("196"),

                                value: "354459818"

                            },

                            {

                                num: NumberInt("197"),

                                value: "281500941"

                            },

                            {

                                num: NumberInt("198"),

                                value: "118137431"

                            },

                            {

                                num: NumberInt("199"),

                                value: "90109286"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("9"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("9"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("7"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop click next page",

            sequence: [

                NumberInt("10")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("10"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("10"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("8"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("12")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("11"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("10"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("11"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para10_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "90109283"

                            },

                            {

                                num: NumberInt("1"),

                                value: "50513650"

                            },

                            {

                                num: NumberInt("2"),

                                value: "50513648"

                            },

                            {

                                num: NumberInt("3"),

                                value: "33357134"

                            },

                            {

                                num: NumberInt("4"),

                                value: "7245954"

                            },

                            {

                                num: NumberInt("5"),

                                value: "7245951"

                            },

                            {

                                num: NumberInt("6"),

                                value: "3891455"

                            },

                            {

                                num: NumberInt("7"),

                                value: "1229749463"

                            },

                            {

                                num: NumberInt("8"),

                                value: "1229749461"

                            },

                            {

                                num: NumberInt("9"),

                                value: "1285033057"

                            },

                            {

                                num: NumberInt("10"),

                                value: "973743950"

                            },

                            {

                                num: NumberInt("11"),

                                value: "973743948"

                            },

                            {

                                num: NumberInt("12"),

                                value: "1942092"

                            },

                            {

                                num: NumberInt("13"),

                                value: "253722462"

                            },

                            {

                                num: NumberInt("14"),

                                value: "253722335"

                            },

                            {

                                num: NumberInt("15"),

                                value: "82407914"

                            },

                            {

                                num: NumberInt("16"),

                                value: "82407911"

                            },

                            {

                                num: NumberInt("17"),

                                value: "82407908"

                            },

                            {

                                num: NumberInt("18"),

                                value: "82407905"

                            },

                            {

                                num: NumberInt("19"),

                                value: "1951684507"

                            },

                            {

                                num: NumberInt("20"),

                                value: "1951684506"

                            },

                            {

                                num: NumberInt("21"),

                                value: "1229749431"

                            },

                            {

                                num: NumberInt("22"),

                                value: "1229749430"

                            },

                            {

                                num: NumberInt("23"),

                                value: "393715165"

                            },

                            {

                                num: NumberInt("24"),

                                value: "326328022"

                            },

                            {

                                num: NumberInt("25"),

                                value: "326328020"

                            },

                            {

                                num: NumberInt("26"),

                                value: "326328018"

                            },

                            {

                                num: NumberInt("27"),

                                value: "260100190"

                            },

                            {

                                num: NumberInt("28"),

                                value: "260100188"

                            },

                            {

                                num: NumberInt("29"),

                                value: "254220969"

                            },

                            {

                                num: NumberInt("30"),

                                value: "228311833"

                            },

                            {

                                num: NumberInt("31"),

                                value: "228311831"

                            },

                            {

                                num: NumberInt("32"),

                                value: "210060917"

                            },

                            {

                                num: NumberInt("33"),

                                value: "187609187"

                            },

                            {

                                num: NumberInt("34"),

                                value: "159795705"

                            },

                            {

                                num: NumberInt("35"),

                                value: "159795704"

                            },

                            {

                                num: NumberInt("36"),

                                value: "75766452"

                            },

                            {

                                num: NumberInt("37"),

                                value: "75766450"

                            },

                            {

                                num: NumberInt("38"),

                                value: "55670240"

                            },

                            {

                                num: NumberInt("39"),

                                value: "34810640"

                            },

                            {

                                num: NumberInt("40"),

                                value: "34810639"

                            },

                            {

                                num: NumberInt("41"),

                                value: "29726582"

                            },

                            {

                                num: NumberInt("42"),

                                value: "29726581"

                            },

                            {

                                num: NumberInt("43"),

                                value: "1858697035"

                            },

                            {

                                num: NumberInt("44"),

                                value: "1858697033"

                            },

                            {

                                num: NumberInt("45"),

                                value: "1858697032"

                            },

                            {

                                num: NumberInt("46"),

                                value: "1777435770"

                            },

                            {

                                num: NumberInt("47"),

                                value: "1777435769"

                            },

                            {

                                num: NumberInt("48"),

                                value: "1052245220"

                            },

                            {

                                num: NumberInt("49"),

                                value: "1052245219"

                            },

                            {

                                num: NumberInt("50"),

                                value: "1048348328"

                            },

                            {

                                num: NumberInt("51"),

                                value: "1048348326"

                            },

                            {

                                num: NumberInt("52"),

                                value: "400977517"

                            },

                            {

                                num: NumberInt("53"),

                                value: "388604050"

                            },

                            {

                                num: NumberInt("54"),

                                value: "388604047"

                            },

                            {

                                num: NumberInt("55"),

                                value: "255311792"

                            },

                            {

                                num: NumberInt("56"),

                                value: "203282429"

                            },

                            {

                                num: NumberInt("57"),

                                value: "186973126"

                            },

                            {

                                num: NumberInt("58"),

                                value: "186973125"

                            },

                            {

                                num: NumberInt("59"),

                                value: "185177971"

                            },

                            {

                                num: NumberInt("60"),

                                value: "185177970"

                            },

                            {

                                num: NumberInt("61"),

                                value: "185177784"

                            },

                            {

                                num: NumberInt("62"),

                                value: "185177783"

                            },

                            {

                                num: NumberInt("63"),

                                value: "185177782"

                            },

                            {

                                num: NumberInt("64"),

                                value: "185177781"

                            },

                            {

                                num: NumberInt("65"),

                                value: "185177780"

                            },

                            {

                                num: NumberInt("66"),

                                value: "185177777"

                            },

                            {

                                num: NumberInt("67"),

                                value: "185177776"

                            },

                            {

                                num: NumberInt("68"),

                                value: "185177775"

                            },

                            {

                                num: NumberInt("69"),

                                value: "78100776"

                            },

                            {

                                num: NumberInt("70"),

                                value: "27573558"

                            },

                            {

                                num: NumberInt("71"),

                                value: "27573555"

                            },

                            {

                                num: NumberInt("72"),

                                value: "24987387"

                            },

                            {

                                num: NumberInt("73"),

                                value: "16975109"

                            },

                            {

                                num: NumberInt("74"),

                                value: "16975106"

                            },

                            {

                                num: NumberInt("75"),

                                value: "16975097"

                            },

                            {

                                num: NumberInt("76"),

                                value: "16975094"

                            },

                            {

                                num: NumberInt("77"),

                                value: "15988374"

                            },

                            {

                                num: NumberInt("78"),

                                value: "1311413"

                            },

                            {

                                num: NumberInt("79"),

                                value: "1311412"

                            },

                            {

                                num: NumberInt("80"),

                                value: "2438257093"

                            },

                            {

                                num: NumberInt("81"),

                                value: "2438257092"

                            },

                            {

                                num: NumberInt("82"),

                                value: "2438255994"

                            },

                            {

                                num: NumberInt("83"),

                                value: "820957305"

                            },

                            {

                                num: NumberInt("84"),

                                value: "820957303"

                            },

                            {

                                num: NumberInt("85"),

                                value: "820957302"

                            },

                            {

                                num: NumberInt("86"),

                                value: "820957301"

                            },

                            {

                                num: NumberInt("87"),

                                value: "226192639"

                            },

                            {

                                num: NumberInt("88"),

                                value: "3891509"

                            },

                            {

                                num: NumberInt("89"),

                                value: "78101009"

                            },

                            {

                                num: NumberInt("90"),

                                value: "290789975"

                            },

                            {

                                num: NumberInt("91"),

                                value: "228312136"

                            },

                            {

                                num: NumberInt("92"),

                                value: "228312135"

                            },

                            {

                                num: NumberInt("93"),

                                value: "14488574"

                            },

                            {

                                num: NumberInt("94"),

                                value: "14488570"

                            },

                            {

                                num: NumberInt("95"),

                                value: "14488566"

                            },

                            {

                                num: NumberInt("96"),

                                value: "14488562"

                            },

                            {

                                num: NumberInt("97"),

                                value: "394985959"

                            },

                            {

                                num: NumberInt("98"),

                                value: "1995654977"

                            },

                            {

                                num: NumberInt("99"),

                                value: "1995654976"

                            },

                            {

                                num: NumberInt("100"),

                                value: "1995654975"

                            },

                            {

                                num: NumberInt("101"),

                                value: "1995654974"

                            },

                            {

                                num: NumberInt("102"),

                                value: "213424133"

                            },

                            {

                                num: NumberInt("103"),

                                value: "213424130"

                            },

                            {

                                num: NumberInt("104"),

                                value: "170292253"

                            },

                            {

                                num: NumberInt("105"),

                                value: "161172208"

                            },

                            {

                                num: NumberInt("106"),

                                value: "161172207"

                            },

                            {

                                num: NumberInt("107"),

                                value: "161172206"

                            },

                            {

                                num: NumberInt("108"),

                                value: "146387025"

                            },

                            {

                                num: NumberInt("109"),

                                value: "146386775"

                            },

                            {

                                num: NumberInt("110"),

                                value: "146386774"

                            },

                            {

                                num: NumberInt("111"),

                                value: "82407814"

                            },

                            {

                                num: NumberInt("112"),

                                value: "71042065"

                            },

                            {

                                num: NumberInt("113"),

                                value: "55670289"

                            },

                            {

                                num: NumberInt("114"),

                                value: "55670285"

                            },

                            {

                                num: NumberInt("115"),

                                value: "55670282"

                            },

                            {

                                num: NumberInt("116"),

                                value: "55670279"

                            },

                            {

                                num: NumberInt("117"),

                                value: "55670258"

                            },

                            {

                                num: NumberInt("118"),

                                value: "55670255"

                            },

                            {

                                num: NumberInt("119"),

                                value: "55670252"

                            },

                            {

                                num: NumberInt("120"),

                                value: "55670249"

                            },

                            {

                                num: NumberInt("121"),

                                value: "55670246"

                            },

                            {

                                num: NumberInt("122"),

                                value: "55670243"

                            },

                            {

                                num: NumberInt("123"),

                                value: "55670237"

                            },

                            {

                                num: NumberInt("124"),

                                value: "55670234"

                            },

                            {

                                num: NumberInt("125"),

                                value: "55670231"

                            },

                            {

                                num: NumberInt("126"),

                                value: "34810522"

                            },

                            {

                                num: NumberInt("127"),

                                value: "34810521"

                            },

                            {

                                num: NumberInt("128"),

                                value: "27573564"

                            },

                            {

                                num: NumberInt("129"),

                                value: "27573561"

                            },

                            {

                                num: NumberInt("130"),

                                value: "27573552"

                            },

                            {

                                num: NumberInt("131"),

                                value: "27573549"

                            },

                            {

                                num: NumberInt("132"),

                                value: "7766972"

                            },

                            {

                                num: NumberInt("133"),

                                value: "7766971"

                            },

                            {

                                num: NumberInt("134"),

                                value: "2554792"

                            },

                            {

                                num: NumberInt("135"),

                                value: "1827515833"

                            },

                            {

                                num: NumberInt("136"),

                                value: "1827515832"

                            },

                            {

                                num: NumberInt("137"),

                                value: "1624687897"

                            },

                            {

                                num: NumberInt("138"),

                                value: "1272616475"

                            },

                            {

                                num: NumberInt("139"),

                                value: "1272616474"

                            },

                            {

                                num: NumberInt("140"),

                                value: "1272616473"

                            },

                            {

                                num: NumberInt("141"),

                                value: "1189432129"

                            },

                            {

                                num: NumberInt("142"),

                                value: "1025734705"

                            },

                            {

                                num: NumberInt("143"),

                                value: "767259504"

                            },

                            {

                                num: NumberInt("144"),

                                value: "767259503"

                            },

                            {

                                num: NumberInt("145"),

                                value: "767259502"

                            },

                            {

                                num: NumberInt("146"),

                                value: "672886496"

                            },

                            {

                                num: NumberInt("147"),

                                value: "510101671"

                            },

                            {

                                num: NumberInt("148"),

                                value: "510101670"

                            },

                            {

                                num: NumberInt("149"),

                                value: "510101659"

                            },

                            {

                                num: NumberInt("150"),

                                value: "510101658"

                            },

                            {

                                num: NumberInt("151"),

                                value: "510101647"

                            },

                            {

                                num: NumberInt("152"),

                                value: "510101646"

                            },

                            {

                                num: NumberInt("153"),

                                value: "510101636"

                            },

                            {

                                num: NumberInt("154"),

                                value: "510101635"

                            },

                            {

                                num: NumberInt("155"),

                                value: "510101623"

                            },

                            {

                                num: NumberInt("156"),

                                value: "510101622"

                            },

                            {

                                num: NumberInt("157"),

                                value: "491668341"

                            },

                            {

                                num: NumberInt("158"),

                                value: "482676606"

                            },

                            {

                                num: NumberInt("159"),

                                value: "394985957"

                            },

                            {

                                num: NumberInt("160"),

                                value: "394985955"

                            },

                            {

                                num: NumberInt("161"),

                                value: "394985953"

                            },

                            {

                                num: NumberInt("162"),

                                value: "394985951"

                            },

                            {

                                num: NumberInt("163"),

                                value: "393715162"

                            },

                            {

                                num: NumberInt("164"),

                                value: "350610441"

                            },

                            {

                                num: NumberInt("165"),

                                value: "350610439"

                            },

                            {

                                num: NumberInt("166"),

                                value: "350610437"

                            },

                            {

                                num: NumberInt("167"),

                                value: "350610435"

                            },

                            {

                                num: NumberInt("168"),

                                value: "350610433"

                            },

                            {

                                num: NumberInt("169"),

                                value: "350610431"

                            },

                            {

                                num: NumberInt("170"),

                                value: "350297749"

                            },

                            {

                                num: NumberInt("171"),

                                value: "350297748"

                            },

                            {

                                num: NumberInt("172"),

                                value: "312597304"

                            },

                            {

                                num: NumberInt("173"),

                                value: "307776568"

                            },

                            {

                                num: NumberInt("174"),

                                value: "291463696"

                            },

                            {

                                num: NumberInt("175"),

                                value: "223365817"

                            },

                            {

                                num: NumberInt("176"),

                                value: "162330057"

                            },

                            {

                                num: NumberInt("177"),

                                value: "162330056"

                            },

                            {

                                num: NumberInt("178"),

                                value: "149243459"

                            },

                            {

                                num: NumberInt("179"),

                                value: "149243456"

                            },

                            {

                                num: NumberInt("180"),

                                value: "34810539"

                            },

                            {

                                num: NumberInt("181"),

                                value: "28373659"

                            },

                            {

                                num: NumberInt("182"),

                                value: "6435711"

                            },

                            {

                                num: NumberInt("183"),

                                value: "2780947"

                            },

                            {

                                num: NumberInt("184"),

                                value: "2780946"

                            },

                            {

                                num: NumberInt("185"),

                                value: "313471755"

                            },

                            {

                                num: NumberInt("186"),

                                value: "2431414598"

                            },

                            {

                                num: NumberInt("187"),

                                value: "33356853"

                            },

                            {

                                num: NumberInt("188"),

                                value: "33356850"

                            },

                            {

                                num: NumberInt("189"),

                                value: "33356847"

                            },

                            {

                                num: NumberInt("190"),

                                value: "33356844"

                            },

                            {

                                num: NumberInt("191"),

                                value: "71042392"

                            },

                            {

                                num: NumberInt("192"),

                                value: "1799708916"

                            },

                            {

                                num: NumberInt("193"),

                                value: "1799708911"

                            },

                            {

                                num: NumberInt("194"),

                                value: "1799708906"

                            },

                            {

                                num: NumberInt("195"),

                                value: "1799708901"

                            },

                            {

                                num: NumberInt("196"),

                                value: "1799708896"

                            },

                            {

                                num: NumberInt("197"),

                                value: "436408915"

                            },

                            {

                                num: NumberInt("198"),

                                value: "400977525"

                            },

                            {

                                num: NumberInt("199"),

                                value: "400977524"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("13"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("12"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"searchdetails_term\")]",

                wait: NumberInt("0"),

                value: "peptide[All Fields] AND (\"5\"[SLEN] : \"10\"[SLEN])"

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("14"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("13"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"ui-ncbibutton-5\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("15"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("17"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("16"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("17"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para11_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            },

                            {

                                num: NumberInt("1"),

                                value: "23200203"

                            },

                            {

                                num: NumberInt("2"),

                                value: "23200202"

                            },

                            {

                                num: NumberInt("3"),

                                value: "23200201"

                            },

                            {

                                num: NumberInt("4"),

                                value: "222447004"

                            },

                            {

                                num: NumberInt("5"),

                                value: "222447001"

                            },

                            {

                                num: NumberInt("6"),

                                value: "253722435"

                            },

                            {

                                num: NumberInt("7"),

                                value: "253722434"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2194022"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2194020"

                            },

                            {

                                num: NumberInt("10"),

                                value: "403242413"

                            },

                            {

                                num: NumberInt("11"),

                                value: "403242412"

                            },

                            {

                                num: NumberInt("12"),

                                value: "357380891"

                            },

                            {

                                num: NumberInt("13"),

                                value: "357380890"

                            },

                            {

                                num: NumberInt("14"),

                                value: "357380889"

                            },

                            {

                                num: NumberInt("15"),

                                value: "357380888"

                            },

                            {

                                num: NumberInt("16"),

                                value: "357380886"

                            },

                            {

                                num: NumberInt("17"),

                                value: "357380885"

                            },

                            {

                                num: NumberInt("18"),

                                value: "345100555"

                            },

                            {

                                num: NumberInt("19"),

                                value: "345100554"

                            },

                            {

                                num: NumberInt("20"),

                                value: "253722439"

                            },

                            {

                                num: NumberInt("21"),

                                value: "253722438"

                            },

                            {

                                num: NumberInt("22"),

                                value: "253722437"

                            },

                            {

                                num: NumberInt("23"),

                                value: "253722436"

                            },

                            {

                                num: NumberInt("24"),

                                value: "253722433"

                            },

                            {

                                num: NumberInt("25"),

                                value: "253722432"

                            },

                            {

                                num: NumberInt("26"),

                                value: "253722431"

                            },

                            {

                                num: NumberInt("27"),

                                value: "253722430"

                            },

                            {

                                num: NumberInt("28"),

                                value: "253722429"

                            },

                            {

                                num: NumberInt("29"),

                                value: "253722428"

                            },

                            {

                                num: NumberInt("30"),

                                value: "2981824"

                            },

                            {

                                num: NumberInt("31"),

                                value: "443014"

                            },

                            {

                                num: NumberInt("32"),

                                value: "443011"

                            },

                            {

                                num: NumberInt("33"),

                                value: "1036305139"

                            },

                            {

                                num: NumberInt("34"),

                                value: "1036305138"

                            },

                            {

                                num: NumberInt("35"),

                                value: "1036305137"

                            },

                            {

                                num: NumberInt("36"),

                                value: "1036305136"

                            },

                            {

                                num: NumberInt("37"),

                                value: "1036305135"

                            },

                            {

                                num: NumberInt("38"),

                                value: "1036305134"

                            },

                            {

                                num: NumberInt("39"),

                                value: "228312556"

                            },

                            {

                                num: NumberInt("40"),

                                value: "20150903"

                            },

                            {

                                num: NumberInt("41"),

                                value: "20150902"

                            },

                            {

                                num: NumberInt("42"),

                                value: "20150901"

                            },

                            {

                                num: NumberInt("43"),

                                value: "20150900"

                            },

                            {

                                num: NumberInt("44"),

                                value: "409187959"

                            },

                            {

                                num: NumberInt("45"),

                                value: "354459760"

                            },

                            {

                                num: NumberInt("46"),

                                value: "354459759"

                            },

                            {

                                num: NumberInt("47"),

                                value: "347948701"

                            },

                            {

                                num: NumberInt("48"),

                                value: "228312287"

                            },

                            {

                                num: NumberInt("49"),

                                value: "228312284"

                            },

                            {

                                num: NumberInt("50"),

                                value: "119389935"

                            },

                            {

                                num: NumberInt("51"),

                                value: "75765233"

                            },

                            {

                                num: NumberInt("52"),

                                value: "75765230"

                            },

                            {

                                num: NumberInt("53"),

                                value: "75765227"

                            },

                            {

                                num: NumberInt("54"),

                                value: "75765224"

                            },

                            {

                                num: NumberInt("55"),

                                value: "75765221"

                            },

                            {

                                num: NumberInt("56"),

                                value: "75765218"

                            },

                            {

                                num: NumberInt("57"),

                                value: "75765215"

                            },

                            {

                                num: NumberInt("58"),

                                value: "75765178"

                            },

                            {

                                num: NumberInt("59"),

                                value: "461641"

                            },

                            {

                                num: NumberInt("60"),

                                value: "1700031052"

                            },

                            {

                                num: NumberInt("61"),

                                value: "1700031050"

                            },

                            {

                                num: NumberInt("62"),

                                value: "134104482"

                            },

                            {

                                num: NumberInt("63"),

                                value: "134104480"

                            },

                            {

                                num: NumberInt("64"),

                                value: "134104478"

                            },

                            {

                                num: NumberInt("65"),

                                value: "134104476"

                            },

                            {

                                num: NumberInt("66"),

                                value: "134104474"

                            },

                            {

                                num: NumberInt("67"),

                                value: "134104472"

                            },

                            {

                                num: NumberInt("68"),

                                value: "134104470"

                            },

                            {

                                num: NumberInt("69"),

                                value: "34810318"

                            },

                            {

                                num: NumberInt("70"),

                                value: "34810312"

                            },

                            {

                                num: NumberInt("71"),

                                value: "380259128"

                            },

                            {

                                num: NumberInt("72"),

                                value: "323714393"

                            },

                            {

                                num: NumberInt("73"),

                                value: "323714392"

                            },

                            {

                                num: NumberInt("74"),

                                value: "323714391"

                            },

                            {

                                num: NumberInt("75"),

                                value: "323714390"

                            },

                            {

                                num: NumberInt("76"),

                                value: "323714387"

                            },

                            {

                                num: NumberInt("77"),

                                value: "323714386"

                            },

                            {

                                num: NumberInt("78"),

                                value: "323714385"

                            },

                            {

                                num: NumberInt("79"),

                                value: "67464074"

                            },

                            {

                                num: NumberInt("80"),

                                value: "67464069"

                            },

                            {

                                num: NumberInt("81"),

                                value: "999917"

                            },

                            {

                                num: NumberInt("82"),

                                value: "999914"

                            },

                            {

                                num: NumberInt("83"),

                                value: "159164758"

                            },

                            {

                                num: NumberInt("84"),

                                value: "2152672176"

                            },

                            {

                                num: NumberInt("85"),

                                value: "1393955870"

                            },

                            {

                                num: NumberInt("86"),

                                value: "1393955869"

                            },

                            {

                                num: NumberInt("87"),

                                value: "1393955868"

                            },

                            {

                                num: NumberInt("88"),

                                value: "1393955867"

                            },

                            {

                                num: NumberInt("89"),

                                value: "1393955866"

                            },

                            {

                                num: NumberInt("90"),

                                value: "1393955865"

                            },

                            {

                                num: NumberInt("91"),

                                value: "1279526455"

                            },

                            {

                                num: NumberInt("92"),

                                value: "1279526454"

                            },

                            {

                                num: NumberInt("93"),

                                value: "1279526453"

                            },

                            {

                                num: NumberInt("94"),

                                value: "1279526452"

                            },

                            {

                                num: NumberInt("95"),

                                value: "641389948"

                            },

                            {

                                num: NumberInt("96"),

                                value: "641389947"

                            },

                            {

                                num: NumberInt("97"),

                                value: "641389946"

                            },

                            {

                                num: NumberInt("98"),

                                value: "520728720"

                            },

                            {

                                num: NumberInt("99"),

                                value: "520728719"

                            },

                            {

                                num: NumberInt("100"),

                                value: "520728718"

                            },

                            {

                                num: NumberInt("101"),

                                value: "520728717"

                            },

                            {

                                num: NumberInt("102"),

                                value: "520728716"

                            },

                            {

                                num: NumberInt("103"),

                                value: "520728715"

                            },

                            {

                                num: NumberInt("104"),

                                value: "520728714"

                            },

                            {

                                num: NumberInt("105"),

                                value: "520728713"

                            },

                            {

                                num: NumberInt("106"),

                                value: "520728712"

                            },

                            {

                                num: NumberInt("107"),

                                value: "520728711"

                            },

                            {

                                num: NumberInt("108"),

                                value: "520728710"

                            },

                            {

                                num: NumberInt("109"),

                                value: "520728709"

                            },

                            {

                                num: NumberInt("110"),

                                value: "480312031"

                            },

                            {

                                num: NumberInt("111"),

                                value: "480312030"

                            },

                            {

                                num: NumberInt("112"),

                                value: "480312027"

                            },

                            {

                                num: NumberInt("113"),

                                value: "480312026"

                            },

                            {

                                num: NumberInt("114"),

                                value: "480312025"

                            },

                            {

                                num: NumberInt("115"),

                                value: "480312024"

                            },

                            {

                                num: NumberInt("116"),

                                value: "215261317"

                            },

                            {

                                num: NumberInt("117"),

                                value: "215261316"

                            },

                            {

                                num: NumberInt("118"),

                                value: "83754702"

                            },

                            {

                                num: NumberInt("119"),

                                value: "83754701"

                            },

                            {

                                num: NumberInt("120"),

                                value: "71042779"

                            },

                            {

                                num: NumberInt("121"),

                                value: "71042778"

                            },

                            {

                                num: NumberInt("122"),

                                value: "24987445"

                            },

                            {

                                num: NumberInt("123"),

                                value: "2554845"

                            },

                            {

                                num: NumberInt("124"),

                                value: "1064968"

                            },

                            {

                                num: NumberInt("125"),

                                value: "230018"

                            },

                            {

                                num: NumberInt("126"),

                                value: "230015"

                            },

                            {

                                num: NumberInt("127"),

                                value: "2230345817"

                            },

                            {

                                num: NumberInt("128"),

                                value: "365813032"

                            },

                            {

                                num: NumberInt("129"),

                                value: "365813029"

                            },

                            {

                                num: NumberInt("130"),

                                value: "311772216"

                            },

                            {

                                num: NumberInt("131"),

                                value: "20150183"

                            },

                            {

                                num: NumberInt("132"),

                                value: "955264934"

                            },

                            {

                                num: NumberInt("133"),

                                value: "955264933"

                            },

                            {

                                num: NumberInt("134"),

                                value: "588292920"

                            },

                            {

                                num: NumberInt("135"),

                                value: "588292919"

                            },

                            {

                                num: NumberInt("136"),

                                value: "588292918"

                            },

                            {

                                num: NumberInt("137"),

                                value: "588292917"

                            },

                            {

                                num: NumberInt("138"),

                                value: "575403330"

                            },

                            {

                                num: NumberInt("139"),

                                value: "575403328"

                            },

                            {

                                num: NumberInt("140"),

                                value: "575403326"

                            },

                            {

                                num: NumberInt("141"),

                                value: "575403325"

                            },

                            {

                                num: NumberInt("142"),

                                value: "575403322"

                            },

                            {

                                num: NumberInt("143"),

                                value: "575403321"

                            },

                            {

                                num: NumberInt("144"),

                                value: "575403310"

                            },

                            {

                                num: NumberInt("145"),

                                value: "575403309"

                            },

                            {

                                num: NumberInt("146"),

                                value: "575403306"

                            },

                            {

                                num: NumberInt("147"),

                                value: "575403305"

                            },

                            {

                                num: NumberInt("148"),

                                value: "575403302"

                            },

                            {

                                num: NumberInt("149"),

                                value: "575403301"

                            },

                            {

                                num: NumberInt("150"),

                                value: "575403298"

                            },

                            {

                                num: NumberInt("151"),

                                value: "575403297"

                            },

                            {

                                num: NumberInt("152"),

                                value: "575403294"

                            },

                            {

                                num: NumberInt("153"),

                                value: "575403293"

                            },

                            {

                                num: NumberInt("154"),

                                value: "575403290"

                            },

                            {

                                num: NumberInt("155"),

                                value: "575403289"

                            },

                            {

                                num: NumberInt("156"),

                                value: "24987408"

                            },

                            {

                                num: NumberInt("157"),

                                value: "7245960"

                            },

                            {

                                num: NumberInt("158"),

                                value: "7245957"

                            },

                            {

                                num: NumberInt("159"),

                                value: "6730519"

                            },

                            {

                                num: NumberInt("160"),

                                value: "1064966"

                            },

                            {

                                num: NumberInt("161"),

                                value: "226192643"

                            },

                            {

                                num: NumberInt("162"),

                                value: "226192641"

                            },

                            {

                                num: NumberInt("163"),

                                value: "226192635"

                            },

                            {

                                num: NumberInt("164"),

                                value: "313471757"

                            },

                            {

                                num: NumberInt("165"),

                                value: "380764138"

                            },

                            {

                                num: NumberInt("166"),

                                value: "380764135"

                            },

                            {

                                num: NumberInt("167"),

                                value: "380764132"

                            },

                            {

                                num: NumberInt("168"),

                                value: "380764129"

                            },

                            {

                                num: NumberInt("169"),

                                value: "380764126"

                            },

                            {

                                num: NumberInt("170"),

                                value: "380764123"

                            },

                            {

                                num: NumberInt("171"),

                                value: "380764120"

                            },

                            {

                                num: NumberInt("172"),

                                value: "380764111"

                            },

                            {

                                num: NumberInt("173"),

                                value: "380764108"

                            },

                            {

                                num: NumberInt("174"),

                                value: "213424211"

                            },

                            {

                                num: NumberInt("175"),

                                value: "213424210"

                            },

                            {

                                num: NumberInt("176"),

                                value: "206582000"

                            },

                            {

                                num: NumberInt("177"),

                                value: "206581999"

                            },

                            {

                                num: NumberInt("178"),

                                value: "6730547"

                            },

                            {

                                num: NumberInt("179"),

                                value: "6730542"

                            },

                            {

                                num: NumberInt("180"),

                                value: "827343371"

                            },

                            {

                                num: NumberInt("181"),

                                value: "378792145"

                            },

                            {

                                num: NumberInt("182"),

                                value: "378792142"

                            },

                            {

                                num: NumberInt("183"),

                                value: "319443778"

                            },

                            {

                                num: NumberInt("184"),

                                value: "319443777"

                            },

                            {

                                num: NumberInt("185"),

                                value: "56553909"

                            },

                            {

                                num: NumberInt("186"),

                                value: "1752309654"

                            },

                            {

                                num: NumberInt("187"),

                                value: "1690533021"

                            },

                            {

                                num: NumberInt("188"),

                                value: "971826035"

                            },

                            {

                                num: NumberInt("189"),

                                value: "971826034"

                            },

                            {

                                num: NumberInt("190"),

                                value: "971826031"

                            },

                            {

                                num: NumberInt("191"),

                                value: "971826030"

                            },

                            {

                                num: NumberInt("192"),

                                value: "403242416"

                            },

                            {

                                num: NumberInt("193"),

                                value: "361130616"

                            },

                            {

                                num: NumberInt("194"),

                                value: "361130614"

                            },

                            {

                                num: NumberInt("195"),

                                value: "354459822"

                            },

                            {

                                num: NumberInt("196"),

                                value: "354459818"

                            },

                            {

                                num: NumberInt("197"),

                                value: "281500941"

                            },

                            {

                                num: NumberInt("198"),

                                value: "118137431"

                            },

                            {

                                num: NumberInt("199"),

                                value: "90109286"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("17"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("18"),

                NumberInt("19")

            ],

            isInLoop: false,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("19"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("18"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("19"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para12_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            },

                            {

                                num: NumberInt("1"),

                                value: "23200203"

                            },

                            {

                                num: NumberInt("2"),

                                value: "23200202"

                            },

                            {

                                num: NumberInt("3"),

                                value: "23200201"

                            },

                            {

                                num: NumberInt("4"),

                                value: "222447004"

                            },

                            {

                                num: NumberInt("5"),

                                value: "222447001"

                            },

                            {

                                num: NumberInt("6"),

                                value: "253722435"

                            },

                            {

                                num: NumberInt("7"),

                                value: "253722434"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2194022"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2194020"

                            },

                            {

                                num: NumberInt("10"),

                                value: "403242413"

                            },

                            {

                                num: NumberInt("11"),

                                value: "403242412"

                            },

                            {

                                num: NumberInt("12"),

                                value: "357380891"

                            },

                            {

                                num: NumberInt("13"),

                                value: "357380890"

                            },

                            {

                                num: NumberInt("14"),

                                value: "357380889"

                            },

                            {

                                num: NumberInt("15"),

                                value: "357380888"

                            },

                            {

                                num: NumberInt("16"),

                                value: "357380886"

                            },

                            {

                                num: NumberInt("17"),

                                value: "357380885"

                            },

                            {

                                num: NumberInt("18"),

                                value: "345100555"

                            },

                            {

                                num: NumberInt("19"),

                                value: "345100554"

                            },

                            {

                                num: NumberInt("20"),

                                value: "253722439"

                            },

                            {

                                num: NumberInt("21"),

                                value: "253722438"

                            },

                            {

                                num: NumberInt("22"),

                                value: "253722437"

                            },

                            {

                                num: NumberInt("23"),

                                value: "253722436"

                            },

                            {

                                num: NumberInt("24"),

                                value: "253722433"

                            },

                            {

                                num: NumberInt("25"),

                                value: "253722432"

                            },

                            {

                                num: NumberInt("26"),

                                value: "253722431"

                            },

                            {

                                num: NumberInt("27"),

                                value: "253722430"

                            },

                            {

                                num: NumberInt("28"),

                                value: "253722429"

                            },

                            {

                                num: NumberInt("29"),

                                value: "253722428"

                            },

                            {

                                num: NumberInt("30"),

                                value: "2981824"

                            },

                            {

                                num: NumberInt("31"),

                                value: "443014"

                            },

                            {

                                num: NumberInt("32"),

                                value: "443011"

                            },

                            {

                                num: NumberInt("33"),

                                value: "1036305139"

                            },

                            {

                                num: NumberInt("34"),

                                value: "1036305138"

                            },

                            {

                                num: NumberInt("35"),

                                value: "1036305137"

                            },

                            {

                                num: NumberInt("36"),

                                value: "1036305136"

                            },

                            {

                                num: NumberInt("37"),

                                value: "1036305135"

                            },

                            {

                                num: NumberInt("38"),

                                value: "1036305134"

                            },

                            {

                                num: NumberInt("39"),

                                value: "228312556"

                            },

                            {

                                num: NumberInt("40"),

                                value: "20150903"

                            },

                            {

                                num: NumberInt("41"),

                                value: "20150902"

                            },

                            {

                                num: NumberInt("42"),

                                value: "20150901"

                            },

                            {

                                num: NumberInt("43"),

                                value: "20150900"

                            },

                            {

                                num: NumberInt("44"),

                                value: "409187959"

                            },

                            {

                                num: NumberInt("45"),

                                value: "354459760"

                            },

                            {

                                num: NumberInt("46"),

                                value: "354459759"

                            },

                            {

                                num: NumberInt("47"),

                                value: "347948701"

                            },

                            {

                                num: NumberInt("48"),

                                value: "228312287"

                            },

                            {

                                num: NumberInt("49"),

                                value: "228312284"

                            },

                            {

                                num: NumberInt("50"),

                                value: "119389935"

                            },

                            {

                                num: NumberInt("51"),

                                value: "75765233"

                            },

                            {

                                num: NumberInt("52"),

                                value: "75765230"

                            },

                            {

                                num: NumberInt("53"),

                                value: "75765227"

                            },

                            {

                                num: NumberInt("54"),

                                value: "75765224"

                            },

                            {

                                num: NumberInt("55"),

                                value: "75765221"

                            },

                            {

                                num: NumberInt("56"),

                                value: "75765218"

                            },

                            {

                                num: NumberInt("57"),

                                value: "75765215"

                            },

                            {

                                num: NumberInt("58"),

                                value: "75765178"

                            },

                            {

                                num: NumberInt("59"),

                                value: "461641"

                            },

                            {

                                num: NumberInt("60"),

                                value: "1700031052"

                            },

                            {

                                num: NumberInt("61"),

                                value: "1700031050"

                            },

                            {

                                num: NumberInt("62"),

                                value: "134104482"

                            },

                            {

                                num: NumberInt("63"),

                                value: "134104480"

                            },

                            {

                                num: NumberInt("64"),

                                value: "134104478"

                            },

                            {

                                num: NumberInt("65"),

                                value: "134104476"

                            },

                            {

                                num: NumberInt("66"),

                                value: "134104474"

                            },

                            {

                                num: NumberInt("67"),

                                value: "134104472"

                            },

                            {

                                num: NumberInt("68"),

                                value: "134104470"

                            },

                            {

                                num: NumberInt("69"),

                                value: "34810318"

                            },

                            {

                                num: NumberInt("70"),

                                value: "34810312"

                            },

                            {

                                num: NumberInt("71"),

                                value: "380259128"

                            },

                            {

                                num: NumberInt("72"),

                                value: "323714393"

                            },

                            {

                                num: NumberInt("73"),

                                value: "323714392"

                            },

                            {

                                num: NumberInt("74"),

                                value: "323714391"

                            },

                            {

                                num: NumberInt("75"),

                                value: "323714390"

                            },

                            {

                                num: NumberInt("76"),

                                value: "323714387"

                            },

                            {

                                num: NumberInt("77"),

                                value: "323714386"

                            },

                            {

                                num: NumberInt("78"),

                                value: "323714385"

                            },

                            {

                                num: NumberInt("79"),

                                value: "67464074"

                            },

                            {

                                num: NumberInt("80"),

                                value: "67464069"

                            },

                            {

                                num: NumberInt("81"),

                                value: "999917"

                            },

                            {

                                num: NumberInt("82"),

                                value: "999914"

                            },

                            {

                                num: NumberInt("83"),

                                value: "159164758"

                            },

                            {

                                num: NumberInt("84"),

                                value: "2152672176"

                            },

                            {

                                num: NumberInt("85"),

                                value: "1393955870"

                            },

                            {

                                num: NumberInt("86"),

                                value: "1393955869"

                            },

                            {

                                num: NumberInt("87"),

                                value: "1393955868"

                            },

                            {

                                num: NumberInt("88"),

                                value: "1393955867"

                            },

                            {

                                num: NumberInt("89"),

                                value: "1393955866"

                            },

                            {

                                num: NumberInt("90"),

                                value: "1393955865"

                            },

                            {

                                num: NumberInt("91"),

                                value: "1279526455"

                            },

                            {

                                num: NumberInt("92"),

                                value: "1279526454"

                            },

                            {

                                num: NumberInt("93"),

                                value: "1279526453"

                            },

                            {

                                num: NumberInt("94"),

                                value: "1279526452"

                            },

                            {

                                num: NumberInt("95"),

                                value: "641389948"

                            },

                            {

                                num: NumberInt("96"),

                                value: "641389947"

                            },

                            {

                                num: NumberInt("97"),

                                value: "641389946"

                            },

                            {

                                num: NumberInt("98"),

                                value: "520728720"

                            },

                            {

                                num: NumberInt("99"),

                                value: "520728719"

                            },

                            {

                                num: NumberInt("100"),

                                value: "520728718"

                            },

                            {

                                num: NumberInt("101"),

                                value: "520728717"

                            },

                            {

                                num: NumberInt("102"),

                                value: "520728716"

                            },

                            {

                                num: NumberInt("103"),

                                value: "520728715"

                            },

                            {

                                num: NumberInt("104"),

                                value: "520728714"

                            },

                            {

                                num: NumberInt("105"),

                                value: "520728713"

                            },

                            {

                                num: NumberInt("106"),

                                value: "520728712"

                            },

                            {

                                num: NumberInt("107"),

                                value: "520728711"

                            },

                            {

                                num: NumberInt("108"),

                                value: "520728710"

                            },

                            {

                                num: NumberInt("109"),

                                value: "520728709"

                            },

                            {

                                num: NumberInt("110"),

                                value: "480312031"

                            },

                            {

                                num: NumberInt("111"),

                                value: "480312030"

                            },

                            {

                                num: NumberInt("112"),

                                value: "480312027"

                            },

                            {

                                num: NumberInt("113"),

                                value: "480312026"

                            },

                            {

                                num: NumberInt("114"),

                                value: "480312025"

                            },

                            {

                                num: NumberInt("115"),

                                value: "480312024"

                            },

                            {

                                num: NumberInt("116"),

                                value: "215261317"

                            },

                            {

                                num: NumberInt("117"),

                                value: "215261316"

                            },

                            {

                                num: NumberInt("118"),

                                value: "83754702"

                            },

                            {

                                num: NumberInt("119"),

                                value: "83754701"

                            },

                            {

                                num: NumberInt("120"),

                                value: "71042779"

                            },

                            {

                                num: NumberInt("121"),

                                value: "71042778"

                            },

                            {

                                num: NumberInt("122"),

                                value: "24987445"

                            },

                            {

                                num: NumberInt("123"),

                                value: "2554845"

                            },

                            {

                                num: NumberInt("124"),

                                value: "1064968"

                            },

                            {

                                num: NumberInt("125"),

                                value: "230018"

                            },

                            {

                                num: NumberInt("126"),

                                value: "230015"

                            },

                            {

                                num: NumberInt("127"),

                                value: "2230345817"

                            },

                            {

                                num: NumberInt("128"),

                                value: "365813032"

                            },

                            {

                                num: NumberInt("129"),

                                value: "365813029"

                            },

                            {

                                num: NumberInt("130"),

                                value: "311772216"

                            },

                            {

                                num: NumberInt("131"),

                                value: "20150183"

                            },

                            {

                                num: NumberInt("132"),

                                value: "955264934"

                            },

                            {

                                num: NumberInt("133"),

                                value: "955264933"

                            },

                            {

                                num: NumberInt("134"),

                                value: "588292920"

                            },

                            {

                                num: NumberInt("135"),

                                value: "588292919"

                            },

                            {

                                num: NumberInt("136"),

                                value: "588292918"

                            },

                            {

                                num: NumberInt("137"),

                                value: "588292917"

                            },

                            {

                                num: NumberInt("138"),

                                value: "575403330"

                            },

                            {

                                num: NumberInt("139"),

                                value: "575403328"

                            },

                            {

                                num: NumberInt("140"),

                                value: "575403326"

                            },

                            {

                                num: NumberInt("141"),

                                value: "575403325"

                            },

                            {

                                num: NumberInt("142"),

                                value: "575403322"

                            },

                            {

                                num: NumberInt("143"),

                                value: "575403321"

                            },

                            {

                                num: NumberInt("144"),

                                value: "575403310"

                            },

                            {

                                num: NumberInt("145"),

                                value: "575403309"

                            },

                            {

                                num: NumberInt("146"),

                                value: "575403306"

                            },

                            {

                                num: NumberInt("147"),

                                value: "575403305"

                            },

                            {

                                num: NumberInt("148"),

                                value: "575403302"

                            },

                            {

                                num: NumberInt("149"),

                                value: "575403301"

                            },

                            {

                                num: NumberInt("150"),

                                value: "575403298"

                            },

                            {

                                num: NumberInt("151"),

                                value: "575403297"

                            },

                            {

                                num: NumberInt("152"),

                                value: "575403294"

                            },

                            {

                                num: NumberInt("153"),

                                value: "575403293"

                            },

                            {

                                num: NumberInt("154"),

                                value: "575403290"

                            },

                            {

                                num: NumberInt("155"),

                                value: "575403289"

                            },

                            {

                                num: NumberInt("156"),

                                value: "24987408"

                            },

                            {

                                num: NumberInt("157"),

                                value: "7245960"

                            },

                            {

                                num: NumberInt("158"),

                                value: "7245957"

                            },

                            {

                                num: NumberInt("159"),

                                value: "6730519"

                            },

                            {

                                num: NumberInt("160"),

                                value: "1064966"

                            },

                            {

                                num: NumberInt("161"),

                                value: "226192643"

                            },

                            {

                                num: NumberInt("162"),

                                value: "226192641"

                            },

                            {

                                num: NumberInt("163"),

                                value: "226192635"

                            },

                            {

                                num: NumberInt("164"),

                                value: "313471757"

                            },

                            {

                                num: NumberInt("165"),

                                value: "380764138"

                            },

                            {

                                num: NumberInt("166"),

                                value: "380764135"

                            },

                            {

                                num: NumberInt("167"),

                                value: "380764132"

                            },

                            {

                                num: NumberInt("168"),

                                value: "380764129"

                            },

                            {

                                num: NumberInt("169"),

                                value: "380764126"

                            },

                            {

                                num: NumberInt("170"),

                                value: "380764123"

                            },

                            {

                                num: NumberInt("171"),

                                value: "380764120"

                            },

                            {

                                num: NumberInt("172"),

                                value: "380764111"

                            },

                            {

                                num: NumberInt("173"),

                                value: "380764108"

                            },

                            {

                                num: NumberInt("174"),

                                value: "213424211"

                            },

                            {

                                num: NumberInt("175"),

                                value: "213424210"

                            },

                            {

                                num: NumberInt("176"),

                                value: "206582000"

                            },

                            {

                                num: NumberInt("177"),

                                value: "206581999"

                            },

                            {

                                num: NumberInt("178"),

                                value: "6730547"

                            },

                            {

                                num: NumberInt("179"),

                                value: "6730542"

                            },

                            {

                                num: NumberInt("180"),

                                value: "827343371"

                            },

                            {

                                num: NumberInt("181"),

                                value: "378792145"

                            },

                            {

                                num: NumberInt("182"),

                                value: "378792142"

                            },

                            {

                                num: NumberInt("183"),

                                value: "319443778"

                            },

                            {

                                num: NumberInt("184"),

                                value: "319443777"

                            },

                            {

                                num: NumberInt("185"),

                                value: "56553909"

                            },

                            {

                                num: NumberInt("186"),

                                value: "1752309654"

                            },

                            {

                                num: NumberInt("187"),

                                value: "1690533021"

                            },

                            {

                                num: NumberInt("188"),

                                value: "971826035"

                            },

                            {

                                num: NumberInt("189"),

                                value: "971826034"

                            },

                            {

                                num: NumberInt("190"),

                                value: "971826031"

                            },

                            {

                                num: NumberInt("191"),

                                value: "971826030"

                            },

                            {

                                num: NumberInt("192"),

                                value: "403242416"

                            },

                            {

                                num: NumberInt("193"),

                                value: "361130616"

                            },

                            {

                                num: NumberInt("194"),

                                value: "361130614"

                            },

                            {

                                num: NumberInt("195"),

                                value: "354459822"

                            },

                            {

                                num: NumberInt("196"),

                                value: "354459818"

                            },

                            {

                                num: NumberInt("197"),

                                value: "281500941"

                            },

                            {

                                num: NumberInt("198"),

                                value: "118137431"

                            },

                            {

                                num: NumberInt("199"),

                                value: "90109286"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("19"),

            parentId: NumberInt("6"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop click next page",

            sequence: [

                NumberInt("21"),

                NumberInt("20")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("19"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("10"),

            index: NumberInt("20"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("19"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("21"),

            parentId: NumberInt("8"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("22")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("20"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("22"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("20"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para13_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "90109283"

                            },

                            {

                                num: NumberInt("1"),

                                value: "50513650"

                            },

                            {

                                num: NumberInt("2"),

                                value: "50513648"

                            },

                            {

                                num: NumberInt("3"),

                                value: "33357134"

                            },

                            {

                                num: NumberInt("4"),

                                value: "7245954"

                            },

                            {

                                num: NumberInt("5"),

                                value: "7245951"

                            },

                            {

                                num: NumberInt("6"),

                                value: "3891455"

                            },

                            {

                                num: NumberInt("7"),

                                value: "1229749463"

                            },

                            {

                                num: NumberInt("8"),

                                value: "1229749461"

                            },

                            {

                                num: NumberInt("9"),

                                value: "1285033057"

                            },

                            {

                                num: NumberInt("10"),

                                value: "973743950"

                            },

                            {

                                num: NumberInt("11"),

                                value: "973743948"

                            },

                            {

                                num: NumberInt("12"),

                                value: "1942092"

                            },

                            {

                                num: NumberInt("13"),

                                value: "253722462"

                            },

                            {

                                num: NumberInt("14"),

                                value: "253722335"

                            },

                            {

                                num: NumberInt("15"),

                                value: "82407914"

                            },

                            {

                                num: NumberInt("16"),

                                value: "82407911"

                            },

                            {

                                num: NumberInt("17"),

                                value: "82407908"

                            },

                            {

                                num: NumberInt("18"),

                                value: "82407905"

                            },

                            {

                                num: NumberInt("19"),

                                value: "1951684507"

                            },

                            {

                                num: NumberInt("20"),

                                value: "1951684506"

                            },

                            {

                                num: NumberInt("21"),

                                value: "1229749431"

                            },

                            {

                                num: NumberInt("22"),

                                value: "1229749430"

                            },

                            {

                                num: NumberInt("23"),

                                value: "393715165"

                            },

                            {

                                num: NumberInt("24"),

                                value: "326328022"

                            },

                            {

                                num: NumberInt("25"),

                                value: "326328020"

                            },

                            {

                                num: NumberInt("26"),

                                value: "326328018"

                            },

                            {

                                num: NumberInt("27"),

                                value: "260100190"

                            },

                            {

                                num: NumberInt("28"),

                                value: "260100188"

                            },

                            {

                                num: NumberInt("29"),

                                value: "254220969"

                            },

                            {

                                num: NumberInt("30"),

                                value: "228311833"

                            },

                            {

                                num: NumberInt("31"),

                                value: "228311831"

                            },

                            {

                                num: NumberInt("32"),

                                value: "210060917"

                            },

                            {

                                num: NumberInt("33"),

                                value: "187609187"

                            },

                            {

                                num: NumberInt("34"),

                                value: "159795705"

                            },

                            {

                                num: NumberInt("35"),

                                value: "159795704"

                            },

                            {

                                num: NumberInt("36"),

                                value: "75766452"

                            },

                            {

                                num: NumberInt("37"),

                                value: "75766450"

                            },

                            {

                                num: NumberInt("38"),

                                value: "55670240"

                            },

                            {

                                num: NumberInt("39"),

                                value: "34810640"

                            },

                            {

                                num: NumberInt("40"),

                                value: "34810639"

                            },

                            {

                                num: NumberInt("41"),

                                value: "29726582"

                            },

                            {

                                num: NumberInt("42"),

                                value: "29726581"

                            },

                            {

                                num: NumberInt("43"),

                                value: "1858697035"

                            },

                            {

                                num: NumberInt("44"),

                                value: "1858697033"

                            },

                            {

                                num: NumberInt("45"),

                                value: "1858697032"

                            },

                            {

                                num: NumberInt("46"),

                                value: "1777435770"

                            },

                            {

                                num: NumberInt("47"),

                                value: "1777435769"

                            },

                            {

                                num: NumberInt("48"),

                                value: "1052245220"

                            },

                            {

                                num: NumberInt("49"),

                                value: "1052245219"

                            },

                            {

                                num: NumberInt("50"),

                                value: "1048348328"

                            },

                            {

                                num: NumberInt("51"),

                                value: "1048348326"

                            },

                            {

                                num: NumberInt("52"),

                                value: "400977517"

                            },

                            {

                                num: NumberInt("53"),

                                value: "388604050"

                            },

                            {

                                num: NumberInt("54"),

                                value: "388604047"

                            },

                            {

                                num: NumberInt("55"),

                                value: "255311792"

                            },

                            {

                                num: NumberInt("56"),

                                value: "203282429"

                            },

                            {

                                num: NumberInt("57"),

                                value: "186973126"

                            },

                            {

                                num: NumberInt("58"),

                                value: "186973125"

                            },

                            {

                                num: NumberInt("59"),

                                value: "185177971"

                            },

                            {

                                num: NumberInt("60"),

                                value: "185177970"

                            },

                            {

                                num: NumberInt("61"),

                                value: "185177784"

                            },

                            {

                                num: NumberInt("62"),

                                value: "185177783"

                            },

                            {

                                num: NumberInt("63"),

                                value: "185177782"

                            },

                            {

                                num: NumberInt("64"),

                                value: "185177781"

                            },

                            {

                                num: NumberInt("65"),

                                value: "185177780"

                            },

                            {

                                num: NumberInt("66"),

                                value: "185177777"

                            },

                            {

                                num: NumberInt("67"),

                                value: "185177776"

                            },

                            {

                                num: NumberInt("68"),

                                value: "185177775"

                            },

                            {

                                num: NumberInt("69"),

                                value: "78100776"

                            },

                            {

                                num: NumberInt("70"),

                                value: "27573558"

                            },

                            {

                                num: NumberInt("71"),

                                value: "27573555"

                            },

                            {

                                num: NumberInt("72"),

                                value: "24987387"

                            },

                            {

                                num: NumberInt("73"),

                                value: "16975109"

                            },

                            {

                                num: NumberInt("74"),

                                value: "16975106"

                            },

                            {

                                num: NumberInt("75"),

                                value: "16975097"

                            },

                            {

                                num: NumberInt("76"),

                                value: "16975094"

                            },

                            {

                                num: NumberInt("77"),

                                value: "15988374"

                            },

                            {

                                num: NumberInt("78"),

                                value: "1311413"

                            },

                            {

                                num: NumberInt("79"),

                                value: "1311412"

                            },

                            {

                                num: NumberInt("80"),

                                value: "2438257093"

                            },

                            {

                                num: NumberInt("81"),

                                value: "2438257092"

                            },

                            {

                                num: NumberInt("82"),

                                value: "2438255994"

                            },

                            {

                                num: NumberInt("83"),

                                value: "820957305"

                            },

                            {

                                num: NumberInt("84"),

                                value: "820957303"

                            },

                            {

                                num: NumberInt("85"),

                                value: "820957302"

                            },

                            {

                                num: NumberInt("86"),

                                value: "820957301"

                            },

                            {

                                num: NumberInt("87"),

                                value: "226192639"

                            },

                            {

                                num: NumberInt("88"),

                                value: "3891509"

                            },

                            {

                                num: NumberInt("89"),

                                value: "78101009"

                            },

                            {

                                num: NumberInt("90"),

                                value: "290789975"

                            },

                            {

                                num: NumberInt("91"),

                                value: "228312136"

                            },

                            {

                                num: NumberInt("92"),

                                value: "228312135"

                            },

                            {

                                num: NumberInt("93"),

                                value: "14488574"

                            },

                            {

                                num: NumberInt("94"),

                                value: "14488570"

                            },

                            {

                                num: NumberInt("95"),

                                value: "14488566"

                            },

                            {

                                num: NumberInt("96"),

                                value: "14488562"

                            },

                            {

                                num: NumberInt("97"),

                                value: "394985959"

                            },

                            {

                                num: NumberInt("98"),

                                value: "1995654977"

                            },

                            {

                                num: NumberInt("99"),

                                value: "1995654976"

                            },

                            {

                                num: NumberInt("100"),

                                value: "1995654975"

                            },

                            {

                                num: NumberInt("101"),

                                value: "1995654974"

                            },

                            {

                                num: NumberInt("102"),

                                value: "213424133"

                            },

                            {

                                num: NumberInt("103"),

                                value: "213424130"

                            },

                            {

                                num: NumberInt("104"),

                                value: "170292253"

                            },

                            {

                                num: NumberInt("105"),

                                value: "161172208"

                            },

                            {

                                num: NumberInt("106"),

                                value: "161172207"

                            },

                            {

                                num: NumberInt("107"),

                                value: "161172206"

                            },

                            {

                                num: NumberInt("108"),

                                value: "146387025"

                            },

                            {

                                num: NumberInt("109"),

                                value: "146386775"

                            },

                            {

                                num: NumberInt("110"),

                                value: "146386774"

                            },

                            {

                                num: NumberInt("111"),

                                value: "82407814"

                            },

                            {

                                num: NumberInt("112"),

                                value: "71042065"

                            },

                            {

                                num: NumberInt("113"),

                                value: "55670289"

                            },

                            {

                                num: NumberInt("114"),

                                value: "55670285"

                            },

                            {

                                num: NumberInt("115"),

                                value: "55670282"

                            },

                            {

                                num: NumberInt("116"),

                                value: "55670279"

                            },

                            {

                                num: NumberInt("117"),

                                value: "55670258"

                            },

                            {

                                num: NumberInt("118"),

                                value: "55670255"

                            },

                            {

                                num: NumberInt("119"),

                                value: "55670252"

                            },

                            {

                                num: NumberInt("120"),

                                value: "55670249"

                            },

                            {

                                num: NumberInt("121"),

                                value: "55670246"

                            },

                            {

                                num: NumberInt("122"),

                                value: "55670243"

                            },

                            {

                                num: NumberInt("123"),

                                value: "55670237"

                            },

                            {

                                num: NumberInt("124"),

                                value: "55670234"

                            },

                            {

                                num: NumberInt("125"),

                                value: "55670231"

                            },

                            {

                                num: NumberInt("126"),

                                value: "34810522"

                            },

                            {

                                num: NumberInt("127"),

                                value: "34810521"

                            },

                            {

                                num: NumberInt("128"),

                                value: "27573564"

                            },

                            {

                                num: NumberInt("129"),

                                value: "27573561"

                            },

                            {

                                num: NumberInt("130"),

                                value: "27573552"

                            },

                            {

                                num: NumberInt("131"),

                                value: "27573549"

                            },

                            {

                                num: NumberInt("132"),

                                value: "7766972"

                            },

                            {

                                num: NumberInt("133"),

                                value: "7766971"

                            },

                            {

                                num: NumberInt("134"),

                                value: "2554792"

                            },

                            {

                                num: NumberInt("135"),

                                value: "1827515833"

                            },

                            {

                                num: NumberInt("136"),

                                value: "1827515832"

                            },

                            {

                                num: NumberInt("137"),

                                value: "1624687897"

                            },

                            {

                                num: NumberInt("138"),

                                value: "1272616475"

                            },

                            {

                                num: NumberInt("139"),

                                value: "1272616474"

                            },

                            {

                                num: NumberInt("140"),

                                value: "1272616473"

                            },

                            {

                                num: NumberInt("141"),

                                value: "1189432129"

                            },

                            {

                                num: NumberInt("142"),

                                value: "1025734705"

                            },

                            {

                                num: NumberInt("143"),

                                value: "767259504"

                            },

                            {

                                num: NumberInt("144"),

                                value: "767259503"

                            },

                            {

                                num: NumberInt("145"),

                                value: "767259502"

                            },

                            {

                                num: NumberInt("146"),

                                value: "672886496"

                            },

                            {

                                num: NumberInt("147"),

                                value: "510101671"

                            },

                            {

                                num: NumberInt("148"),

                                value: "510101670"

                            },

                            {

                                num: NumberInt("149"),

                                value: "510101659"

                            },

                            {

                                num: NumberInt("150"),

                                value: "510101658"

                            },

                            {

                                num: NumberInt("151"),

                                value: "510101647"

                            },

                            {

                                num: NumberInt("152"),

                                value: "510101646"

                            },

                            {

                                num: NumberInt("153"),

                                value: "510101636"

                            },

                            {

                                num: NumberInt("154"),

                                value: "510101635"

                            },

                            {

                                num: NumberInt("155"),

                                value: "510101623"

                            },

                            {

                                num: NumberInt("156"),

                                value: "510101622"

                            },

                            {

                                num: NumberInt("157"),

                                value: "491668341"

                            },

                            {

                                num: NumberInt("158"),

                                value: "482676606"

                            },

                            {

                                num: NumberInt("159"),

                                value: "394985957"

                            },

                            {

                                num: NumberInt("160"),

                                value: "394985955"

                            },

                            {

                                num: NumberInt("161"),

                                value: "394985953"

                            },

                            {

                                num: NumberInt("162"),

                                value: "394985951"

                            },

                            {

                                num: NumberInt("163"),

                                value: "393715162"

                            },

                            {

                                num: NumberInt("164"),

                                value: "350610441"

                            },

                            {

                                num: NumberInt("165"),

                                value: "350610439"

                            },

                            {

                                num: NumberInt("166"),

                                value: "350610437"

                            },

                            {

                                num: NumberInt("167"),

                                value: "350610435"

                            },

                            {

                                num: NumberInt("168"),

                                value: "350610433"

                            },

                            {

                                num: NumberInt("169"),

                                value: "350610431"

                            },

                            {

                                num: NumberInt("170"),

                                value: "350297749"

                            },

                            {

                                num: NumberInt("171"),

                                value: "350297748"

                            },

                            {

                                num: NumberInt("172"),

                                value: "312597304"

                            },

                            {

                                num: NumberInt("173"),

                                value: "307776568"

                            },

                            {

                                num: NumberInt("174"),

                                value: "291463696"

                            },

                            {

                                num: NumberInt("175"),

                                value: "223365817"

                            },

                            {

                                num: NumberInt("176"),

                                value: "162330057"

                            },

                            {

                                num: NumberInt("177"),

                                value: "162330056"

                            },

                            {

                                num: NumberInt("178"),

                                value: "149243459"

                            },

                            {

                                num: NumberInt("179"),

                                value: "149243456"

                            },

                            {

                                num: NumberInt("180"),

                                value: "34810539"

                            },

                            {

                                num: NumberInt("181"),

                                value: "28373659"

                            },

                            {

                                num: NumberInt("182"),

                                value: "6435711"

                            },

                            {

                                num: NumberInt("183"),

                                value: "2780947"

                            },

                            {

                                num: NumberInt("184"),

                                value: "2780946"

                            },

                            {

                                num: NumberInt("185"),

                                value: "313471755"

                            },

                            {

                                num: NumberInt("186"),

                                value: "2431414598"

                            },

                            {

                                num: NumberInt("187"),

                                value: "33356853"

                            },

                            {

                                num: NumberInt("188"),

                                value: "33356850"

                            },

                            {

                                num: NumberInt("189"),

                                value: "33356847"

                            },

                            {

                                num: NumberInt("190"),

                                value: "33356844"

                            },

                            {

                                num: NumberInt("191"),

                                value: "71042392"

                            },

                            {

                                num: NumberInt("192"),

                                value: "1799708916"

                            },

                            {

                                num: NumberInt("193"),

                                value: "1799708911"

                            },

                            {

                                num: NumberInt("194"),

                                value: "1799708906"

                            },

                            {

                                num: NumberInt("195"),

                                value: "1799708901"

                            },

                            {

                                num: NumberInt("196"),

                                value: "1799708896"

                            },

                            {

                                num: NumberInt("197"),

                                value: "436408915"

                            },

                            {

                                num: NumberInt("198"),

                                value: "400977525"

                            },

                            {

                                num: NumberInt("199"),

                                value: "400977524"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ncbi.nlm.nih.gov/protein",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ncbi.nlm.nih.gov/protein"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("13"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "peptide[All Fields] AND (\"5\"[SLEN] : \"10\"[SLEN])",

            value: "peptide[All Fields] AND (\"5\"[SLEN] : \"10\"[SLEN])"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop click next page_2",

            nodeId: NumberInt("19"),

            nodeName: "Loop click next page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ncbi.nlm.nih.gov/protein",

    name: "New Crawler Task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para12_text",

            desc: "",

            type: "string",

            exampleValue: "23200204"

        },

        {

            id: NumberInt("1"),

            name: "para13_text",

            desc: "",

            type: "string",

            exampleValue: "90109283"

        }

    ],

    url: "https://www.ncbi.nlm.nih.gov/protein"

} );
db.getCollection("services").insert( {

    _id: ObjectId("64083716e9c32379f083e877"),

    containJudge: false,

    desc: "https://www.ncbi.nlm.nih.gov/protein",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("3"),

                NumberInt("12"),

                NumberInt("5"),

                NumberInt("16"),

                NumberInt("17"),

                NumberInt("24")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ncbi.nlm.nih.gov/protein",

                links: "https://www.ncbi.nlm.nih.gov/protein",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("20"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"term\"]",

                wait: NumberInt("0"),

                value: "peptide[All Fields] AND (\"5\"[SLEN] : \"10\"[SLEN])"

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("20"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"term\"]",

                wait: NumberInt("0"),

                value: "peptide[All Fields] AND (\"5\"[SLEN] : \"10\"[SLEN])"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("20"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("20"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para14_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            },

                            {

                                num: NumberInt("1"),

                                value: "23200203"

                            },

                            {

                                num: NumberInt("2"),

                                value: "23200202"

                            },

                            {

                                num: NumberInt("3"),

                                value: "23200201"

                            },

                            {

                                num: NumberInt("4"),

                                value: "222447004"

                            },

                            {

                                num: NumberInt("5"),

                                value: "222447001"

                            },

                            {

                                num: NumberInt("6"),

                                value: "253722435"

                            },

                            {

                                num: NumberInt("7"),

                                value: "253722434"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2194022"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2194020"

                            },

                            {

                                num: NumberInt("10"),

                                value: "403242413"

                            },

                            {

                                num: NumberInt("11"),

                                value: "403242412"

                            },

                            {

                                num: NumberInt("12"),

                                value: "357380891"

                            },

                            {

                                num: NumberInt("13"),

                                value: "357380890"

                            },

                            {

                                num: NumberInt("14"),

                                value: "357380889"

                            },

                            {

                                num: NumberInt("15"),

                                value: "357380888"

                            },

                            {

                                num: NumberInt("16"),

                                value: "357380886"

                            },

                            {

                                num: NumberInt("17"),

                                value: "357380885"

                            },

                            {

                                num: NumberInt("18"),

                                value: "345100555"

                            },

                            {

                                num: NumberInt("19"),

                                value: "345100554"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop click next page",

            sequence: [

                NumberInt("10"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("6"),

            parameters: {

                history: NumberInt("22"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("10")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("22"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("22"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para14_linktext",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[3]/div[2]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Next >"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para15_linkAddress",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[3]/div[2]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.ncbi.nlm.nih.gov/protein#"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para16_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div[1]/div[1]/input[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "23200204"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("7"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("23"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("10"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("23"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para14_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "253722439"

                            },

                            {

                                num: NumberInt("1"),

                                value: "253722438"

                            },

                            {

                                num: NumberInt("2"),

                                value: "253722437"

                            },

                            {

                                num: NumberInt("3"),

                                value: "253722436"

                            },

                            {

                                num: NumberInt("4"),

                                value: "253722433"

                            },

                            {

                                num: NumberInt("5"),

                                value: "253722432"

                            },

                            {

                                num: NumberInt("6"),

                                value: "253722431"

                            },

                            {

                                num: NumberInt("7"),

                                value: "253722430"

                            },

                            {

                                num: NumberInt("8"),

                                value: "253722429"

                            },

                            {

                                num: NumberInt("9"),

                                value: "253722428"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2981824"

                            },

                            {

                                num: NumberInt("11"),

                                value: "443014"

                            },

                            {

                                num: NumberInt("12"),

                                value: "443011"

                            },

                            {

                                num: NumberInt("13"),

                                value: "1036305139"

                            },

                            {

                                num: NumberInt("14"),

                                value: "1036305138"

                            },

                            {

                                num: NumberInt("15"),

                                value: "1036305137"

                            },

                            {

                                num: NumberInt("16"),

                                value: "1036305136"

                            },

                            {

                                num: NumberInt("17"),

                                value: "1036305135"

                            },

                            {

                                num: NumberInt("18"),

                                value: "1036305134"

                            },

                            {

                                num: NumberInt("19"),

                                value: "228312556"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("12"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"search\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("14"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("8"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("15"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("16"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("17"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("18")

            ],

            isInLoop: false,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("18"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "253722439"

                            },

                            {

                                num: NumberInt("1"),

                                value: "253722438"

                            },

                            {

                                num: NumberInt("2"),

                                value: "253722437"

                            },

                            {

                                num: NumberInt("3"),

                                value: "253722436"

                            },

                            {

                                num: NumberInt("4"),

                                value: "253722433"

                            },

                            {

                                num: NumberInt("5"),

                                value: "253722432"

                            },

                            {

                                num: NumberInt("6"),

                                value: "253722431"

                            },

                            {

                                num: NumberInt("7"),

                                value: "253722430"

                            },

                            {

                                num: NumberInt("8"),

                                value: "253722429"

                            },

                            {

                                num: NumberInt("9"),

                                value: "253722428"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2981824"

                            },

                            {

                                num: NumberInt("11"),

                                value: "443014"

                            },

                            {

                                num: NumberInt("12"),

                                value: "443011"

                            },

                            {

                                num: NumberInt("13"),

                                value: "1036305139"

                            },

                            {

                                num: NumberInt("14"),

                                value: "1036305138"

                            },

                            {

                                num: NumberInt("15"),

                                value: "1036305137"

                            },

                            {

                                num: NumberInt("16"),

                                value: "1036305136"

                            },

                            {

                                num: NumberInt("17"),

                                value: "1036305135"

                            },

                            {

                                num: NumberInt("18"),

                                value: "1036305134"

                            },

                            {

                                num: NumberInt("19"),

                                value: "228312556"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("19"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop click next page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("10"),

            index: NumberInt("20"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("21"),

            parentId: NumberInt("7"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("22"),

            parentId: NumberInt("7"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("23")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/form[1]/div[1]/div[4]/div[1]/div[5]/div/div[1]/input[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("12"),

            index: NumberInt("23"),

            parentId: NumberInt("11"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("3"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "20150903"

                            },

                            {

                                num: NumberInt("1"),

                                value: "20150902"

                            },

                            {

                                num: NumberInt("2"),

                                value: "20150901"

                            },

                            {

                                num: NumberInt("3"),

                                value: "20150900"

                            },

                            {

                                num: NumberInt("4"),

                                value: "409187959"

                            },

                            {

                                num: NumberInt("5"),

                                value: "354459760"

                            },

                            {

                                num: NumberInt("6"),

                                value: "354459759"

                            },

                            {

                                num: NumberInt("7"),

                                value: "347948701"

                            },

                            {

                                num: NumberInt("8"),

                                value: "228312287"

                            },

                            {

                                num: NumberInt("9"),

                                value: "228312284"

                            },

                            {

                                num: NumberInt("10"),

                                value: "119389935"

                            },

                            {

                                num: NumberInt("11"),

                                value: "75765233"

                            },

                            {

                                num: NumberInt("12"),

                                value: "75765230"

                            },

                            {

                                num: NumberInt("13"),

                                value: "75765227"

                            },

                            {

                                num: NumberInt("14"),

                                value: "75765224"

                            },

                            {

                                num: NumberInt("15"),

                                value: "75765221"

                            },

                            {

                                num: NumberInt("16"),

                                value: "75765218"

                            },

                            {

                                num: NumberInt("17"),

                                value: "75765215"

                            },

                            {

                                num: NumberInt("18"),

                                value: "75765178"

                            },

                            {

                                num: NumberInt("19"),

                                value: "461641"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("24"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("20"),

                NumberInt("22")

            ],

            isInLoop: false,

            position: NumberInt("6"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "//*[@id=\"EntrezSystem2.PEntrez.Protein.Sequence_ResultsPanel.Entrez_Pager.Page\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ncbi.nlm.nih.gov/protein",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ncbi.nlm.nih.gov/protein"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("3"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "peptide[All Fields] AND (\"5\"[SLEN] : \"10\"[SLEN])",

            value: "peptide[All Fields] AND (\"5\"[SLEN] : \"10\"[SLEN])"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("24"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ncbi.nlm.nih.gov/protein",

    name: "seqseek",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para14_text",

            desc: "",

            type: "string",

            exampleValue: "23200204"

        },

        {

            id: NumberInt("1"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "253722439"

        },

        {

            id: NumberInt("2"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "20150903"

        }

    ],

    url: "https://www.ncbi.nlm.nih.gov/protein"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640ad073e9c32379f083e87a"),

    containJudge: false,

    desc: "https://en.wikipedia.org/wiki/World_Wide_Web",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://en.wikipedia.org/wiki/World_Wide_Web",

                links: "https://en.wikipedia.org/wiki/World_Wide_Web",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[3]/main[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\tToggle the table of contents\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\n\t\n\t\t\n\n\t\tToggle the table of contents\n\t\n\t\n\n\n\t\t\t\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\t\t\t\t\t\n\t\t\t\t\tWorld Wide Web\n\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\n\t\n\t\t\n\n\t\t140 languages\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\tAfrikaansAlemannischÆngliscالعربيةAragonésঅসমীয়াAsturianuAzərbaycancaتۆرکجهবাংলাBân-lâm-gúБашҡортсаБеларускаяБеларуская (тарашкевіца)भोजपुरीБългарскиBosanskiBrezhonegCatalàČeštinaCorsuCymraegDanskالدارجةDeitschDeutschEestiΕλληνικάEmiliàn e rumagnòlEspañolEsperantoEuskaraفارسیFøroysktFrançaisGaeilgeGalego贛語گیلکیગુજરાતી客家語/Hak-kâ-ngî한국어HausaՀայերենहिन्दीHrvatskiIlokanoBahasa IndonesiaInterlinguaIsiZuluÍslenskaItalianoעבריתJawaಕನ್ನಡქართულიҚазақшаKernowekKiswahiliKriyòl gwiyannenKurdîКыргызчаLadinoLatinaLatviešuLëtzebuergeschLietuviųLingua Franca NovaLombardMagyarमैथिलीМакедонскиMalagasyമലയാളംमराठीمصرىمازِرونیBahasa MelayuМонголမြန်မာဘာသာNederlandsनेपाल भाषा日本語NordfriiskNorsk bokmålNorsk nynorskOccitanОлык марийOʻzbekcha / ўзбекчаਪੰਜਾਬੀپنجابیPapiamentuپښتوPatoisភាសាខ្មែរPicardPolskiPortuguêsQaraqalpaqshaRomânăRumantschRuna SimiРусиньскыйРусскийСаха тылаSarduScotsShqipSicilianuසිංහලSimple EnglishسنڌيSlovenčinaSlovenščinaSoomaaligaکوردیСрпски / srpskiSrpskohrvatski / српскохрватскиSuomiSvenskaTagalogதமிழ்TaqbaylitТатарча / tatarçaไทยТоҷикӣTürkçeУкраїнськаاردوVènetoTiếng ViệtVõroWalonWinarayWolof吴语ייִדיש粵語Zazaki中文131 more\n\t\t\t\n\t\t\n\n\t\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\n\t\t\n\t\tArticleTalk\n\t\t\n\t\n\n\n\t\t\t\t\t\t\t\t\n\n\n\t\n\t\n\t\t\n\t\tEnglish\n\t\n\t\n\n\t\n\t\t\n\t\t\n\t\t\n\t\n\n\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\n\t\t\n\t\tReadView sourceView history\n\t\t\n\t\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\n\t\n\t\n\t\t\n\t\tMore\n\t\n\t\n\n\t\n\t\t\n\t\tReadView sourceView history\n\t\t\n\t\n\n\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\n\t\t\n\n\t\t\t\t\t\tFrom Wikipedia, the free encyclopedia\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tSystem of interlinked hypertext documents accessed over the Internet\n.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the global system of pages accessed via URLs. For the worldwide computer network, see Internet. For the web browser, see WorldWideWeb.\n\"WWW\" and \"The Web\" redirect here. For other uses, see WWW (disambiguation) and The Web (disambiguation).\n\n\n\n\n  The historic World Wide Web logo, designed by Robert Cailliau\n  A web page displayed in a web browser\n  A global map of the Web Index for countries in 2014\nThe World Wide Web (WWW), commonly known as the Web, is an information system enabling documents and other web resources to be accessed over the Internet.[1] \nDocuments and downloadable media are made available to the network through web servers and can be accessed by programs such as web browsers. Servers and resources on the World Wide Web are identified and located through character strings called uniform resource locators (URLs). The original and still very common document type is a web page formatted in Hypertext Markup Language (HTML). This markup language supports plain text, images, embedded video and audio contents, and scripts (short programs) that implement complex user interaction. The HTML language also supports hyperlinks (embedded URLs) which provide immediate access to other web resources. Web navigation, or web surfing, is the common practice of following such hyperlinks across multiple websites. Web applications are web pages that function as application software. The information in the Web is transferred across the Internet using the Hypertext Transfer Protocol (HTTP).\nMultiple web resources with a common theme and usually a common domain name make up a website. A single web server may provide multiple websites, while some websites, especially the most popular ones, may be provided by multiple servers. Website content is provided by a myriad of companies, organizations, government agencies, and individual users; and comprises an enormous amount of educational, entertainment, commercial, and government information.\nThe World Wide Web has become the world's dominant software platform.[2][3][4][5] It is the primary tool billions of people worldwide use to interact with the Internet.[6]\nThe Web was invented by Tim Berners-Lee at CERN in 1989 and opened to the public in 1991. It was conceived as a \"universal linked information system\".[7]\n\n\nHistory\nMain article: History of the World Wide Web\n  This NeXT Computer was used by Sir Tim Berners-Lee at CERN and became the world's first Web server.\nThe Web was invented by English computer scientist Tim Berners-Lee while working at CERN. He conceived it as an information management system using several concepts and technologies, the most fundamental of which was the connections that existed between information.[8][9][10] The first proposal was written in 1989,[7] and a working system implemented by the end of 1990 including the WorldWideWeb browser and an HTTP server.[11] The technology was released outside CERN to other research institutions starting in January 1991, and then to the general public on 23 August 1991. The Web was a success at CERN, and began to spread to other scientific and academic institutions. Within the next two years, there were 50 websites created.[12][13]\nCERN made the Web protocol and code available royalty free in 1993, enabling its widespread use.[14][15] After the NCSA released the Mosaic web browser later that year, the Web's popularity grew rapidly as thousands of websites sprang up in less than a year.[16][17] Mosaic was a graphical browser that could display inline images and submit forms that  were processed by the HTTPd server.[18][19] Marc Andreessen and Jim Clark founded Netscape the following year and released the Navigator browser, which introduced Java and JavaScript to the Web. It quickly became the dominant browser. Netscape became a public company in 1995 which triggered a frenzy for the Web and started the dot-com bubble.[20] Microsoft responded by developing its own browser, Internet Explorer, starting the browser wars. By bundling it with Windows, it became the dominant browser for 14 years.[21]\nTim Berners-Lee founded the World Wide Web Consortium (W3C) which created XML in 1996 and recommended replacing HTML with stricter XHTML.[22] In the meantime, developers began exploiting an IE feature called XMLHttpRequest to make Ajax applications and launched the Web 2.0 revolution. Mozilla, Opera, and Apple rejected XHTML and created the WHATWG which developed HTML5.[23] In 2009, the W3C conceded and abandoned XHTML[24] and in 2019, ceded control of the HTML specification to the WHATWG.[25]\nThe World Wide Web has been central to the development of the Information Age and is the primary tool billions of people use to interact on the Internet.[26][27][28][29][30]\n\nFunction\nMain articles: HTTP and HTML\n  The World Wide Web functions as an application layer protocol that is run \"on top of\" (figuratively) the Internet, helping to make it more functional. The advent of the Mosaic web browser helped to make the web much more usable, to include the display of images and moving images (GIFs).\nThe terms Internet and World Wide Web are often used without much distinction. However, the two terms do not mean the same thing. The Internet is a global system of computer networks interconnected through telecommunications and optical networking. In contrast, the World Wide Web is a global collection of documents and other resources, linked by hyperlinks and URIs. Web resources are accessed using HTTP or HTTPS, which are application-level Internet protocols that use the Internet's transport protocols.[31]\nViewing a web page on the World Wide Web normally begins either by typing the URL of the page into a web browser or by following a hyperlink to that page or resource. The web browser then initiates a series of background communication messages to fetch and display the requested page. In the 1990s, using a browser to view web pages—and to move from one web page to another through hyperlinks—came to be known as 'browsing,' 'web surfing' (after channel surfing), or 'navigating the Web'. Early studies of this new behavior investigated user patterns in using web browsers. One study, for example, found five user patterns: exploratory surfing, window surfing, evolved surfing, bounded navigation and targeted navigation.[32]\nThe following example demonstrates the functioning of a web browser when accessing a page at the URL http://example.org/home.html. The browser resolves the server name of the URL (example.org) into an Internet Protocol address using the globally distributed Domain Name System (DNS). This lookup returns an IP address such as 203.0.113.4 or 2001:db8:2e::7334. The browser then requests the resource by sending an HTTP request across the Internet to the computer at that address. It requests service from a specific TCP port number that is well known for the HTTP service so that the receiving host can distinguish an HTTP request from other network protocols it may be servicing. HTTP normally uses port number 80 and for HTTPS it normally uses port number 443. The content of the HTTP request can be as simple as two lines of text:\n\nGET /home.html HTTP/1.1\nHost: example.org\n\nThe computer receiving the HTTP request delivers it to web server software listening for requests on port 80. If the webserver can fulfill the request it sends an HTTP response back to the browser indicating success:\n\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\n\nfollowed by the content of the requested page. Hypertext Markup Language (HTML) for a basic web page might look like this:\n\n<html>\n  <head>\n    <title>Example.org – The World Wide Web</title>\n  </head>\n  <body>\n    <p>The World Wide Web, abbreviated as WWW and commonly known ...</p>\n  </body>\n</html>\n\nThe web browser parses the HTML and interprets the markup (<title>, <p> for paragraph, and such) that surrounds the words to format the text on the screen. Many web pages use HTML to reference the URLs of other resources such as images, other embedded media, scripts that affect page behaviour, and Cascading Style Sheets that affect page layout. The browser makes additional HTTP requests to the web server for these other Internet media types. As it receives their content from the web server, the browser progressively renders the page onto the screen as specified by its HTML and these additional resources.\n\nHTML\nMain article: HTML\nHypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets (CSS) and JavaScript, it forms a triad of cornerstone technologies for the World Wide Web.[33]\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\nHTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img /> and <input /> directly introduce content into the page. Other tags such as <p> surround and provide information about document text and may include other tags as sub-elements. Browsers do not display the HTML tags, but use them to interpret the content of the page.\nHTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. Inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), maintainer of both the HTML and the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[update][34]\n\nLinking\nMost web pages contain hyperlinks to other related pages and perhaps to downloadable files, source documents, definitions and other web resources. In the underlying HTML, a hyperlink looks like this:\n<a href=\"http://example.org/home.html\">Example.org Homepage</a>.\n\n  Graphic representation of a minute fraction of the WWW, demonstrating hyperlinks\nSuch a collection of useful, related resources, interconnected via hypertext links is dubbed a web of information. Publication on the Internet created what Tim Berners-Lee first called the WorldWideWeb (in its original CamelCase, which was subsequently discarded) in November 1990.[35]\nThe hyperlink structure of the web is described by the webgraph: the nodes of the web graph correspond to the web pages (or URLs) the directed edges between them to the hyperlinks. Over time, many web resources pointed to by hyperlinks disappear, relocate, or are replaced with different content. This makes hyperlinks obsolete, a phenomenon referred to in some circles as link rot, and the hyperlinks affected by it are often called dead links. The ephemeral nature of the Web has prompted many efforts to archive websites. The Internet Archive, active since 1996, is the best known of such efforts.\n\nWWW prefix\nMany hostnames used for the World Wide Web begin with www because of the long-standing practice of naming Internet hosts according to the services they provide. The hostname of a web server is often www, in the same way that it may be ftp for an FTP server, and news or nntp for a Usenet news server. These hostnames appear as Domain Name System (DNS) or subdomain names, as in www.example.com. The use of www is not required by any technical or policy standard and many web sites do not use it; the first web server was nxoc01.cern.ch.[36] According to Paolo Palazzi, who worked at CERN along with Tim Berners-Lee, the popular use of www as subdomain was accidental; the World Wide Web project page was intended to be published at www.cern.ch while info.cern.ch was intended to be the CERN home page; however the DNS records were never switched, and the practice of prepending www to an institution's website domain name was subsequently copied.[37][better source needed] Many established websites still use the prefix, or they employ other subdomain names such as www2, secure or en for special purposes. Many such web servers are set up so that both the main domain name (e.g., example.com) and the www subdomain (e.g., www.example.com) refer to the same site; others require one form or the other, or they may map to different web sites. The use of a subdomain name is useful for load balancing incoming web traffic by creating a CNAME record that points to a cluster of web servers. Since, currently, only a subdomain can be used in a CNAME, the same result cannot be achieved by using the bare domain root.[38][dubious  – discuss]\nWhen a user submits an incomplete domain name to a web browser in its address bar input field, some web browsers automatically try adding the prefix \"www\" to the beginning of it and possibly \".com\", \".org\" and \".net\" at the end, depending on what might be missing. For example, entering \"microsoft\" may be transformed to http://www.microsoft.com/ and \"openoffice\" to http://www.openoffice.org. This feature started appearing in early versions of Firefox, when it still had the working title 'Firebird' in early 2003, from an earlier practice in browsers such as Lynx.[39][unreliable source?] It is reported that Microsoft was granted a US patent for the same idea in 2008, but only for mobile devices.[40]\nIn English, www is usually read as double-u double-u double-u.[41] Some users pronounce it dub-dub-dub, particularly in New Zealand.[42] Stephen Fry, in his \"Podgrams\" series of podcasts, pronounces it wuh wuh wuh.[43] The English writer Douglas Adams once quipped in The Independent on Sunday (1999): \"The World Wide Web is the only thing I know of whose shortened form takes three times longer to say than what it's short for\".[44] In Mandarin Chinese, World Wide Web is commonly translated via a phono-semantic matching to wàn wéi wǎng (万维网), which satisfies www and literally means \"myriad-dimensional net\",[45][better source needed] a translation that reflects the design concept and proliferation of the World Wide Web. Tim Berners-Lee's web-space states that World Wide Web is officially spelled as three separate words, each capitalised, with no intervening hyphens.[46] Nonetheless, it is often called simply the Web, and also often the web; see Capitalization of Internet for details. Use of the www prefix has been declining, especially when Web 2.0 web applications sought to brand their domain names and make them easily pronounceable.[47]\nAs the mobile Web grew in popularity, services like Gmail.com, Outlook.com, Myspace.com, Facebook.com and Twitter.com are most often mentioned without adding \"www.\" (or, indeed, \".com\") to the domain.\n\nScheme specifiers\nThe scheme specifiers http:// and https:// at the start of a web URI refer to Hypertext Transfer Protocol or HTTP Secure, respectively. They specify the communication protocol to use for the request and response. The HTTP protocol is fundamental to the operation of the World Wide Web, and the added encryption layer in HTTPS is essential when browsers send or retrieve confidential data, such as passwords or banking information. Web browsers usually automatically prepend http:// to user-entered URIs, if omitted.\n\nPages\nMain article: Web page\n  A screenshot of a web page on Wikimedia Commons\nA web page (also written as webpage) is a document that is suitable for the World Wide Web and web browsers. A web browser displays a web page on a monitor or mobile device.\nThe term web page usually refers to what is visible, but may also refer to the contents of the computer file itself, which is usually a text file containing hypertext written in HTML or a comparable markup language. Typical web pages provide hypertext for browsing to other web pages via hyperlinks, often referred to as links. Web browsers will frequently have to access multiple web resource elements, such as reading style sheets, scripts, and images, while presenting each web page.\nOn a network, a web browser can retrieve a web page from a remote web server. The web server may restrict access to a private network such as a corporate intranet. The web browser uses the Hypertext Transfer Protocol (HTTP) to make such requests to the web server.\nA static web page is delivered exactly as stored, as web content in the web server's file system. In contrast, a dynamic web page is generated by a web application, usually driven by server-side software. Dynamic web pages are used when each user may require completely different information, for example, bank websites, web email etc.\n\nStatic page\nMain article: Static web page\nA static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application.\nConsequently, a static web page displays the same information for all users, from all contexts, subject to modern capabilities of a web server to negotiate content-type or language of the document where such versions are available and the server is configured to do so.\n\nDynamic pages\nMain articles: Dynamic web page and Ajax (programming)\n  Dynamic web page: example of server-side scripting (PHP and MySQL)\nA server-side dynamic web page is a web page whose construction is controlled by an application server processing server-side scripts. In server-side scripting, parameters determine how the assembly of every new web page proceeds, including the setting up of more client-side processing.\nA client-side dynamic web page processes the web page using JavaScript running in the browser. JavaScript programs can interact with the document via Document Object Model, or DOM, to query page state and alter it. The same client-side techniques can then dynamically update or change the DOM in the same way.\nA dynamic web page is then reloaded by the user or by a computer program to change some variable content. The updating information could come from the server, or from changes made to that page's DOM. This may or may not truncate the browsing history or create a saved version to go back to, but a dynamic web page update using Ajax technologies will neither create a page to go back to nor truncate the web browsing history forward of the displayed page. Using Ajax technologies the end user gets one dynamic page managed as a single page in the web browser while the actual web content rendered on that page can vary. The Ajax engine sits only on the browser requesting parts of its DOM, the DOM, for its client, from an application server.\nDynamic HTML, or DHTML, is the umbrella term for technologies and methods used to create web pages that are not static web pages, though it has fallen out of common use since the popularization of AJAX, a term which is now itself rarely used.[citation needed] Client-side-scripting, server-side scripting, or a combination of these make for the dynamic web experience in a browser.\nJavaScript is a scripting language that was initially developed in 1995 by Brendan Eich, then of Netscape, for use within web pages.[48] The standardised version is ECMAScript.[48] To make web pages more interactive, some web applications also use JavaScript techniques such as Ajax (asynchronous JavaScript and XML). Client-side script is delivered with the page that can make additional HTTP requests to the server, either in response to user actions such as mouse movements or clicks, or based on elapsed time. The server's responses are used to modify the current page rather than creating a new page with each response, so the server needs only to provide limited, incremental information. Multiple Ajax requests can be handled at the same time, and users can interact with the page while data is retrieved. Web pages may also regularly poll the server to check whether new information is available.[49]\n\nWebsite\n  The usap.gov website\nMain article: Website\nA website[50] is a collection of related web resources including web pages, multimedia content, typically identified with a common domain name, and published on at least one web server. Notable examples are wikipedia.org, google.com, and amazon.com.\nA website may be accessible via a public Internet Protocol (IP) network, such as the Internet, or a private local area network (LAN), by referencing a uniform resource locator (URL) that identifies the site.\nWebsites can have many functions and can be used in various fashions; a website can be a personal website, a corporate website for a company, a government website, an organization website, etc. Websites are typically dedicated to a particular topic or purpose, ranging from entertainment and social networking to providing news and education. All publicly accessible websites collectively constitute the World Wide Web, while private websites, such as a company's website for its employees, are typically a part of an intranet.\nWeb pages, which are the building blocks of websites, are documents, typically composed in plain text interspersed with formatting instructions of Hypertext Markup Language (HTML, XHTML). They may incorporate elements from other websites with suitable markup anchors. Web pages are accessed and transported with the Hypertext Transfer Protocol (HTTP), which may optionally employ encryption (HTTP Secure, HTTPS) to provide security and privacy for the user. The user's application, often a web browser, renders the page content according to its HTML markup instructions onto a display terminal.\nHyperlinking between web pages conveys to the reader the site structure and guides the navigation of the site, which often starts with a home page containing a directory of the site web content. Some websites require user registration or subscription to access content. Examples of subscription websites include many business sites, news websites, academic journal websites, gaming websites, file-sharing websites, message boards, web-based email, social networking websites, websites providing real-time price quotations for different types of markets, as well as sites providing various other services. End users can access websites on a range of devices, including desktop and laptop computers, tablet computers, smartphones and smart TVs.\n\nBrowser\nMain article: Web browser\nA web browser (commonly referred to as a browser) is a software user agent for accessing information on the World Wide Web. To connect to a website's server and display its pages, a user needs to have a web browser program. This is the program that the user runs to download, format, and display a web page on the user's computer.\nIn addition to allowing users to find, display, and move between web pages, a web browser will usually have features like keeping bookmarks, recording history, managing cookies (see below), and home pages and may have facilities for recording passwords for logging into web sites.\nThe most popular browsers are Chrome, Firefox, Safari, Internet Explorer, and Edge.\n\nServer\nMain article: Web server\n  The inside and front of a Dell PowerEdge web server, a computer designed for rack mounting\nA Web server is server software, or hardware dedicated to running said software, that can satisfy World Wide Web client requests. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols.\nThe primary function of a web server is to store, process and deliver web pages to clients.[51] The communication between client and server takes place using the Hypertext Transfer Protocol (HTTP). Pages delivered are most frequently HTML documents, which may include images, style sheets and scripts in addition to the text content.\n\n  Multiple web servers may be used for a high traffic website; here, Dell servers are installed together to be used for the Wikimedia Foundation.\nA user agent, commonly a web browser or web crawler, initiates communication by making a request for a specific resource using HTTP and the server responds with the content of that resource or an error message if unable to do so. The resource is typically a real file on the server's secondary storage, but this is not necessarily the case and depends on how the webserver is implemented.\nWhile the primary function is to serve content, full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files.\nMany generic web servers also support server-side scripting using Active Server Pages (ASP), PHP (Hypertext Preprocessor), or other scripting languages. This means that the behavior of the webserver can be scripted in separate files, while the actual server software remains unchanged. Usually, this function is used to generate HTML documents dynamically (\"on-the-fly\") as opposed to returning static documents. The former is primarily used for retrieving or modifying information from databases. The latter is typically much faster and more easily cached but cannot deliver dynamic content.\nWeb servers can also frequently be found embedded in devices such as printers, routers, webcams and serving only a local network. The web server may then be used as a part of a system for monitoring or administering the device in question. This usually means that no additional software has to be installed on the client computer since only a web browser is required (which now is included with most operating systems).\n\nCookie\nMain article: HTTP cookie\nAn HTTP cookie (also called web cookie, Internet cookie, browser cookie, or simply cookie) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past). They can also be used to remember arbitrary pieces of information that the user previously entered into form fields such as names, addresses, passwords, and credit card numbers.\nCookies perform essential functions in the modern web. Perhaps most importantly, authentication cookies are the most common method used by web servers to know whether the user is logged in or not, and which account they are logged in with. Without such a mechanism, the site would not know whether to send a page containing sensitive information or require the user to authenticate themselves by logging in. The security of an authentication cookie generally depends on the security of the issuing website and the user's web browser, and on whether the cookie data is encrypted. Security vulnerabilities may allow a cookie's data to be read by a hacker, used to gain access to user data, or used to gain access (with the user's credentials) to the website to which the cookie belongs (see cross-site scripting and cross-site request forgery for examples).[52]\nTracking cookies, and especially third-party tracking cookies, are commonly used as ways to compile long-term records of individuals' browsing histories – a potential privacy concern that prompted European[53] and U.S. lawmakers to take action in 2011.[54][55] European law requires that all websites targeting European Union member states gain \"informed consent\" from users before storing non-essential cookies on their device.\nGoogle Project Zero researcher Jann Horn describes ways cookies can be read by intermediaries, like Wi-Fi hotspot providers. He recommends using the browser in incognito mode in such circumstances.[56]\n\nSearch engine\nMain article: Search engine\n  The results of a search for the term \"lunar eclipse\" in a web-based image search engine\nA web search engine or Internet search engine is a software system that is designed to carry out web search (Internet search), which means to search the World Wide Web in a systematic way for particular information specified in a web search query. The search results are generally presented in a line of results, often referred to as search engine results pages (SERPs). The information may be a mix of web pages, images, videos, infographics, articles, research papers, and other types of files. Some search engines also mine data available in databases or open directories. Unlike web directories, which are maintained only by human editors, search engines also maintain real-time information by running an algorithm on a web crawler.\nInternet content that is not capable of being searched by a web search engine is generally described as the deep web.\n\nDeep web\nMain article: Deep web\nThe deep web,[57] invisible web,[58] or hidden web[59] are parts of the World Wide Web whose contents are not indexed by standard web search engines. The opposite term to the deep web is the surface web, which is accessible to anyone using the Internet.[60] Computer scientist Michael K. Bergman is credited with coining the term deep web in 2001 as a search indexing term.[61]\nThe content of the deep web is hidden behind HTTP forms,[62][63] and includes many very common uses such as web mail, online banking, and services that users must pay for, and which is protected by a paywall, such as video on demand, some online magazines and newspapers, among others.\nThe content of the deep web can be located and accessed by a direct URL or IP address, and may require a password or other security access past the public website page.\n\nCaching\nA web cache is a server computer located either on the public Internet or within an enterprise that stores recently accessed web pages to improve response time for users when the same content is requested within a certain time after the original request. Most web browsers also implement a browser cache by writing recently obtained data to a local data storage device. HTTP requests by a browser may ask only for data that has changed since the last access. Web pages and resources may contain expiration information to control caching to secure sensitive data, such as in online banking, or to facilitate frequently updated sites, such as news media. Even sites with highly dynamic content may permit basic resources to be refreshed only occasionally. Web site designers find it worthwhile to collate resources such as CSS data and JavaScript into a few site-wide files so that they can be cached efficiently. Enterprise firewalls often cache Web resources requested by one user for the benefit of many users. Some search engines store cached content of frequently accessed websites.\n\nSecurity\nFor criminals, the Web has become a venue to spread malware and engage in a range of cybercrimes, including (but not limited to) identity theft, fraud, espionage and intelligence gathering.[64] Web-based vulnerabilities now outnumber traditional computer security concerns,[65][66] and as measured by Google, about one in ten web pages may contain malicious code.[67] Most web-based attacks take place on legitimate websites, and most, as measured by Sophos, are hosted in the United States, China and Russia.[68] The most common of all malware threats is SQL injection attacks against websites.[69] Through HTML and URIs, the Web was vulnerable to attacks like cross-site scripting (XSS) that came with the introduction of JavaScript[70] and were exacerbated to some degree by Web 2.0 and Ajax web design that favours the use of scripts.[71] Today by one estimate, 70% of all websites are open to XSS attacks on their users.[72] Phishing is another common threat to the Web. In February 2013, RSA (the security division of EMC) estimated the global losses from phishing at $1.5 billion in 2012.[73] Two of the well-known phishing methods are Covert Redirect and Open Redirect.\nProposed solutions vary. Large security companies like McAfee already design governance and compliance suites to meet post-9/11 regulations,[74] and some, like Finjan have recommended active real-time inspection of programming code and all content regardless of its source.[64] Some have argued that for enterprises to see Web security as a business opportunity rather than a cost centre,[75] while others call for \"ubiquitous, always-on digital rights management\" enforced in the infrastructure to replace the hundreds of companies that secure data and networks.[76] Jonathan Zittrain has said users sharing responsibility for computing safety is far preferable to locking down the Internet.[77]\n\nPrivacy\nMain article: Internet privacy\nEvery time a client requests a web page, the server can identify the request's IP address. Web servers usually log IP addresses in a log file. Also, unless set not to do so, most web browsers record requested web pages in a viewable history feature, and usually cache much of the content locally. Unless the server-browser communication uses HTTPS encryption, web requests and responses travel in plain text across the Internet and can be viewed, recorded, and cached by intermediate systems. Another way to hide personally identifiable information is by using a virtual private network. A VPN encrypts online traffic and masks the original IP address lowering the chance of user identification.\nWhen a web page asks for, and the user supplies, personally identifiable information—such as their real name, address, e-mail address, etc. web-based entities can associate current web traffic with that individual. If the website uses HTTP cookies, username, and password authentication, or other tracking techniques, it can relate other web visits, before and after, to the identifiable information provided. In this way, a web-based organization can develop and build.md a profile of the individual people who use its site or sites. It may be able to build.md a record for an individual that includes information about their leisure activities, their shopping interests, their profession, and other aspects of their demographic profile. These profiles are of potential interest to marketers, advertisers, and others. Depending on the website's terms and conditions and the local laws that apply information from these profiles may be sold, shared, or passed to other organizations without the user being informed. For many ordinary people, this means little more than some unexpected e-mails in their in-box or some uncannily relevant advertising on a future web page. For others, it can mean that time spent indulging an unusual interest can result in a deluge of further targeted marketing that may be unwelcome. Law enforcement, counter-terrorism, and espionage agencies can also identify, target, and track individuals based on their interests or proclivities on the Web.\nSocial networking sites usually try to get users to use their real names, interests, and locations, rather than pseudonyms, as their executives believe that this makes the social networking experience more engaging for users. On the other hand, uploaded photographs or unguarded statements can be identified to an individual, who may regret this exposure. Employers, schools, parents, and other relatives may be influenced by aspects of social networking profiles, such as text posts or digital photos, that the posting individual did not intend for these audiences. Online bullies may make use of personal information to harass or stalk users. Modern social networking websites allow fine-grained control of the privacy settings for each posting, but these can be complex and not easy to find or use, especially for beginners.[78] Photographs and videos posted onto websites have caused particular problems, as they can add a person's face to an online profile. With modern and potential facial recognition technology, it may then be possible to relate that face with other, previously anonymous, images, events, and scenarios that have been imaged elsewhere. Due to image caching, mirroring, and copying, it is difficult to remove an image from the World Wide Web.\n\nStandards\nMain article: Web standards\nWeb standards include many interdependent standards and specifications, some of which govern aspects of the Internet, not just the World Wide Web. Even when not web-focused, such standards directly or indirectly affect the development and administration of websites and web services. Considerations include the interoperability, accessibility and usability of web pages and web sites.\nWeb standards, in the broader sense, consist of the following:\n\nRecommendations published by the World Wide Web Consortium (W3C)[79]\n\"Living Standard\" made by the Web Hypertext Application Technology Working Group (WHATWG)\nRequest for Comments (RFC) documents published by the Internet Engineering Task Force (IETF)[80]\nStandards published by the International Organization for Standardization (ISO)[81]\nStandards published by Ecma International (formerly ECMA)[82]\nThe Unicode Standard and various Unicode Technical Reports (UTRs) published by the Unicode Consortium[83]\nName and number registries maintained by the Internet Assigned Numbers Authority (IANA)[84]\nWeb standards are not fixed sets of rules but are constantly evolving sets of finalized technical specifications of web technologies.[85] Web standards are developed by standards organizations—groups of interested and often competing parties chartered with the task of standardization—not technologies developed and declared to be a standard by a single individual or company. It is crucial to distinguish those specifications that are under development from the ones that already reached the final development status (in the case of W3C specifications, the highest maturity level).\n\nAccessibility\nMain article: Web accessibility\nThere are methods for accessing the Web in alternative mediums and formats to facilitate use by individuals with disabilities. These disabilities may be visual, auditory, physical, speech-related, cognitive, neurological, or some combination. Accessibility features also help people with temporary disabilities, like a broken arm, or ageing users as their abilities change.[86] The Web receives information as well as providing information and interacting with society. The World Wide Web Consortium claims that it is essential that the Web be accessible, so it can provide equal access and equal opportunity to people with disabilities.[87] Tim Berners-Lee once noted, \"The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.\"[86] Many countries regulate web accessibility as a requirement for websites.[88] International co-operation in the W3C Web Accessibility Initiative led to simple guidelines that web content authors as well as software developers can use to make the Web accessible to persons who may or may not be using assistive technology.[86][89]\n\nInternationalisation\nThe W3C Internationalisation Activity assures that web technology works in all languages, scripts, and cultures.[90] Beginning in 2004 or 2005, Unicode gained ground and eventually in December 2007 surpassed both ASCII and Western European as the Web's most frequently used character encoding.[91] Originally .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}RFC 3986 allowed resources to be identified by URI in a subset of US-ASCII. RFC 3987 allows more characters—any character in the Universal Character Set—and now a resource can be identified by IRI in any language.[92]\n\nSee also\n.mw-parser-output .portalbox{padding:0;margin:0.5em 0;display:table;box-sizing:border-box;max-width:175px;list-style:none}.mw-parser-output .portalborder{border:solid #aaa 1px;padding:0.1em;background:#f9f9f9}.mw-parser-output .portalbox-entry{display:table-row;font-size:85%;line-height:110%;height:1.9em;font-style:italic;font-weight:bold}.mw-parser-output .portalbox-image{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox-link{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}@media(min-width:720px){.mw-parser-output .portalleft{clear:left;float:left;margin:0.5em 1em 0.5em 0}.mw-parser-output .portalright{clear:right;float:right;margin:0.5em 0 0.5em 1em}}\nEngineering portalInternet portalWorld portal\n.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}\nElectronic publishing\nInternet metaphors\nInternet security\nLists of websites\nStreaming media\nWeb development tools\nWeb literacy\n\nReferences\n.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Retrieved 16 July 2015.\n\n^ Bleigh, Michael (16 May 2014). \"The Once And Future Web Platform\". TechCrunch. Retrieved 9 March 2022.\n\n^ \"World Wide Web Timeline\". Pews Research Center. 11 March 2014. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways The Web Has Changed Us\". The Washington Post. Retrieved 1 August 2015.\n\n^ \"Website Analytics Tool\". Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Archived from the original on 9 July 2015. Retrieved 16 July 2015.\n\n^ Jump up to: a b Berners-Lee, Tim. \"Information Management: A Proposal\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ Berners-Lee, T.; Cailliau, R.; Groff, J.-F.; Pollermann, B. (1992). \"World-Wide Web: The Information Universe\". Electron. Netw. Res. Appl. Policy. 2: 52–58. doi:10.1108/eb047254.\n\n^ Quittner, Joshua (29 March 1999). \"Network Designer Tim Berners-Lee\". Time Magazine. Archived from the original on 15 August 2007. Retrieved 17 May 2010. He wove the World Wide Web and created a mass medium for the 21st century. The World Wide Web is Berners-Lee's alone. He designed it. He set it loose it on the world. And he more than anyone else has fought to keep it an open, non-proprietary and free.[page needed]\n\n^ McPherson, Stephanie Sammartino (2009). Tim Berners-Lee: Inventor of the World Wide Web. Twenty-First Century Books. ISBN 978-0-8225-7273-2.\n\n^ W3 (1991) Re: Qualifiers on Hypertext links\n\n^ Hopgood, Bob. \"History of the Web\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ \"A short history of the Web\". CERN. Retrieved 15 April 2022.\n\n^ \"Software release of WWW into public domain\". CERN Document Server. CERN. Retrieved 17 February 2022.\n\n^ \"Ten Years Public Domain for the Original Web Software\". Tenyears-www.web.cern.ch. 30 April 2003. Archived from the original on 13 August 2009. Retrieved 27 July 2009.\n\n^ Calore, Michael (22 April 2010). \"April 22, 1993: Mosaic Browser Lights Up Web With Color, Creativity\". Wired. Retrieved 12 February 2022.\n\n^ Couldry, Nick (2012). Media, Society, World: Social Theory and Digital Media Practice. London: Polity Press. p. 2. ISBN 9780745639208.\n\n^ Hoffman, Jay (21 April 1993). \"The Origin of the IMG Tag\". The History of the Web. Retrieved 13 February 2022.\n\n^ Clarke, Roger. \"The Birth of Web Commerce\". Roger Clarke's Web-Site. XAMAX. Retrieved 15 February 2022.\n\n^ McCullough, Brian. \"20 YEARS ON: WHY NETSCAPE'S IPO WAS THE \"BIG BANG\" OF THE INTERNET ERA\". www.internethistorypodcast.com. INTERNET HISTORY PODCAST. Retrieved 12 February 2022.\n\n^ Calore, Michael (28 September 2009). \"Sept. 28, 1998: Internet Explorer Leaves Netscape in Its Wake\". Wired. Retrieved 14 February 2022.\n\n^ Daly, Janet (26 January 2000). \"World Wide Web Consortium Issues XHTML 1.0 as a Recommendation\". W3C. Retrieved 8 March 2022.\n\n^ Hickson, Ian. \"WHAT open mailing list announcement\". whatwg.org. WHATWG. Retrieved 16 February 2022.\n\n^ Shankland, Stephen (9 July 2009). \"An epitaph for the Web standard, XHTML 2\". CNet. Retrieved 17 February 2022.\n\n^ \"Memorandum of Understanding Between W3C and WHATWG\". w3.org. W3C. Retrieved 16 February 2022.\n\n^ In, Lee (30 June 2012). Electronic Commerce Management for Business Activities and Global Enterprises: Competitive Advantages: Competitive Advantages. IGI Global. ISBN 978-1-4666-1801-5.\n\n^ Misiroglu, Gina (26 March 2015). American Countercultures: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History. Routledge. ISBN 978-1-317-47729-7.\n\n^ \"World Wide Web Timeline\". Pew Research Center. 11 March 2014. Archived from the original on 29 July 2015. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways the Web Has Changed Us\". The Washington Post. Archived from the original on 9 September 2015. Retrieved 1 August 2015.\n\n^ \"Internet Live Stats\". Archived from the original on 2 July 2015. Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". World Wide Web Consortium. Archived from the original on 22 April 2016. Retrieved 18 April 2016.\n\n^ Muylle, Steve; Moenaert, Rudy; Despont, Marc (1999). \"A grounded theory of World Wide Web search behaviour\". Journal of Marketing Communications. 5 (3): 143. doi:10.1080/135272699345644.\n\n^ Flanagan, David. JavaScript – The definitive guide (6 ed.). p. 1. JavaScript is part of the triad of technologies that all Web developers must learn: HTML to specify the content of web pages, CSS to specify the presentation of web pages, and JavaScript to specify the behaviour of web pages.\n\n^ \"HTML 4.0 Specification – W3C Recommendation – Conformance: requirements and recommendations\". World Wide Web Consortium. 18 December 1997. Retrieved 6 July 2015.\n\n^ Berners-Lee, Tim; Cailliau, Robert (12 November 1990). \"WorldWideWeb: Proposal for a HyperText Project\". Archived from the original on 2 May 2015. Retrieved 12 May 2015.\n\n^ Berners-Lee, Tim. \"Frequently asked questions by the Press\". W3C. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Palazzi, P (2011). \"The Early Days of the WWW at CERN\". Archived from the original on 23 July 2012.\n\n^ Fraser, Dominic (13 May 2018). \"Why a domain's root can't be a CNAME – and other tidbits about the DNS\". FreeCodeCamp.\n\n^ \"automatically adding www.___.com\". mozillaZine. 16 May 2003. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ Masnick, Mike (7 July 2008). \"Microsoft Patents Adding 'www.' And '.com' To Text\". Techdirt. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ \"Audible pronunciation of 'WWW'\". Oxford University Press. Archived from the original on 25 May 2014. Retrieved 25 May 2014.\n\n^ Harvey, Charlie. \"How we pronounce WWW in English: a detailed but unscientific survey\". charlieharvey.org.uk. Retrieved 19 May 2022.\n\n^ \"Stephen Fry's pronunciation of 'WWW'\". Podcasts.com. Archived from the original on 4 April 2017.\n\n^ Simonite, Tom (22 July 2008). \"Help us find a better way to pronounce www\". newscientist.com. New Scientist, Technology. Archived from the original on 13 March 2016. Retrieved 7 February 2016.\n\n^ \"MDBG Chinese-English dictionary – Translate\". Archived from the original on 12 November 2008. Retrieved 27 July 2009.\n\n^ \"Frequently asked questions by the Press – Tim BL\". W3.org. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Castelluccio, Michael (2010). \"It's not your grandfather's Internet\". thefreelibrary.com. Institute of Management Accountants. Retrieved 7 February 2016.\n\n^ Jump up to: a b Hamilton, Naomi (31 July 2008). \"The A-Z of Programming Languages: JavaScript\". Computerworld. IDG. Archived from the original on 24 May 2009. Retrieved 12 May 2009.\n\n^ Buntin, Seth (23 September 2008). \"jQuery Polling plugin\". Archived from the original on 13 August 2009. Retrieved 22 August 2009.\n\n^ \"website\". TheFreeDictionary.com. Retrieved 2 July 2011.\n\n^ Patrick, Killelea (2002). Web performance tuning (2nd ed.). Beijing: O'Reilly. p. 264. ISBN 978-0596001728. OCLC 49502686.\n\n^ Vamosi, Robert (14 April 2008). \"Gmail cookie stolen via Google Spreadsheets\". News.cnet.com. Archived from the original on 9 December 2013. Retrieved 19 October 2017.\n\n^ \"What about the \"EU Cookie Directive\"?\". WebCookies.org. 2013. Archived from the original on 11 October 2017. Retrieved 19 October 2017.\n\n^ \"New net rules set to make cookies crumble\". BBC. 8 March 2011.\n\n^ \"Sen. Rockefeller: Get Ready for a Real Do-Not-Track Bill for Online Advertising\". Adage.com. 6 May 2011.\n\n^ Want to use my wifi?, Jann Horn accessed 5 January 2018.\n\n^ Hamilton, Nigel. \"The Mechanics of a Deep Net Metasearch Engine\". CiteSeerX 10.1.1.90.5847. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ Devine, Jane; Egger-Sider, Francine (July 2004). \"Beyond google: the invisible web in the academic library\". The Journal of Academic Librarianship. 30 (4): 265–269. doi:10.1016/j.acalib.2004.04.010.\n\n^ Raghavan, Sriram; Garcia-Molina, Hector (11–14 September 2001). \"Crawling the Hidden Web\". 27th International Conference on Very Large Data Bases.\n\n^ \"Surface Web\". Computer Hope. Retrieved 20 June 2018.\n\n^ Wright, Alex (22 February 2009). \"Exploring a 'Deep Web' That Google Can't Grasp\". The New York Times. Retrieved 23 February 2009.\n\n^ Madhavan, J., Ko, D., Kot, Ł., Ganapathy, V., Rasmussen, A., & Halevy, A. (2008). Google's deep web crawl. Proceedings of the VLDB Endowment, 1(2), 1241–52.\n\n^ Shedden, Sam (8 June 2014). \"How Do You Want Me to Do It? Does It Have to Look like an Accident? – an Assassin Selling a Hit on the Net; Revealed Inside the Deep Web\". Sunday Mail. Archived from the original on 1 March 2020. Retrieved 5 May 2017.\n\n^ Jump up to: a b Ben-Itzhak, Yuval (18 April 2008). \"Infosecurity 2008 – New defence strategy in battle against e-crime\". ComputerWeekly. Reed Business Information. Archived from the original on 4 June 2008. Retrieved 20 April 2008.\n\n^ Christey, Steve & Martin, Robert A. (22 May 2007). \"Vulnerability Type Distributions in CVE (version 1.1)\". MITRE Corporation. Archived from the original on 17 March 2013. Retrieved 7 June 2008.\n\n^ \"Symantec Internet Security Threat Report: Trends for July–December 2007 (Executive Summary)\" (PDF). XIII. Symantec Corp. April 2008: 1–2. Archived (PDF) from the original on 25 June 2008. Retrieved 11 May 2008. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ \"Google searches web's dark side\". BBC News. 11 May 2007. Archived from the original on 7 March 2008. Retrieved 26 April 2008.\n\n^ \"Security Threat Report (Q1 2008)\" (PDF). Sophos. Archived (PDF) from the original on 31 December 2013. Retrieved 24 April 2008.\n\n^ \"Security threat report\" (PDF). Sophos. July 2008. Archived (PDF) from the original on 31 December 2013. Retrieved 24 August 2008.\n\n^ Fogie, Seth, Jeremiah Grossman, Robert Hansen, and Anton Rager (2007). Cross Site Scripting Attacks: XSS Exploits and Defense (PDF). Syngress, Elsevier Science & Technology. pp. 68–69, 127. ISBN 978-1-59749-154-9. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008.{{cite book}}:  CS1 maint: multiple names: authors list (link)\n\n^ O'Reilly, Tim (30 September 2005). \"What Is Web 2.0\". O'Reilly Media. pp. 4–5. Archived from the original on 15 April 2013. Retrieved 4 June 2008. and AJAX web applications can introduce security vulnerabilities like \"client-side security controls, increased attack surfaces, and new possibilities for Cross-Site Scripting (XSS)\", in Ritchie, Paul (March 2007). \"The security risks of AJAX/web 2.0 applications\" (PDF). Infosecurity. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008. which cites Hayre, Jaswinder S. & Kelath, Jayasankar (22 June 2006). \"Ajax Security Basics\". SecurityFocus. Archived from the original on 15 May 2008. Retrieved 6 June 2008.\n\n^ Berinato, Scott (1 January 2007). \"Software Vulnerability Disclosure: The Chilling Effect\". CSO. CXO Media. p. 7. Archived from the original on 18 April 2008. Retrieved 7 June 2008.\n\n^ \"2012 Global Losses From phishing Estimated At $1.5 Bn\". FirstPost. 20 February 2013. Archived from the original on 21 December 2014. Retrieved 25 January 2019.\n\n^ Prince, Brian (9 April 2008). \"McAfee Governance, Risk and Compliance Business Unit\". eWEEK. Ziff Davis Enterprise Holdings. Retrieved 25 April 2008.\n\n^ Preston, Rob (12 April 2008). \"Down To Business: It's Past Time To Elevate The Infosec Conversation\". InformationWeek. United Business Media. Archived from the original on 14 April 2008. Retrieved 25 April 2008.\n\n^ Claburn, Thomas (6 February 2007). \"RSA's Coviello Predicts Security Consolidation\". InformationWeek. United Business Media. Archived from the original on 7 February 2009. Retrieved 25 April 2008.\n\n^ Duffy Marsan, Carolyn (9 April 2008). \"How the iPhone is killing the 'Net\". Network World. IDG. Archived from the original on 14 April 2008. Retrieved 17 April 2008.\n\n^ boyd, danah; Hargittai, Eszter (July 2010). \"Facebook privacy settings: Who cares?\". First Monday. 15 (8). doi:10.5210/fm.v15i8.3086.\n\n^ \"W3C Technical Reports and Publications\". W3C. Retrieved 19 January 2009.\n\n^ \"IETF RFC page\". IETF. Archived from the original on 2 February 2009. Retrieved 19 January 2009.\n\n^ \"Search for World Wide Web in ISO standards\". ISO. Retrieved 19 January 2009.\n\n^ \"Ecma formal publications\". Ecma. Retrieved 19 January 2009.\n\n^ \"Unicode Technical Reports\". Unicode Consortium. Retrieved 19 January 2009.\n\n^ \"IANA home page\". IANA. Retrieved 19 January 2009.\n\n^ Sikos, Leslie (2011). Web standards – Mastering HTML5, CSS3, and XML. Apress. ISBN 978-1-4302-4041-9. Archived from the original on 2 April 2015. Retrieved 12 March 2019.\n\n^ Jump up to: a b c \"Web Accessibility Initiative (WAI)\". World Wide Web Consortium. Archived from the original on 2 April 2009. Retrieved 7 April 2009.\n\n^ \"Developing a Web Accessibility Business Case for Your Organization: Overview\". World Wide Web Consortium. Archived from the original on 14 April 2009. Retrieved 7 April 2009.\n\n^ \"Legal and Policy Factors in Developing a Web Accessibility Business Case for Your Organization\". World Wide Web Consortium. Archived from the original on 5 April 2009. Retrieved 7 April 2009.\n\n^ \"Web Content Accessibility Guidelines (WCAG) Overview\". World Wide Web Consortium. Archived from the original on 1 April 2009. Retrieved 7 April 2009.\n\n^ \"Internationalization (I18n) Activity\". World Wide Web Consortium. Archived from the original on 16 April 2009. Retrieved 10 April 2009.\n\n^ Davis, Mark (5 April 2008). \"Moving to Unicode 5.1\". Archived from the original on 21 May 2009. Retrieved 10 April 2009.\n\n^ \"World Wide Web Consortium Supports the IETF URI Standard and IRI Proposed Standard\" (Press release). World Wide Web Consortium. 26 January 2005. Archived from the original on 7 February 2009. Retrieved 10 April 2009.\n\n\nFurther reading\nBerners-Lee, Tim; Bray, Tim; Connolly, Dan; Cotton, Paul; Fielding, Roy; Jeckle, Mario; Lilley, Chris; Mendelsohn, Noah; Orchard, David; Walsh, Norman; Williams, Stuart (15 December 2004). \"Architecture of the World Wide Web, Volume One\". Version 20041215. W3C. {{cite journal}}: Cite journal requires |journal= (help)\nBerners-Lee, Tim (August 1996). \"The World Wide Web: Past, Present and Future\". {{cite journal}}: Cite journal requires |journal= (help)\nBrügger, Niels, ed, Web25: Histories from the first 25 years of the World Wide Web (Peter Lang, 2017).\nFielding, R.; Gettys, J.; Mogul, J.; Frystyk, H.; Masinter, L.; Leach, P.; Berners-Lee, T. (June 1999). \"Hypertext Transfer Protocol – HTTP/1.1\". Request For Comments 2616. Information Sciences Institute. {{cite journal}}: Cite journal requires |journal= (help)\nNiels Brügger, ed. Web History (2010) 362 pages; Historical perspective on the World Wide Web, including issues of culture, content, and preservation.\nPolo, Luciano (2003). \"World Wide Web Technology Architecture: A Conceptual Analysis\". New Devices.\nSkau, H.O. (March 1990). \"The World Wide Web and Health Information\". New Devices.\nExternal links\n.mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:#f9f9f9;display:flow-root}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1}}@media(min-width:720px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}}.mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0}\n\n\nWikimedia Commons has media related to World Wide Web.\n\n\n\n\nWikibooks has a book on the topic of: Nets, Webs and the Information Infrastructure\n\nThe first website\nEarly archive of the first Web site\nInternet Statistics: Growth and Usage of the Web and the Internet\nLiving Internet A comprehensive history of the Internet, including the World Wide Web\nWeb Design and Development at Curlie\nWorld Wide Web Consortium (W3C)\nW3C Recommendations Reduce \"World Wide Wait\"\nWorld Wide Web Size Daily estimated size of the World Wide Web\nAntonio A. Casilli, Some Elements for a Sociology of Online Interactions\nThe Erdős Webgraph Server Archived 1 March 2021 at the Wayback Machine offers weekly updated graph representation of a constantly increasing fraction of the WWW\nThe 25th Anniversary of the World Wide Web Archived 11 July 2021 at the Wayback Machine is an animated video produced by USAID and TechChange which explores the role of the WWW in addressing extreme poverty\n.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" · \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"}.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteTelecommunicationsHistory\nBeacon\nBroadcasting\nCable protection system\nCable TV\nCommunications satellite\nComputer network\nData compression\naudio\nDCT\nimage\nvideo\nDigital media\nInternet video\nonline video platform\nsocial media\nstreaming\nDrums\nEdholm's law\nElectrical telegraph\nFax\nHeliographs\nHydraulic telegraph\nInformation Age\nInformation revolution\nInternet\nMass media\nMobile phone\nSmartphone\nOptical telecommunication\nOptical telegraphy\nPager\nPhotophone\nPrepaid mobile phone\nRadio\nRadiotelephone\nSatellite communications\nSemaphore\nSemiconductor\ndevice\nMOSFET\ntransistor\nSmoke signals\nTelecommunications history\nTelautograph\nTelegraphy\nTeleprinter (teletype)\nTelephone\nThe Telephone Cases\nTelevision\ndigital\nstreaming\nUndersea telegraph line\nVideotelephony\nWhistled language\nWireless revolution\nPioneers\nNasir Ahmed\nEdwin Howard Armstrong\nMohamed M. Atalla\nJohn Logie Baird\nPaul Baran\nJohn Bardeen\nAlexander Graham Bell\nEmile Berliner\nTim Berners-Lee\nFrancis Blake (telephone)\nJagadish Chandra Bose\nCharles Bourseul\nWalter Houser Brattain\nVint Cerf\nClaude Chappe\nYogen Dalal\nDaniel Davis Jr.\nDonald Davies\nAmos Dolbear\nThomas Edison\nLee de Forest\nPhilo Farnsworth\nReginald Fessenden\nElisha Gray\nOliver Heaviside\nRobert Hooke\nErna Schneider Hoover\nHarold Hopkins\nGardiner Greene Hubbard\nInternet pioneers\nBob Kahn\nDawon Kahng\nCharles K. Kao\nNarinder Singh Kapany\nHedy Lamarr\nInnocenzo Manzetti\nGuglielmo Marconi\nRobert Metcalfe\nAntonio Meucci\nSamuel Morse\nJun-ichi Nishizawa\nCharles Grafton Page\nRadia Perlman\nAlexander Stepanovich Popov\nTivadar Puskás\nJohann Philipp Reis\nClaude Shannon\nAlmon Brown Strowger\nHenry Sutton\nCharles Sumner Tainter\nNikola Tesla\nCamille Tissot\nAlfred Vail\nThomas A. Watson\nCharles Wheatstone\nVladimir K. Zworykin\nTransmissionmedia\nCoaxial cable\nFiber-optic communication\noptical fiber\nFree-space optical communication\nMolecular communication\nRadio waves\nwireless\nTransmission line\ndata transmission circuit\ntelecommunication circuit\nNetwork topologyand switching\nBandwidth\nLinks\nNodes\nterminal\nNetwork switching\ncircuit\npacket\nTelephone exchange\nMultiplexing\nSpace-division\nFrequency-division\nTime-division\nPolarization-division\nOrbital angular-momentum\nCode-division\nConcepts\nCommunication protocol\nComputer network\nData transmission\nStore and forward\nTelecommunications equipment\nTypes of network\nCellular network\nEthernet\nISDN\nLAN\nMobile\nNGN\nPublic Switched Telephone\nRadio\nTelevision\nTelex\nUUCP\nWAN\nWireless network\nNotable networks\nARPANET\nBITNET\nCYCLADES\nFidoNet\nInternet\nInternet2\nJANET\nNPL network\nToasternet\nUsenet\nLocations\nAfrica\nAmericas\nNorth\nSouth\nAntarctica\nAsia\nEurope\nOceania\n(Global telecommunications regulation bodies)\n\n Telecommunication portal\n Category\n Outline\n Commons\n\nshowvteWeb syndication\nHistory\nBlogging\nPodcasting\nVlogging\nWeb syndication technology\nTypes\nArt\nBloggernacle\nClassical music\nCorporate\nDream diary\nEdublog\nElectronic journal\nFake\nFamily\nFashion\nFood\nHealth\nLaw\nLifelog\nLitblog\nMP3\nNews\nPhotoblog\nPolice\nPolitical\nProject\nReverse\nTravel\nWarblog\nTechnologyGeneral\nBitTorrent\nFeed URI scheme\nFeatures\nLinkback\nPermalink\nPing\nPingback\nReblogging\nRefback\nRollback\nTrackback\nMechanism\nConversation threading\nGeotagging\nRSS enclosure\nSynchronization\nMemetics\nAtom feed\nData feed\nPhotofeed\nProduct feed\nRDF feed\nWeb feed\nRSS\nGeoRSS\nMRSS\nRSS TV\nSocial\nInter-process communication\nLivemark\nMashup\nReferencing\nRSS editor\nRSS tracking\nStreaming media\nStandard\nOML\nOPML\nRSS Advisory Board\nUsenet\nWorld Wide Web\nXBEL\nXOXO\nForm\nAudio podcast\nEnhanced podcast\nMobilecast\nNarrowcasting\nPeercasting\nScreencast\nSlidecasting\nVideocast\nWebcomic\nWebtoon\nWeb series\n\nAnonymous blogging\nCollaborative blog\nColumnist\nInstant messaging\nLiveblogging\nMicroblog\nMobile blogging\nRoblog\nSpam blog\nVideo blogging\nMotovlogging\nMediaAlternative media\nCarnivals\nFiction\nJournalism\nCitizen\nDatabase\nOnline diary\nSearch engines\nSideblog\nSoftware\nWeb directory\nMicromedia\nAggregation\nNews\nPoll\nReview\nSearch\nVideo\nAtom\nAtomPub\nBroadcatching\nHashtag\nNewsML\n1\nG2\nSocial communication\nSocial software\nWeb Slice\nRelated\nBlogosphere\nEscribitionist\nGlossary of blogging\nPay per click\nPosting style\nSlashdot effect\nSpam in blogs\nUses of podcasting\n\nshowvteSemantic WebBackground\nDatabases\nHypertext\nInternet\nOntologies\nSemantics\nSemantic networks\nWorld Wide Web\nSub-topics\nDataspaces\nHyperdata\nLinked data\nRule-based systems\nApplications\nSemantic analytics\nSemantic broker\nSemantic computing\nSemantic mapper\nSemantic matching\nSemantic publishing\nSemantic reasoner\nSemantic search\nSemantic service-oriented architecture\nSemantic wiki\nSolid\nRelated topics\nCollective intelligence\nDescription logic\nFolksonomy\nGeotagging\nInformation architecture\nKnowledge extraction\nKnowledge management\nKnowledge representation and reasoning\nLibrary 2.0\nDigital library\nDigital humanities\nMetadata\nReferences\nTopic map\nWeb 2.0\nWeb engineering\nWeb Science Trust\nStandardsSyntax and supporting technologies\nHTTP\nIRI\nURI\nRDF\ntriples\nRDF/XML\nJSON-LD\nTurtle\nTriG\nNotation3\nN-Triples\nTriX (no W3C standard)\nRRID\nSPARQL\nXML\nSemantic HTML\nSchemas, ontologies and rules\nCommon Logic\nOWL\nRDFS\nRule Interchange Format\nSemantic Web Rule Language\nALPS\nSHACL\nSemantic annotation\neRDF\nGRDDL\nMicrodata\nMicroformats\nRDFa\nSAWSDL\nFacebook Platform\nCommon vocabularies\nDOAP\nDublin Core\nFOAF\nSchema.org\nSIOC\nSKOS\nMicroformat vocabularies\nhAtom\nhCalendar\nhCard\nhProduct\nhRecipe\nhReview\n\n.mw-parser-output .tooltip-dotted{border-bottom:1px dotted;cursor:help}showAuthority control National libraries\nSpain\nFrance\nBnF data\nGermany\nIsrael\nUnited States\nLatvia\nCzech Republic\nOther\nFAST\nNARA\n\n\n\n\n\n<img src=\"//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1\" alt=\"\" title=\"\" width=\"1\" height=\"1\" style=\"border: none; position: absolute;\" />\nRetrieved from \"https://en.wikipedia.org/w/index.php?title=World_Wide_Web&oldid=1137206274\"\n\t\t\t\t\tCategories: World Wide WebComputer-related introductions in 1989English inventionsBritish inventionsHuman–computer interactionInformation AgeCERNTim Berners-LeeWeb technology20th-century inventionsHidden categories: Wikipedia articles needing page number citations from September 2016CS1 errors: missing periodicalCS1 maint: multiple names: authors listArticles with short descriptionShort description is different from WikidataWikipedia semi-protected pagesWikipedia indefinitely move-protected pagesEngvarB from February 2020Use dmy dates from October 2022Articles containing potentially dated statements from 1997All articles containing potentially dated statementsAll articles lacking reliable referencesArticles lacking reliable references from August 2022All accuracy disputesArticles with disputed statements from July 2019Articles lacking reliable references from November 2016Articles containing Chinese-language textArticles lacking reliable references from April 2018All articles with unsourced statementsArticles with unsourced statements from March 2021Commons category link is on WikidataArticles with Curlie linksWebarchive template wayback linksArticles with BNE identifiersArticles with BNF identifiersArticles with GND identifiersArticles with J9U identifiersArticles with LCCN identifiersArticles with LNB identifiersArticles with NKC identifiersArticles with FAST identifiersArticles with NARA identifiers\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://en.wikipedia.org/wiki/World_Wide_Web",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://en.wikipedia.org/wiki/World_Wide_Web"

        }

    ],

    links: "https://en.wikipedia.org/wiki/World_Wide_Web",

    name: "Wiki_WWW",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\tToggle the table of contents\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\n\t\n\t\t\n\n\t\tToggle the table of contents\n\t\n\t\n\n\n\t\t\t\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\t\t\t\t\t\n\t\t\t\t\tWorld Wide Web\n\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\n\t\n\t\t\n\n\t\t140 languages\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\tAfrikaansAlemannischÆngliscالعربيةAragonésঅসমীয়াAsturianuAzərbaycancaتۆرکجهবাংলাBân-lâm-gúБашҡортсаБеларускаяБеларуская (тарашкевіца)भोजपुरीБългарскиBosanskiBrezhonegCatalàČeštinaCorsuCymraegDanskالدارجةDeitschDeutschEestiΕλληνικάEmiliàn e rumagnòlEspañolEsperantoEuskaraفارسیFøroysktFrançaisGaeilgeGalego贛語گیلکیગુજરાતી客家語/Hak-kâ-ngî한국어HausaՀայերենहिन्दीHrvatskiIlokanoBahasa IndonesiaInterlinguaIsiZuluÍslenskaItalianoעבריתJawaಕನ್ನಡქართულიҚазақшаKernowekKiswahiliKriyòl gwiyannenKurdîКыргызчаLadinoLatinaLatviešuLëtzebuergeschLietuviųLingua Franca NovaLombardMagyarमैथिलीМакедонскиMalagasyമലയാളംमराठीمصرىمازِرونیBahasa MelayuМонголမြန်မာဘာသာNederlandsनेपाल भाषा日本語NordfriiskNorsk bokmålNorsk nynorskOccitanОлык марийOʻzbekcha / ўзбекчаਪੰਜਾਬੀپنجابیPapiamentuپښتوPatoisភាសាខ្មែរPicardPolskiPortuguêsQaraqalpaqshaRomânăRumantschRuna SimiРусиньскыйРусскийСаха тылаSarduScotsShqipSicilianuසිංහලSimple EnglishسنڌيSlovenčinaSlovenščinaSoomaaligaکوردیСрпски / srpskiSrpskohrvatski / српскохрватскиSuomiSvenskaTagalogதமிழ்TaqbaylitТатарча / tatarçaไทยТоҷикӣTürkçeУкраїнськаاردوVènetoTiếng ViệtVõroWalonWinarayWolof吴语ייִדיש粵語Zazaki中文131 more\n\t\t\t\n\t\t\n\n\t\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\n\t\t\n\t\tArticleTalk\n\t\t\n\t\n\n\n\t\t\t\t\t\t\t\t\n\n\n\t\n\t\n\t\t\n\t\tEnglish\n\t\n\t\n\n\t\n\t\t\n\t\t\n\t\t\n\t\n\n\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\n\t\t\n\t\tReadView sourceView history\n\t\t\n\t\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\n\t\n\t\n\t\t\n\t\tMore\n\t\n\t\n\n\t\n\t\t\n\t\tReadView sourceView history\n\t\t\n\t\n\n\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\n\t\t\n\n\t\t\t\t\t\tFrom Wikipedia, the free encyclopedia\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tSystem of interlinked hypertext documents accessed over the Internet\n.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the global system of pages accessed via URLs. For the worldwide computer network, see Internet. For the web browser, see WorldWideWeb.\n\"WWW\" and \"The Web\" redirect here. For other uses, see WWW (disambiguation) and The Web (disambiguation).\n\n\n\n\n  The historic World Wide Web logo, designed by Robert Cailliau\n  A web page displayed in a web browser\n  A global map of the Web Index for countries in 2014\nThe World Wide Web (WWW), commonly known as the Web, is an information system enabling documents and other web resources to be accessed over the Internet.[1] \nDocuments and downloadable media are made available to the network through web servers and can be accessed by programs such as web browsers. Servers and resources on the World Wide Web are identified and located through character strings called uniform resource locators (URLs). The original and still very common document type is a web page formatted in Hypertext Markup Language (HTML). This markup language supports plain text, images, embedded video and audio contents, and scripts (short programs) that implement complex user interaction. The HTML language also supports hyperlinks (embedded URLs) which provide immediate access to other web resources. Web navigation, or web surfing, is the common practice of following such hyperlinks across multiple websites. Web applications are web pages that function as application software. The information in the Web is transferred across the Internet using the Hypertext Transfer Protocol (HTTP).\nMultiple web resources with a common theme and usually a common domain name make up a website. A single web server may provide multiple websites, while some websites, especially the most popular ones, may be provided by multiple servers. Website content is provided by a myriad of companies, organizations, government agencies, and individual users; and comprises an enormous amount of educational, entertainment, commercial, and government information.\nThe World Wide Web has become the world's dominant software platform.[2][3][4][5] It is the primary tool billions of people worldwide use to interact with the Internet.[6]\nThe Web was invented by Tim Berners-Lee at CERN in 1989 and opened to the public in 1991. It was conceived as a \"universal linked information system\".[7]\n\n\nHistory\nMain article: History of the World Wide Web\n  This NeXT Computer was used by Sir Tim Berners-Lee at CERN and became the world's first Web server.\nThe Web was invented by English computer scientist Tim Berners-Lee while working at CERN. He conceived it as an information management system using several concepts and technologies, the most fundamental of which was the connections that existed between information.[8][9][10] The first proposal was written in 1989,[7] and a working system implemented by the end of 1990 including the WorldWideWeb browser and an HTTP server.[11] The technology was released outside CERN to other research institutions starting in January 1991, and then to the general public on 23 August 1991. The Web was a success at CERN, and began to spread to other scientific and academic institutions. Within the next two years, there were 50 websites created.[12][13]\nCERN made the Web protocol and code available royalty free in 1993, enabling its widespread use.[14][15] After the NCSA released the Mosaic web browser later that year, the Web's popularity grew rapidly as thousands of websites sprang up in less than a year.[16][17] Mosaic was a graphical browser that could display inline images and submit forms that  were processed by the HTTPd server.[18][19] Marc Andreessen and Jim Clark founded Netscape the following year and released the Navigator browser, which introduced Java and JavaScript to the Web. It quickly became the dominant browser. Netscape became a public company in 1995 which triggered a frenzy for the Web and started the dot-com bubble.[20] Microsoft responded by developing its own browser, Internet Explorer, starting the browser wars. By bundling it with Windows, it became the dominant browser for 14 years.[21]\nTim Berners-Lee founded the World Wide Web Consortium (W3C) which created XML in 1996 and recommended replacing HTML with stricter XHTML.[22] In the meantime, developers began exploiting an IE feature called XMLHttpRequest to make Ajax applications and launched the Web 2.0 revolution. Mozilla, Opera, and Apple rejected XHTML and created the WHATWG which developed HTML5.[23] In 2009, the W3C conceded and abandoned XHTML[24] and in 2019, ceded control of the HTML specification to the WHATWG.[25]\nThe World Wide Web has been central to the development of the Information Age and is the primary tool billions of people use to interact on the Internet.[26][27][28][29][30]\n\nFunction\nMain articles: HTTP and HTML\n  The World Wide Web functions as an application layer protocol that is run \"on top of\" (figuratively) the Internet, helping to make it more functional. The advent of the Mosaic web browser helped to make the web much more usable, to include the display of images and moving images (GIFs).\nThe terms Internet and World Wide Web are often used without much distinction. However, the two terms do not mean the same thing. The Internet is a global system of computer networks interconnected through telecommunications and optical networking. In contrast, the World Wide Web is a global collection of documents and other resources, linked by hyperlinks and URIs. Web resources are accessed using HTTP or HTTPS, which are application-level Internet protocols that use the Internet's transport protocols.[31]\nViewing a web page on the World Wide Web normally begins either by typing the URL of the page into a web browser or by following a hyperlink to that page or resource. The web browser then initiates a series of background communication messages to fetch and display the requested page. In the 1990s, using a browser to view web pages—and to move from one web page to another through hyperlinks—came to be known as 'browsing,' 'web surfing' (after channel surfing), or 'navigating the Web'. Early studies of this new behavior investigated user patterns in using web browsers. One study, for example, found five user patterns: exploratory surfing, window surfing, evolved surfing, bounded navigation and targeted navigation.[32]\nThe following example demonstrates the functioning of a web browser when accessing a page at the URL http://example.org/home.html. The browser resolves the server name of the URL (example.org) into an Internet Protocol address using the globally distributed Domain Name System (DNS). This lookup returns an IP address such as 203.0.113.4 or 2001:db8:2e::7334. The browser then requests the resource by sending an HTTP request across the Internet to the computer at that address. It requests service from a specific TCP port number that is well known for the HTTP service so that the receiving host can distinguish an HTTP request from other network protocols it may be servicing. HTTP normally uses port number 80 and for HTTPS it normally uses port number 443. The content of the HTTP request can be as simple as two lines of text:\n\nGET /home.html HTTP/1.1\nHost: example.org\n\nThe computer receiving the HTTP request delivers it to web server software listening for requests on port 80. If the webserver can fulfill the request it sends an HTTP response back to the browser indicating success:\n\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\n\nfollowed by the content of the requested page. Hypertext Markup Language (HTML) for a basic web page might look like this:\n\n<html>\n  <head>\n    <title>Example.org – The World Wide Web</title>\n  </head>\n  <body>\n    <p>The World Wide Web, abbreviated as WWW and commonly known ...</p>\n  </body>\n</html>\n\nThe web browser parses the HTML and interprets the markup (<title>, <p> for paragraph, and such) that surrounds the words to format the text on the screen. Many web pages use HTML to reference the URLs of other resources such as images, other embedded media, scripts that affect page behaviour, and Cascading Style Sheets that affect page layout. The browser makes additional HTTP requests to the web server for these other Internet media types. As it receives their content from the web server, the browser progressively renders the page onto the screen as specified by its HTML and these additional resources.\n\nHTML\nMain article: HTML\nHypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets (CSS) and JavaScript, it forms a triad of cornerstone technologies for the World Wide Web.[33]\nWeb browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\nHTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img /> and <input /> directly introduce content into the page. Other tags such as <p> surround and provide information about document text and may include other tags as sub-elements. Browsers do not display the HTML tags, but use them to interpret the content of the page.\nHTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. Inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), maintainer of both the HTML and the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[update][34]\n\nLinking\nMost web pages contain hyperlinks to other related pages and perhaps to downloadable files, source documents, definitions and other web resources. In the underlying HTML, a hyperlink looks like this:\n<a href=\"http://example.org/home.html\">Example.org Homepage</a>.\n\n  Graphic representation of a minute fraction of the WWW, demonstrating hyperlinks\nSuch a collection of useful, related resources, interconnected via hypertext links is dubbed a web of information. Publication on the Internet created what Tim Berners-Lee first called the WorldWideWeb (in its original CamelCase, which was subsequently discarded) in November 1990.[35]\nThe hyperlink structure of the web is described by the webgraph: the nodes of the web graph correspond to the web pages (or URLs) the directed edges between them to the hyperlinks. Over time, many web resources pointed to by hyperlinks disappear, relocate, or are replaced with different content. This makes hyperlinks obsolete, a phenomenon referred to in some circles as link rot, and the hyperlinks affected by it are often called dead links. The ephemeral nature of the Web has prompted many efforts to archive websites. The Internet Archive, active since 1996, is the best known of such efforts.\n\nWWW prefix\nMany hostnames used for the World Wide Web begin with www because of the long-standing practice of naming Internet hosts according to the services they provide. The hostname of a web server is often www, in the same way that it may be ftp for an FTP server, and news or nntp for a Usenet news server. These hostnames appear as Domain Name System (DNS) or subdomain names, as in www.example.com. The use of www is not required by any technical or policy standard and many web sites do not use it; the first web server was nxoc01.cern.ch.[36] According to Paolo Palazzi, who worked at CERN along with Tim Berners-Lee, the popular use of www as subdomain was accidental; the World Wide Web project page was intended to be published at www.cern.ch while info.cern.ch was intended to be the CERN home page; however the DNS records were never switched, and the practice of prepending www to an institution's website domain name was subsequently copied.[37][better source needed] Many established websites still use the prefix, or they employ other subdomain names such as www2, secure or en for special purposes. Many such web servers are set up so that both the main domain name (e.g., example.com) and the www subdomain (e.g., www.example.com) refer to the same site; others require one form or the other, or they may map to different web sites. The use of a subdomain name is useful for load balancing incoming web traffic by creating a CNAME record that points to a cluster of web servers. Since, currently, only a subdomain can be used in a CNAME, the same result cannot be achieved by using the bare domain root.[38][dubious  – discuss]\nWhen a user submits an incomplete domain name to a web browser in its address bar input field, some web browsers automatically try adding the prefix \"www\" to the beginning of it and possibly \".com\", \".org\" and \".net\" at the end, depending on what might be missing. For example, entering \"microsoft\" may be transformed to http://www.microsoft.com/ and \"openoffice\" to http://www.openoffice.org. This feature started appearing in early versions of Firefox, when it still had the working title 'Firebird' in early 2003, from an earlier practice in browsers such as Lynx.[39][unreliable source?] It is reported that Microsoft was granted a US patent for the same idea in 2008, but only for mobile devices.[40]\nIn English, www is usually read as double-u double-u double-u.[41] Some users pronounce it dub-dub-dub, particularly in New Zealand.[42] Stephen Fry, in his \"Podgrams\" series of podcasts, pronounces it wuh wuh wuh.[43] The English writer Douglas Adams once quipped in The Independent on Sunday (1999): \"The World Wide Web is the only thing I know of whose shortened form takes three times longer to say than what it's short for\".[44] In Mandarin Chinese, World Wide Web is commonly translated via a phono-semantic matching to wàn wéi wǎng (万维网), which satisfies www and literally means \"myriad-dimensional net\",[45][better source needed] a translation that reflects the design concept and proliferation of the World Wide Web. Tim Berners-Lee's web-space states that World Wide Web is officially spelled as three separate words, each capitalised, with no intervening hyphens.[46] Nonetheless, it is often called simply the Web, and also often the web; see Capitalization of Internet for details. Use of the www prefix has been declining, especially when Web 2.0 web applications sought to brand their domain names and make them easily pronounceable.[47]\nAs the mobile Web grew in popularity, services like Gmail.com, Outlook.com, Myspace.com, Facebook.com and Twitter.com are most often mentioned without adding \"www.\" (or, indeed, \".com\") to the domain.\n\nScheme specifiers\nThe scheme specifiers http:// and https:// at the start of a web URI refer to Hypertext Transfer Protocol or HTTP Secure, respectively. They specify the communication protocol to use for the request and response. The HTTP protocol is fundamental to the operation of the World Wide Web, and the added encryption layer in HTTPS is essential when browsers send or retrieve confidential data, such as passwords or banking information. Web browsers usually automatically prepend http:// to user-entered URIs, if omitted.\n\nPages\nMain article: Web page\n  A screenshot of a web page on Wikimedia Commons\nA web page (also written as webpage) is a document that is suitable for the World Wide Web and web browsers. A web browser displays a web page on a monitor or mobile device.\nThe term web page usually refers to what is visible, but may also refer to the contents of the computer file itself, which is usually a text file containing hypertext written in HTML or a comparable markup language. Typical web pages provide hypertext for browsing to other web pages via hyperlinks, often referred to as links. Web browsers will frequently have to access multiple web resource elements, such as reading style sheets, scripts, and images, while presenting each web page.\nOn a network, a web browser can retrieve a web page from a remote web server. The web server may restrict access to a private network such as a corporate intranet. The web browser uses the Hypertext Transfer Protocol (HTTP) to make such requests to the web server.\nA static web page is delivered exactly as stored, as web content in the web server's file system. In contrast, a dynamic web page is generated by a web application, usually driven by server-side software. Dynamic web pages are used when each user may require completely different information, for example, bank websites, web email etc.\n\nStatic page\nMain article: Static web page\nA static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application.\nConsequently, a static web page displays the same information for all users, from all contexts, subject to modern capabilities of a web server to negotiate content-type or language of the document where such versions are available and the server is configured to do so.\n\nDynamic pages\nMain articles: Dynamic web page and Ajax (programming)\n  Dynamic web page: example of server-side scripting (PHP and MySQL)\nA server-side dynamic web page is a web page whose construction is controlled by an application server processing server-side scripts. In server-side scripting, parameters determine how the assembly of every new web page proceeds, including the setting up of more client-side processing.\nA client-side dynamic web page processes the web page using JavaScript running in the browser. JavaScript programs can interact with the document via Document Object Model, or DOM, to query page state and alter it. The same client-side techniques can then dynamically update or change the DOM in the same way.\nA dynamic web page is then reloaded by the user or by a computer program to change some variable content. The updating information could come from the server, or from changes made to that page's DOM. This may or may not truncate the browsing history or create a saved version to go back to, but a dynamic web page update using Ajax technologies will neither create a page to go back to nor truncate the web browsing history forward of the displayed page. Using Ajax technologies the end user gets one dynamic page managed as a single page in the web browser while the actual web content rendered on that page can vary. The Ajax engine sits only on the browser requesting parts of its DOM, the DOM, for its client, from an application server.\nDynamic HTML, or DHTML, is the umbrella term for technologies and methods used to create web pages that are not static web pages, though it has fallen out of common use since the popularization of AJAX, a term which is now itself rarely used.[citation needed] Client-side-scripting, server-side scripting, or a combination of these make for the dynamic web experience in a browser.\nJavaScript is a scripting language that was initially developed in 1995 by Brendan Eich, then of Netscape, for use within web pages.[48] The standardised version is ECMAScript.[48] To make web pages more interactive, some web applications also use JavaScript techniques such as Ajax (asynchronous JavaScript and XML). Client-side script is delivered with the page that can make additional HTTP requests to the server, either in response to user actions such as mouse movements or clicks, or based on elapsed time. The server's responses are used to modify the current page rather than creating a new page with each response, so the server needs only to provide limited, incremental information. Multiple Ajax requests can be handled at the same time, and users can interact with the page while data is retrieved. Web pages may also regularly poll the server to check whether new information is available.[49]\n\nWebsite\n  The usap.gov website\nMain article: Website\nA website[50] is a collection of related web resources including web pages, multimedia content, typically identified with a common domain name, and published on at least one web server. Notable examples are wikipedia.org, google.com, and amazon.com.\nA website may be accessible via a public Internet Protocol (IP) network, such as the Internet, or a private local area network (LAN), by referencing a uniform resource locator (URL) that identifies the site.\nWebsites can have many functions and can be used in various fashions; a website can be a personal website, a corporate website for a company, a government website, an organization website, etc. Websites are typically dedicated to a particular topic or purpose, ranging from entertainment and social networking to providing news and education. All publicly accessible websites collectively constitute the World Wide Web, while private websites, such as a company's website for its employees, are typically a part of an intranet.\nWeb pages, which are the building blocks of websites, are documents, typically composed in plain text interspersed with formatting instructions of Hypertext Markup Language (HTML, XHTML). They may incorporate elements from other websites with suitable markup anchors. Web pages are accessed and transported with the Hypertext Transfer Protocol (HTTP), which may optionally employ encryption (HTTP Secure, HTTPS) to provide security and privacy for the user. The user's application, often a web browser, renders the page content according to its HTML markup instructions onto a display terminal.\nHyperlinking between web pages conveys to the reader the site structure and guides the navigation of the site, which often starts with a home page containing a directory of the site web content. Some websites require user registration or subscription to access content. Examples of subscription websites include many business sites, news websites, academic journal websites, gaming websites, file-sharing websites, message boards, web-based email, social networking websites, websites providing real-time price quotations for different types of markets, as well as sites providing various other services. End users can access websites on a range of devices, including desktop and laptop computers, tablet computers, smartphones and smart TVs.\n\nBrowser\nMain article: Web browser\nA web browser (commonly referred to as a browser) is a software user agent for accessing information on the World Wide Web. To connect to a website's server and display its pages, a user needs to have a web browser program. This is the program that the user runs to download, format, and display a web page on the user's computer.\nIn addition to allowing users to find, display, and move between web pages, a web browser will usually have features like keeping bookmarks, recording history, managing cookies (see below), and home pages and may have facilities for recording passwords for logging into web sites.\nThe most popular browsers are Chrome, Firefox, Safari, Internet Explorer, and Edge.\n\nServer\nMain article: Web server\n  The inside and front of a Dell PowerEdge web server, a computer designed for rack mounting\nA Web server is server software, or hardware dedicated to running said software, that can satisfy World Wide Web client requests. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols.\nThe primary function of a web server is to store, process and deliver web pages to clients.[51] The communication between client and server takes place using the Hypertext Transfer Protocol (HTTP). Pages delivered are most frequently HTML documents, which may include images, style sheets and scripts in addition to the text content.\n\n  Multiple web servers may be used for a high traffic website; here, Dell servers are installed together to be used for the Wikimedia Foundation.\nA user agent, commonly a web browser or web crawler, initiates communication by making a request for a specific resource using HTTP and the server responds with the content of that resource or an error message if unable to do so. The resource is typically a real file on the server's secondary storage, but this is not necessarily the case and depends on how the webserver is implemented.\nWhile the primary function is to serve content, full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files.\nMany generic web servers also support server-side scripting using Active Server Pages (ASP), PHP (Hypertext Preprocessor), or other scripting languages. This means that the behavior of the webserver can be scripted in separate files, while the actual server software remains unchanged. Usually, this function is used to generate HTML documents dynamically (\"on-the-fly\") as opposed to returning static documents. The former is primarily used for retrieving or modifying information from databases. The latter is typically much faster and more easily cached but cannot deliver dynamic content.\nWeb servers can also frequently be found embedded in devices such as printers, routers, webcams and serving only a local network. The web server may then be used as a part of a system for monitoring or administering the device in question. This usually means that no additional software has to be installed on the client computer since only a web browser is required (which now is included with most operating systems).\n\nCookie\nMain article: HTTP cookie\nAn HTTP cookie (also called web cookie, Internet cookie, browser cookie, or simply cookie) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart in an online store) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past). They can also be used to remember arbitrary pieces of information that the user previously entered into form fields such as names, addresses, passwords, and credit card numbers.\nCookies perform essential functions in the modern web. Perhaps most importantly, authentication cookies are the most common method used by web servers to know whether the user is logged in or not, and which account they are logged in with. Without such a mechanism, the site would not know whether to send a page containing sensitive information or require the user to authenticate themselves by logging in. The security of an authentication cookie generally depends on the security of the issuing website and the user's web browser, and on whether the cookie data is encrypted. Security vulnerabilities may allow a cookie's data to be read by a hacker, used to gain access to user data, or used to gain access (with the user's credentials) to the website to which the cookie belongs (see cross-site scripting and cross-site request forgery for examples).[52]\nTracking cookies, and especially third-party tracking cookies, are commonly used as ways to compile long-term records of individuals' browsing histories – a potential privacy concern that prompted European[53] and U.S. lawmakers to take action in 2011.[54][55] European law requires that all websites targeting European Union member states gain \"informed consent\" from users before storing non-essential cookies on their device.\nGoogle Project Zero researcher Jann Horn describes ways cookies can be read by intermediaries, like Wi-Fi hotspot providers. He recommends using the browser in incognito mode in such circumstances.[56]\n\nSearch engine\nMain article: Search engine\n  The results of a search for the term \"lunar eclipse\" in a web-based image search engine\nA web search engine or Internet search engine is a software system that is designed to carry out web search (Internet search), which means to search the World Wide Web in a systematic way for particular information specified in a web search query. The search results are generally presented in a line of results, often referred to as search engine results pages (SERPs). The information may be a mix of web pages, images, videos, infographics, articles, research papers, and other types of files. Some search engines also mine data available in databases or open directories. Unlike web directories, which are maintained only by human editors, search engines also maintain real-time information by running an algorithm on a web crawler.\nInternet content that is not capable of being searched by a web search engine is generally described as the deep web.\n\nDeep web\nMain article: Deep web\nThe deep web,[57] invisible web,[58] or hidden web[59] are parts of the World Wide Web whose contents are not indexed by standard web search engines. The opposite term to the deep web is the surface web, which is accessible to anyone using the Internet.[60] Computer scientist Michael K. Bergman is credited with coining the term deep web in 2001 as a search indexing term.[61]\nThe content of the deep web is hidden behind HTTP forms,[62][63] and includes many very common uses such as web mail, online banking, and services that users must pay for, and which is protected by a paywall, such as video on demand, some online magazines and newspapers, among others.\nThe content of the deep web can be located and accessed by a direct URL or IP address, and may require a password or other security access past the public website page.\n\nCaching\nA web cache is a server computer located either on the public Internet or within an enterprise that stores recently accessed web pages to improve response time for users when the same content is requested within a certain time after the original request. Most web browsers also implement a browser cache by writing recently obtained data to a local data storage device. HTTP requests by a browser may ask only for data that has changed since the last access. Web pages and resources may contain expiration information to control caching to secure sensitive data, such as in online banking, or to facilitate frequently updated sites, such as news media. Even sites with highly dynamic content may permit basic resources to be refreshed only occasionally. Web site designers find it worthwhile to collate resources such as CSS data and JavaScript into a few site-wide files so that they can be cached efficiently. Enterprise firewalls often cache Web resources requested by one user for the benefit of many users. Some search engines store cached content of frequently accessed websites.\n\nSecurity\nFor criminals, the Web has become a venue to spread malware and engage in a range of cybercrimes, including (but not limited to) identity theft, fraud, espionage and intelligence gathering.[64] Web-based vulnerabilities now outnumber traditional computer security concerns,[65][66] and as measured by Google, about one in ten web pages may contain malicious code.[67] Most web-based attacks take place on legitimate websites, and most, as measured by Sophos, are hosted in the United States, China and Russia.[68] The most common of all malware threats is SQL injection attacks against websites.[69] Through HTML and URIs, the Web was vulnerable to attacks like cross-site scripting (XSS) that came with the introduction of JavaScript[70] and were exacerbated to some degree by Web 2.0 and Ajax web design that favours the use of scripts.[71] Today by one estimate, 70% of all websites are open to XSS attacks on their users.[72] Phishing is another common threat to the Web. In February 2013, RSA (the security division of EMC) estimated the global losses from phishing at $1.5 billion in 2012.[73] Two of the well-known phishing methods are Covert Redirect and Open Redirect.\nProposed solutions vary. Large security companies like McAfee already design governance and compliance suites to meet post-9/11 regulations,[74] and some, like Finjan have recommended active real-time inspection of programming code and all content regardless of its source.[64] Some have argued that for enterprises to see Web security as a business opportunity rather than a cost centre,[75] while others call for \"ubiquitous, always-on digital rights management\" enforced in the infrastructure to replace the hundreds of companies that secure data and networks.[76] Jonathan Zittrain has said users sharing responsibility for computing safety is far preferable to locking down the Internet.[77]\n\nPrivacy\nMain article: Internet privacy\nEvery time a client requests a web page, the server can identify the request's IP address. Web servers usually log IP addresses in a log file. Also, unless set not to do so, most web browsers record requested web pages in a viewable history feature, and usually cache much of the content locally. Unless the server-browser communication uses HTTPS encryption, web requests and responses travel in plain text across the Internet and can be viewed, recorded, and cached by intermediate systems. Another way to hide personally identifiable information is by using a virtual private network. A VPN encrypts online traffic and masks the original IP address lowering the chance of user identification.\nWhen a web page asks for, and the user supplies, personally identifiable information—such as their real name, address, e-mail address, etc. web-based entities can associate current web traffic with that individual. If the website uses HTTP cookies, username, and password authentication, or other tracking techniques, it can relate other web visits, before and after, to the identifiable information provided. In this way, a web-based organization can develop and build.md a profile of the individual people who use its site or sites. It may be able to build.md a record for an individual that includes information about their leisure activities, their shopping interests, their profession, and other aspects of their demographic profile. These profiles are of potential interest to marketers, advertisers, and others. Depending on the website's terms and conditions and the local laws that apply information from these profiles may be sold, shared, or passed to other organizations without the user being informed. For many ordinary people, this means little more than some unexpected e-mails in their in-box or some uncannily relevant advertising on a future web page. For others, it can mean that time spent indulging an unusual interest can result in a deluge of further targeted marketing that may be unwelcome. Law enforcement, counter-terrorism, and espionage agencies can also identify, target, and track individuals based on their interests or proclivities on the Web.\nSocial networking sites usually try to get users to use their real names, interests, and locations, rather than pseudonyms, as their executives believe that this makes the social networking experience more engaging for users. On the other hand, uploaded photographs or unguarded statements can be identified to an individual, who may regret this exposure. Employers, schools, parents, and other relatives may be influenced by aspects of social networking profiles, such as text posts or digital photos, that the posting individual did not intend for these audiences. Online bullies may make use of personal information to harass or stalk users. Modern social networking websites allow fine-grained control of the privacy settings for each posting, but these can be complex and not easy to find or use, especially for beginners.[78] Photographs and videos posted onto websites have caused particular problems, as they can add a person's face to an online profile. With modern and potential facial recognition technology, it may then be possible to relate that face with other, previously anonymous, images, events, and scenarios that have been imaged elsewhere. Due to image caching, mirroring, and copying, it is difficult to remove an image from the World Wide Web.\n\nStandards\nMain article: Web standards\nWeb standards include many interdependent standards and specifications, some of which govern aspects of the Internet, not just the World Wide Web. Even when not web-focused, such standards directly or indirectly affect the development and administration of websites and web services. Considerations include the interoperability, accessibility and usability of web pages and web sites.\nWeb standards, in the broader sense, consist of the following:\n\nRecommendations published by the World Wide Web Consortium (W3C)[79]\n\"Living Standard\" made by the Web Hypertext Application Technology Working Group (WHATWG)\nRequest for Comments (RFC) documents published by the Internet Engineering Task Force (IETF)[80]\nStandards published by the International Organization for Standardization (ISO)[81]\nStandards published by Ecma International (formerly ECMA)[82]\nThe Unicode Standard and various Unicode Technical Reports (UTRs) published by the Unicode Consortium[83]\nName and number registries maintained by the Internet Assigned Numbers Authority (IANA)[84]\nWeb standards are not fixed sets of rules but are constantly evolving sets of finalized technical specifications of web technologies.[85] Web standards are developed by standards organizations—groups of interested and often competing parties chartered with the task of standardization—not technologies developed and declared to be a standard by a single individual or company. It is crucial to distinguish those specifications that are under development from the ones that already reached the final development status (in the case of W3C specifications, the highest maturity level).\n\nAccessibility\nMain article: Web accessibility\nThere are methods for accessing the Web in alternative mediums and formats to facilitate use by individuals with disabilities. These disabilities may be visual, auditory, physical, speech-related, cognitive, neurological, or some combination. Accessibility features also help people with temporary disabilities, like a broken arm, or ageing users as their abilities change.[86] The Web receives information as well as providing information and interacting with society. The World Wide Web Consortium claims that it is essential that the Web be accessible, so it can provide equal access and equal opportunity to people with disabilities.[87] Tim Berners-Lee once noted, \"The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.\"[86] Many countries regulate web accessibility as a requirement for websites.[88] International co-operation in the W3C Web Accessibility Initiative led to simple guidelines that web content authors as well as software developers can use to make the Web accessible to persons who may or may not be using assistive technology.[86][89]\n\nInternationalisation\nThe W3C Internationalisation Activity assures that web technology works in all languages, scripts, and cultures.[90] Beginning in 2004 or 2005, Unicode gained ground and eventually in December 2007 surpassed both ASCII and Western European as the Web's most frequently used character encoding.[91] Originally .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}RFC 3986 allowed resources to be identified by URI in a subset of US-ASCII. RFC 3987 allows more characters—any character in the Universal Character Set—and now a resource can be identified by IRI in any language.[92]\n\nSee also\n.mw-parser-output .portalbox{padding:0;margin:0.5em 0;display:table;box-sizing:border-box;max-width:175px;list-style:none}.mw-parser-output .portalborder{border:solid #aaa 1px;padding:0.1em;background:#f9f9f9}.mw-parser-output .portalbox-entry{display:table-row;font-size:85%;line-height:110%;height:1.9em;font-style:italic;font-weight:bold}.mw-parser-output .portalbox-image{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox-link{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}@media(min-width:720px){.mw-parser-output .portalleft{clear:left;float:left;margin:0.5em 1em 0.5em 0}.mw-parser-output .portalright{clear:right;float:right;margin:0.5em 0 0.5em 1em}}\nEngineering portalInternet portalWorld portal\n.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}\nElectronic publishing\nInternet metaphors\nInternet security\nLists of websites\nStreaming media\nWeb development tools\nWeb literacy\n\nReferences\n.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Retrieved 16 July 2015.\n\n^ Bleigh, Michael (16 May 2014). \"The Once And Future Web Platform\". TechCrunch. Retrieved 9 March 2022.\n\n^ \"World Wide Web Timeline\". Pews Research Center. 11 March 2014. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways The Web Has Changed Us\". The Washington Post. Retrieved 1 August 2015.\n\n^ \"Website Analytics Tool\". Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". W3C Help and FAQ. W3C. 2009. Archived from the original on 9 July 2015. Retrieved 16 July 2015.\n\n^ Jump up to: a b Berners-Lee, Tim. \"Information Management: A Proposal\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ Berners-Lee, T.; Cailliau, R.; Groff, J.-F.; Pollermann, B. (1992). \"World-Wide Web: The Information Universe\". Electron. Netw. Res. Appl. Policy. 2: 52–58. doi:10.1108/eb047254.\n\n^ Quittner, Joshua (29 March 1999). \"Network Designer Tim Berners-Lee\". Time Magazine. Archived from the original on 15 August 2007. Retrieved 17 May 2010. He wove the World Wide Web and created a mass medium for the 21st century. The World Wide Web is Berners-Lee's alone. He designed it. He set it loose it on the world. And he more than anyone else has fought to keep it an open, non-proprietary and free.[page needed]\n\n^ McPherson, Stephanie Sammartino (2009). Tim Berners-Lee: Inventor of the World Wide Web. Twenty-First Century Books. ISBN 978-0-8225-7273-2.\n\n^ W3 (1991) Re: Qualifiers on Hypertext links\n\n^ Hopgood, Bob. \"History of the Web\". w3.org. The World Wide Web Consortium. Retrieved 12 February 2022.\n\n^ \"A short history of the Web\". CERN. Retrieved 15 April 2022.\n\n^ \"Software release of WWW into public domain\". CERN Document Server. CERN. Retrieved 17 February 2022.\n\n^ \"Ten Years Public Domain for the Original Web Software\". Tenyears-www.web.cern.ch. 30 April 2003. Archived from the original on 13 August 2009. Retrieved 27 July 2009.\n\n^ Calore, Michael (22 April 2010). \"April 22, 1993: Mosaic Browser Lights Up Web With Color, Creativity\". Wired. Retrieved 12 February 2022.\n\n^ Couldry, Nick (2012). Media, Society, World: Social Theory and Digital Media Practice. London: Polity Press. p. 2. ISBN 9780745639208.\n\n^ Hoffman, Jay (21 April 1993). \"The Origin of the IMG Tag\". The History of the Web. Retrieved 13 February 2022.\n\n^ Clarke, Roger. \"The Birth of Web Commerce\". Roger Clarke's Web-Site. XAMAX. Retrieved 15 February 2022.\n\n^ McCullough, Brian. \"20 YEARS ON: WHY NETSCAPE'S IPO WAS THE \"BIG BANG\" OF THE INTERNET ERA\". www.internethistorypodcast.com. INTERNET HISTORY PODCAST. Retrieved 12 February 2022.\n\n^ Calore, Michael (28 September 2009). \"Sept. 28, 1998: Internet Explorer Leaves Netscape in Its Wake\". Wired. Retrieved 14 February 2022.\n\n^ Daly, Janet (26 January 2000). \"World Wide Web Consortium Issues XHTML 1.0 as a Recommendation\". W3C. Retrieved 8 March 2022.\n\n^ Hickson, Ian. \"WHAT open mailing list announcement\". whatwg.org. WHATWG. Retrieved 16 February 2022.\n\n^ Shankland, Stephen (9 July 2009). \"An epitaph for the Web standard, XHTML 2\". CNet. Retrieved 17 February 2022.\n\n^ \"Memorandum of Understanding Between W3C and WHATWG\". w3.org. W3C. Retrieved 16 February 2022.\n\n^ In, Lee (30 June 2012). Electronic Commerce Management for Business Activities and Global Enterprises: Competitive Advantages: Competitive Advantages. IGI Global. ISBN 978-1-4666-1801-5.\n\n^ Misiroglu, Gina (26 March 2015). American Countercultures: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History: An Encyclopedia of Nonconformists, Alternative Lifestyles, and Radical Ideas in U.S. History. Routledge. ISBN 978-1-317-47729-7.\n\n^ \"World Wide Web Timeline\". Pew Research Center. 11 March 2014. Archived from the original on 29 July 2015. Retrieved 1 August 2015.\n\n^ Dewey, Caitlin (12 March 2014). \"36 Ways the Web Has Changed Us\". The Washington Post. Archived from the original on 9 September 2015. Retrieved 1 August 2015.\n\n^ \"Internet Live Stats\". Archived from the original on 2 July 2015. Retrieved 1 August 2015.\n\n^ \"What is the difference between the Web and the Internet?\". World Wide Web Consortium. Archived from the original on 22 April 2016. Retrieved 18 April 2016.\n\n^ Muylle, Steve; Moenaert, Rudy; Despont, Marc (1999). \"A grounded theory of World Wide Web search behaviour\". Journal of Marketing Communications. 5 (3): 143. doi:10.1080/135272699345644.\n\n^ Flanagan, David. JavaScript – The definitive guide (6 ed.). p. 1. JavaScript is part of the triad of technologies that all Web developers must learn: HTML to specify the content of web pages, CSS to specify the presentation of web pages, and JavaScript to specify the behaviour of web pages.\n\n^ \"HTML 4.0 Specification – W3C Recommendation – Conformance: requirements and recommendations\". World Wide Web Consortium. 18 December 1997. Retrieved 6 July 2015.\n\n^ Berners-Lee, Tim; Cailliau, Robert (12 November 1990). \"WorldWideWeb: Proposal for a HyperText Project\". Archived from the original on 2 May 2015. Retrieved 12 May 2015.\n\n^ Berners-Lee, Tim. \"Frequently asked questions by the Press\". W3C. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Palazzi, P (2011). \"The Early Days of the WWW at CERN\". Archived from the original on 23 July 2012.\n\n^ Fraser, Dominic (13 May 2018). \"Why a domain's root can't be a CNAME – and other tidbits about the DNS\". FreeCodeCamp.\n\n^ \"automatically adding www.___.com\". mozillaZine. 16 May 2003. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ Masnick, Mike (7 July 2008). \"Microsoft Patents Adding 'www.' And '.com' To Text\". Techdirt. Archived from the original on 27 June 2009. Retrieved 27 May 2009.\n\n^ \"Audible pronunciation of 'WWW'\". Oxford University Press. Archived from the original on 25 May 2014. Retrieved 25 May 2014.\n\n^ Harvey, Charlie. \"How we pronounce WWW in English: a detailed but unscientific survey\". charlieharvey.org.uk. Retrieved 19 May 2022.\n\n^ \"Stephen Fry's pronunciation of 'WWW'\". Podcasts.com. Archived from the original on 4 April 2017.\n\n^ Simonite, Tom (22 July 2008). \"Help us find a better way to pronounce www\". newscientist.com. New Scientist, Technology. Archived from the original on 13 March 2016. Retrieved 7 February 2016.\n\n^ \"MDBG Chinese-English dictionary – Translate\". Archived from the original on 12 November 2008. Retrieved 27 July 2009.\n\n^ \"Frequently asked questions by the Press – Tim BL\". W3.org. Archived from the original on 2 August 2009. Retrieved 27 July 2009.\n\n^ Castelluccio, Michael (2010). \"It's not your grandfather's Internet\". thefreelibrary.com. Institute of Management Accountants. Retrieved 7 February 2016.\n\n^ Jump up to: a b Hamilton, Naomi (31 July 2008). \"The A-Z of Programming Languages: JavaScript\". Computerworld. IDG. Archived from the original on 24 May 2009. Retrieved 12 May 2009.\n\n^ Buntin, Seth (23 September 2008). \"jQuery Polling plugin\". Archived from the original on 13 August 2009. Retrieved 22 August 2009.\n\n^ \"website\". TheFreeDictionary.com. Retrieved 2 July 2011.\n\n^ Patrick, Killelea (2002). Web performance tuning (2nd ed.). Beijing: O'Reilly. p. 264. ISBN 978-0596001728. OCLC 49502686.\n\n^ Vamosi, Robert (14 April 2008). \"Gmail cookie stolen via Google Spreadsheets\". News.cnet.com. Archived from the original on 9 December 2013. Retrieved 19 October 2017.\n\n^ \"What about the \"EU Cookie Directive\"?\". WebCookies.org. 2013. Archived from the original on 11 October 2017. Retrieved 19 October 2017.\n\n^ \"New net rules set to make cookies crumble\". BBC. 8 March 2011.\n\n^ \"Sen. Rockefeller: Get Ready for a Real Do-Not-Track Bill for Online Advertising\". Adage.com. 6 May 2011.\n\n^ Want to use my wifi?, Jann Horn accessed 5 January 2018.\n\n^ Hamilton, Nigel. \"The Mechanics of a Deep Net Metasearch Engine\". CiteSeerX 10.1.1.90.5847. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ Devine, Jane; Egger-Sider, Francine (July 2004). \"Beyond google: the invisible web in the academic library\". The Journal of Academic Librarianship. 30 (4): 265–269. doi:10.1016/j.acalib.2004.04.010.\n\n^ Raghavan, Sriram; Garcia-Molina, Hector (11–14 September 2001). \"Crawling the Hidden Web\". 27th International Conference on Very Large Data Bases.\n\n^ \"Surface Web\". Computer Hope. Retrieved 20 June 2018.\n\n^ Wright, Alex (22 February 2009). \"Exploring a 'Deep Web' That Google Can't Grasp\". The New York Times. Retrieved 23 February 2009.\n\n^ Madhavan, J., Ko, D., Kot, Ł., Ganapathy, V., Rasmussen, A., & Halevy, A. (2008). Google's deep web crawl. Proceedings of the VLDB Endowment, 1(2), 1241–52.\n\n^ Shedden, Sam (8 June 2014). \"How Do You Want Me to Do It? Does It Have to Look like an Accident? – an Assassin Selling a Hit on the Net; Revealed Inside the Deep Web\". Sunday Mail. Archived from the original on 1 March 2020. Retrieved 5 May 2017.\n\n^ Jump up to: a b Ben-Itzhak, Yuval (18 April 2008). \"Infosecurity 2008 – New defence strategy in battle against e-crime\". ComputerWeekly. Reed Business Information. Archived from the original on 4 June 2008. Retrieved 20 April 2008.\n\n^ Christey, Steve & Martin, Robert A. (22 May 2007). \"Vulnerability Type Distributions in CVE (version 1.1)\". MITRE Corporation. Archived from the original on 17 March 2013. Retrieved 7 June 2008.\n\n^ \"Symantec Internet Security Threat Report: Trends for July–December 2007 (Executive Summary)\" (PDF). XIII. Symantec Corp. April 2008: 1–2. Archived (PDF) from the original on 25 June 2008. Retrieved 11 May 2008. {{cite journal}}: Cite journal requires |journal= (help)\n\n^ \"Google searches web's dark side\". BBC News. 11 May 2007. Archived from the original on 7 March 2008. Retrieved 26 April 2008.\n\n^ \"Security Threat Report (Q1 2008)\" (PDF). Sophos. Archived (PDF) from the original on 31 December 2013. Retrieved 24 April 2008.\n\n^ \"Security threat report\" (PDF). Sophos. July 2008. Archived (PDF) from the original on 31 December 2013. Retrieved 24 August 2008.\n\n^ Fogie, Seth, Jeremiah Grossman, Robert Hansen, and Anton Rager (2007). Cross Site Scripting Attacks: XSS Exploits and Defense (PDF). Syngress, Elsevier Science & Technology. pp. 68–69, 127. ISBN 978-1-59749-154-9. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008.{{cite book}}:  CS1 maint: multiple names: authors list (link)\n\n^ O'Reilly, Tim (30 September 2005). \"What Is Web 2.0\". O'Reilly Media. pp. 4–5. Archived from the original on 15 April 2013. Retrieved 4 June 2008. and AJAX web applications can introduce security vulnerabilities like \"client-side security controls, increased attack surfaces, and new possibilities for Cross-Site Scripting (XSS)\", in Ritchie, Paul (March 2007). \"The security risks of AJAX/web 2.0 applications\" (PDF). Infosecurity. Archived from the original (PDF) on 25 June 2008. Retrieved 6 June 2008. which cites Hayre, Jaswinder S. & Kelath, Jayasankar (22 June 2006). \"Ajax Security Basics\". SecurityFocus. Archived from the original on 15 May 2008. Retrieved 6 June 2008.\n\n^ Berinato, Scott (1 January 2007). \"Software Vulnerability Disclosure: The Chilling Effect\". CSO. CXO Media. p. 7. Archived from the original on 18 April 2008. Retrieved 7 June 2008.\n\n^ \"2012 Global Losses From phishing Estimated At $1.5 Bn\". FirstPost. 20 February 2013. Archived from the original on 21 December 2014. Retrieved 25 January 2019.\n\n^ Prince, Brian (9 April 2008). \"McAfee Governance, Risk and Compliance Business Unit\". eWEEK. Ziff Davis Enterprise Holdings. Retrieved 25 April 2008.\n\n^ Preston, Rob (12 April 2008). \"Down To Business: It's Past Time To Elevate The Infosec Conversation\". InformationWeek. United Business Media. Archived from the original on 14 April 2008. Retrieved 25 April 2008.\n\n^ Claburn, Thomas (6 February 2007). \"RSA's Coviello Predicts Security Consolidation\". InformationWeek. United Business Media. Archived from the original on 7 February 2009. Retrieved 25 April 2008.\n\n^ Duffy Marsan, Carolyn (9 April 2008). \"How the iPhone is killing the 'Net\". Network World. IDG. Archived from the original on 14 April 2008. Retrieved 17 April 2008.\n\n^ boyd, danah; Hargittai, Eszter (July 2010). \"Facebook privacy settings: Who cares?\". First Monday. 15 (8). doi:10.5210/fm.v15i8.3086.\n\n^ \"W3C Technical Reports and Publications\". W3C. Retrieved 19 January 2009.\n\n^ \"IETF RFC page\". IETF. Archived from the original on 2 February 2009. Retrieved 19 January 2009.\n\n^ \"Search for World Wide Web in ISO standards\". ISO. Retrieved 19 January 2009.\n\n^ \"Ecma formal publications\". Ecma. Retrieved 19 January 2009.\n\n^ \"Unicode Technical Reports\". Unicode Consortium. Retrieved 19 January 2009.\n\n^ \"IANA home page\". IANA. Retrieved 19 January 2009.\n\n^ Sikos, Leslie (2011). Web standards – Mastering HTML5, CSS3, and XML. Apress. ISBN 978-1-4302-4041-9. Archived from the original on 2 April 2015. Retrieved 12 March 2019.\n\n^ Jump up to: a b c \"Web Accessibility Initiative (WAI)\". World Wide Web Consortium. Archived from the original on 2 April 2009. Retrieved 7 April 2009.\n\n^ \"Developing a Web Accessibility Business Case for Your Organization: Overview\". World Wide Web Consortium. Archived from the original on 14 April 2009. Retrieved 7 April 2009.\n\n^ \"Legal and Policy Factors in Developing a Web Accessibility Business Case for Your Organization\". World Wide Web Consortium. Archived from the original on 5 April 2009. Retrieved 7 April 2009.\n\n^ \"Web Content Accessibility Guidelines (WCAG) Overview\". World Wide Web Consortium. Archived from the original on 1 April 2009. Retrieved 7 April 2009.\n\n^ \"Internationalization (I18n) Activity\". World Wide Web Consortium. Archived from the original on 16 April 2009. Retrieved 10 April 2009.\n\n^ Davis, Mark (5 April 2008). \"Moving to Unicode 5.1\". Archived from the original on 21 May 2009. Retrieved 10 April 2009.\n\n^ \"World Wide Web Consortium Supports the IETF URI Standard and IRI Proposed Standard\" (Press release). World Wide Web Consortium. 26 January 2005. Archived from the original on 7 February 2009. Retrieved 10 April 2009.\n\n\nFurther reading\nBerners-Lee, Tim; Bray, Tim; Connolly, Dan; Cotton, Paul; Fielding, Roy; Jeckle, Mario; Lilley, Chris; Mendelsohn, Noah; Orchard, David; Walsh, Norman; Williams, Stuart (15 December 2004). \"Architecture of the World Wide Web, Volume One\". Version 20041215. W3C. {{cite journal}}: Cite journal requires |journal= (help)\nBerners-Lee, Tim (August 1996). \"The World Wide Web: Past, Present and Future\". {{cite journal}}: Cite journal requires |journal= (help)\nBrügger, Niels, ed, Web25: Histories from the first 25 years of the World Wide Web (Peter Lang, 2017).\nFielding, R.; Gettys, J.; Mogul, J.; Frystyk, H.; Masinter, L.; Leach, P.; Berners-Lee, T. (June 1999). \"Hypertext Transfer Protocol – HTTP/1.1\". Request For Comments 2616. Information Sciences Institute. {{cite journal}}: Cite journal requires |journal= (help)\nNiels Brügger, ed. Web History (2010) 362 pages; Historical perspective on the World Wide Web, including issues of culture, content, and preservation.\nPolo, Luciano (2003). \"World Wide Web Technology Architecture: A Conceptual Analysis\". New Devices.\nSkau, H.O. (March 1990). \"The World Wide Web and Health Information\". New Devices.\nExternal links\n.mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:#f9f9f9;display:flow-root}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1}}@media(min-width:720px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}}.mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0}\n\n\nWikimedia Commons has media related to World Wide Web.\n\n\n\n\nWikibooks has a book on the topic of: Nets, Webs and the Information Infrastructure\n\nThe first website\nEarly archive of the first Web site\nInternet Statistics: Growth and Usage of the Web and the Internet\nLiving Internet A comprehensive history of the Internet, including the World Wide Web\nWeb Design and Development at Curlie\nWorld Wide Web Consortium (W3C)\nW3C Recommendations Reduce \"World Wide Wait\"\nWorld Wide Web Size Daily estimated size of the World Wide Web\nAntonio A. Casilli, Some Elements for a Sociology of Online Interactions\nThe Erdős Webgraph Server Archived 1 March 2021 at the Wayback Machine offers weekly updated graph representation of a constantly increasing fraction of the WWW\nThe 25th Anniversary of the World Wide Web Archived 11 July 2021 at the Wayback Machine is an animated video produced by USAID and TechChange which explores the role of the WWW in addressing extreme poverty\n.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" · \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"}.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteTelecommunicationsHistory\nBeacon\nBroadcasting\nCable protection system\nCable TV\nCommunications satellite\nComputer network\nData compression\naudio\nDCT\nimage\nvideo\nDigital media\nInternet video\nonline video platform\nsocial media\nstreaming\nDrums\nEdholm's law\nElectrical telegraph\nFax\nHeliographs\nHydraulic telegraph\nInformation Age\nInformation revolution\nInternet\nMass media\nMobile phone\nSmartphone\nOptical telecommunication\nOptical telegraphy\nPager\nPhotophone\nPrepaid mobile phone\nRadio\nRadiotelephone\nSatellite communications\nSemaphore\nSemiconductor\ndevice\nMOSFET\ntransistor\nSmoke signals\nTelecommunications history\nTelautograph\nTelegraphy\nTeleprinter (teletype)\nTelephone\nThe Telephone Cases\nTelevision\ndigital\nstreaming\nUndersea telegraph line\nVideotelephony\nWhistled language\nWireless revolution\nPioneers\nNasir Ahmed\nEdwin Howard Armstrong\nMohamed M. Atalla\nJohn Logie Baird\nPaul Baran\nJohn Bardeen\nAlexander Graham Bell\nEmile Berliner\nTim Berners-Lee\nFrancis Blake (telephone)\nJagadish Chandra Bose\nCharles Bourseul\nWalter Houser Brattain\nVint Cerf\nClaude Chappe\nYogen Dalal\nDaniel Davis Jr.\nDonald Davies\nAmos Dolbear\nThomas Edison\nLee de Forest\nPhilo Farnsworth\nReginald Fessenden\nElisha Gray\nOliver Heaviside\nRobert Hooke\nErna Schneider Hoover\nHarold Hopkins\nGardiner Greene Hubbard\nInternet pioneers\nBob Kahn\nDawon Kahng\nCharles K. Kao\nNarinder Singh Kapany\nHedy Lamarr\nInnocenzo Manzetti\nGuglielmo Marconi\nRobert Metcalfe\nAntonio Meucci\nSamuel Morse\nJun-ichi Nishizawa\nCharles Grafton Page\nRadia Perlman\nAlexander Stepanovich Popov\nTivadar Puskás\nJohann Philipp Reis\nClaude Shannon\nAlmon Brown Strowger\nHenry Sutton\nCharles Sumner Tainter\nNikola Tesla\nCamille Tissot\nAlfred Vail\nThomas A. Watson\nCharles Wheatstone\nVladimir K. Zworykin\nTransmissionmedia\nCoaxial cable\nFiber-optic communication\noptical fiber\nFree-space optical communication\nMolecular communication\nRadio waves\nwireless\nTransmission line\ndata transmission circuit\ntelecommunication circuit\nNetwork topologyand switching\nBandwidth\nLinks\nNodes\nterminal\nNetwork switching\ncircuit\npacket\nTelephone exchange\nMultiplexing\nSpace-division\nFrequency-division\nTime-division\nPolarization-division\nOrbital angular-momentum\nCode-division\nConcepts\nCommunication protocol\nComputer network\nData transmission\nStore and forward\nTelecommunications equipment\nTypes of network\nCellular network\nEthernet\nISDN\nLAN\nMobile\nNGN\nPublic Switched Telephone\nRadio\nTelevision\nTelex\nUUCP\nWAN\nWireless network\nNotable networks\nARPANET\nBITNET\nCYCLADES\nFidoNet\nInternet\nInternet2\nJANET\nNPL network\nToasternet\nUsenet\nLocations\nAfrica\nAmericas\nNorth\nSouth\nAntarctica\nAsia\nEurope\nOceania\n(Global telecommunications regulation bodies)\n\n Telecommunication portal\n Category\n Outline\n Commons\n\nshowvteWeb syndication\nHistory\nBlogging\nPodcasting\nVlogging\nWeb syndication technology\nTypes\nArt\nBloggernacle\nClassical music\nCorporate\nDream diary\nEdublog\nElectronic journal\nFake\nFamily\nFashion\nFood\nHealth\nLaw\nLifelog\nLitblog\nMP3\nNews\nPhotoblog\nPolice\nPolitical\nProject\nReverse\nTravel\nWarblog\nTechnologyGeneral\nBitTorrent\nFeed URI scheme\nFeatures\nLinkback\nPermalink\nPing\nPingback\nReblogging\nRefback\nRollback\nTrackback\nMechanism\nConversation threading\nGeotagging\nRSS enclosure\nSynchronization\nMemetics\nAtom feed\nData feed\nPhotofeed\nProduct feed\nRDF feed\nWeb feed\nRSS\nGeoRSS\nMRSS\nRSS TV\nSocial\nInter-process communication\nLivemark\nMashup\nReferencing\nRSS editor\nRSS tracking\nStreaming media\nStandard\nOML\nOPML\nRSS Advisory Board\nUsenet\nWorld Wide Web\nXBEL\nXOXO\nForm\nAudio podcast\nEnhanced podcast\nMobilecast\nNarrowcasting\nPeercasting\nScreencast\nSlidecasting\nVideocast\nWebcomic\nWebtoon\nWeb series\n\nAnonymous blogging\nCollaborative blog\nColumnist\nInstant messaging\nLiveblogging\nMicroblog\nMobile blogging\nRoblog\nSpam blog\nVideo blogging\nMotovlogging\nMediaAlternative media\nCarnivals\nFiction\nJournalism\nCitizen\nDatabase\nOnline diary\nSearch engines\nSideblog\nSoftware\nWeb directory\nMicromedia\nAggregation\nNews\nPoll\nReview\nSearch\nVideo\nAtom\nAtomPub\nBroadcatching\nHashtag\nNewsML\n1\nG2\nSocial communication\nSocial software\nWeb Slice\nRelated\nBlogosphere\nEscribitionist\nGlossary of blogging\nPay per click\nPosting style\nSlashdot effect\nSpam in blogs\nUses of podcasting\n\nshowvteSemantic WebBackground\nDatabases\nHypertext\nInternet\nOntologies\nSemantics\nSemantic networks\nWorld Wide Web\nSub-topics\nDataspaces\nHyperdata\nLinked data\nRule-based systems\nApplications\nSemantic analytics\nSemantic broker\nSemantic computing\nSemantic mapper\nSemantic matching\nSemantic publishing\nSemantic reasoner\nSemantic search\nSemantic service-oriented architecture\nSemantic wiki\nSolid\nRelated topics\nCollective intelligence\nDescription logic\nFolksonomy\nGeotagging\nInformation architecture\nKnowledge extraction\nKnowledge management\nKnowledge representation and reasoning\nLibrary 2.0\nDigital library\nDigital humanities\nMetadata\nReferences\nTopic map\nWeb 2.0\nWeb engineering\nWeb Science Trust\nStandardsSyntax and supporting technologies\nHTTP\nIRI\nURI\nRDF\ntriples\nRDF/XML\nJSON-LD\nTurtle\nTriG\nNotation3\nN-Triples\nTriX (no W3C standard)\nRRID\nSPARQL\nXML\nSemantic HTML\nSchemas, ontologies and rules\nCommon Logic\nOWL\nRDFS\nRule Interchange Format\nSemantic Web Rule Language\nALPS\nSHACL\nSemantic annotation\neRDF\nGRDDL\nMicrodata\nMicroformats\nRDFa\nSAWSDL\nFacebook Platform\nCommon vocabularies\nDOAP\nDublin Core\nFOAF\nSchema.org\nSIOC\nSKOS\nMicroformat vocabularies\nhAtom\nhCalendar\nhCard\nhProduct\nhRecipe\nhReview\n\n.mw-parser-output .tooltip-dotted{border-bottom:1px dotted;cursor:help}showAuthority control National libraries\nSpain\nFrance\nBnF data\nGermany\nIsrael\nUnited States\nLatvia\nCzech Republic\nOther\nFAST\nNARA\n\n\n\n\n\n<img src=\"//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1\" alt=\"\" title=\"\" width=\"1\" height=\"1\" style=\"border: none; position: absolute;\" />\nRetrieved from \"https://en.wikipedia.org/w/index.php?title=World_Wide_Web&oldid=1137206274\"\n\t\t\t\t\tCategories: World Wide WebComputer-related introductions in 1989English inventionsBritish inventionsHuman–computer interactionInformation AgeCERNTim Berners-LeeWeb technology20th-century inventionsHidden categories: Wikipedia articles needing page number citations from September 2016CS1 errors: missing periodicalCS1 maint: multiple names: authors listArticles with short descriptionShort description is different from WikidataWikipedia semi-protected pagesWikipedia indefinitely move-protected pagesEngvarB from February 2020Use dmy dates from October 2022Articles containing potentially dated statements from 1997All articles containing potentially dated statementsAll articles lacking reliable referencesArticles lacking reliable references from August 2022All accuracy disputesArticles with disputed statements from July 2019Articles lacking reliable references from November 2016Articles containing Chinese-language textArticles lacking reliable references from April 2018All articles with unsourced statementsArticles with unsourced statements from March 2021Commons category link is on WikidataArticles with Curlie linksWebarchive template wayback linksArticles with BNE identifiersArticles with BNF identifiersArticles with GND identifiersArticles with J9U identifiersArticles with LCCN identifiersArticles with LNB identifiersArticles with NKC identifiersArticles with FAST identifiersArticles with NARA identifiers\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t"

        }

    ],

    url: "https://en.wikipedia.org/wiki/World_Wide_Web"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640ad26e8d65a900bf805a56"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "HomeFavoritesElectronicsExpand: ElectronicsMost popular categoriesSmartphones and accessoriesVideo games and consolesComputers and tabletsCameras and photosCamera dronesRefurbishedSmart homeMore categoriesAppleSamsungPortable audio and headphonesEmerging brandsSmart watchesDealsSell on eBay\n\n\n\n\n\n\n\n\n\nMotorsExpand: MotorsCarAuto and truck partsTools and suppliesTurbo chargersClothing and merchandiseShock absorbersElectronic and GPSAir intakeVintage piecesMotorcycle and moreMotorcycle partsBody and frameEngines and partsAccessoriesExhausts and systemsRimsDealsSell on eBay\n\n\n\n\n\n\n\n\n\nFashionExpand: FashionMost popular categoriesFootwearWomen's clothingFootwear for womenMen's clothingMen's footwearWatchesJewelryMore categoriesAccessories for menAccessories for womenBags and wallets for womenMens sunglassesWomens sunglasessSneakersDealsSell on eBay\n\n\n\n\n\n\n\n\n\nCollectibles and ArtExpand: Collectibles and ArtMost popular categoriesCollectiblesArtAction figuresCartoon charactersMovie and TV charactersDiecastMusical memorabiliaMore categoriesSports memorabiliaTrading card gamesAntiquesComicsFunko popStar WarsDealsSell on eBay\n\n\n\n\n\n\n\n\n\nSportsExpand: SportsMost popular categoriesCyclingFitness, running and yogaFitness TechFishingCampingScootersTeam sportsMore categoriesWatersportsWinter sportsBox and MMASwimmingGPS & Running WatchesGarminDealsSell on eBay\n\n\n\n\n\n\n\n\n\nHealth & BeautyExpand: Health & BeautyMost popular categoriesBeautyMakeupHealthK-BeautyManicure and pedicureHair productsSkin productsOrthopedic productsMore categoriesVitamins and food supplementsShaving and waxingBath and personal hygieneOral hygieneMassagersDealsSell on eBay\n\n\n\n\n\n\n\n\n\nIndustrial equipmentExpand: Industrial equipmentMost popular categoriesDental healthcareElectronic equipment and suppliesMetallurgy and manufacturingMotors and industrial automationHeavy equipment partsLight industrial toolsInspection, measurement and testing equipmentMore categoriesPacking and shippingOffice supplies and equipmentPrinting and graphic artsRestaurants and food serviceMaintenance and safetyRetail and servicesDealsSell on eBay\n\n\n\n\n\n\n\n\n\nHome & GardenExpand: Home & GardenMost popular categoriesWorkshop Tools and EquipmentPatio, garden and outdoorsHome improvementKitchen, dining and barLamps, lights and fansInterior decorationHome organizationHome appliancesMore categoriesToysPetsCraftsArt suppliesMusical instrumentsJewelry and beadsDealsSell on eBay\n\n\n\n\n\n\n\n\n\nDealsSellExpand: SellHow to create a listingJoin our growth programSeller centerSeller updatesSeller customer serviceeBay managed paymentsLearn to selleBay storeseBay feesSelling limits\n\n\n\n\n\n\n\n\n\nMore Expand: MoreElectronicsMotorsFashionCollectibles and ArtSportsHealth & BeautyIndustrial equipmentHome & GardenDealsSell(window.$ebay||($ebay = {})).tracking={pageId:'2380057',pageName:'Highline_Homepage'} <div class=\"hl-image hl-full-bleed-banner__image\" style=\"background-image: url('https://i.ebayimg.com/images/g/xN4AAOSw-sZj-IK6/s-l1600.webp')\"><img src=https://i.ebayimg.com/images/g/xN4AAOSw-sZj-IK6/s-l1600.webp alt role=presentation></div>Featured Women SellersInternational Women's DayShop now Shop now <div class=\"hl-image hl-full-bleed-banner__image\" style=\"background-image: url('https://i.ebayimg.com/images/g/eBQAAOSw3m5j-dgN/s-l1600.webp')\"><img src=https://i.ebayimg.com/images/g/eBQAAOSw3m5j-dgN/s-l1600.webp alt role=presentation></div>Save when you shop refurbishedReliable brands, excellent quality, great prices.Buy it now Buy it now These Deals Won’t Stick AroundSave on headphonesBuy it now Buy it now - <div class=\"hl-image hl-multi-cta-banner__image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/3nUAAOSw4yti83jq/s-l400.webp alt=apple></div><div class=\"hl-image hl-multi-cta-banner__image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/LdgAAOSw4dFi83j2/s-l400.webp alt=Beats></div><div class=\"hl-image hl-multi-cta-banner__image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/6zIAAOSwKMBi83kH/s-l400.webp alt=sony></div>Popular CategoriesSee allPopular Categories<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/A9sAAOSw4bJjBe-V/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/A9sAAOSw4bJjBe-V/s-l200.webp alt></div>Daily Deals<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/bbUAAOSw3JhjBe-V/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/bbUAAOSw3JhjBe-V/s-l200.webp alt></div>Auto Parts & Accessories<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/FuoAAOSwNaRjBe-T/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/FuoAAOSwNaRjBe-T/s-l200.webp alt></div>eBay Refurbished<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/tOsAAOSwgn1jBe-V/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/tOsAAOSwgn1jBe-V/s-l200.webp alt></div>Tech<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/yfMAAOSwN~5jBe-U/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/yfMAAOSwN~5jBe-U/s-l200.webp alt></div>Fashion<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/0q0AAOSwSl9jBe-U/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/0q0AAOSwSl9jBe-U/s-l200.webp alt></div>Help & Contact<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/tOQAAOSwsfhg0rW8/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/tOQAAOSwsfhg0rW8/s-l200.webp alt></div>Seller Center<div class=\"hl-image hl-loyalty__icon-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/hSMAAOSw9Ftj2KBp/s-l96.webp')\"><img src=https://i.ebayimg.com/images/g/hSMAAOSw9Ftj2KBp/s-l96.webp alt></div>Up to 40% OFF. Kick off the year with new tech!Everything you need to help you succeed.Let's go Let's go Daily DealsSee all<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/v5gAAOSwcDJj2lMI/s-l225.webp alt=\"Jordan Men's T-Shirt Jumpman Short Sleeve Crew Athletic Active Basketball Tee\"></div>HKD 163.91<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/nAIAAOSwsBtaDeZL/s-l225.webp alt=\"Garmin Forerunner 35 Black GPS Sport Watch Wrist Based HR 010-01689-00\"></div>HKD 784.91Previous Price:HKD 1,569.90·50% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/-c4AAOSwCWRgSjq9/s-l225.webp alt=\"Jaeger Sports J-Bands Baseball Pitching Resistance Training Bands - Adult\"></div>HKD 243.27Previous Price:HKD 274.35·11% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/QS0AAOSwpUtgv9Pl/s-l225.webp alt=\"Stainless Steel Mixing Bowls 14 Piece Bowl Set with Measuring Cups and Spoons\"></div>HKD 211.87Previous Price:HKD 706.41·70% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/mr0AAOSw82BjmMqS/s-l225.webp alt=\"Xbox Series S 512GB SSD Console + Watch Dogs: Legion (Email Delivery)\"></div>HKD 1,907.45Previous Price:HKD 2,433.39·22% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/I0IAAOSwATNeabZk/s-l225.webp alt=\"USB-C to USB-C Cable Male Type-C Cable Cord Fast Charger Charging Data Sync\"></div>HKD 40.35<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/XCMAAOSw2QVfMxTg/s-l225.webp alt=\"Leather Wallets For Women - Trifold Womens Wallet With Coin Purse RFID Blocking\"></div>HKD 235.42<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/ljcAAOSwYORfMxQ3/s-l225.webp alt=\"Leather Trifold Wallet For Women With Removable Checkbook Holder RFID Blocking\"></div>HKD 274.67<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/kx0AAOSwPpRienPW/s-l225.webp alt=\"Contigo 20 oz. West Loop 2.0 AutoSeal Insulated Stainless Steel Travel Mug\"></div>HKD 268.39<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/MmcAAOSwT~NeJu0r/s-l225.webp alt=\"DICTOPRO X100 Digital Voice Activated Recorder Portable Mini Tape Dictaphone 8GB\"></div>HKD 345.16Previous Price:HKD 439.36·21% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/QDoAAOSwiepjXCoF/s-l225.webp alt=\"Apple Watch Series 7 45mm GPS + WiFi + Bluetooth Aluminum Case - Very Good\"></div>HKD 1,883.90<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/G4MAAOSwlINhP655/s-l225.webp alt=\"Lucky Bums Toddler Kids Beginner Plastic Snow Skis w/ Adjustable Bindings, Green\"></div>HKD 431.67Previous Price:HKD 1,098.91·61% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/d2kAAOSwLGxj9M-1/s-l225.webp alt=\"Champion Men's CU515503 Sport 65mm Matte Tortoise Sunglasses\"></div>HKD 196.17Previous Price:HKD 549.10·64% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/UAAAAOSwzhhjvcsh/s-l225.webp alt=\"Park Hotel Collection ESSENTIALS 3PC Sheet Set Cotton Rich Percale 225TC\"></div>HKD 156.92<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/2a0AAOSwmRVjNxUh/s-l225.webp alt=\"Amour Sterling Silver Black Diamond Accent Heart Locket Necklace\"></div>HKD 590.31Previous Price:HKD 1,569.98·62% OFF超級新星- Carousel精選陸克萊運動卡Shop Now Shop Now - Shop Now<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/DgwAAOSwVWVicsle/s-l225.webp alt=\"Charles Leclerc / Carlos Sainz 2022 Topps Formula 1 F1 NEON UV Bobzilla Auto 1/1\"></div>HKD 998.51Previous Price:HKD 1,248.14·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/CToAAOSwah1iq9Hu/s-l225.webp alt=\"🏁2021 Topps Chrome F1 CHARLES LECLERC B/W RAYWAVE REFRACT SGC 9 MT 🇲🇨\"></div>HKD 307.72Previous Price:HKD 384.65·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/UPwAAOSwqoFiZK4K/s-l225.webp alt=\"🏁2020 TOPPS CHROME SAPPHIRE 177 Charles Leclerc - Scuderia Ferrari SGC 9 🇲🇨\"></div>HKD 364.24Previous Price:HKD 455.29·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/FR0AAOSwqNpi02fV/s-l225.webp alt=\"🏁2020 PSA 10 Chrome F1 Scuderia Sapphire Edition Ferrari Team Logo G-MT🇮🇹\"></div>HKD 2,197.97Previous Price:HKD 2,747.47·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/rroAAOSwtCFi2IhK/s-l225.webp alt=\"2020 PSA 9  Chrome Formula 1 F1 Racing Refractor #113 Scuderia Ferrari MINT\"></div>HKD 1,877.70Previous Price:HKD 2,347.12·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/8pcAAOSw7aBjPKc9/s-l225.webp alt=\"🏁2020 Topps Chrome Formula 1 CHARLES LECLERC 1954 World On Wheels #3 PSA 9🇲🇨\"></div>HKD 376.48Previous Price:HKD 470.60·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/UKgAAOSwl~xkCkV6/s-l225.webp alt=\"Charles Leclerc Topps Chrome Formula 1 Sapphire 70th Anniversary Refractor Card\"></div>HKD 78.50<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/aG4AAOSwcvpju2A3/s-l225.webp alt=\"2021 TOPPS CHROME F1 FORMULA 1 CHARLES LECLERC PURPLE REFRACTOR FERRARI 11 PSA 9\"></div>HKD 196.25古董錢幣- Carousel發掘稀有珍貴款Shop Now Shop Now - Shop Now<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/1NoAAOSwcl1jwxay/s-l225.webp alt=\"1926 China Republic Dragon & Phoenix 10 Cents PCGS XF 40\"></div>HKD 11,774.86<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/PSsAAOSwobVjcH6I/s-l225.webp alt=\"1926 China Republic Dragon & Phoenix 10 Cents PCGS AU Details\"></div>HKD 9,412.04<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/igsAAOSwDX1jNv3-/s-l225.webp alt=\"1914, China (Nationalist Republic). Large Silver &#34;Fat Man&#34; Dollar Coin. NGC AU+\"></div>HKD 2,479.94Previous Price:HKD 2,818.12·12% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/CscAAOSwE21jYc0j/s-l225.webp alt=\"CHINA Silver Dollar, FatMan, Year 10 (1921). PCGS XF Details Gold Shield\"></div>HKD 2,747.47<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/k3wAAOSwhAxkCK1C/s-l225.webp alt=\"CHINA 1934 $1 Dollar Silver Coin Junk L&M-110 Y-345 Sun Yat Sen UNCIRCULATED\"></div>HKD 3,139.57<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/qawAAOSwciJkCKkM/s-l225.webp alt=\"1927 L&M-49 $1 China Sun Yat-Sen Memento Silver Dollar 6 Pointed Stars NGC UNC.\"></div>HKD 3,532.07<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/cuwAAOSwG31kCfz1/s-l225.webp alt=\"China 1995 Platinum 1/20 Panda- Key Date\"></div>HKD 3,022.22<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/5JQAAOSww8djmM8v/s-l225.webp alt=\"Qian Ancient Bronze Chinese Cash Lot 35 Holed Coins China Asia Dynasty Indonesia\"></div>HKD 4,647.07Previous Price:HKD 5,163.44·10% OFF"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        }

    ],

    links: "https://www.ebay.com",

    name: "eaby",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "HomeFavoritesElectronicsExpand: ElectronicsMost popular categoriesSmartphones and accessoriesVideo games and consolesComputers and tabletsCameras and photosCamera dronesRefurbishedSmart homeMore categoriesAppleSamsungPortable audio and headphonesEmerging brandsSmart watchesDealsSell on eBay\n\n\n\n\n\n\n\n\n\nMotorsExpand: MotorsCarAuto and truck partsTools and suppliesTurbo chargersClothing and merchandiseShock absorbersElectronic and GPSAir intakeVintage piecesMotorcycle and moreMotorcycle partsBody and frameEngines and partsAccessoriesExhausts and systemsRimsDealsSell on eBay\n\n\n\n\n\n\n\n\n\nFashionExpand: FashionMost popular categoriesFootwearWomen's clothingFootwear for womenMen's clothingMen's footwearWatchesJewelryMore categoriesAccessories for menAccessories for womenBags and wallets for womenMens sunglassesWomens sunglasessSneakersDealsSell on eBay\n\n\n\n\n\n\n\n\n\nCollectibles and ArtExpand: Collectibles and ArtMost popular categoriesCollectiblesArtAction figuresCartoon charactersMovie and TV charactersDiecastMusical memorabiliaMore categoriesSports memorabiliaTrading card gamesAntiquesComicsFunko popStar WarsDealsSell on eBay\n\n\n\n\n\n\n\n\n\nSportsExpand: SportsMost popular categoriesCyclingFitness, running and yogaFitness TechFishingCampingScootersTeam sportsMore categoriesWatersportsWinter sportsBox and MMASwimmingGPS & Running WatchesGarminDealsSell on eBay\n\n\n\n\n\n\n\n\n\nHealth & BeautyExpand: Health & BeautyMost popular categoriesBeautyMakeupHealthK-BeautyManicure and pedicureHair productsSkin productsOrthopedic productsMore categoriesVitamins and food supplementsShaving and waxingBath and personal hygieneOral hygieneMassagersDealsSell on eBay\n\n\n\n\n\n\n\n\n\nIndustrial equipmentExpand: Industrial equipmentMost popular categoriesDental healthcareElectronic equipment and suppliesMetallurgy and manufacturingMotors and industrial automationHeavy equipment partsLight industrial toolsInspection, measurement and testing equipmentMore categoriesPacking and shippingOffice supplies and equipmentPrinting and graphic artsRestaurants and food serviceMaintenance and safetyRetail and servicesDealsSell on eBay\n\n\n\n\n\n\n\n\n\nHome & GardenExpand: Home & GardenMost popular categoriesWorkshop Tools and EquipmentPatio, garden and outdoorsHome improvementKitchen, dining and barLamps, lights and fansInterior decorationHome organizationHome appliancesMore categoriesToysPetsCraftsArt suppliesMusical instrumentsJewelry and beadsDealsSell on eBay\n\n\n\n\n\n\n\n\n\nDealsSellExpand: SellHow to create a listingJoin our growth programSeller centerSeller updatesSeller customer serviceeBay managed paymentsLearn to selleBay storeseBay feesSelling limits\n\n\n\n\n\n\n\n\n\nMore Expand: MoreElectronicsMotorsFashionCollectibles and ArtSportsHealth & BeautyIndustrial equipmentHome & GardenDealsSell(window.$ebay||($ebay = {})).tracking={pageId:'2380057',pageName:'Highline_Homepage'} <div class=\"hl-image hl-full-bleed-banner__image\" style=\"background-image: url('https://i.ebayimg.com/images/g/xN4AAOSw-sZj-IK6/s-l1600.webp')\"><img src=https://i.ebayimg.com/images/g/xN4AAOSw-sZj-IK6/s-l1600.webp alt role=presentation></div>Featured Women SellersInternational Women's DayShop now Shop now <div class=\"hl-image hl-full-bleed-banner__image\" style=\"background-image: url('https://i.ebayimg.com/images/g/eBQAAOSw3m5j-dgN/s-l1600.webp')\"><img src=https://i.ebayimg.com/images/g/eBQAAOSw3m5j-dgN/s-l1600.webp alt role=presentation></div>Save when you shop refurbishedReliable brands, excellent quality, great prices.Buy it now Buy it now These Deals Won’t Stick AroundSave on headphonesBuy it now Buy it now - <div class=\"hl-image hl-multi-cta-banner__image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/3nUAAOSw4yti83jq/s-l400.webp alt=apple></div><div class=\"hl-image hl-multi-cta-banner__image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/LdgAAOSw4dFi83j2/s-l400.webp alt=Beats></div><div class=\"hl-image hl-multi-cta-banner__image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/6zIAAOSwKMBi83kH/s-l400.webp alt=sony></div>Popular CategoriesSee allPopular Categories<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/A9sAAOSw4bJjBe-V/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/A9sAAOSw4bJjBe-V/s-l200.webp alt></div>Daily Deals<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/bbUAAOSw3JhjBe-V/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/bbUAAOSw3JhjBe-V/s-l200.webp alt></div>Auto Parts & Accessories<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/FuoAAOSwNaRjBe-T/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/FuoAAOSwNaRjBe-T/s-l200.webp alt></div>eBay Refurbished<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/tOsAAOSwgn1jBe-V/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/tOsAAOSwgn1jBe-V/s-l200.webp alt></div>Tech<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/yfMAAOSwN~5jBe-U/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/yfMAAOSwN~5jBe-U/s-l200.webp alt></div>Fashion<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/0q0AAOSwSl9jBe-U/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/0q0AAOSwSl9jBe-U/s-l200.webp alt></div>Help & Contact<div class=\"hl-image hl-popular-destinations-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/tOQAAOSwsfhg0rW8/s-l200.webp')\"><img src=https://i.ebayimg.com/images/g/tOQAAOSwsfhg0rW8/s-l200.webp alt></div>Seller Center<div class=\"hl-image hl-loyalty__icon-image\" style=\"background-image: url('https://i.ebayimg.com/images/g/hSMAAOSw9Ftj2KBp/s-l96.webp')\"><img src=https://i.ebayimg.com/images/g/hSMAAOSw9Ftj2KBp/s-l96.webp alt></div>Up to 40% OFF. Kick off the year with new tech!Everything you need to help you succeed.Let's go Let's go Daily DealsSee all<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/v5gAAOSwcDJj2lMI/s-l225.webp alt=\"Jordan Men's T-Shirt Jumpman Short Sleeve Crew Athletic Active Basketball Tee\"></div>HKD 163.91<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/nAIAAOSwsBtaDeZL/s-l225.webp alt=\"Garmin Forerunner 35 Black GPS Sport Watch Wrist Based HR 010-01689-00\"></div>HKD 784.91Previous Price:HKD 1,569.90·50% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/-c4AAOSwCWRgSjq9/s-l225.webp alt=\"Jaeger Sports J-Bands Baseball Pitching Resistance Training Bands - Adult\"></div>HKD 243.27Previous Price:HKD 274.35·11% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/QS0AAOSwpUtgv9Pl/s-l225.webp alt=\"Stainless Steel Mixing Bowls 14 Piece Bowl Set with Measuring Cups and Spoons\"></div>HKD 211.87Previous Price:HKD 706.41·70% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/mr0AAOSw82BjmMqS/s-l225.webp alt=\"Xbox Series S 512GB SSD Console + Watch Dogs: Legion (Email Delivery)\"></div>HKD 1,907.45Previous Price:HKD 2,433.39·22% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/I0IAAOSwATNeabZk/s-l225.webp alt=\"USB-C to USB-C Cable Male Type-C Cable Cord Fast Charger Charging Data Sync\"></div>HKD 40.35<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/XCMAAOSw2QVfMxTg/s-l225.webp alt=\"Leather Wallets For Women - Trifold Womens Wallet With Coin Purse RFID Blocking\"></div>HKD 235.42<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/ljcAAOSwYORfMxQ3/s-l225.webp alt=\"Leather Trifold Wallet For Women With Removable Checkbook Holder RFID Blocking\"></div>HKD 274.67<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/kx0AAOSwPpRienPW/s-l225.webp alt=\"Contigo 20 oz. West Loop 2.0 AutoSeal Insulated Stainless Steel Travel Mug\"></div>HKD 268.39<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/MmcAAOSwT~NeJu0r/s-l225.webp alt=\"DICTOPRO X100 Digital Voice Activated Recorder Portable Mini Tape Dictaphone 8GB\"></div>HKD 345.16Previous Price:HKD 439.36·21% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/QDoAAOSwiepjXCoF/s-l225.webp alt=\"Apple Watch Series 7 45mm GPS + WiFi + Bluetooth Aluminum Case - Very Good\"></div>HKD 1,883.90<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/G4MAAOSwlINhP655/s-l225.webp alt=\"Lucky Bums Toddler Kids Beginner Plastic Snow Skis w/ Adjustable Bindings, Green\"></div>HKD 431.67Previous Price:HKD 1,098.91·61% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/d2kAAOSwLGxj9M-1/s-l225.webp alt=\"Champion Men's CU515503 Sport 65mm Matte Tortoise Sunglasses\"></div>HKD 196.17Previous Price:HKD 549.10·64% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/UAAAAOSwzhhjvcsh/s-l225.webp alt=\"Park Hotel Collection ESSENTIALS 3PC Sheet Set Cotton Rich Percale 225TC\"></div>HKD 156.92<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/2a0AAOSwmRVjNxUh/s-l225.webp alt=\"Amour Sterling Silver Black Diamond Accent Heart Locket Necklace\"></div>HKD 590.31Previous Price:HKD 1,569.98·62% OFF超級新星- Carousel精選陸克萊運動卡Shop Now Shop Now - Shop Now<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/DgwAAOSwVWVicsle/s-l225.webp alt=\"Charles Leclerc / Carlos Sainz 2022 Topps Formula 1 F1 NEON UV Bobzilla Auto 1/1\"></div>HKD 998.51Previous Price:HKD 1,248.14·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/CToAAOSwah1iq9Hu/s-l225.webp alt=\"🏁2021 Topps Chrome F1 CHARLES LECLERC B/W RAYWAVE REFRACT SGC 9 MT 🇲🇨\"></div>HKD 307.72Previous Price:HKD 384.65·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/UPwAAOSwqoFiZK4K/s-l225.webp alt=\"🏁2020 TOPPS CHROME SAPPHIRE 177 Charles Leclerc - Scuderia Ferrari SGC 9 🇲🇨\"></div>HKD 364.24Previous Price:HKD 455.29·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/FR0AAOSwqNpi02fV/s-l225.webp alt=\"🏁2020 PSA 10 Chrome F1 Scuderia Sapphire Edition Ferrari Team Logo G-MT🇮🇹\"></div>HKD 2,197.97Previous Price:HKD 2,747.47·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/rroAAOSwtCFi2IhK/s-l225.webp alt=\"2020 PSA 9  Chrome Formula 1 F1 Racing Refractor #113 Scuderia Ferrari MINT\"></div>HKD 1,877.70Previous Price:HKD 2,347.12·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/8pcAAOSw7aBjPKc9/s-l225.webp alt=\"🏁2020 Topps Chrome Formula 1 CHARLES LECLERC 1954 World On Wheels #3 PSA 9🇲🇨\"></div>HKD 376.48Previous Price:HKD 470.60·20% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/UKgAAOSwl~xkCkV6/s-l225.webp alt=\"Charles Leclerc Topps Chrome Formula 1 Sapphire 70th Anniversary Refractor Card\"></div>HKD 78.50<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/aG4AAOSwcvpju2A3/s-l225.webp alt=\"2021 TOPPS CHROME F1 FORMULA 1 CHARLES LECLERC PURPLE REFRACTOR FERRARI 11 PSA 9\"></div>HKD 196.25古董錢幣- Carousel發掘稀有珍貴款Shop Now Shop Now - Shop Now<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/1NoAAOSwcl1jwxay/s-l225.webp alt=\"1926 China Republic Dragon & Phoenix 10 Cents PCGS XF 40\"></div>HKD 11,774.86<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/PSsAAOSwobVjcH6I/s-l225.webp alt=\"1926 China Republic Dragon & Phoenix 10 Cents PCGS AU Details\"></div>HKD 9,412.04<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/igsAAOSwDX1jNv3-/s-l225.webp alt=\"1914, China (Nationalist Republic). Large Silver &#34;Fat Man&#34; Dollar Coin. NGC AU+\"></div>HKD 2,479.94Previous Price:HKD 2,818.12·12% OFF<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/CscAAOSwE21jYc0j/s-l225.webp alt=\"CHINA Silver Dollar, FatMan, Year 10 (1921). PCGS XF Details Gold Shield\"></div>HKD 2,747.47<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/k3wAAOSwhAxkCK1C/s-l225.webp alt=\"CHINA 1934 $1 Dollar Silver Coin Junk L&M-110 Y-345 Sun Yat Sen UNCIRCULATED\"></div>HKD 3,139.57<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/qawAAOSwciJkCKkM/s-l225.webp alt=\"1927 L&M-49 $1 China Sun Yat-Sen Memento Silver Dollar 6 Pointed Stars NGC UNC.\"></div>HKD 3,532.07<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/cuwAAOSwG31kCfz1/s-l225.webp alt=\"China 1995 Platinum 1/20 Panda- Key Date\"></div>HKD 3,022.22<div class=\"hl-image hl-item__bg-image hl-image__no-fill\"><img src=https://i.ebayimg.com/images/g/5JQAAOSww8djmM8v/s-l225.webp alt=\"Qian Ancient Bronze Chinese Cash Lot 35 Holed Coins China Asia Dynasty Indonesia\"></div>HKD 4,647.07Previous Price:HKD 5,163.44·10% OFF"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640ae2558d65a900bf805a58"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "computer"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Click Next Page",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Collection",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "VR / POWERFUL Gaming PC - 12GB Nvidia RTX 3060 / Intel i7 / 16GB DDR3 / 1TB SSD"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Dell Optiplex SFF Computer Core i3 i5 i7 16GB RAM 2TB HDD/SSD Windows 10 PC WiFi"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Work from Home HP I5 16GB 2TB HD 512GB SSD WiFi 22in LCD Windows 10 Computer PC"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Dell OptiPlex 7010 Desktop MT Core i5 32GB Ram 2TB SSD Wi-Fi Windows 10 Computer"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Libre Computer AML-S905X-CC Le Potato Single Board Computer"

                            },

                            {

                                num: NumberInt("5"),

                                value: "HP  SFF i7 6700 3.4GHz 16GB DDR4 Win 11 Desktop PC Fast Cheap"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Windows 11 Lenovo ThinkCentre M93 Tiny Core i5 16GB RAM 1TB SSD Wi-Fi PC Desktop"

                            },

                            {

                                num: NumberInt("7"),

                                value: "Dell i7 SSD Desktop Computer PC Windows 11 10 7/WiFi/HDMI/up to 32GB RAM 7010"

                            },

                            {

                                num: NumberInt("8"),

                                value: "READ!! HP EliteDesk 705 G5 Mini PC Ryzen 5 Pro 3400G 16gb ram no ssd"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Dell Precision Tower 3620 Intel Core i7-6700K 4GHz 32GB 1TB SSD 2TB HDD Win10"

                            },

                            {

                                num: NumberInt("10"),

                                value: "DELL/HP i5 QUAD DESKTOP TOWER PC & TFT COMPUTER SET 16GB WINDOWS 10 HDD & SSD"

                            },

                            {

                                num: NumberInt("11"),

                                value: "HP Z6 G4 Workstation Desktop, No CPU, No RAM, No GPU, No HS, No HDD =Barebone="

                            },

                            {

                                num: NumberInt("12"),

                                value: "HP Z640 Tower Xeon E5-1650 v3 3.50Ghz 32GB RAM 240GB SSD Quadro M6000 12GB Win 1"

                            },

                            {

                                num: NumberInt("13"),

                                value: "Dell Core i5 Desktop Computer PC 16GB RAM 512 SSD 1TB HDD 22\" LCD WiFi Win10 Pro"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Dell Optiplex 5050 i7-7700 4.2GHz Turbo Boost  32GB Ram 2TB SSD Wi-Fi Desktop"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Quad Core i5 Gaming PC 16GB DDR3 RAM 240GB SSD Windows 10 Desktop Computer Wi-Fi"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Dell Alienware Area 51 R6 Gaming Desktop Computer CHASSIS CADDY CABLES"

                            },

                            {

                                num: NumberInt("17"),

                                value: "Dell OptiPlex 7060 SFF i5-8500/i7-8700 +up to 64GB RAM &2TB SSD &6TB HD &WiFi+BT"

                            },

                            {

                                num: NumberInt("18"),

                                value: "HP or Dell Desktop Computer 16GB 2TB 512GB SSD Core i5 Windows 10 PC 24\" 22\" LCD"

                            },

                            {

                                num: NumberInt("19"),

                                value: "HP ELITEDESK PC 800 G3 MINI I7-6700 2.8GHZ 16GB 512GB SSD WIN 10 Pro WIFI"

                            },

                            {

                                num: NumberInt("20"),

                                value: "FAST DELL CORE 2 DUO PC COMPUTER DESKTOP WINDOWS 10 WI-FI 8GB RAM 500GB HDD"

                            },

                            {

                                num: NumberInt("21"),

                                value: "✅mini-COMPUTER✅ADVANTECH DS-080 CELERON 3765U 2x1.90GHz 4GB DDR3 60GB SSD 4xUSB"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Dell Precision 3430 SFF 6 Core i7-8700 32GB RAM 512GB SSD Windows 11 Pro WiFi"

                            },

                            {

                                num: NumberInt("23"),

                                value: "HP Pro 3300 SFF PC - Cheap Desktop Computer with SSD + WIFI & Windows 10 Pro"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Windows 11 Pro Mini PC Intel J4125 Quad Core 2.7GHz 8GB RAM DDR4 128GB SSD GK3V"

                            },

                            {

                                num: NumberInt("25"),

                                value: "DELL Optiplex 3060 MFF Intel Core i7@4.0GHz 16GB SSD M.2 256Gb Win 11 Pro"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Dell OptiPlex 7060 Micro i5-8500/i7-8700&up to 32G RAM&2TB SSD&WiFi+BT&Win11 Pro"

                            },

                            {

                                num: NumberInt("27"),

                                value: "New ListingDell OptiPlex 5070 Micro - i7 9th Gen M.2 256GB NVMe 16GB RAM DDR4 Win10Pro"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Lenovo ThinkPad Yoga 11e Touchscreen Laptop Windows 10 Pro 4GB Ram 128GB SSD"

                            },

                            {

                                num: NumberInt("29"),

                                value: "HP Desktop Computer PC 16GB 2TB 512GB SSD Wifi Core i5 Windows 10 PC 24\" 22\" LCD"

                            },

                            {

                                num: NumberInt("30"),

                                value: "HP i7 6th Gen SFF Computer PC 32GB RAM 2TB HDD/SSD Windows 10 PC WIFI"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Gaming PC Bundle I3 I5 I7 Desktop Gaming Computer PC 16GB RAM GTX 1660 Windows10"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Dell Optiplex 3010 MT Intel Core i3-3220 3.30GHz CPU 4GB RAM No HDD No OS"

                            },

                            {

                                num: NumberInt("33"),

                                value: "PC Dell OptiPlex 3050 Tower 6th Gen i5/i7 8GB/16GB RAM 256GB/512GB SSD DVDRW,VG"

                            },

                            {

                                num: NumberInt("34"),

                                value: "FAST ACER CHROMEBOOK 11 N7 TOUCHSCREEN CHROME OS LAPTOP 16GB 11.5\" HD SCREEN"

                            },

                            {

                                num: NumberInt("35"),

                                value: "Dell OptiPlex 7040 Micro computer Intel i7-6700T 32GB RAM 960GB SSD Win10 WiFi"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Lenovo ThinkCentre M910Q Mini Tiny Desktop PC Computer i5 6500T SSD Win 10 Pro "

                            },

                            {

                                num: NumberInt("37"),

                                value: "PC Dell OptiPlex 7050 SFF i5 i7 6th 7th Gen 8GB 16GB RAM 256GB SSD Warranty, VG"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Cheap Dell i7 4th Gen SFF Computer PC 32GB RAM 2TB HDD/SSD Windows 10 Pro WIFI"

                            },

                            {

                                num: NumberInt("39"),

                                value: "FULL DELL/HP INTEL CORE i3/i5 DESKTOP TOWER PC MONITOR COMPUTER SYSTEM WIN10 PRO"

                            },

                            {

                                num: NumberInt("40"),

                                value: "Dell OptiPlex 3040 SFF Intel i5 8GB RAM 120GB SSD HDMI DisplayPort Win10 Desktop"

                            },

                            {

                                num: NumberInt("41"),

                                value: "New ListingDell Precision T7810 Workstation 2x Xeon E5-2620V3 32GB Ram 256GB SSD NVS510"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Dell i7 Desktop Computer PC | up to 32GB RAM, 3TB SSD | Windows 10 HDMI | WiFi"

                            },

                            {

                                num: NumberInt("43"),

                                value: "CHEAP Windows 11 DELL Desktop PC Tiny Mini Micro Core i5 8Gb 16GB  1TB SSD WiFi"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Dell OptiPlex 7470 i5-9400 16GB 512GB SSD Win10 WIFI 24inch All In One Desktop"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Dell 9010 Tower Desktop Computer i7 QUAD CORE Windows 10 Pro 16GB RAM 480GB SSD"

                            },

                            {

                                num: NumberInt("46"),

                                value: "Lenovo i7 Quad Core up to 4.0GHz 32GB Ram 3TB HDD 960GB SSD HDMI M900 Desktop PC"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Lenovo ThinkCentre M910t Core i5-6500 3.2GHz 8GB RAM 256GB SSD Windows 10 Pro PC"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Aegis ZS Gaming Desktop, AMD RX 6600, Ryzen 7 5700G, 500GB SSD, 1TB HDD, 16G RAM"

                            },

                            {

                                num: NumberInt("49"),

                                value: "HP ProBook 640 G2 14\" Laptop Intel i5 6200U 4GB RAM 128GB SSD Win10 Pro -Good"

                            },

                            {

                                num: NumberInt("50"),

                                value: "Raspberry Pi 400 Personal Computer Keyboard Only (US  Layout) 4GB RAM FAST SHIP"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Raspberry Pi 4 Model B 8GB RAM -- Customer Return. Tested for Functionality."

                            },

                            {

                                num: NumberInt("52"),

                                value: "Raspberry Pi 4 Model B- 8GB Starter Kit - UK STOCK - NEW, SEALED - 🚚🚀✅"

                            },

                            {

                                num: NumberInt("53"),

                                value: "HP Elitedesk 800 G2 Mini PC i5-6500T 2.5Ghz 16GB 256GB SSD w/AC WIN 10 Pro"

                            },

                            {

                                num: NumberInt("54"),

                                value: "HP Z440 DDR4 Workstation 700w PSU Barebones No CPU/RAM/HDD/GPU"

                            },

                            {

                                num: NumberInt("55"),

                                value: "KAMRUI Mini PC Window 11 Pro, 8GB DDR4/256GB M.2 SSD Computer, Quad-core"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Dell Optiplex 3070 Micro PC i3-9100T 3.1Ghz 8GB  500Gb with Win10 Pro  OEM A/C"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Fast Gaming PC Computer Bundle Intel 4130 Quad 8GB 500GB HDD Windows11 2GB GT730"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Dell i7 6th Gen SFF Computer PC 32GB RAM 2TB HDD/SSD Windows 10 PC WIFI"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Dell OptiPlex Tower Computer PC Core i3 32GB RAM 2TB HDD/SSD Windows 10 PC"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "computer",

            value: "computer"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop Click Next Page_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop Click Next Page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay Product information task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "VR / POWERFUL Gaming PC - 12GB Nvidia RTX 3060 / Intel i7 / 16GB DDR3 / 1TB SSD"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640ae3fee9c32379f083e87f"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPad"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("6"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7"),

                NumberInt("8")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPad mini 2 16GB, Wi-Fi, 7.9in - Silver"

                            },

                            {

                                num: NumberInt("1"),

                                value: "New ListingApple iPad 7th Gen A2200 (WiFi + Cellular Unlocked) 32GB Space Gray (Fair)"

                            },

                            {

                                num: NumberInt("2"),

                                value: "New ListingApple iPad 8th Gen. 128GB, Wi-Fi, 10.2 in - Space Gray"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPad Pro 11\" 1st Gen 2018 64/256/512GB WiFi/4G Unlocked Grade A+ Excellent"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPad 5th Generation 32/128GB, Wi-Fi, 9.7in, ALL COLOURS GOOD USED"

                            },

                            {

                                num: NumberInt("5"),

                                value: "NEW! Apple iPad 9th Gen (2021) 64GB, Wi-Fi, 10.2in Tablet - Silver MK2L3LL/A"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPad Lot "

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPad 5th Generation 32GB Wi-Fi + 4G  A1823  9.7 inch  - Gold"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPad 9th Generation 10.2 inch Silver 256GB WIFI. BNIB sealed"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPad Pro 4. Gen 128GB, Wi-Fi, 11-Inch - Space Grey"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPad 6th Gen 128GB Wi-Fi + 4G Cellular Unlocked, 9.7 in - Gray - EXCELLENT"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPad Air 2 32 GB Space Gray Excellent Condition"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPad 6th Gen (2018) - 32GB - All Colors - Wi-Fi Only - Very Good "

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPad 7 10.2\" 32GB 128GB Space Gray Gold Silver WiFi or Cellular - Good"

                            },

                            {

                                num: NumberInt("14"),

                                value: "New ListingApple iPad Pro 9.7 (1st Gen) A1673 (WiFi + Cellular) 32GB Space Gray (Good)"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPad A1893 - 32GB - Wi-Fi, 9.7in Touch ID Pencil Support Newest IOS 16"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPad Pro 11\" 2nd Gen 2020 128/256/512GB/1TB WiFi + 4G Unlocked Very Good"

                            },

                            {

                                num: NumberInt("17"),

                                value: "New ListingApple iPad Pro 12.9 Inch - 128GB - Gray (Unlocked) (Read Description) AG1122"

                            },

                            {

                                num: NumberInt("18"),

                                value: "New ListingApple iPad Pro 12.9\" 4th Gen (2020) 128/256/512/1TB WiFi/4G Good Condition"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple 10.9-Inch iPad Air (5th Generation) w/ Wi-Fi - 64GB - Space Gray"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPad 7th Gen. 128GB, Wi-Fi, 10.2 in - Space Gray IC Locked"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Apple iPad Air 5th Generation 64GB-256GB WiFi - 1 Year Apple Warranty UK Verison"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Apple iPad Air 4th Gen (2020) 64GB 256GB WiFi + 4G Unlocked Grade A+ Excellent"

                            },

                            {

                                num: NumberInt("23"),

                                value: "New ListingApple iPad 5th Gen. 32GB, Wi-Fi, 9.7in - Space Gray MP2F2LL/A"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPad Pro 12.9-inch (3rd Gen) Tablet (Wi-Fi) A1876 - Cracked Not Working"

                            },

                            {

                                num: NumberInt("25"),

                                value: "New ListingApple iPad 6th Gen. 32GB, Wi-Fi, 9.7in - Silver (CA) - Mdm Locked - Lot Of 2"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Lot Of 3 x Apple iPad Air  16gb 1st Gen A1474 Gray  - IC Locked"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Apple iPad 10.9-inch 10th Generation (2022) 64GB Blue Wi-Fi A2696"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Apple iPad 7 (7th Gen) - (2019 Model) - 32GB - 128GB - Wi-Fi - Cellular - Good"

                            },

                            {

                                num: NumberInt("29"),

                                value: "New ListingApple iPad Mini 4 A1538 (WiFi) 128GB Gold (Fair)"

                            },

                            {

                                num: NumberInt("30"),

                                value: "iPad pro 12.9 2nd gen model A1670 256Gb Good Condition IOS 15 1 year warranty"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPad Air 2 16/32/64/128GB WiFi + 4G Cellular Unlocked Grade A++ Certified"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPad Mini (5th Generation) 64GB, Wi-Fi, 7.9in - Space Gray - MDM"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPad 5th Gen. 32GB, Wi-Fi, 9.7in - Space Gray (CA)"

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPad 6 9.7\" A1893 32GB Silver Wi-Fi Only iOS Tablet Excellent"

                            },

                            {

                                num: NumberInt("35"),

                                value: "New ListingApple iPad Air 2  Wi-Fi   9.7in - A1567  LOCKED AS IS ONLY  FAST SHIPPING"

                            },

                            {

                                num: NumberInt("36"),

                                value: "APPLE IPAD PRO 12.9 SCREEN 128MB WI-FI CELLULAR UNLOCKED  MODEL A1652  CRAACKED"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPad Mini 4 - 16GB - Silver (Wifi) (Read Description) AG1233"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Apple iPad Air 1st Gen 16/32/64/128GB WiFi/4G Unlocked 9.7\" Very Good Condition"

                            },

                            {

                                num: NumberInt("39"),

                                value: "New ListingApple iPad 9th Gen. 64GB, Wi-Fi + 5G (Verizon), 10.2 in - Space Gray"

                            },

                            {

                                num: NumberInt("40"),

                                value: "New ListingApple iPad Pro 6th Generation 12.9\" 128GB Silver. MNXQ3LL/A Brand New & Sealed. "

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPad mini 6th Gen. 64GB, Wi-Fi, 8.3 in  Starlight with Apple Pencil Gen 2"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPad mini 3 16GB, Wi-Fi, 7.9in, A1599 - GOLD / WHITE"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPad Pro 2 12.9\" 64GB 256GB 512GB All Colors WiFi or Cellular - Acceptable"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPad 3 3rd Generation Wifi Black And White 16GB 32GB 64GB"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Apple iPad Air 5th Gen. 64GB, Wi-Fi, 10.9in - Space Grey"

                            },

                            {

                                num: NumberInt("46"),

                                value: "New ListingApple iPad Air 1st Gen. 16GB, Wi-Fi + Cellular (Verizon), 9.7in - Space Gray"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPad mini 5th Gen Retina 64GB Wi-Fi+4G 7.9\" S.Grey B Grade Latest iOS 16"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPad Mini 3 16GB 32GB 64GB 128GB Gray Silver Gold WiFi or Cellular - Good"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPad 9th Gen 2021 10.2 in 64GB WiFi Space Gray Silver Brand New"

                            },

                            {

                                num: NumberInt("50"),

                                value: "New ListingApple iPad Mini 1st Gen 16/32/64GB WiFi + Cellular Unlocked Grade A+ Excellent"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Apple iPad Pro 12.9\" (3rd Gen) A2014 (Unlocked) 256GB Space Gray - Battery/Lift"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPad mini 1,2,3,4 (16GB,32GB) Wi-Fi ONLY Space Grey 7.9in Grade A Conditio"

                            },

                            {

                                num: NumberInt("53"),

                                value: "New ListingApple iPad Pro 11 Inch 2nd - 128GB - Gray (Unlocked) (Read Description) BA1094"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPad 6th Gen (2018) - 128GB - All Colors - Wi-Fi + 4G Unlocked - Good"

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPad Pro 4th Gen 512GB, Wi-Fi+4G (Unlocked), 12.9in - Space Gray MXFG2LL/A"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPad Pro 3rd Gen 11-inch [2021 Model]"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPad Air 1 9.7\" 16GB 32GB 64GB 128GB Gray Silver WiFi / Cellular-Excellent"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPad Pro 3rd Gen 12.9\" 64/256/512GB 1TB WiFi + 4G Unlocked Very Good"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPad Pro 9.7 (1st Gen) A1673 (WiFi/Unlocked) 32GB Space Gray (Excellent)"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("9")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("9"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPad mini 2 16GB, Wi-Fi, 7.9in - Silver"

                            },

                            {

                                num: NumberInt("1"),

                                value: "New ListingApple iPad 7th Gen A2200 (WiFi + Cellular Unlocked) 32GB Space Gray (Fair)"

                            },

                            {

                                num: NumberInt("2"),

                                value: "New ListingApple iPad 8th Gen. 128GB, Wi-Fi, 10.2 in - Space Gray"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPad Pro 11\" 1st Gen 2018 64/256/512GB WiFi/4G Unlocked Grade A+ Excellent"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPad 5th Generation 32/128GB, Wi-Fi, 9.7in, ALL COLOURS GOOD USED"

                            },

                            {

                                num: NumberInt("5"),

                                value: "NEW! Apple iPad 9th Gen (2021) 64GB, Wi-Fi, 10.2in Tablet - Silver MK2L3LL/A"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPad Lot "

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPad 5th Generation 32GB Wi-Fi + 4G  A1823  9.7 inch  - Gold"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPad 9th Generation 10.2 inch Silver 256GB WIFI. BNIB sealed"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPad Pro 4. Gen 128GB, Wi-Fi, 11-Inch - Space Grey"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPad 6th Gen 128GB Wi-Fi + 4G Cellular Unlocked, 9.7 in - Gray - EXCELLENT"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPad Air 2 32 GB Space Gray Excellent Condition"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPad 6th Gen (2018) - 32GB - All Colors - Wi-Fi Only - Very Good "

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPad 7 10.2\" 32GB 128GB Space Gray Gold Silver WiFi or Cellular - Good"

                            },

                            {

                                num: NumberInt("14"),

                                value: "New ListingApple iPad Pro 9.7 (1st Gen) A1673 (WiFi + Cellular) 32GB Space Gray (Good)"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPad A1893 - 32GB - Wi-Fi, 9.7in Touch ID Pencil Support Newest IOS 16"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPad Pro 11\" 2nd Gen 2020 128/256/512GB/1TB WiFi + 4G Unlocked Very Good"

                            },

                            {

                                num: NumberInt("17"),

                                value: "New ListingApple iPad Pro 12.9 Inch - 128GB - Gray (Unlocked) (Read Description) AG1122"

                            },

                            {

                                num: NumberInt("18"),

                                value: "New ListingApple iPad Pro 12.9\" 4th Gen (2020) 128/256/512/1TB WiFi/4G Good Condition"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple 10.9-Inch iPad Air (5th Generation) w/ Wi-Fi - 64GB - Space Gray"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPad 7th Gen. 128GB, Wi-Fi, 10.2 in - Space Gray IC Locked"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Apple iPad Air 5th Generation 64GB-256GB WiFi - 1 Year Apple Warranty UK Verison"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Apple iPad Air 4th Gen (2020) 64GB 256GB WiFi + 4G Unlocked Grade A+ Excellent"

                            },

                            {

                                num: NumberInt("23"),

                                value: "New ListingApple iPad 5th Gen. 32GB, Wi-Fi, 9.7in - Space Gray MP2F2LL/A"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPad Pro 12.9-inch (3rd Gen) Tablet (Wi-Fi) A1876 - Cracked Not Working"

                            },

                            {

                                num: NumberInt("25"),

                                value: "New ListingApple iPad 6th Gen. 32GB, Wi-Fi, 9.7in - Silver (CA) - Mdm Locked - Lot Of 2"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Lot Of 3 x Apple iPad Air  16gb 1st Gen A1474 Gray  - IC Locked"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Apple iPad 10.9-inch 10th Generation (2022) 64GB Blue Wi-Fi A2696"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Apple iPad 7 (7th Gen) - (2019 Model) - 32GB - 128GB - Wi-Fi - Cellular - Good"

                            },

                            {

                                num: NumberInt("29"),

                                value: "New ListingApple iPad Mini 4 A1538 (WiFi) 128GB Gold (Fair)"

                            },

                            {

                                num: NumberInt("30"),

                                value: "iPad pro 12.9 2nd gen model A1670 256Gb Good Condition IOS 15 1 year warranty"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPad Air 2 16/32/64/128GB WiFi + 4G Cellular Unlocked Grade A++ Certified"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPad Mini (5th Generation) 64GB, Wi-Fi, 7.9in - Space Gray - MDM"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPad 5th Gen. 32GB, Wi-Fi, 9.7in - Space Gray (CA)"

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPad 6 9.7\" A1893 32GB Silver Wi-Fi Only iOS Tablet Excellent"

                            },

                            {

                                num: NumberInt("35"),

                                value: "New ListingApple iPad Air 2  Wi-Fi   9.7in - A1567  LOCKED AS IS ONLY  FAST SHIPPING"

                            },

                            {

                                num: NumberInt("36"),

                                value: "APPLE IPAD PRO 12.9 SCREEN 128MB WI-FI CELLULAR UNLOCKED  MODEL A1652  CRAACKED"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Apple iPad Mini 4 - 16GB - Silver (Wifi) (Read Description) AG1233"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Apple iPad Air 1st Gen 16/32/64/128GB WiFi/4G Unlocked 9.7\" Very Good Condition"

                            },

                            {

                                num: NumberInt("39"),

                                value: "New ListingApple iPad 9th Gen. 64GB, Wi-Fi + 5G (Verizon), 10.2 in - Space Gray"

                            },

                            {

                                num: NumberInt("40"),

                                value: "New ListingApple iPad Pro 6th Generation 12.9\" 128GB Silver. MNXQ3LL/A Brand New & Sealed. "

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPad mini 6th Gen. 64GB, Wi-Fi, 8.3 in  Starlight with Apple Pencil Gen 2"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPad mini 3 16GB, Wi-Fi, 7.9in, A1599 - GOLD / WHITE"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPad Pro 2 12.9\" 64GB 256GB 512GB All Colors WiFi or Cellular - Acceptable"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPad 3 3rd Generation Wifi Black And White 16GB 32GB 64GB"

                            },

                            {

                                num: NumberInt("45"),

                                value: "Apple iPad Air 5th Gen. 64GB, Wi-Fi, 10.9in - Space Grey"

                            },

                            {

                                num: NumberInt("46"),

                                value: "New ListingApple iPad Air 1st Gen. 16GB, Wi-Fi + Cellular (Verizon), 9.7in - Space Gray"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPad mini 5th Gen Retina 64GB Wi-Fi+4G 7.9\" S.Grey B Grade Latest iOS 16"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPad Mini 3 16GB 32GB 64GB 128GB Gray Silver Gold WiFi or Cellular - Good"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPad 9th Gen 2021 10.2 in 64GB WiFi Space Gray Silver Brand New"

                            },

                            {

                                num: NumberInt("50"),

                                value: "New ListingApple iPad Mini 1st Gen 16/32/64GB WiFi + Cellular Unlocked Grade A+ Excellent"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Apple iPad Pro 12.9\" (3rd Gen) A2014 (Unlocked) 256GB Space Gray - Battery/Lift"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPad mini 1,2,3,4 (16GB,32GB) Wi-Fi ONLY Space Grey 7.9in Grade A Conditio"

                            },

                            {

                                num: NumberInt("53"),

                                value: "New ListingApple iPad Pro 11 Inch 2nd - 128GB - Gray (Unlocked) (Read Description) BA1094"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPad 6th Gen (2018) - 128GB - All Colors - Wi-Fi + 4G Unlocked - Good"

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPad Pro 4th Gen 512GB, Wi-Fi+4G (Unlocked), 12.9in - Space Gray MXFG2LL/A"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPad Pro 3rd Gen 11-inch [2021 Model]"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPad Air 1 9.7\" 16GB 32GB 64GB 128GB Gray Silver WiFi / Cellular-Excellent"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPad Pro 3rd Gen 12.9\" 64/256/512GB 1TB WiFi + 4G Unlocked Very Good"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPad Pro 9.7 (1st Gen) A1673 (WiFi/Unlocked) 32GB Space Gray (Excellent)"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPad",

            value: "iPad"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("4"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "New Crawler Task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "Apple iPad mini 2 16GB, Wi-Fi, 7.9in - Silver"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "Apple iPad mini 2 16GB, Wi-Fi, 7.9in - Silver"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640aea52e9c32379f083e882"),

    containJudge: false,

    desc: "https://www.ebay.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("8")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.ebay.com",

                links: "https://www.ebay.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-ac\"]",

                wait: NumberInt("0"),

                value: "iPad"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"gh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]/div[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPad Air 2 A1566 (WiFi) 64GB Space Gray (Very Good)"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPad Air 2 A1567 (WiFi + Cellular Unlocked) 128GB Space Gray (Very Good)"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPad Mini 4 - Wi-Fi - Wi-Fi + Cellular - 16GB - 32GB - 64GB - 128GB - Good"

                            },

                            {

                                num: NumberInt("3"),

                                value: "Apple iPad 6th Gen 9.7\" 32GB 128GB Silver Gray WiFi or Cellular Unlocked Good"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPad 5 - 5th Gen 2017 Model 9.7\" - 32GB 128GB Wi-Fi - Grade C"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPad Air 2 2nd WiFi + Cellular Unlocked 16GB 32GB 64GB 128GB - Good"

                            },

                            {

                                num: NumberInt("6"),

                                value: "New ListingApple iPad Pro - 6th Gen 12.9\""

                            },

                            {

                                num: NumberInt("7"),

                                value: "Apple iPad Air 2 64 GB Wi-Fi 9.7in - Space Gray IOS 15 Fast Free Shipping"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPad 5 (5th Gen -2017 Model) -32GB -128GB - Wi-Fi + Cellular - Good"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPad Air 5th Gen. 10.9 in, 64GB, Wi-Fi A2588 - Blue"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPad 2nd 3rd 4th Generation 16GB 32GB 64GB  *Grade B*"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPad 9th Gen. 64GB, Wi-Fi, 10.2 in - Silver read the description!!"

                            },

                            {

                                num: NumberInt("12"),

                                value: "NEW! Apple iPad 9th Gen 64GB, Wi-Fi, 10.2in Tablet Space Gray MK2K3LL/A "

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPad 6th Gen A1893 (WiFi) 32GB Space Gray (Good)"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPad Air A1474 (WiFi) 32GB Space Gray (Excellent)"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPad mini 3 16GB, Wi-Fi + Cellular (Unlocked), 7.9in - Silver (CA)"

                            },

                            {

                                num: NumberInt("16"),

                                value: "Apple iPad 6 - 6th Generation 32GB MP2F2LL/A Space Gray - WiFi - Grade C"

                            },

                            {

                                num: NumberInt("17"),

                                value: "Apple iPad Air 2 9.7\" 16GB 32GB 64GB 128GB All Colors WiFi + Cellular - Good"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPad 5th Gen 9.7\" 32GB 128GB Gray Silver WiFi or Cellular Unlocked Good"

                            },

                            {

                                num: NumberInt("19"),

                                value: "Apple iPad Pro 2 (2017) 10.5\" 64GB 256GB 512GB All Colors (WiFi or Cellular)"

                            },

                            {

                                num: NumberInt("20"),

                                value: "APPLE A1876 - iPad PRO 3rd Gen / 64GB HD / 4GB RAM / iOS 16.2 / 12.9-Inch Tablet"

                            },

                            {

                                num: NumberInt("21"),

                                value: "Acceptable Apple iPad Pro 9.7\" 32GB 128GB 256GB All Colors WiFi or Unlocked"

                            },

                            {

                                num: NumberInt("22"),

                                value: "Excellent Condition Apple iPad 4th Gen, 16GB, Wi-Fi 9.7in Retina, WIFI + Warrant"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Apple iPad Air 5th Gen. 10.9 in, 64GB, Wi-Fi A2588 - Space Gray"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple iPad Air 1st WiFi + Cellular Unlocked 16GB 32GB 64GB 128GB - Good"

                            },

                            {

                                num: NumberInt("25"),

                                value: "Apple iPad 9th Gen. 64GB, Wi-Fi, 10.2 in - Silver"

                            },

                            {

                                num: NumberInt("26"),

                                value: "Apple iPad Air 2 9.7\" 16GB 32GB 64GB 128GB All Colors WiFi Cellular Used"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Apple iPad 6th Gen A1893 (WiFi) 32GB Space Gray (Very Good)"

                            },

                            {

                                num: NumberInt("28"),

                                value: "Apple iPad 8 (8th Gen) - (2020 Model) - 32GB - 128GB - Wi-Fi - Cellular - Good"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Apple iPad 6 (6th Gen) - (2018 Model) - 32GB - 128GB - Wi-Fi - Cellular - Good"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPad mini 2 16GB, Wi-Fi, 7.9in - Silver"

                            },

                            {

                                num: NumberInt("31"),

                                value: "New ListingApple iPad Pro 1st Gen. 64GB, Wi-Fi + 4G (Unlocked), 10.5 in - Space Gray"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPad Air 3rd Gen 10.5\" 64GB 256GB Gray Silver Gold (WiFi or Cellular) Used"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPad 7 7th Gen 10.2\" 32GB 128GB Gray Gold Silver WiFi or Cellular - Used"

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPad 1st Generation 32GB, Wi-Fi, 9.7in - Black - Good Working Condition"

                            },

                            {

                                num: NumberInt("35"),

                                value: "NEW Apple iPad 9th Generation 10.2\" Retina Display 64GB Wifi Touch ID + Stylus"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Apple iPad Pro 1st Gen 12.9 32GB 128GB 256GB WiFi Cellular 4G iOS 15 GOOD USED"

                            },

                            {

                                num: NumberInt("37"),

                                value: "New ListingApple iPad 5th Gen. 32GB, Wi-Fi, 9.7in - Space Gray MP2F2LL/A"

                            },

                            {

                                num: NumberInt("38"),

                                value: "New ListingApple iPad 7th Gen A2200 (WiFi + Cellular Unlocked) 32GB Space Gray (Fair)"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Apple iPad Pro 9.7\" 32GB 128GB 256GB Gray Silver Gold Rose WiFi / Cellular- Good"

                            },

                            {

                                num: NumberInt("40"),

                                value: "Apple 12.9-inch iPad Pro (Wi-Fi, 128GB) 4th Generation Space Gray"

                            },

                            {

                                num: NumberInt("41"),

                                value: "New ListingNEW Apple iPad Pro 11\" 3rd Gen 2021 M1 256GB Silver WiFi + Cellular 5G Unlocked"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Apple iPad Mini 4th Gen 32GB Wi-Fi  7.9\" Space Gray A1538 Tested Good Condition"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPad Mini 3 3rd Gen 16GB Wi-Fi 7.9\" Space Gray A1599 Tested Good Condition"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPad mini 4, 4th Gen 16GB 32GB 64GB 128GB Wi-Fi + 4G Cellular - Good"

                            },

                            {

                                num: NumberInt("45"),

                                value: "New ListingApple iPad Pro 11 Inch 2nd - 128GB - Gray (Unlocked) (Read Description) BA1097"

                            },

                            {

                                num: NumberInt("46"),

                                value: "Apple - 8.3\" iPad Mini 6th Gen. - 64GB - WiFi Only - MK7M3LL/A - Space Gray - VG"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPad 3 3rd Generation Wifi Black And White 16GB 32GB 64GB"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPad Pro 11 2nd Gen 128GB Space Gray WiFi + Cellular"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPad 10.9-inch 10th Generation (2022) 64GB Blue Wi-Fi A2696"

                            },

                            {

                                num: NumberInt("50"),

                                value: "New ListingApple iPad 8th Gen. 128GB, Wi-Fi, 10.2 in - Space Gray"

                            },

                            {

                                num: NumberInt("51"),

                                value: "NEW! Apple iPad 9th Gen (2021) 64GB, Wi-Fi, 10.2in Tablet - Silver MK2L3LL/A"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPad 5th Gen. 32GB, Wi-Fi, 9.7in - Space Gray (CA)"

                            },

                            {

                                num: NumberInt("53"),

                                value: "BRAND NEW Sealed Apple 10.2 iPad 9th Generation Silver 64gb"

                            },

                            {

                                num: NumberInt("54"),

                                value: "New ListingApple iPad Pro 12.9 Inch - 128GB - Gray (Unlocked) (Read Description) AG1122"

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPad Air 5th Gen. 64GB, Wi-Fi, 10.9in - Blue"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPad Air 2 16/32/64/128GB WiFi + 4G Cellular Unlocked Grade A+ Excellent"

                            },

                            {

                                num: NumberInt("57"),

                                value: "Apple iPad Pro 10.5\" 64GB 256GB 512GB Gray Gold Silver WiFi or Cellular - Good"

                            },

                            {

                                num: NumberInt("58"),

                                value: "New ListingApple iPad 8th Gen. 128GB, Wi-Fi + 4G (Unlocked), 10.2 in - Space Gray Lot 1A"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPad Pro 11\" 1st Gen 2018 64/256/512GB WiFi/4G Unlocked Grade A+ Excellent"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("6"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("8"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Click Next Page",

            sequence: [

                NumberInt("10"),

                NumberInt("9")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("9"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination__next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("10"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop Collection",

            sequence: [

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[8]/div[4]/div[2]/div[1]/div[2]/ul[1]/li/div[1]/div[2]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("11"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "product_name",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "Apple iPad Air 1st Gen 16/32/64/128GB WiFi/4G Unlocked 9.7\" Very Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("1"),

                                value: "Apple iPad Pro 3rd Gen 12.9\" 64/256/512GB 1TB WiFi + 4G Unlocked Very GoodOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("2"),

                                value: "Apple iPad Pro 12.9\" 3rd Gen 64/256/512GB/1TB WiFi + 4G Unlocked Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("3"),

                                value: "New ListingApple iPad Pro 10.5 (2017) 64/256/512GB WiFi + 4G Unlocked Very Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Apple iPad 9th Gen 2021 10.2 in 64GB WiFi Space Gray Silver Brand NewOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("5"),

                                value: "Apple iPad Air 4th Gen. 64GB, Wi-Fi, 10.9 in - Space GrayOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("6"),

                                value: "Apple iPad 6th generation 32gb wifiOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("7"),

                                value: "New ListingApple iPad Mini 1st Gen 16/32/64GB WiFi + Cellular Unlocked Grade A+ ExcellentOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("8"),

                                value: "Apple iPad Air 1 9.7\" 16GB 32GB 64GB 128GB Gray Silver WiFi / Cellular-ExcellentOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("9"),

                                value: "Apple iPad Pro 11\" 64GB Wi-Fi + Cellular Tablet SilverOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("10"),

                                value: "Apple iPad Pro 2 12.9\" 64GB 256GB 512GB All Colors WiFi or Cellular - AcceptableOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("11"),

                                value: "Apple iPad Mini 6th Gen . 64GB, Wi-Fi 2023 Space Grey RRP£569 N.DayDel. SealedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("12"),

                                value: "Apple iPad 6th Gen 9.7\" A1893 (WiFi) 32GB Space GrayOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("13"),

                                value: "Apple iPad 1st Gen. 64GB, Wi-Fi + 3G (Unlocked), 9.7 in - Space GrayOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("14"),

                                value: "Apple iPad Air 3rd Gen (2019) - All Sizes - All Colours - Wi-Fi OnlyOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("15"),

                                value: "Apple iPad Pro 9.7\" 32GB 128GB 256GB Gray Silver Gold WiFi / Cellular- Very GoodOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("16"),

                                value: "APPLE IPAD PRO MLMV2LL/A | 9.7\" | 256GB | WIFI | SPACE GRAYOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("17"),

                                value: "Apple iPad mini 1,2,3,4 (16GB,32GB) Wi-Fi ONLY Space Grey 7.9in Grade A ConditioOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("18"),

                                value: "Apple iPad Air 2 32GB, Wi-Fi, 9.7in - Space Gray (CA)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("19"),

                                value: "NON-WORKING Apple iPad 9th Gen (2021) 64GB, Wi-Fi, 10.2in Tablet MK2L3LL/AOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("20"),

                                value: "Apple iPad 6th Gen (2018) - 128GB - All Colors - Wi-Fi + 4G Unlocked - GoodOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("21"),

                                value: "New ListingApple iPad 7 - 32GB - Gray (Unlocked) (Read Description) BA1149Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("22"),

                                value: "New ListingApple iPad 6th Gen. 32GB, Wi-Fi, 9.7in - Silver (CA)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("23"),

                                value: "Apple iPad Pro 12.9\" (3rd Gen) A2014 (Unlocked) 256GB Space Gray - Battery/LiftOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("24"),

                                value: "Apple A2014 iPad Pro 3rd GEN 12.9\" 256GB WiFi + Cellular Shattered Screen LCDOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("25"),

                                value: "Apple iPad 4th Gen. 16GB, Wi-Fi, 9.7in - Grey New Sealed Original PackagingOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("26"),

                                value: "New ListingApple iPad Air 2 64GB, Wi-Fi + Cellular (Verizon), 9.7in - Space Gray MGJY2LLOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("27"),

                                value: "Apple iPad Pro 4th Gen. 256GB, Wi-Fi + 4G (Unlocked), 12.9 in - Space GrayOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("28"),

                                value: "New ListingApple iPad 10.2\" 8th Gen (2021) 32/128B WiFi + 4G Unlocked Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("29"),

                                value: "Apple iPad 6th Gen 9.7\" 32GB 128GB Silver Gold Gray WiFi or Cellular - ExcellentOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("30"),

                                value: "Apple iPad Air A1474 (WiFi) 32GB Space Gray (Very Good)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("31"),

                                value: "Apple iPad 5th Generation 32GB 128GB Wi-Fi  Various Colours Excellent ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("32"),

                                value: "Apple iPad 8th Gen. 32GB 10.2 in - Space Gray 100119Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("33"),

                                value: "Apple iPad Pro 10.5 Inch - 256GB - Gold (Wifi) (Read Description) AH1269Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("34"),

                                value: "Apple iPad Pro 1st Gen. 11\" 64GB Wi-Fi + Cellular Model MU0P2LL/A Cracked ScreenOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("35"),

                                value: "Apple iPad 10.9-inch 10th Generation (2022) 64GB Blue Wi-Fi A2696Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("36"),

                                value: "Apple iPad Air 2 (A1566) 128GB - Gray (Wi-Fi) 9.7\" Tablet - BAD BATTERY - K0085Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("37"),

                                value: "Brand new factory sealed Apple iPad 3rd Gen. 32GB, Wi-Fi, 9.7in - BlackOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("38"),

                                value: "Apple iPad Air 2 16/32/64/128GB WiFi/4G Cellular Unlocked 9.7\" Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Apple iPad 5th Gen 32/128GB WiFi + 4G Unlocked 9.7\" Very Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("40"),

                                value: "Apple iPad Air (3rd Generation) 256GB, Wi-Fi + 4G (Verizon), 10.5in - LockedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("41"),

                                value: "Apple iPad Air (3rd Gen) - 64GB (Wi-Fi) - Space Gray - FMI ON - READ FIRSTOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("42"),

                                value: "Lot Of 9 Apple iPad Air 2 16GB, Wi-Fi, 9.7in With Cases BundleOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("43"),

                                value: "Apple iPad mini 4 128GB Wi-Fi 7.9in - Space Gray - Includes original boxOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("44"),

                                value: "Apple iPad Pro 3rd Gen, 12.9\", Wi-Fi A2014 *Read Desc* #40Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("45"),

                                value: "2019 Apple iPad Air 3 10.5 256 WiFi iOS 16Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("46"),

                                value: "APPLE IPAD PRO 64GB WI-FI 10.5IN A1701 SILVER TABLET MQDT2LL/A AS ISOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("47"),

                                value: "Apple iPad 6th Gen 128GB Wi-Fi + 4G Cellular Unlocked, 9.7 in - Gray - EXCELLENTOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("48"),

                                value: "Apple iPad Air A1474 16GB WIFI Pre-ownedOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("49"),

                                value: "Apple iPad Pro 12.9\" 1st Gen A1584 32GB WiFi Gray BAD BATTERYOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("50"),

                                value: "Apple iPad Pro (11 inch) Wi-Fi, 64GB, Silver (Brand New)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("51"),

                                value: "Apple iPad Pro 10.5\" 256GB A1701Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("52"),

                                value: "Apple iPad Air 4th Gen. 64GB, Wi-Fi, 10.9 in - Sky BlueOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("53"),

                                value: "Apple iPad 6th Gen. 128GB, Wi-Fi + Cellular (Unlocked), 9.7in - Silver (CA)Opens in a new window or tab"

                            },

                            {

                                num: NumberInt("54"),

                                value: "Apple iPad Pro 4th Gen 512GB, Wi-Fi+4G (Unlocked), 12.9in - Space Gray MXFG2LL/AOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("55"),

                                value: "Apple iPad Pro 12.9-inch (3rd Gen) Tablet (Wi-Fi) A1876 - Cracked Not WorkingOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("56"),

                                value: "Apple iPad 6th Generation 32GB Space Gray Unlocked Good ConditionOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("57"),

                                value: "New ListingApple iPad 9th Gen. 64GB, Wi-Fi + 5G (T-Mobile), 10.2 in - Space GrayOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("58"),

                                value: "Apple iPad Pro 4th Gen 12.9\" (2020) 128/256/512GB/1TB WiFi + 4G A+ ExcellentOpens in a new window or tab"

                            },

                            {

                                num: NumberInt("59"),

                                value: "Apple iPad Air 2 16GB Wi-Fi 9.7\" various colour   + 12 Months WarrantyOpens in a new window or tab"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "product_address",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.ebay.com/itm/385077763771?hash=item59a86c5ebb:g:UnwAAOSw9SFjBN0z&amdata=enc%3AAQAHAAAA4NrXp7Pwq2uBVPvp7oCv1nZVhrg1syxqtty0g4VGQvuCi%2FqMgTuS3h%2FHVrzcLNHNEL75eoXllSsCqi81UUrsyWvKxinUIDFe3DmZPJoEuP5G%2BSWZtVaXjAxwSWBhElT9gND4oZ6B21qyI09PSe3Ztat6Efrv3vltvgPFFfwP4upsH3uFBm%2BFoFu2qSF3apV5GOBo7pSxQp7qut7oGq0wqSB5vT8CU2AqNNXi%2Fv2g5BSqSnqziqHeQco6ViJb%2BDwZnU4FBKDoBfttwMLTLhLxV0kr0kiUJSF2jekDGGyKBMvT%7Ctkp%3ABFBMtuf0qNlh"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.ebay.com/itm/204057987847?hash=item2f82cdcb07:g:5lcAAOSwi41i55gr&amdata=enc%3AAQAHAAAA4E%2FUz6gObrUZIYUe7uU440oG2cKUwl45CJmshoiFN8gqOULXy6G3rJgOqdtvyy%2F5ogyUCKouPzfMvAXu51o5WgEi86iMpfVyHpWtnMm1JJJaJxHVuuSSXGnFkqAC5Q27MKx8iDmdg1r80lLwPMrJCDYQ5EtVjqp5E88TynKq2Jz%2Fs%2FCmIHUH%2BHfngINQSmaakaqw%2BajK9d%2FodDE8DmQ18FEwDWjkgAj%2FdvgPTFZM2vkUOcUXRW6XiNidD6yfpqvgevR26p5ih66Fs5FnY59tbfYNTVmavG4SvwQSYUqDkRQ8%7Ctkp%3ABFBMtuf0qNlh"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.ebay.com/itm/385136136551?hash=item59abe71167:g:5jUAAOSwOJVjMV4b&amdata=enc%3AAQAHAAAA4D0peKxVY2%2FgvvXSOugBTL6AhSYGXl8Nh0GFxjJ715Z2otHjfNUeQ04J2OpdKiztI3hlmkCAYjqlftNgF%2FzXrDJMkaodSqsURqEYgD3yarRSfRkCws%2B6Yhx5z1NooeHVF6EkVYQR4kQlw9UlkX9EW6GJD5K2d4Rbi0tRh7%2FJsYOjNH3s2h2fpk7V9A0C4DCfMd679xXn2GNYiH57iWbGxi6ihA%2BYOnCiK88khAI6bPFdTMkUHzG%2BxuSI6uK04IzD3OrzwqeHQUGqkvJqOLO17czsXAVgHSaYd2m2o3oUMpcv%7Ctkp%3ABFBMtuf0qNlh"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.ebay.com/itm/266165047247?hash=item3df8ac4fcf:g:zogAAOSw3DJkCf3f&amdata=enc%3AAQAHAAAA4DTSWISM2dn588EnBaVcBtpQNYpCaIn%2BRdUqbshTu5wX2ZB93X0DHAspCV%2BAngIsZgvGf6nRcYu5qvSnH0AY6Vi5rJLww7eC0YtQ34sLJMP3xoOz3nY%2Bd4s%2FuCNCv8PT3wcwjqkHWU5xFNp4MmVy2grend%2FgaStxonaOtXfor1xbDrZcqGprg1xEGCVyQ2Wg5E6jrgkXyLoWRcp5s7y%2BbOr1QlmtmWueOiYr0ET7bnUwidM37nAtlqhsbL3IjViopFiYhE11x%2FMYNoM90mQ9g1WE6iyd8EGTaNRiCypzsG8V%7Ctkp%3ABFBMtuf0qNlh"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.ebay.com/itm/115705841441?hash=item1af09b0721:g:EKgAAOSwrqFj5oiz&amdata=enc%3AAQAHAAAAwHQ8IUc9uwqYG26ah38A3w23jRFdN1Ig0H5UGvxDl1cRNc9p%2FupoU7CxCH8VWlG8%2BM%2FQARuakfYjqX3BATl5gNfQNQjr9COeX6dDA7Md6qtJtyeCFh9tl%2F1y38OBa27R7YI9Jg%2Fi6aPuurYYts%2FwcDjxL4Nthw2zXDtT02kc3MCbF6Ry3fjeFgJXJTdKo3TeXqHh%2FVr3mLqGPKAYCHRCIzii121QUyWcKCRrguH%2FgfgW7MNExbzgMYv2tuHBuFFbug%3D%3D%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.ebay.com/itm/304830388882?epid=15040889178&hash=item46f94e9a92:g:BWQAAOSwFytj2TK4&amdata=enc%3AAQAHAAAAsHEKuDrHotr4JC9o9DA2KolW%2FtndLXsPtRicvEqtJMCkoL%2BXLA6VAYaoMYddXtbWVhgImXUzROUUBvA%2FOhhiU9OVwhGDbgY2uRiMR8KKiL1aH0ogoBsD6wboh2efnpbfO1eymfD3hdG%2BhUXbGNEIPWv1N3pyF5qxbS%2BmBQwn%2BJijoVSoODCbatNozUrTKjRcHe%2B7sHCABOSd4N8FpB%2BS2NrCgk7qqbI40tGmbq4LOHZj%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.ebay.com/itm/266159309327?hash=item3df854c20f:g:ljIAAOSwLu1kBKl9&amdata=enc%3AAQAHAAAA0HZSvv6fesOlszYSAyv41TjZ2S%2BgXiL03f10VWAB9vxDkPHbHG6Imfo8SqVmp5ZtNQejQsOkluGz%2FbwOBQPG6t41RyOKYJD%2BxZsYhESTFJUjmk8BTKpCRJpJpalHou%2FbOrJ669178ataJAtJcVXzvy8aCEOmZy8GupjpfPauPMc7Ek3l3QZK0bWD%2F%2FjEBHiAE57eAjeizcp466hAceqQ6rsfzpLhAasRMi2CqZc2%2BFmu9FP7TWVCWYjFL3x1onjbfpUQhHwJOgHci%2FlMfl%2ByazI%3D%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.ebay.com/itm/204268743406?hash=item2f8f5daaee:g:8eIAAOSwxJ9kCZRf&amdata=enc%3AAQAHAAAAwBtOJ%2FydwPEbbVfvx4IiK4CkfAvg9kvg891WtAuYQJyQ%2FhoXCD7x%2ByGGOcaQv2r4iuXftJic0PrRm7IlRRD0TGEx85Jj%2FdoJ5ApXAtQKyNrg0hSYbfl7ivfJyylKK3cBHfZkUSCIvyX1D%2F%2FsINeL13js3drMmES7Y4%2BRAY54Uq9iwwea6t7dUJX%2BjsCcGAvFt2tvFkVa29Ag1T4cu9ZHl0YEstItVSfAxdB0YqKD7J1Rcv5W5WOGdkC2fT1jeaSM2w%3D%3D%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.ebay.com/itm/165324532233?hash=item267e1c2a09:g:i~YAAOSweANihbJA&amdata=enc%3AAQAHAAAA4PRdPePOAndMxQlHUagbauYmHEKg66R22EB5qNRttKUTAQ5zm7nVGRd17OqaaIpwRf2OeXuKAdibWVNoK2YHOdpRMYmDLgo%2FWldnNux%2FqxN4r0VBw8caravO5NbQOmPT%2FQqcXvXyQvjsTwemYYiIrr4UT1cK8QtHWZydW%2F0pWNw3cORks8BC4pALS3FqUjVXxW%2B2PDofuIoopip8bXq2MFwvOmuWH3Qjg7SfMtAw6u%2FEOJ8Gj6bxdcr57xMWFXbgjcSV0rWp%2BcBrsSwZnEyDtaKipsERf86Bqv3oQ%2FANRvCZ%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.ebay.com/itm/255992774978?hash=item3b9a5bc142:g:0EAAAOSwR6hj-49x&amdata=enc%3AAQAHAAAA4BYCvHKet5kmly%2FcZc%2BEJrLsf%2BpUCwXMRK2lzK0ruLre45D%2BOlnD3YGzKMCmz3l7KkkA%2BMFTiV%2Fdb89TFOXL4TZ6N57rNpNrUnjV2rocIvH%2FjbdNAWKquJPQnGuZbJeOhNdmQw9yknWtoQpWs3wIhvgcQWrh85%2Be3%2FfhfHB4QmLDUaXWk8QtdXRHqx7sSL4gespfS2oScckmmXF0isYs9vK93IO%2FC5XJuPTayXB3BiweCVckBGUagk02ybE9gf1fI5Nm9Co0TQ2Ii8oF32PfyAC6XWGp%2FaN503Sh%2B4lFGtuz%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.ebay.com/itm/154854581495?hash=item240e0d64f7:g:3YcAAOSwQNhjfRjm&amdata=enc%3AAQAHAAAAwH65uVbIcTEud14IYdJaUXMKEbHjjx9tMq5HxvkQnzHJ7A1eVoWyvIxwKK3A3GNbauy6DvlOeS8xfXmSLviCyi3DSoGN4Oec4ZcVhbdTE0aZR1Yh9kPnx56EnDw%2FBfZ00UJ6SWlni2Q0bDrDjPpfZOhR1sbc4A657iXdX%2F8CMBCQtFoaXG9jfd1aCCr7R%2FxlGyLhdtvrsvQPvT6WpcDc50SJ9z78dXNDMUN5ugukPwE8IMB%2B0%2BKH2ahMeCbrVpjW2w%3D%3D%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.ebay.com/itm/165920897625?epid=28049286309&hash=item26a1a7fa59:g:qpsAAOSwnzthQhsT&amdata=enc%3AAQAHAAAA4HrvpM86eBPSfjNMTce%2BTeRIouWtlGPZPKaF6unyLJe3ZoVBvWY7UJawXwRyXqbf2hpzfL%2Bc5LZPKl2B8EwVWU7S5F6G113GMqWd46Vn%2Fn6vnpiUCkdTE%2FRxAXCIFIcjRlj%2B6eamle1TKrh20pNSGPCT9Ao7nx7LrpDxQzMtCGpX3j108AHHOyS2jyFWpkJUvpmdUXr0DSiXYUjgsVHLYE%2Fp5um0d5HKck5whabimCZh83RSSrHen2S%2BuuoE%2FUk7uNciBcqssLOjwAEZhLhM9JRDcrQbRpNizn2cZBW71gIZ%7Ctkp%3ABk9SR7bn9KjZYQ"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.ebay.com/itm/285140988740?hash=item4263ba3344:g:Ka8AAOSwr4Zj3BX3&amdata=enc%3AAQAHAAAA4L3B6sNQOk2ldeeFxEe7lrMRLwvOpTWuXU6Il0Fmni6AuLEvKoCI5V67OFGJ2ZocgQFfLUsRnD%2BEBvSTzdLfEEUKZ4ZjNlt9dx1JMpw%2BFFu23ihPDCU0EID4PesmP%2FJ%2BGzVv%2F5A1KDPdvJqXsiz6GubTMt9%2BkHMwJXOKEwz9DAIlqPb%2B3AnoIHCMmZu7FECilvnWxMx8G6iw4%2FaAs7DuUpvwCSVKx%2B3iVQXJf0Uvx4b74W2v826Evqupz%2BBjIAFVOxvuEfwJcmRv9B%2BIZnHkjh%2BGx8hx0dwFizaw%2BB5eGfmW%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.ebay.com/itm/275734713781?hash=item403311d5b5:g:hR4AAOSwT2FkCS-e&amdata=enc%3AAQAHAAAA0DnHLZPIdEXO8pzBqvZokv00gHugNOIWaucFAfCwrxlSy9JuSRICrC7XHzJ4IeD06wbKL3fIyGEde27UlCaxXdS%2FbBxw0LGqJd5CWXDJUz0ClSyqbaUcPh4fWRgm5EyMFDislmPSeYCSV36HPxf5m5PB3f7RQy%2BwxbqIsBa1NetPyR9%2BalfXPYGV%2BcMwvWM5YM9%2FisCKmGTY8S%2Bw5zSRs7rC1P28qhjAxlkgvlukZnVK4ZxEtOqzS8Z3DlqwBIbtc%2BVMzPzM0iycry%2F5IcxRtfQ%3D%7Ctkp%3ABFBMuOf0qNlh"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.ebay.com/itm/255965396933?hash=item3b98b9ffc5:g:SOMAAOSw8N5j4MVT&amdata=enc%3AAQAHAAAA4ACtUetU%2Bu5UN30jeAg4%2BwByM3cX%2BVLfSdUthTH2bTsjuLuobR56euaT6LZRYl4rOw%2BH3JQ2QFPI3QtXn4q7WqqcOl3SfBQRjH%2FoMdLuWc6M5Y1uzjVr7lTgKZciKdIn2JlIszpmFJXGzzP7r2Xk8foI87D8Ox8ppzYfWR9TjCNTKWw0m0%2FZ3YCmFdNR9Nj%2BPq89VW2G%2FQYczXW%2FbW6EwTLmSk7dU3V2KDmeRjMeXVoYY29jSB5YcqpNsAmAZVhnT8SBKEL9eXdt5cGTPMcs0pjSfhQTAzD5uxsMl1i%2Ftsey%7Ctkp%3ABFBMuOf0qNlh"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.ebay.com/itm/154887586872?hash=item2410050438:g:HbEAAOSw-axjQFZz&amdata=enc%3AAQAHAAAA4JiDYMl2ywaLtK0nEpdGYYnDfZXHvmheEwgTuTD%2FDAiTtjHdiHA%2BX3NC967JTwTnzG7dozRoe1AqAIYoi16Y6pT2awSpQr1D%2FqsFyspngupb6SE2h7xBVhY36ZjDXTqvhYaG0SfdNU%2BnIeMNU%2BqZFXkWXYFrJrnw0m4EgnVsxTZQvWt4uI3zkoaiNp4R1O%2BywEHc%2BpO9go1MagURWqThkjrW5r3c0pcr3tEc2dG%2FhogwKmiN0GotpqkJ1xMYf9QF6cS%2BXP7fGy9MOt%2FnTDj9SH4uiI9zsweclxuyxNQNHLms%7Ctkp%3ABFBMuOf0qNlh"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.ebay.com/itm/155443466095?hash=item2431270f6f:g:bvUAAOSwwbpkB-lv&amdata=enc%3AAQAHAAAAsOx7r17rtoClDzQfCAs7UAlo9Mj0%2FIjyevHTyn9NNyY%2BW0slYIbAtMwBmsP1PWQHnhgqI4%2F%2BUhff%2BNo0sIFsXWpgARWG6EOTtE1JpT7IkZ%2BzmGJ4bGbKK6iVFTc5YiEfjYEw%2B81sTx4BwmyDjFuj78fXq1Q1nCNtQS8TIouECNebGPBMC5tDYBU23NsM2YwwAz8BEEEcu%2FCZnJGtCDLxnKn5EIytJgZM4V13fzqOcT79%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.ebay.com/itm/134337765811?hash=item1f4727a1b3:g:sycAAOSwYLBjfQXb&amdata=enc%3AAQAHAAAAwPXeJGXWceqmwWSqftAPAwsNKTgT1kH15gHQTSz1eU2RHyX8b0tFoyJeiF9L4ypA5A64g6SVIK%2FCTv9497yjW14ez2z4SpZUNQMwsBpzDKCqVd8yEgzqcwO0TC0Zee20iKl04F8QoYuRDwXXeUBAaoBJPKmb42K%2BV1fJPgky3NgNixkJdg%2FSpBrBrgIc7rJ5N2uRf2T1vudffltSez9C%2BDZKD4HKXBBr%2F%2FqgyOx4eRLV35Ahpdt3sK2cLO6ACQJWRA%3D%3D%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.ebay.com/itm/266147146323?epid=229053842&hash=item3df79b2a53:g:bvQAAOSwpo9j-X-c&amdata=enc%3AAQAHAAAAwHwBOm97TRxk%2BlFR5W7fUbMqtc0h3QdJTQdtlwZxZ461vumnai9a5jFLmGU%2F%2BTlQZr%2F4iSdlf7CBmDPK7Hd%2Bn5x3jA78Vg0NDbsMeaCK4MM2mKTDB9M%2BbmXmC3m1RTzDiem%2Fr6%2BYxXRyV8M46QVMCdPhk2CV1S37Cyx4qa50RbCRmCylTMdpB%2FLx42qepkvWFDhfVMAZau8yFLFuyCm%2Fvnoav3zz9AjilJAwDF9WDVfRn0y8EDo3R3h2roIysnaShg%3D%3D%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.ebay.com/itm/255938053221?hash=item3b9718c465:g:u8UAAOSwTnZjrJtU&amdata=enc%3AAQAHAAAA4Abf1NeQOawRf8SzFSgsJsnGDYZysO0GDj7nEs65jec0f93d1BK20V2%2FkJpX2d9lWiBNeE4l84wQvrH5aMEhL9uqv%2BTX%2FlJXgVYyFMHXwMlb4y7L%2FsnyvFb9oQD%2FrTh0AZUmEGqXKEACmXCcm28jDIqJ5BGzvuNfnQD1zZLkbOglnBruetq%2BaWkNyEHSHSAGdAqA22rDR618XOKU9aCH7u3R2B7gjfR6gGqlaGqHCd4iRE3NS4PBiuIf56XKx1eMxZCTQlXUx9UX3PffkJohr67Y6fkAyLx0ZeE3hfzMxdn0%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://www.ebay.com/itm/175140626362?epid=243729421&hash=item28c731dfba:g:6P0AAOSwMhRh-p0R&amdata=enc%3AAQAHAAAAwGznVrcslXesmFCthZUZaWGYKIPSpK7wBNnLIL1gnFw48XdWXQBLAX69y29tFWI6vhApTGwK5I%2FHlb1ZK7lPWUQkUFp89FvDBHv%2BIWfYZ145diIgbl4Q7H1buxSZJFQU%2BZMf%2BOnZAw9SBGyFq7hAfVyiiYOG81DfNKuWESHGoKCrU%2BgE1xSuNbtPoiu7fdVRuA%2Fr%2F7PHXETrfa83IYHGREiPBIVCrn18f80Dn7E%2Bux%2Fhydp7%2Blu%2Bt8jTCp3aNKV2LQ%3D%3D%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://www.ebay.com/itm/285177232915?epid=5034224458&hash=item4265e33e13:g:TtkAAOSwx1dkCk3I&amdata=enc%3AAQAHAAAA0JgxmT%2Bn8HapxtDsvoWMtdpvzthxag7pUMeZiqpwnuoExfESOe2AzgUJussZWIva8VEI3jmiuYv4VDij0i5G1FdeSHZjQBiZYIxmZ7iS8HpEZ%2FNYKXw0MRvL0J7%2Bk3dYVJsNRPD5QU2dXi85GTSfEH%2BAKkIrFM%2B2L4DrKYJB5oKmtMX3tgKYLn5aDjrIjYBJpuxn7n7TkiPrRBMJ0YjVU5DNuS9HkJyMOwuiqiqyKP%2B13SSq8EHABVH4MQssZuIlHTCHRfOQ%2FkKdOrmebH6tpBc%3D%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://www.ebay.com/itm/385469299104?epid=243845160&hash=item59bfc2b9a0:g:D7cAAOSwnWpkCg2i&amdata=enc%3AAQAHAAAA4BBKuN041pOilIoBe1YqqGfWjOiXPvievuHMPAzOMl8r%2FhJk0jy0%2FLVfBG1C%2B7%2F%2F5yaDaDjdIcIGYvbBPSkasgHzxuKln1gxkQOBRJgJdQgTD08DErfceGgy36rj7yuu%2FxZ2tQh7UKCkPrnH1qfspN5xDejX3XEqGT0Bsv6IBH6rfxJ2Vh8sPfTL0q5%2F%2F%2BIkJJQZRBMh3V%2F%2BPpXB1Wko8FmMlV5mujIsllQV1mDK0hSB4wmSbxkHtMhbq8mQyWhEzTuD7JSOZt%2FVcQ7wswdR7j3OMHXRW%2BQUBDDG%2B1OCIMI2%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://www.ebay.com/itm/285140990614?hash=item4263ba3a96:g:s4MAAOSwiRtjcqaM&amdata=enc%3AAQAHAAAA4MF%2FU%2B3AzqHKZzkdJ2eb%2FpUQs0KsCR5w5VJSuccFB1IRyWXfA1lA5GeDyR%2FJMlp61f6CleLW0Vu%2FDy0Heg3rjax%2B%2Ffbrf8Cdg%2BSLuUP1I7PlgTGcJEMGFzJxgd5fQqcmcznRZvzS8YKzQKIL5ieelWYMq8NgGq0bkjI5ggk6ztfnbYe7pmldHBj%2BAU1WNqQVpQpUj5KgKhxeO8wWILiSFCIDHFqGXy0waV749AeFH6yiEFoKax%2BD4MEt1an1YyDBgKVZv6lxDjC6MqoY85EUSWV7oyuUn7JWy5TeInjCiG7I%7Ctkp%3ABk9SR7jn9KjZYQ"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://www.ebay.com/itm/325558494238?hash=item4bcccc641e:g:AlEAAOSw9olkAX66&amdata=enc%3AAQAHAAAA4FjIVwdep61L6UndCX7Uk49Oz3UZ2I2bPCLEnBf08TmxgMdAfTnpRhZTg3ZcN05TMNwVP6%2FjWhjnJAUdLJlnE0kz7KJnpgB8pIlNVTK0YG9zn2noybAnttpOMLQiNTJDJwq1Dh16coAehzGDOmdMdim0%2F8orYHELGou4Lm9dpijIfkwH1L1iHGL5CSNWRRd2O2cAHhg2KVQqzud4kmpj0wMeeUJzW5EBiJT1WGZrTW%2BJnBtdTwqb%2FYoMbBvkrkjK%2FKMqB5Scw6mt1UE3IVmMqaD4umwcxuRSjJx1KYkIea%2FI%7Ctkp%3ABk9SR7rn9KjZYQ"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://www.ebay.com/itm/144978157843?hash=item21c15f2113:g:A90AAOSwHVJkCH~H&amdata=enc%3AAQAHAAAA0DXQtCtoBJmxjrte8%2FlP2223i3rAtQVPHbkZmbBMhCMbLSFTqwrj%2BkOHTngTzjRLagl5iUvaC6AAGxaEB1bG1QiuK%2Fp5mo789ovs0lahAn%2F3P9GMoXWG%2FME%2BxVxW%2BRrFJ2kKQrbbukocjuyEUBqTv3CP8HozDq2ZqTZ4vevMsg2iTJLvEqWlwJOOHRQ3rbcTYJvpzGUCIn5ltBXE%2FB1y3AehKXbjcBIqveNqRHD4PAP7S0%2BZji7RXV56uue%2FUXReL7qz1LlWa6z9%2BbYhZ%2B2AbTk%3D%7Ctkp%3ABk9SR7rn9KjZYQ"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://www.ebay.com/itm/325568007059?epid=241922885&hash=item4bcd5d8b93:g:lCsAAOSw78lkCjwc&amdata=enc%3AAQAHAAAAsPQcVzP2njJ7Lgu1704S%2Bv4luH1rngNuM4h2kvfjLToRGWYayprdK5XZUAqkXu3FVIoLYeBF95Yavph%2Fty4vpk91UHJA74iI6ash0zxVGUfmL0DSSsAcRpfwHO3wE65fvFAPr8mqKDw15S%2F1lQXn9RMeG6a%2Bxqb1Cwdt%2FCIo7wFsiZE6yWBRKqWiipNuQiX%2BFUqrepDwoB7SVf5SjH1%2FkTJ0r9HF2%2Fv8FMoYvsdVwuk%2B%7Ctkp%3ABk9SR7rn9KjZYQ"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://www.ebay.com/itm/295552779318?epid=6037478371&hash=item44d0518436:g:3jYAAOSwg5pkA6Ad&amdata=enc%3AAQAHAAAA0FKS9HAkD9aM5cb8j2PbknUJOEDdOfS0qPY7IZseqjSfM1cLaw7ePUvij2xypUBTCuBm2qTjykUDYwgzymzELczk0OFZ1cqLg1n9tBmCzhkSt9zCD1GFh9arNkdPCckz%2FYePHprImxsYUCILUSD1u7yEtfCUAb1ayOs3NLKvmT5cAPyqzbh8Rvv2wPGuASWuKVlh2I2tgB7gaZ%2BElrglu0tu8TBR4pVOmNfhaA4X4IQ0xqRemqQVb5TYGwjWvuLWRyXPPYhAbJQMdbjW9ST95ik%3D%7Ctkp%3ABk9SR7rn9KjZYQ"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://www.ebay.com/itm/385468530180?epid=23054868819&hash=item59bfb6fe04:g:JbIAAOSw1M9kCZQi&amdata=enc%3AAQAHAAAA4NVL6r3foSQmcRTLravigpiVDqZDkS8sbfikV3eMAQpFctPIczVbxXze1BsoMEf%2BOpf2TrHf7eJl4JZH7Ge5%2B%2BkUKtAX7TzfjXUbQHI60d8zKtAs67LmZ4MEaof5U4Fu%2B4SmbIHB91LHDOsrARoUXX83J1VWyuDmRJ%2BuQJOHZs%2FT%2BfwNaPSAzm5LCtjmXafPaT43HOL2tTOlnZa6a1%2B5O%2BHPY7W5ok8siUL2JzBsFD%2FHecxR4zxZAEMNlrQ97Leyet%2FN1BC5UFhZ1YlKxF%2B8hdzqqd0XgNbgZ7w1Ujp6yda5%7Ctkp%3ABFBMuuf0qNlh"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://www.ebay.com/itm/154843099853?hash=item240d5e32cd:g:YccAAOSwaZJiBxO2&amdata=enc%3AAQAHAAAA0MdEGXnecvT8Lzt47CZJlvHrtfmcQFUWXmslsSmJrgMoK7JHqbixOpsihOwU476LwjY7rAlAOoyfquPMtFV2zXh8EuSu55ESItj%2FI5gKJ39Zg855IFc%2F4XNNLDC14RIAJ95skhBy9%2BkWUvkwDJhdiznKApVi7U7IQTIefw220zDgrFrDhHo%2BfQ0ymJZ5Frhdg9YF4YuOSJhsF84r3sNKSAA9K9Zx46xvrW0vTAsUB8jER7qQL%2F0BfYfm%2FDUy9oYmPQEojBgUtwIEKLsbmd25jbM%3D%7Ctkp%3ABFBMuuf0qNlh"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://www.ebay.com/itm/284204990157?epid=170330392&hash=item422beffecd:g:NLIAAOSwgPViVKNu&amdata=enc%3AAQAHAAAA0PIy7ufXkIAlz3chNBgR1IbqgrHNCOehUZSDKwa8RWaKfWCTzYeId4VUoa2pqkBZFRPh1O4StcDGU6ToKNz8%2B6XJcufUOf6KuW6v7LrFJGSNFZdR3dh2I%2FVuEO4NyC9Q81IigX0BjZMDeOligsaLnQugTC%2BfKoKWOSIC5NyWRzuLEttqZKUwg0n99jkfPjYsHzl6O4YI6CCiJTw3CyICukLUrJKItdVxYPPPiNVhfrNnWaCI7uNLWIZrwFjAg8Ab2gY%2Fgf83rGPpk3%2BIzBmSD%2BQ%3D%7Ctkp%3ABFBMuuf0qNlh"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://www.ebay.com/itm/313751933866?epid=235202925&hash=item490d1293aa:g:ojwAAOSwTmBhj~7n&amdata=enc%3AAQAHAAAA4BylyH87Z2SPgwqz1VTJoOEvCYIA0sQuuBXXter%2BscHSRzKV7TZ6opvo5uJC1N0rBC29DJ9xaG3CBZgXZwYpZG6oHpqnqYGJZyPLIDDDT6%2FkO5h78kcdjh4P8m1vM8DiwcYiI1QX8FDYyWBRkuXf0x262IKrn8rvmZUKok4YKevKx%2BxNnyAdwGiHk98xMyciOwBz02pBUyqWdiOJTC2ai630QCN8DZ%2BY9e0%2Fld3gH0VduKdf4bW1vUCNr9mIQkwJY2ZAx4eDKtU9wCLBBbldZObfqqeLk%2BiDxXxn6GRFqNN2%7Ctkp%3ABFBMuuf0qNlh"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://www.ebay.com/itm/266137891447?hash=item3df70df277:g:B5IAAOSwq-Fj8XA4&amdata=enc%3AAQAHAAAA4K5Ki1ZVhZPC1QLoP0vXwsm%2FTGOWk%2FnsoI93TGj%2FFQPFY85HBS33inbmu6JlubEGxOWkFIZT80%2BneNn1S1alKU2pcKHmsq0PQdOcJHR%2FqlLdc4WKygVPkLWCMDAWbDrvrvorGtWJqotLll8s%2BaNZke294sdneMK7em8RJb7iPGO7XjXM1kb1J%2FyBjlthjepHKf3f%2Fmx6IFHGplpkoCzzgNwnUaLeTAEUiOra0XOFE392F8ODNPIf0V24Z2twRkf9QC0MBjfZ7h7eFyiq0zlOlQSvdE1RYXoJwouXDwPws%2FsI%7Ctkp%3ABk9SR7rn9KjZYQ"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://www.ebay.com/itm/285174357206?epid=238174530&hash=item4265b75cd6:g:JAwAAOSwr0Fj8AHz&amdata=enc%3AAQAHAAAAsNCbKiaWXP2LNfi2s5fMCKCahNk0sN3W7r%2B2SOE5n5KOBOtpP%2FsM4yhY%2FPwiJlaCaOm5t8ja09iolXenNw50eYL7TEgEXSvirRIULpU5rmQ6M69c31Ezaaotfc%2BZ6cEueHQ%2FB8boyKuIm%2BL5hC7fwObYYweDxbU2MD5waTrJyqCb3clZdRPxpKZygxf8MpBjNNIP6FzQsoaO4PX7gFfjBla%2F4qNaOe0Df9bUUBQT%2Bys4%7Ctkp%3ABk9SR7rn9KjZYQ"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://www.ebay.com/itm/266163817877?hash=item3df8998d95:g:F30AAOSwci9kCN~-&amdata=enc%3AAQAHAAAA4CgoGgi%2Fl3kZQtt%2BjNwdj502MCo%2FBte1CSrbfH%2F2BFdP%2BkWuvup0Vvs86TFRRR1H%2F1yIiK%2BLpzkUVXhskaGh88e0UBnW8qwE9YmUOjKfFP3Ra3wgwzeQwNoAa8D02VwR6XimgaXn%2BRD2RwoU3E3JQegAEWu74SBoeP27bKgyVi%2Bv2wUZVqAc7%2Bnj5RDCwjgB2KpLMzrWMoJS9tclYRue4SmtdL%2Bzf1OYT3P6ZREDAOINeGPBtUY4dYARu3o%2BZYekiPXGSb4H29D%2BLKpCn7Qrnlov%2FoRvJhJaUlioHIB4mpkt%7Ctkp%3ABk9SR7rn9KjZYQ"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://www.ebay.com/itm/275608368141?epid=12057115261&hash=item402b89f40d:g:aLYAAOSwzyhjr31J&amdata=enc%3AAQAHAAAA4EXmSTJPFNWwbBaRdDxGoaZfu7OoiHpwprWCSxGdJ9oo%2BB29VesQ4nS15Wkc19soUN1OeXB9p6sO21FUwgY40%2FhzNxQawIinI3RrXfGwKp6Zp%2FfAJnunleAEno3ihYd%2BziQxwCx32q3XhPJR32d9EqZLL1BSQ%2FsnWmfaDyhwsfapb17nkUdzvsf59q%2FaFYlM8sGNDfIJx5k0KzDkdXaWxlg9s6iscQgRLJws%2FqeU9qcj%2BhE1sSpDzwG1etid7IFFLKtmFl3JhxbG6eqy0Uf3qso4%2FlWBfnKl0aHwty5uTDYM%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://www.ebay.com/itm/165971912879?hash=item26a4b268af:g:a64AAOSwsmFkA8xZ&amdata=enc%3AAQAHAAAAwG1V2RY52wkymf%2FSukwx7ChtE9qUJKCrbHkG8RjTzVIuYGElpZf03lJKD0Wcs4a%2B4qNFudghRGAM4nyfFsFEaW3pT%2BhWNHR9e7JNr603%2FbDJS8h9L6hwl4Km8EN5vqTAFYXzD9%2Fw%2BpVe5l%2BSyDzh388JA0m7wPfdSpXTGYw8UVe0zWh63Z3C3k3t1StXTuNMxUyaErznWglw4dRiS6oLbIDvvzBwVJTZjGhaOXNDQf7oidKkvVrZJzaLTdaUxFU%2BWQ%3D%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://www.ebay.com/itm/385451028441?hash=item59beabefd9:g:En4AAOSw0t1jdVaP&amdata=enc%3AAQAHAAAA0Dk0RaCeZ2BtgcymfxEhDgw1M75EzQep%2BUIPszmgILgkaWF6uLr3%2FBjdN6HJlPpFwb9Qqb1CtQczZrCeLRQ6yCGpdwBMYZkkVbzZVuxhndgplFd6p8U6tpSGH%2FMhvY1oXmRjpnEhZpAXXbN0yooEApaSMbKkxWsVvRAmJG%2B8BU0V3jLHXdGiFIShMr7vg%2BZt%2BnTEFFmiQ9uLfFbzFHZ2QjmR%2BmV8wftOGyMLWmUz8cFaYBExECPITDW0X1iJcKVzAUR6D8FdPHb0ET4cdEOIXW0%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://www.ebay.com/itm/265785439260?epid=204351686&hash=item3de20bf41c:g:Mp8AAOSw2-9i1Xur&amdata=enc%3AAQAHAAAA4GMlnOxKu4BbRr%2ForMb3raZ9XJD%2FoC3cV95s7bUGrFjMvSYWh84b8URzj%2B%2FUGvuhahkbQbIEw%2BmIytJPsffQgHnJAJqJdSHaorVTFr5bpT8oXSxCA1LCkuwD2cUxG957PKITuMPtn1c9k6RUgdeccuSnWgYSynWWLHDBRL1b9PFq88H2Qbnsq1oZN2zt5VBA6LDE%2BtGjMrVbuDBuPx3KLdTnTPKNqAAgmtsLTw%2BpeZubefP4MnjVWLWeVdGM4LWlbTjsqEdSj6OaTyzKohRWQ3yzklUJjh9%2F0tkhkEZIvG40%7Ctkp%3ABFBMvOf0qNlh"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://www.ebay.com/itm/385016086358?epid=12054852458&hash=item59a4bf3f56:g:9RgAAOSwlIdi1oRo&amdata=enc%3AAQAHAAAA4J0hzILHtH7WEriwqb9fLVqJEi%2B8vTjMLrI34b4h0m%2BxVzTGtAITdy3kWP9PPEQkzt3LZ7mCzTn1V0l%2BQBJVNW66sX90ij3co9WC4GAodxqF%2BjXJPYFIa6nWYREDWUH8GGCvOK44ghr3U6rRfuWjJB8NdLF9dsiMMKbT6Zj8BttIQiyl%2B0ezp%2FJdUpF8Ml2%2FGpXJopAhJP6%2Bc78O3%2FtycDPL3ZAnpCZsRUbBRFhNZUckOaGDbw2vTbOWTLRWuUiikyWDFmbzx3c50b1qIFFmjfZeqUl%2BKo1Qv7OoneuWBg9H%7Ctkp%3ABFBMvOf0qNlh"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://www.ebay.com/itm/266156915776?epid=16030599546&hash=item3df8303c40:g:~FIAAOSwV3dkAiix&amdata=enc%3AAQAHAAAAwJd1scWDfZCcJ7jBu0jtWfd65jPcDAofFCy%2FvkUnRCJ%2FkVt%2Bo9Raxdb%2Be4eQzSChnVk7VLRHyag17m2cPq%2FQeS4nDFyV03%2B7paP%2ByAk5KP9Urb4zcIKllGdus4XhJf%2FRzvWkTo9q%2FzYJZaFtwLBvy%2BdELaQfq%2BTrYm0l3knHhar6aIuo8TRRDIAdfnxVwCykZSi0jy79Z5q%2BTOAcgFgX%2BPTDrHAl4e8FNYl9eBdGlwhJowWhbXD3wp2jbmm3Zyc9tw%3D%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://www.ebay.com/itm/334778692237?hash=item4df25d728d:g:RPAAAOSwXfNkBlCV&amdata=enc%3AAQAHAAAAwCP1g6kG8gk2LTQtx9GGEsjSdwW%2BwfbYBfqLtZeumUjPN7fxlRRwuJmi6oaWyfRe%2FEoYFn5lQ0zeKWYUpksBiddkXDk%2Bt3swuTLICjCCR45c6MVZXtwZ50hJ0pBWdZ35fvb8FS8wyQHJwKzzj0P8wiyEaJdZtWqDxUpiEQRnMa5lKIRZPVR2P%2BxybN8Uvnv1779br0KnZUi7PRrmyb27RJ7A79FZer1CPOSYV2viw6bRvtfCn7Sa6WHSzn4LWOJFHA%3D%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("42"),

                                value: "https://www.ebay.com/itm/285174618309?epid=241911826&hash=item4265bb58c5:g:EWYAAOSwuY9kB-5S&amdata=enc%3AAQAHAAAAsGHXWM09BFfh5h6HTIlMOc980qGb1%2F4IFo92ChwWDWiCQNX%2Fk7%2FN%2BBTaGPH%2Fo8F2XKD7Bl7RWJqORNxY8ua6NYOJz26MB2YxNb8%2F5%2Fns2KL5OFgGqGjg%2B1QlCVT8dD%2F3e5ygPBkLC5F6UcGawAgGYyBUhTmQ756g576S3T741narT%2FzXN%2FSFWr2JbLnbwGxIVXahzBbD44P6NsClWnYWE8nIGWxKzEnASGmgcgC65BB%2B%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("43"),

                                value: "https://www.ebay.com/itm/234920488770?epid=216598788&hash=item36b25a2f42:g:rnAAAOSw-clkA3Gr&amdata=enc%3AAQAHAAAAwAz5%2FdvaHDykxWmNR0O8VnpNmEWLt1%2F9mW1zR0IDHuWBDCgRIsF6Vof4SywJGlPnGHykeOUyS5UAi5wn8C54Q8wBIvJnrhWx5K2wqMa%2Bg%2Bv0yQNYnwNUTeQRO1QhhI67J0oOIaOkFQnpsfYnTL0sP6XYc7ubyQtG89V4GLkod4o4TmeJwr3mOnCE%2FBTX%2BBJ263tQh3GU7fqz6W4VtNZOovjvIckL2SgGX7hlGG9JB1iHz5fA0i%2BniALtd5ezqZWAGA%3D%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("44"),

                                value: "https://www.ebay.com/itm/314412263494?hash=item49346e6846:g:3k4AAOSwj79j8Wo9&amdata=enc%3AAQAHAAAAwGFZKTURdAbpp577%2FVL6oiimM1weVysQSvqAoRKOYYLxyfucZGcZqdx%2BWw6okfjscbH8WCmJF%2Fut3quTx5plxuFLZt2ZjIFrEu5WoIue1bGwzh2RLlAKYsVfWsrv0zXIsBzzesNPtpmzvuNJ6PdMNw3prsjVbL9DsIejF1YGmFBPS4sxcBvYu77y%2FkqQre%2BmcH9Xx2T52fuDp2LqqUjB2xA%2FW1gWTKOA0B691%2BBLY8DRe%2FKKgQsKsmWvHu1fLBn9jQ%3D%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("45"),

                                value: "https://www.ebay.com/itm/155439935350?hash=item2430f12f76:g:LXQAAOSwtFpkCKXo&amdata=enc%3AAQAHAAAAwNtsIgEKQQjQrZ9rPP5ZZ6stvXu2zApWMqOVSD3ZIJNNZhjAozlDPw%2F2zWtH3PlVtHjgEtvZ0ZElaJDzq%2FW5OwhHQclUhc9DPyWIeRHhhF3uIMvNESc39yt%2B6NCBTs0rLP2fdgFmV3G9ZhUfpdP3TF1Ahs9rBG98yNOjiTvSzk49vqTz%2FZ4cfvmy10tIIUQOF6JxKGCO6osZaYaDOsuWT67jP9T3%2B8IcwlTYRrTJ6x6Unf6NrlrQgOn3PnhPWTTtrw%3D%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("46"),

                                value: "https://www.ebay.com/itm/234905485888?hash=item36b1754240:g:q~cAAOSwRKhjxvCP&amdata=enc%3AAQAHAAAAwLmVoelwRAsDr%2B10xOj4wQHVJWO3RcGC7%2Bg5CL9J74blFsClW5eH8s7GKHk%2Bbyhv0A5Oik5%2BMvrCWNzSigznHB9opnEitul2h%2BDKpPTUFTw4bcxHPbib9ldIeS9NvruKmdScUZHgwpbGF50oeCK%2BkrVw%2FoKqc59I6VNtLBzaP4ej5MlwYuKTGV44LoUIFLIbl2uZSO6RRpy95kYVULXr5al7Uj0z1Wr1tNustUzYmBndNdq8spp%2Fs2kleKXLSFc9GQ%3D%3D%7Ctkp%3ABk9SR7zn9KjZYQ"

                            },

                            {

                                num: NumberInt("47"),

                                value: "https://www.ebay.com/itm/266163694489?epid=243885585&hash=item3df897ab99:g:xqEAAOSwdYNkCNAU&amdata=enc%3AAQAHAAAAwN8Oi2ebB6YX9Sf5deUQrgdqE1vbUMHiNfr5c1yfsk7ClloGfBWeTL3NU%2BYeVfr9tNv4nNe8Kg0mm%2FHrody1L3vFAineZX5oGDWE%2FWZqLiYc%2B078%2FPW0JxtmUZSHaaPdQ%2F7DQ%2FGxBb4UKb9fvbTjtFl6qx0Us68kyQf5cstJ76PK0GUMym2WA7TiGK25Upqwyj%2BczaMpsqXvTv%2Bi0R00UsVuDwm9s4ebbV8X3p7wNUgJMSTccl%2FS7dGgZg%2BrupW7hw%3D%3D%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("48"),

                                value: "https://www.ebay.com/itm/325565404406?hash=item4bcd35d4f6:g:~KYAAOSwG~9kB66G&amdata=enc%3AAQAHAAAAsF2Tp5qczI6sSSDbCNALceaM8qONodAyxuskFWt7JVAiCcNIpsUOYIiwpnfx0sUgX1JXBoycH8xTKvEMkcTABAvLOEhvhuER1gKmMG3p0%2B1l%2BcJoWEyhI0gVtcuXdX51Fb2lvg%2F8FabLAJcFtpbPUzbYwIn1%2BmrM8GTTY0hxe5R%2BpPGXFbdURgAEIIfGxGS77rst71wzk%2Bi%2BaXZS%2FE1ufds3bFVks1nxcxd8NgNjwAom%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("49"),

                                value: "https://www.ebay.com/itm/275730163484?hash=item4032cc671c:g:vt8AAOSwjIJkBgcY&amdata=enc%3AAQAHAAAA4LOgUb8ut%2BJStkN1xUn32ckl2sbAimmuwOlUK%2BFU%2FDBc1uPBnMZ%2BCLIBrtRa6nRizg1u01rnmaAre5dDLK%2FdOK%2BL4e1HMpAJQU%2BAL5qMgG%2BduZnrwh%2FNDLOYm9%2FPuubff%2BGSpV0Qyy%2FhC81QszafSEzqn2jLkzvSSCs9PuDxTKttSkDVjoUGaaVyk70bmKGngRTm0%2BEsa80%2Bgp5qrFLPFxPqzmMVMYQZRYNOWbDLrCY6qqgWo94aC4ObNG%2BLjnApa7c4ScOvAlV%2BLIRpYHogKt6fn7N9FdaJPeZ%2BdpS%2FaEhd%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("50"),

                                value: "https://www.ebay.com/itm/195629875171?epid=10025332214&hash=item2d8c72ffe3:g:DIEAAOSwwZ9j~t5Q&amdata=enc%3AAQAHAAAAwC12n30lnhN%2FuFpJBBL8FGE4vmnOj8%2B7XSWPPRtuk02GROK7F0rPTTS2Lj0557j8jOn5KwVrPCJTbozHA5y0yl%2FjrI1fSv92FfnoUutjk%2F25vk36%2F8CpfBw3ERn8PUk0i%2B74m%2BYTg9XEaOSqUqq2eL9z6i7qOi42x5gmNcmDeytJIyOGqm6TnZsQ1LBOSQmRqSBXpmDQT5reSxEHu3N0hNqi9WOcJpZ14YWgzGoZLZ%2B8E6kR0BpI7cUPhpHeyRvBsA%3D%3D%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("51"),

                                value: "https://www.ebay.com/itm/125802898846?hash=item1d4a6fe59e:g:XVEAAOSw60dkA51L&amdata=enc%3AAQAHAAAAsGL1BG1Hm2QbGImP%2FjBEbAODIAoIurw2Me5P2%2Bl%2Fpf7hnlS15mAi0kcNHVscBoKp0XFjSA%2FEYtJw0x%2FiLxkzjXiMo2bU8YNyQGIXDuoksHtYMe7Zo3QG%2BUIQpGAuleCOyqVPutCPcUHB4U43Wpj6t4cfKCbxGW2jXoAeEsWUXU%2B49sZFDvjSijk%2BZgyk2jnbkFpbfCIPhqhsJo9C0jt9vzpf2XU59CUciK7d0qwlq7zd%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("52"),

                                value: "https://www.ebay.com/itm/125809797595?epid=6040897172&hash=item1d4ad929db:g:YtQAAOSw0w9kCOYZ&amdata=enc%3AAQAHAAAAsC7%2Bt8HLorAuSQkefTP2NjgHu7fuSThauqVquGSHVatTewVZt%2FOB%2BdmAtuX0YdwEJJ58GtL1K9uY3LRGqLxN%2F4d0dXiwjHYEb3sdqzXZKmwWpiCgwAfxKrZtFw0x4IHTO%2BGcAA2jkrdu23v3h5%2BRSna7G7xCond2Eb1XGQeu%2FE1pIbp%2B6YfHFmqPOuA91CHM4utx2Vo4Fugv9n16amIHk9Ml0p8heNQ6MEAMRtOpX68W%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("53"),

                                value: "https://www.ebay.com/itm/364170844494?epid=243891187&hash=item54ca46194e:g:t0YAAOSwL~dkBAz-&amdata=enc%3AAQAHAAAA0KMn%2BsL5fqIx3HWfWBvGRXMog94GrXlflS9kj2pueO1Pi6R5Izsu9KsBfx3F%2BzWR0Mp0xWseNEoB9EvA0a3zL6N0K5C9f0wmNQPnS01F9Cb2SxgILK82ahs7sUV9jg4lL6WmyQwVqDNCd4xNB75De%2FB5YTefWYFOW8i%2BZVHcHKVFOsL6ENSoIByyECtcHac4%2F%2BNo%2BxAV9rckHwTg2hU03yXua2%2F6f5e4jrM1YbLekNPHy0t1iQHyz1hg6OHyaLl0kcjtu0y%2FAHT%2BfcK1KEy3L8A%3D%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("54"),

                                value: "https://www.ebay.com/itm/385458648466?epid=12037457255&hash=item59bf203592:g:sK8AAOSw7zVkA6Cy&amdata=enc%3AAQAHAAAAsHIG5WXxdDGrNX0hvsASMyTzgzFxEdiBsVmw8sbmPlxk2KQqz%2B9Ln03pGLL7yfZbiaxGSWCMiyc37nGhAA6%2B%2F7LtPCnVUsHRZkS00wX7Ymk6niko8%2BC9r0VIQGaMqzfjX%2FqhoDbn4S3cCvTvGgoNC1Ii1iR5YuDuMplHHsU5apsY0YNShn5kUyUOHYdUN0xxvPXvL0rQiV57%2BQ2W4tqMZOXe4L%2B70x1hocvuIASFiiPK%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("55"),

                                value: "https://www.ebay.com/itm/325559982373?hash=item4bcce31925:g:HAQAAOSwcZhkAr8F&amdata=enc%3AAQAHAAAAwJ8XrXBL%2BmdEzWJpGppsJNtkRTIT%2BOj2WQKJHw%2BSZ9w0BpA2QRKErRvIfM4%2FWqx4YxWcimlwv%2Bf9Jc4XPRrHJ9T%2FVTlYOMRtdLCOiydDyRzaZcANCcZROLV1cmoT2IwUP1zjbPUu5grA80Bk17TLf6%2F0u%2FVOzXdKbC5hsFh%2Bd42QWccvZv%2F2mAp1%2Bd8w7derEMY3RWP1tVdz%2BVzWcrIZI3ZOLNz61vp6YKlK%2BO8r12Yho47EzNScRPvzpygaAg9zAg%3D%3D%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("56"),

                                value: "https://www.ebay.com/itm/274427973870?epid=243957323&hash=item3fe52e90ee:g:HN0AAOSwRRxfDgoW&amdata=enc%3AAQAHAAAA4A1qkp8A9Uxt%2FOMDrJMbeRWCfV5gzoTldNo0OYVwDe5ZFxx8%2F6BPzOD1pnCPJk8A%2BZSNe%2Bt%2BNCzEQ9Z9fkuJlpsMJkorIhY5g86RnKD8NinuMnbzKECTz6P4der%2Fkl5RGBk1E5ubyjY%2F18LC4y1NgFiqNd7Hd9pvvfUJQjx3CJDSBqGDTIcDzVk8DEZNU370NbqOBj%2FL4HWQNIpVxgWQtgBT39MZHmMsHT5Z2MLzgOAaN2kbeAbGOgPB2rHRiKBkA4cUKU3ZdmdgN%2BmEhMHlQ8EuVZFg4FZfWI0YHdj1SkKc%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("57"),

                                value: "https://www.ebay.com/itm/234926839615?epid=28049396770&hash=item36b2bb173f:g:~9IAAOSwNcdkCksA&amdata=enc%3AAQAHAAAAwAJ0ehDlGHFVq8yzqG%2Bod98TFbCCvitSL1laNZcDfw6ykZa%2Flb9Kc9FERcZXYkIvvmg1u%2F6h%2BqGscLIZyfz2lT1nrVs4oUPpHrchS6v%2FYzoz%2FdGxFcgDuUTcso77uLR75DT1Dt2138uRvAUzx8MM3rZDao5UekqR1IQxIz2KfEqgQKO0qKKl9Ru%2Bql2LyOlIUzyqWVktn0rZyzybq5E4xFWyrAUpFAEb3WBr0XNyM6Ne6ASNupyn5mziIdcQ8ZyVjA%3D%3D%7Ctkp%3ABk9SR77n9KjZYQ"

                            },

                            {

                                num: NumberInt("58"),

                                value: "https://www.ebay.com/itm/385016093061?hash=item59a4bf5985:g:0~IAAOSwbfFi1oSk&amdata=enc%3AAQAHAAAA4AJzS%2Bya9CSO2T8TtCEN0aL0vBxyo1ZndJ2E2Kf9egT6ssjGuv8zp1mXIVPRtnWr%2B5%2BrcC3l%2Fk0fUnnwsz3pTNTWJHLquizhSPoyHMCTmY45Ntyg9lSqaJiLANs50X6Q9ysOYjbUCIuOTgyyBT2etOtTqvRVhsTQ4THJSPeS8LXz2Fqts5xisrhrp%2BMOSynW0RECIQYORO8OKQkf76mncYe5a58CM2CJGz%2FsRxcmx7rcnTPP92MosuFtDDPD%2BgBUb%2Brnx%2F5uIICKLMZOWsSKPBgcMR6rmuFhPX0Ni15Hva%2B7%7Ctkp%3ABFBMvuf0qNlh"

                            },

                            {

                                num: NumberInt("59"),

                                value: "https://www.ebay.com/itm/364161336385?hash=item54c9b50441:g:1V0AAOSwimJj-lBL&amdata=enc%3AAQAHAAAA4CxJqvJvK7c%2B6HX05dQndk%2FoWUnjavvFJH9zxhgRoZ9cmzpS%2FhtB7mJ2s3JNqjIXLcXu2XVBFV3YOvLLDi8Tdcl0OVsfUwx2H6d5mNLFwXCLNttw2M1UvnpYtE16WJ6wpuZ2QZICtagxaG3Gb63RvGmwFpyO0jAXCPSYdtMeNnGNxfeyAtKh4cBcLJ95yb4MDhDetITnGYgLC12TL%2BK2hBPoDxzViw6pjiG0vo8qWrIQ0jsVIv4TTd9DigO8Yp%2FTcZU6Ws4CumBxIVgnDFC%2FCkQ02riYULvNV8idG%2FvoUxdI%7Ctkp%3ABFBMvuf0qNlh"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.ebay.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.ebay.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "iPad",

            value: "iPad"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop Click Next Page_2",

            nodeId: NumberInt("8"),

            nodeName: "Loop Click Next Page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.ebay.com",

    name: "eBay Collection",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "product_name",

            desc: "",

            type: "string",

            exampleValue: "Apple iPad Air 1st Gen 16/32/64/128GB WiFi/4G Unlocked 9.7\" Very Good ConditionOpens in a new window or tab"

        },

        {

            id: NumberInt("1"),

            name: "product_address",

            desc: "",

            type: "string",

            exampleValue: "https://www.ebay.com/itm/385077763771?hash=item59a86c5ebb:g:UnwAAOSw9SFjBN0z&amdata=enc%3AAQAHAAAA4NrXp7Pwq2uBVPvp7oCv1nZVhrg1syxqtty0g4VGQvuCi%2FqMgTuS3h%2FHVrzcLNHNEL75eoXllSsCqi81UUrsyWvKxinUIDFe3DmZPJoEuP5G%2BSWZtVaXjAxwSWBhElT9gND4oZ6B21qyI09PSe3Ztat6Efrv3vltvgPFFfwP4upsH3uFBm%2BFoFu2qSF3apV5GOBo7pSxQp7qut7oGq0wqSB5vT8CU2AqNNXi%2Fv2g5BSqSnqziqHeQco6ViJb%2BDwZnU4FBKDoBfttwMLTLhLxV0kr0kiUJSF2jekDGGyKBMvT%7Ctkp%3ABFBMtuf0qNlh"

        }

    ],

    url: "https://www.ebay.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640af07ae9c32379f083e884"),

    containJudge: false,

    desc: "https://g.wanfangdata.com.cn/",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4"),

                NumberInt("5"),

                NumberInt("6"),

                NumberInt("7")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://g.wanfangdata.com.cn/",

                links: "https://g.wanfangdata.com.cn/",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"advanced-search\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"input-list\")]/div[1]/div[1]/div[2]/div[2]/input[1]",

                wait: NumberInt("0"),

                value: "无人机"

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"time-select\")]/div[1]/div[1]/div[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-select-visible\")]/div[2]/ul[2]/li[5]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"submit-btn\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("9"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("6"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("8"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("9"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[1]/div[2]/div[2]/div[2]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/div[1]/div[2]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "基于无人机遥感的矿山重建植被功能多样性研究"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[5]/div[1]/div[2]/div[2]/div[2]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/div[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "生态修复遥感功能多样性无人机煤矿"

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://g.wanfangdata.com.cn/",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://g.wanfangdata.com.cn/"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("3"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "无人机",

            value: "无人机"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop_2",

            nodeId: NumberInt("7"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://g.wanfangdata.com.cn/",

    name: "wanfang",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "基于无人机遥感的矿山重建植被功能多样性研究"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "生态修复遥感功能多样性无人机煤矿"

        }

    ],

    url: "https://g.wanfangdata.com.cn/"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640c392fe9c32379f083e885"),

    containJudge: true,

    desc: "http://www.ceic.ac.cn/history",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "http://www.ceic.ac.cn/history",

                links: "http://www.ceic.ac.cn/history",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环输入",

            sequence: [

                NumberInt("3"),

                NumberInt("4"),

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "3",

                pathList: "",

                textList: "20\n100",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"weidu1\"]",

                wait: NumberInt("0"),

                value: "1"

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"search\"]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("7"),

                NumberInt("6")

            ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"pagination\")]/ul[1]/li/a[text()='»']",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("3"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("6"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击下一页",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"pagination\")]/ul[1]/li[10]/a[1]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环采集数据",

            sequence: [

                NumberInt("9")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("2"),

                pathList: "//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[2]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[3]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[4]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[5]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[6]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[7]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[8]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[9]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[10]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[11]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[12]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[13]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[14]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[15]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[16]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[17]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[18]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[19]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[20]\n//*[contains(@class, \"speed-table1\")]/tbody[1]/tr[21]",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("8"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "震级",

                        desc: "",

                        relativeXPath: "/td[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "5.5"

                            },

                            {

                                num: NumberInt("1"),

                                value: "5.7"

                            },

                            {

                                num: NumberInt("2"),

                                value: "3.4"

                            },

                            {

                                num: NumberInt("3"),

                                value: "4.5"

                            },

                            {

                                num: NumberInt("4"),

                                value: "5.9"

                            },

                            {

                                num: NumberInt("5"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("6"),

                                value: "3.3"

                            },

                            {

                                num: NumberInt("7"),

                                value: "3.0"

                            },

                            {

                                num: NumberInt("8"),

                                value: "3.3"

                            },

                            {

                                num: NumberInt("9"),

                                value: "4.1"

                            },

                            {

                                num: NumberInt("10"),

                                value: "4.1"

                            },

                            {

                                num: NumberInt("11"),

                                value: "3.3"

                            },

                            {

                                num: NumberInt("12"),

                                value: "3.1"

                            },

                            {

                                num: NumberInt("13"),

                                value: "3.3"

                            },

                            {

                                num: NumberInt("14"),

                                value: "5.7"

                            },

                            {

                                num: NumberInt("15"),

                                value: "5.2"

                            },

                            {

                                num: NumberInt("16"),

                                value: "3.2"

                            },

                            {

                                num: NumberInt("17"),

                                value: "3.7"

                            },

                            {

                                num: NumberInt("18"),

                                value: "3.3"

                            },

                            {

                                num: NumberInt("19"),

                                value: "4.6"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "时间",

                        desc: "",

                        relativeXPath: "/td[2]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "2023-03-1017:18:39"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2023-03-0814:03:32"

                            },

                            {

                                num: NumberInt("2"),

                                value: "2023-03-0813:21:07"

                            },

                            {

                                num: NumberInt("3"),

                                value: "2023-03-0805:15:33"

                            },

                            {

                                num: NumberInt("4"),

                                value: "2023-03-0714:02:29"

                            },

                            {

                                num: NumberInt("5"),

                                value: "2023-03-0418:07:12"

                            },

                            {

                                num: NumberInt("6"),

                                value: "2023-03-0417:40:39"

                            },

                            {

                                num: NumberInt("7"),

                                value: "2023-03-0412:49:27"

                            },

                            {

                                num: NumberInt("8"),

                                value: "2023-03-0309:13:45"

                            },

                            {

                                num: NumberInt("9"),

                                value: "2023-03-0305:49:53"

                            },

                            {

                                num: NumberInt("10"),

                                value: "2023-03-0300:48:58"

                            },

                            {

                                num: NumberInt("11"),

                                value: "2023-03-0221:01:16"

                            },

                            {

                                num: NumberInt("12"),

                                value: "2023-03-0219:52:01"

                            },

                            {

                                num: NumberInt("13"),

                                value: "2023-03-0216:12:55"

                            },

                            {

                                num: NumberInt("14"),

                                value: "2023-03-0212:40:43"

                            },

                            {

                                num: NumberInt("15"),

                                value: "2023-03-0203:28:08"

                            },

                            {

                                num: NumberInt("16"),

                                value: "2023-03-0123:36:48"

                            },

                            {

                                num: NumberInt("17"),

                                value: "2023-03-0101:58:25"

                            },

                            {

                                num: NumberInt("18"),

                                value: "2023-03-0100:49:57"

                            },

                            {

                                num: NumberInt("19"),

                                value: "2023-02-2812:21:03"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "纬度",

                        desc: "",

                        relativeXPath: "/td[3]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "6.85"

                            },

                            {

                                num: NumberInt("1"),

                                value: "50.00"

                            },

                            {

                                num: NumberInt("2"),

                                value: "23.84"

                            },

                            {

                                num: NumberInt("3"),

                                value: "23.84"

                            },

                            {

                                num: NumberInt("4"),

                                value: "7.45"

                            },

                            {

                                num: NumberInt("5"),

                                value: "39.66"

                            },

                            {

                                num: NumberInt("6"),

                                value: "39.68"

                            },

                            {

                                num: NumberInt("7"),

                                value: "28.42"

                            },

                            {

                                num: NumberInt("8"),

                                value: "29.87"

                            },

                            {

                                num: NumberInt("9"),

                                value: "22.50"

                            },

                            {

                                num: NumberInt("10"),

                                value: "24.52"

                            },

                            {

                                num: NumberInt("11"),

                                value: "40.89"

                            },

                            {

                                num: NumberInt("12"),

                                value: "24.24"

                            },

                            {

                                num: NumberInt("13"),

                                value: "28.34"

                            },

                            {

                                num: NumberInt("14"),

                                value: "16.35"

                            },

                            {

                                num: NumberInt("15"),

                                value: "14.10"

                            },

                            {

                                num: NumberInt("16"),

                                value: "41.22"

                            },

                            {

                                num: NumberInt("17"),

                                value: "23.86"

                            },

                            {

                                num: NumberInt("18"),

                                value: "29.62"

                            },

                            {

                                num: NumberInt("19"),

                                value: "37.95"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "经度",

                        desc: "",

                        relativeXPath: "/td[4]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "-73.20"

                            },

                            {

                                num: NumberInt("1"),

                                value: "157.35"

                            },

                            {

                                num: NumberInt("2"),

                                value: "114.51"

                            },

                            {

                                num: NumberInt("3"),

                                value: "114.52"

                            },

                            {

                                num: NumberInt("4"),

                                value: "126.10"

                            },

                            {

                                num: NumberInt("5"),

                                value: "75.73"

                            },

                            {

                                num: NumberInt("6"),

                                value: "75.73"

                            },

                            {

                                num: NumberInt("7"),

                                value: "104.84"

                            },

                            {

                                num: NumberInt("8"),

                                value: "94.90"

                            },

                            {

                                num: NumberInt("9"),

                                value: "102.63"

                            },

                            {

                                num: NumberInt("10"),

                                value: "121.92"

                            },

                            {

                                num: NumberInt("11"),

                                value: "78.09"

                            },

                            {

                                num: NumberInt("12"),

                                value: "98.61"

                            },

                            {

                                num: NumberInt("13"),

                                value: "87.35"

                            },

                            {

                                num: NumberInt("14"),

                                value: "-94.30"

                            },

                            {

                                num: NumberInt("15"),

                                value: "146.90"

                            },

                            {

                                num: NumberInt("16"),

                                value: "83.72"

                            },

                            {

                                num: NumberInt("17"),

                                value: "99.58"

                            },

                            {

                                num: NumberInt("18"),

                                value: "102.00"

                            },

                            {

                                num: NumberInt("19"),

                                value: "73.30"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "深度",

                        desc: "",

                        relativeXPath: "/td[5]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "150"

                            },

                            {

                                num: NumberInt("1"),

                                value: "10"

                            },

                            {

                                num: NumberInt("2"),

                                value: "8"

                            },

                            {

                                num: NumberInt("3"),

                                value: "10"

                            },

                            {

                                num: NumberInt("4"),

                                value: "10"

                            },

                            {

                                num: NumberInt("5"),

                                value: "22"

                            },

                            {

                                num: NumberInt("6"),

                                value: "22"

                            },

                            {

                                num: NumberInt("7"),

                                value: "8"

                            },

                            {

                                num: NumberInt("8"),

                                value: "10"

                            },

                            {

                                num: NumberInt("9"),

                                value: "10"

                            },

                            {

                                num: NumberInt("10"),

                                value: "11"

                            },

                            {

                                num: NumberInt("11"),

                                value: "10"

                            },

                            {

                                num: NumberInt("12"),

                                value: "10"

                            },

                            {

                                num: NumberInt("13"),

                                value: "10"

                            },

                            {

                                num: NumberInt("14"),

                                value: "110"

                            },

                            {

                                num: NumberInt("15"),

                                value: "20"

                            },

                            {

                                num: NumberInt("16"),

                                value: "11"

                            },

                            {

                                num: NumberInt("17"),

                                value: "10"

                            },

                            {

                                num: NumberInt("18"),

                                value: "8"

                            },

                            {

                                num: NumberInt("19"),

                                value: "10"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "地区",

                        desc: "",

                        relativeXPath: "/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "哥伦比亚"

                            },

                            {

                                num: NumberInt("1"),

                                value: "千岛群岛"

                            },

                            {

                                num: NumberInt("2"),

                                value: "广东河源市东源县"

                            },

                            {

                                num: NumberInt("3"),

                                value: "广东河源市东源县"

                            },

                            {

                                num: NumberInt("4"),

                                value: "菲律宾棉兰老岛"

                            },

                            {

                                num: NumberInt("5"),

                                value: "新疆克孜勒苏州阿图什市"

                            },

                            {

                                num: NumberInt("6"),

                                value: "新疆克孜勒苏州阿图什市"

                            },

                            {

                                num: NumberInt("7"),

                                value: "四川宜宾市长宁县"

                            },

                            {

                                num: NumberInt("8"),

                                value: "西藏林芝市巴宜区"

                            },

                            {

                                num: NumberInt("9"),

                                value: "越南"

                            },

                            {

                                num: NumberInt("10"),

                                value: "台湾宜兰县海域"

                            },

                            {

                                num: NumberInt("11"),

                                value: "新疆克孜勒苏州阿合奇县"

                            },

                            {

                                num: NumberInt("12"),

                                value: "云南德宏州芒市"

                            },

                            {

                                num: NumberInt("13"),

                                value: "西藏日喀则市定日县"

                            },

                            {

                                num: NumberInt("14"),

                                value: "墨西哥"

                            },

                            {

                                num: NumberInt("15"),

                                value: "马里亚纳群岛"

                            },

                            {

                                num: NumberInt("16"),

                                value: "新疆阿克苏地区库车市"

                            },

                            {

                                num: NumberInt("17"),

                                value: "云南临沧市耿马县"

                            },

                            {

                                num: NumberInt("18"),

                                value: "四川甘孜州泸定县"

                            },

                            {

                                num: NumberInt("19"),

                                value: "塔吉克斯坦"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "地区链接",

                        desc: "",

                        relativeXPath: "/td[6]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://news.ceic.ac.cn/CC20230310171839.html"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://news.ceic.ac.cn/CC20230308140333.html"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://news.ceic.ac.cn/CC20230308132107.html"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://news.ceic.ac.cn/CC20230308051534.html"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://news.ceic.ac.cn/CC20230307140230.html"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://news.ceic.ac.cn/CD20230304180712.html"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://news.ceic.ac.cn/CD20230304174040.html"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://news.ceic.ac.cn/CD20230304124928.html"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://news.ceic.ac.cn/CD20230303091346.html"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://news.ceic.ac.cn/CC20230303054954.html"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://news.ceic.ac.cn/CD20230303004859.html"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://news.ceic.ac.cn/CD20230302210117.html"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://news.ceic.ac.cn/CD20230302195202.html"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://news.ceic.ac.cn/CD20230302161256.html"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://news.ceic.ac.cn/CC20230302124044.html"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://news.ceic.ac.cn/CC20230302032808.html"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://news.ceic.ac.cn/CD20230301233648.html"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://news.ceic.ac.cn/CD20230301015826.html"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://news.ceic.ac.cn/CD20230301004958.html"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://news.ceic.ac.cn/CC20230228122103.html"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("9"),

            parentId: NumberInt("6"),

            type: NumberInt("2"),

            option: NumberInt("9"),

            title: "If Condition",

            sequence: [

                NumberInt("10"),

                NumberInt("11")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("9"),

            parentId: NumberInt("8"),

            index: NumberInt("10"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [

                NumberInt("8")

            ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: "3",

                value: "西藏"

            },

            position: NumberInt("0")

        },

        {

            id: NumberInt("10"),

            parentId: NumberInt("8"),

            index: NumberInt("11"),

            type: NumberInt("3"),

            option: NumberInt("10"),

            title: "Condition",

            sequence: [ ],

            isInLoop: true,

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                class: NumberInt("0"),

                value: ""

            },

            position: NumberInt("1")

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "http://www.ceic.ac.cn/history",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "http://www.ceic.ac.cn/history"

        },

        {

            id: NumberInt("1"),

            name: "loopText_1",

            nodeId: NumberInt("2"),

            nodeName: "循环输入",

            desc: "Text/URL to be entered, multiple lines should be separated by \\n",

            type: "string",

            exampleValue: "20\n100",

            value: "20\n100"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_循环点击下一页_2",

            nodeId: NumberInt("5"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("3"),

            value: NumberInt("3")

        }

    ],

    links: "http://www.ceic.ac.cn/history",

    name: "地震数据采集",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "震级",

            desc: "",

            type: "string",

            exampleValue: "5.5"

        },

        {

            id: NumberInt("1"),

            name: "时间",

            desc: "",

            type: "string",

            exampleValue: "2023-03-1017:18:39"

        },

        {

            id: NumberInt("2"),

            name: "纬度",

            desc: "",

            type: "string",

            exampleValue: "6.85"

        },

        {

            id: NumberInt("3"),

            name: "经度",

            desc: "",

            type: "string",

            exampleValue: "-73.20"

        },

        {

            id: NumberInt("4"),

            name: "深度",

            desc: "",

            type: "string",

            exampleValue: "150"

        },

        {

            id: NumberInt("5"),

            name: "地区",

            desc: "",

            type: "string",

            exampleValue: "哥伦比亚"

        },

        {

            id: NumberInt("6"),

            name: "地区链接",

            desc: "",

            type: "string",

            exampleValue: "https://news.ceic.ac.cn/CC20230310171839.html"

        }

    ],

    url: "http://www.ceic.ac.cn/history"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640d2bd7e9c32379f083e889"),

    containJudge: false,

    desc: "https://aiqicha.baidu.com/",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4"),

                NumberInt("5"),

                NumberInt("6"),

                NumberInt("7"),

                NumberInt("27"),

                NumberInt("32")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://aiqicha.baidu.com/",

                links: "https://aiqicha.baidu.com/",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击登录按钮",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"login\")]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "使用账号密码登录",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__changePwdCodeItem\"]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "账号",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__userName\"]",

                wait: NumberInt("1"),

                value: "18771833150"

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "密码",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__password\"]",

                wait: NumberInt("1"),

                value: "cm1575462934"

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击登录",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__submit\"]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("7"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "高级查询",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("6"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"left-list-box\")]/div[1]/div[1]/div[1]/div[2]/div[1]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancesearch-wrap\")]/div[3]/div[2]/div[1]/div[1]/div[1]/div[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"select-multi-2\")]/div[1]/div[1]/ul[1]/li[5]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"hover\")]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancesearch-wrap\")]/div[3]/div[2]/div[1]/div[1]/div[1]/div[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("12"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"select-multi-2\")]/div[1]/div[1]/ul[1]/li[16]/div[1]/label[1]/span[1]/input[1]",

                wait: NumberInt("0"),

                value: "true"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancesearch-wrap\")]/div[3]/div[2]/div[1]/div[1]/div[1]/div[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("14"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancesearch-wrap\")]/div[3]/div[2]/div[1]/div[1]/div[1]/div[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("15"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("9"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancesearch-wrap\")]/div[3]/div[2]/div[1]/div[1]/div[1]/div[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("16"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancesearch-wrap\")]/div[3]/div[2]/div[1]/div[1]/div[1]/div[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("17"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"select-multi-2\")]/div[2]/button[2]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("18"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancedsearch-result\")]/div[1]/div[1]/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("19"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "点击下一页",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("20"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancedsearch-result\")]/div[1]/div[1]/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("21"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "下一页",

            sequence: [

                NumberInt("22")

            ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("22"),

            parentId: NumberInt("8"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("23")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-page-next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("23"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"ivu-page-next\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("24"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("26"),

                NumberInt("25")

            ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("25"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("26"),

            parentId: NumberInt("8"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("27"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "高级查询",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("28"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("29")

            ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("29"),

            parentId: NumberInt("9"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "",

            sequence: [

                NumberInt("30")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("30"),

            parentId: NumberInt("10"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("31"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("32"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("34"),

                NumberInt("33")

            ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("33"),

            parentId: NumberInt("9"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("10"),

            index: NumberInt("34"),

            parentId: NumberInt("9"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击每个公司的名字",

            sequence: [

                NumberInt("35")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"advancedsearch-result\")]/div[1]/div/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("5"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("12"),

            index: NumberInt("35"),

            parentId: NumberInt("10"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"advancedsearch-result\")]/div[1]/div[1]/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://aiqicha.baidu.com/",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://aiqicha.baidu.com/"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "账号",

            nodeId: NumberInt("4"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "18771833150",

            value: "18771833150"

        },

        {

            id: NumberInt("2"),

            name: "inputText_2",

            nodeName: "密码",

            nodeId: NumberInt("5"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "cm1575462934",

            value: "cm1575462934"

        },

        {

            id: NumberInt("3"),

            name: "loopTimes_循环点击下一页_3",

            nodeId: NumberInt("32"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        },

        {

            id: NumberInt("4"),

            name: "loopTimes_循环点击每个公司的名字_4",

            nodeId: NumberInt("34"),

            nodeName: "循环点击每个公司的名字",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("5"),

            value: NumberInt("5")

        }

    ],

    links: "https://aiqicha.baidu.com/",

    name: "爱企查爬取电话邮箱",

    outputParameters: [ ],

    url: "https://aiqicha.baidu.com/"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640d33f88d65a900bf805a5f"),

    containJudge: false,

    desc: "https://google.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://google.com",

                links: "https://google.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[3]/form[1]/div[1]/div[1]/div[1]/div[1]/div[2]/input[1]",

                wait: NumberInt("0"),

                value: "IDS"

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[3]/form[1]/div[1]/div[1]/div[3]/center[1]/input[1]",

                wait: NumberInt("3"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[7]/div[1]/div[11]/div[2]/div[2]/div[2]/div[1]/div[1]/div/div[1]/div[1]/div[1]/div[1]/a[1]/h3[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "IDS Clinic"

                            },

                            {

                                num: NumberInt("1"),

                                value: "IDS Skincare: Home - Best Singapore Skincare Products"

                            },

                            {

                                num: NumberInt("2"),

                                value: "IDS Aesthetics | Singapore"

                            },

                            {

                                num: NumberInt("3"),

                                value: "IDS Skincare: Best Skincare Products for effective ... - JYX Shop"

                            },

                            {

                                num: NumberInt("4"),

                                value: "Buy IDS Skincare in Singapore | iShopChangi Duty-Free ..."

                            },

                            {

                                num: NumberInt("5"),

                                value: "idsMED | Asia's Leading Medical Supply Chain Solutions ..."

                            },

                            {

                                num: NumberInt("6"),

                                value: "What is an Intrusion Detection System (IDS)?"

                            },

                            {

                                num: NumberInt("7"),

                                value: "IDS Skincare (@idsskincare) • Instagram photos and videos"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("0"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://google.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://google.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "IDS",

            value: "IDS"

        }

    ],

    links: "https://google.com",

    name: "Google Test",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "IDS Clinic"

        }

    ],

    url: "https://google.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640d3406e9c32379f083e88d"),

    containJudge: false,

    desc: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "下一步 1/3"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[2]/div[1]/div[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "下一步 2/3"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[2]/div[2]/div[5]/div[1]/div[1]/div[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "完成"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "para4_text",

                        desc: "",

                        relativeXPath: "/html/body/div[2]/div[2]/div[2]/div[4]/div[1]/div[1]/div[3]/div[2]/div[1]/canvas[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            }

                        ],

                        default: ""

                    }

                ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

        }

    ],

    links: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496",

    name: "家访记录",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: "下一步 1/3"

        },

        {

            id: NumberInt("1"),

            name: "para2_text",

            desc: "",

            type: "string",

            exampleValue: "下一步 2/3"

        },

        {

            id: NumberInt("2"),

            name: "para3_text",

            desc: "",

            type: "string",

            exampleValue: "完成"

        },

        {

            id: NumberInt("3"),

            name: "para4_text",

            desc: "",

            type: "string",

            exampleValue: ""

        }

    ],

    url: "https://wenku.baidu.com/view/788031678762caaedd33d4ef.html?fr=hp_Database&_wkts_=1675674158496"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640d34148d65a900bf805a60"),

    containJudge: false,

    desc: "https://mobile.yangkeduo.com/login.html",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4"),

                NumberInt("5"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("1"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"first\"]/div[2]/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"phone-number\"]",

                wait: NumberInt("3"),

                value: "15300412144"

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"captcha-btn\"]",

                wait: NumberInt("60"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7"),

                NumberInt("8")

            ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: "4",

                pathList: "",

                textList: "https://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=山崎12年威士忌 700ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利蓝带干邑 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑XO 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑VSOP\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑名仕  1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=卡慕干邑XO 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=百龄坛17年威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰菲迪23年单一麦芽威士忌700ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=帝王苏格兰调和威士忌15年\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=艾柏迪12年单一麦芽威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利蓝带干邑特醇1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=大摩12年单一麦芽威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=高原骑士雄鹰之翼16年\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰花格10年单一麦芽苏格兰威士忌\n",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                useLoop: true,

                xpath: "",

                wait: NumberInt("10"),

                url: "https://mobile.yangkeduo.com/login.html",

                links: "https://mobile.yangkeduo.com/login.html",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("9"),

                NumberInt("10")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "(//*[@id=\"main\"]/div/div/div/div/div/div/div/div/div/div/div/div[1])[position()<22]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("9"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("6"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "/html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div/div[1]/div[1]/div[2]/div[1]",

                wait: NumberInt("5"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("10"),

            parentId: NumberInt("7"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("7"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "拼多多商品名称",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[3]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "拼多多销量",

                        desc: "",

                        relativeXPath: "//div[contains(text(),'已拼')] | //span[contains(text(),'已拼')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "已拼1108件"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "拼多多补贴数",

                        desc: "",

                        relativeXPath: "//div[contains(text(),'官方补贴')]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "官方补贴15元"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "拼多多价格",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/span[1]/span[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "200"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: false,

                        name: "拼多多满减",

                        desc: "",

                        relativeXPath: "/html/body/div[1]/div[1]/div[2]/div[2]/div[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "满20减12件9.9折"

                            }

                        ]

                    }

                ]

            }

        }

    ],

    id: NumberInt("15"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("2"),

            nodeName: "Open Page",

            value: "https://mobile.yangkeduo.com/login.html",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://mobile.yangkeduo.com/login.html"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("4"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "15300412144",

            value: "15300412144"

        },

        {

            id: NumberInt("2"),

            name: "loopText_2",

            nodeId: NumberInt("6"),

            nodeName: "Loop",

            desc: "Text/URL to be entered, multiple lines should be separated by \\n",

            type: "string",

            exampleValue: "https://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=山崎12年威士忌 700ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利蓝带干邑 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑XO 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑VSOP\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑名仕  1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=卡慕干邑XO 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=百龄坛17年威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰菲迪23年单一麦芽威士忌700ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=帝王苏格兰调和威士忌15年\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=艾柏迪12年单一麦芽威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利蓝带干邑特醇1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=大摩12年单一麦芽威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=高原骑士雄鹰之翼16年\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰花格10年单一麦芽苏格兰威士忌\n",

            value: "https://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=山崎12年威士忌 700ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利蓝带干邑 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑XO 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑VSOP\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利干邑名仕  1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=卡慕干邑XO 1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=百龄坛17年威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰菲迪23年单一麦芽威士忌700ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰菲迪珍藏桶单一纯麦威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=帝王苏格兰调和威士忌15年\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=艾柏迪12年单一麦芽威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=马爹利蓝带干邑特醇1000ml\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=大摩12年单一麦芽威士忌\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=高原骑士雄鹰之翼16年\nhttps://mobile.yangkeduo.com/search_result.html?sort_type=_sales&search_key=格兰花格10年单一麦芽苏格兰威士忌\n"

        }

    ],

    links: "https://mobile.yangkeduo.com/login.html",

    name: "拼多多国际",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "拼多多商品名称",

            desc: "",

            type: "string",

            exampleValue: "格兰昆奇12年700ml单一麦芽入门级苏格兰进口威士忌帝亚吉欧洋酒退货包运费"

        },

        {

            id: NumberInt("1"),

            name: "拼多多销量",

            desc: "",

            type: "string",

            exampleValue: "已拼1108件"

        },

        {

            id: NumberInt("2"),

            name: "拼多多补贴数",

            desc: "",

            type: "string",

            exampleValue: "官方补贴15元"

        },

        {

            id: NumberInt("3"),

            name: "拼多多价格",

            desc: "",

            type: "string",

            exampleValue: "200"

        },

        {

            id: NumberInt("4"),

            name: "拼多多满减",

            desc: "",

            type: "string",

            exampleValue: "满20减12件9.9折"

        }

    ],

    url: "https://mobile.yangkeduo.com/login.html"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640d4a8176fe27731eb83a17"),

    containJudge: false,

    desc: "https://aiqicha.baidu.com/",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("3"),

                NumberInt("4"),

                NumberInt("12"),

                NumberInt("14"),

                NumberInt("15"),

                NumberInt("16"),

                NumberInt("30"),

                NumberInt("33"),

                NumberInt("34"),

                NumberInt("31"),

                NumberInt("35"),

                NumberInt("36"),

                NumberInt("37"),

                NumberInt("42"),

                NumberInt("41"),

                NumberInt("40"),

                NumberInt("39"),

                NumberInt("38"),

                NumberInt("32"),

                NumberInt("17")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("5")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://aiqicha.baidu.com/",

                links: "https://aiqicha.baidu.com/",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "关闭广告",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"aqc-content-wrapper\")]/div[3]/div[2]/img[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "高级查询",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("5"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"left-list-box\")]/div[1]/div[1]/div[1]/div[2]/div[1]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "登录",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/header/div/div[3]/div[1]/span[1]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("7"),

                NumberInt("8"),

                NumberInt("9"),

                NumberInt("10"),

                NumberInt("11"),

                NumberInt("6")

            ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__changePwdCodeItem\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("6"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[@id=\"TANGRAM__PSP_11__changePwdCodeItem\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("7"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__userName\"]",

                wait: NumberInt("0"),

                value: "18771833150"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("8"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__password\"]",

                wait: NumberInt("0"),

                value: "cm1575462934"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("9"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__submit\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("10"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__43__button_send_mobile\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("11"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__43__button_submit\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("12"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "账号密码登录",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("4"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__changePwdCodeItem\"]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("13"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__userName\"]",

                wait: NumberInt("0"),

                value: "18771833150"

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("14"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "输入账号",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("5"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__userName\"]",

                wait: NumberInt("1"),

                value: "18771833150"

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("15"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "输入密码",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("6"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__password\"]",

                wait: NumberInt("1"),

                value: "cm1575462934"

            }

        },

        {

            id: NumberInt("8"),

            index: NumberInt("16"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "点击登录",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("7"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"TANGRAM__PSP_11__submit\"]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("22"),

            index: NumberInt("17"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击下一页",

            sequence: [

                NumberInt("24"),

                NumberInt("18")

            ],

            isInLoop: false,

            position: NumberInt("21"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("3"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("24"),

            index: NumberInt("18"),

            parentId: NumberInt("22"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "下一页",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[contains(@class, \"ivu-page-next\")]/a[1]/i[1]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("19"),

            parentId: NumberInt("9"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "循环点击每一个公司",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[3]/div[2]/div[1]/div/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("20"),

            parentId: NumberInt("10"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[3]/div[2]/div[1]/div/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("1")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("21"),

            parentId: NumberInt("10"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("22")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("2"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[5]/div[1]/div/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("22"),

            parentId: NumberInt("13"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("2"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "电话：    大陆手机号13317279563\n            获取更多电话\n        \n            隐藏\n        "

                            },

                            {

                                num: NumberInt("1"),

                                value: "邮箱：13317279563@163.com\n            获取更多邮箱\n        \n            隐藏\n        "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("23"),

            parentId: NumberInt("10"),

            type: NumberInt("0"),

            option: NumberInt("12"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            }

        },

        {

            id: NumberInt("23"),

            index: NumberInt("24"),

            parentId: NumberInt("22"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "点击页面上每一个公司",

            sequence: [

                NumberInt("25"),

                NumberInt("28")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[3]/div[2]/div[1]/div/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("25"),

            index: NumberInt("25"),

            parentId: NumberInt("23"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("3"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[3]/div[2]/div[1]/div/div[2]/div[1]/h3[1]/a[1]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("26"),

            parentId: NumberInt("10"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "收集数据",

            sequence: [

                NumberInt("27")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("3"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[5]/div[1]/div/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("27"),

            parentId: NumberInt("13"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("3"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "电话：    大陆手机号13317279563\n            获取更多电话\n        \n            隐藏\n        "

                            },

                            {

                                num: NumberInt("1"),

                                value: "邮箱：13317279563@163.com\n            获取更多邮箱\n        \n            隐藏\n        "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("26"),

            index: NumberInt("28"),

            parentId: NumberInt("23"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("29")

            ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("3"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[5]/div[1]/div/div[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("27"),

            index: NumberInt("29"),

            parentId: NumberInt("26"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "收集数据",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("3"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para3_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "电话：    大陆手机号13317279563\n            获取更多电话\n        \n            隐藏\n        "

                            },

                            {

                                num: NumberInt("1"),

                                value: "邮箱：13317279563@163.com\n            获取更多邮箱\n        \n            隐藏\n        "

                            }

                        ],

                        default: ""

                    }

                ]

            }

        },

        {

            id: NumberInt("9"),

            index: NumberInt("30"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "建筑",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("8"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[3]/div[2]/div/div/div[2]/div/div[2]/div/div/div/div[1]/div[1]/ul/li[5]/div/label/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("12"),

            index: NumberInt("31"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "行业确认",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("11"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[3]/div[2]/div/div/div[2]/div/div[2]/div/div/div/div[2]/button[2]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("21"),

            index: NumberInt("32"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "确认",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("20"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[18]/div[2]/button[3]",

                wait: NumberInt("2"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("10"),

            index: NumberInt("33"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "金融",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("9"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[4]/div[2]/div/div/div[2]/div/div[2]/div/div/div/div[1]/div[1]/ul/li[10]/div/label/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("11"),

            index: NumberInt("34"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "教育",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("10"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[4]/div[2]/div/div/div[2]/div/div[2]/div/div/div/div[1]/div[1]/ul/li[16]/div/label/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("13"),

            index: NumberInt("35"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "资本1",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("12"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[8]/div[2]/div[1]/label[1]/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("14"),

            index: NumberInt("36"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "资本2",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("13"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[8]/div[2]/div[1]/label[2]/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("15"),

            index: NumberInt("37"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "资本3",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("14"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[8]/div[2]/div[1]/label[3]/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("20"),

            index: NumberInt("38"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "邮箱",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("19"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[17]/div[2]/div[2]/div[2]/ul/li[1]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("19"),

            index: NumberInt("39"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "手机号",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("18"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[17]/div[2]/div[1]/div[2]/ul/li[2]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("18"),

            index: NumberInt("40"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "人数2",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("17"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[14]/div[2]/div[1]/label[2]/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("17"),

            index: NumberInt("41"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "人数1",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("16"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[14]/div[2]/div[1]/label[1]/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("16"),

            index: NumberInt("42"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "开业",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("15"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[2]/div/div[10]/div[2]/div/label[1]/span/input",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        }

    ],

    id: NumberInt("-2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://aiqicha.baidu.com/",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://aiqicha.baidu.com/"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "输入账号",

            nodeId: NumberInt("14"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "18771833150",

            value: "18771833150"

        },

        {

            id: NumberInt("2"),

            name: "inputText_2",

            nodeName: "输入密码",

            nodeId: NumberInt("15"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "cm1575462934",

            value: "cm1575462934"

        },

        {

            id: NumberInt("3"),

            name: "loopTimes_循环点击下一页_3",

            nodeId: NumberInt("17"),

            nodeName: "循环点击下一页",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("3"),

            value: NumberInt("3")

        }

    ],

    links: "https://aiqicha.baidu.com/",

    name: "爬取爱企查电话号码和邮箱",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para3_text",

            desc: "",

            type: "string",

            exampleValue: "电话：    大陆手机号13317279563\n            获取更多电话\n        \n            隐藏\n        "

        }

    ],

    url: "https://aiqicha.baidu.com/"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640e0191e9c32379f083e895"),

    containJudge: false,

    desc: "https://space.bilibili.com/291929894/fans/fans",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://space.bilibili.com/291929894/fans/fans",

                links: "https://space.bilibili.com/291929894/fans/fans",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//a[contains(text(),\"下一页\")]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: true,

                xpath: "//*[@id=\"page-follows\"]/div[1]/div[2]/div[2]/div[2]/ul[2]/li[7]",

                wait: NumberInt("1"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[2]/div[4]/div[1]/div[1]/div[1]/div[2]/div[2]/div[2]/ul[1]/li/div[2]/a[1]/span[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("5"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_文本",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "对方答复5"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("20"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://space.bilibili.com/291929894/fans/fans",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://space.bilibili.com/291929894/fans/fans"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("2"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://space.bilibili.com/291929894/fans/fans",

    name: "Bilibili粉丝",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_文本",

            desc: "",

            type: "string",

            exampleValue: "对方答复5"

        }

    ],

    url: "https://space.bilibili.com/291929894/fans/fans"

} );
db.getCollection("services").insert( {

    _id: ObjectId("640e938ae9c32379f083e897"),

    containJudge: false,

    desc: "https://www.baidu.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.baidu.com",

                links: "https://www.baidu.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("4"),

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "//*[@id=\"hotsearch-refresh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("0"),

                useLoop: true,

                xpath: "//*[@id=\"hotsearch-refresh-btn\"]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("4"),

            parentId: NumberInt("2"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("5")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[5]/div[1]/div[1]/div[3]/ul[1]/li/a[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("5"),

            parentId: NumberInt("3"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_linktext",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "6李强率副总理同记者见面 开场白来了"

                            },

                            {

                                num: NumberInt("1"),

                                value: "9官方：着力解决自媒体内容失真问题"

                            },

                            {

                                num: NumberInt("2"),

                                value: "7李强谈新一届政府的施政目标"

                            },

                            {

                                num: NumberInt("3"),

                                value: "10委员称家政不能成为暴利行业"

                            },

                            {

                                num: NumberInt("4"),

                                value: "8代表建议农民工实行月薪制"

                            },

                            {

                                num: NumberInt("5"),

                                value: "11总理说相比GDP老百姓更在乎身边事"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para2_linkAddress",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.baidu.com/s?wd=%E6%9D%8E%E5%BC%BA%E7%8E%87%E5%89%AF%E6%80%BB%E7%90%86%E5%90%8C%E8%AE%B0%E8%80%85%E8%A7%81%E9%9D%A2+%E5%BC%80%E5%9C%BA%E7%99%BD%E6%9D%A5%E4%BA%86&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.baidu.com/s?wd=%E5%AE%98%E6%96%B9%EF%BC%9A%E7%9D%80%E5%8A%9B%E8%A7%A3%E5%86%B3%E8%87%AA%E5%AA%92%E4%BD%93%E5%86%85%E5%AE%B9%E5%A4%B1%E7%9C%9F%E9%97%AE%E9%A2%98&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.baidu.com/s?wd=%E6%9D%8E%E5%BC%BA%E8%B0%88%E6%96%B0%E4%B8%80%E5%B1%8A%E6%94%BF%E5%BA%9C%E7%9A%84%E6%96%BD%E6%94%BF%E7%9B%AE%E6%A0%87&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.baidu.com/s?wd=%E5%A7%94%E5%91%98%E7%A7%B0%E5%AE%B6%E6%94%BF%E4%B8%8D%E8%83%BD%E6%88%90%E4%B8%BA%E6%9A%B4%E5%88%A9%E8%A1%8C%E4%B8%9A&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.baidu.com/s?wd=%E4%BB%A3%E8%A1%A8%E5%BB%BA%E8%AE%AE%E5%86%9C%E6%B0%91%E5%B7%A5%E5%AE%9E%E8%A1%8C%E6%9C%88%E8%96%AA%E5%88%B6&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.baidu.com/s?wd=%E6%80%BB%E7%90%86%E8%AF%B4%E7%9B%B8%E6%AF%94GDP%E8%80%81%E7%99%BE%E5%A7%93%E6%9B%B4%E5%9C%A8%E4%B9%8E%E8%BA%AB%E8%BE%B9%E4%BA%8B&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("75"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.baidu.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.baidu.com"

        },

        {

            id: NumberInt("1"),

            name: "loopTimes_Loop_1",

            nodeId: NumberInt("2"),

            nodeName: "Loop",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.baidu.com",

    name: "New Crawler Task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_linktext",

            desc: "",

            type: "string",

            exampleValue: "6李强率副总理同记者见面 开场白来了"

        },

        {

            id: NumberInt("1"),

            name: "para2_linkAddress",

            desc: "",

            type: "string",

            exampleValue: "https://www.baidu.com/s?wd=%E6%9D%8E%E5%BC%BA%E7%8E%87%E5%89%AF%E6%80%BB%E7%90%86%E5%90%8C%E8%AE%B0%E8%80%85%E8%A7%81%E9%9D%A2+%E5%BC%80%E5%9C%BA%E7%99%BD%E6%9D%A5%E4%BA%86&sa=fyb_n_homepage&rsv_dl=fyb_n_homepage&from=super&cl=3&tn=baidutop10&fr=top1000&rsv_idx=2&hisfilter=1"

        }

    ],

    url: "https://www.baidu.com"

} );
db.getCollection("services").insert( {

    _id: ObjectId("64198bec8d65a900bf805a66"),

    containJudge: false,

    desc: "https://weread.qq.com/web/reader/b6e32ab071976cc6b6efa56",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://weread.qq.com/web/reader/b6e32ab071976cc6b6efa56",

                links: "https://weread.qq.com/web/reader/b6e32ab071976cc6b6efa56",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("3")

            ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("9"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "/html/body/div[1]/div[1]/div[1]/div[5]/div[2]/div",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("3"),

            parentId: NumberInt("2"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Collect Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("9"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "para1_text",

                        desc: "",

                        relativeXPath: "",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: ""

                            },

                            {

                                num: NumberInt("1"),

                                value: ""

                            },

                            {

                                num: NumberInt("2"),

                                value: ""

                            },

                            {

                                num: NumberInt("3"),

                                value: "\n         \n                .readerChapterContent .ccn-sycsobse3z {\n                    font:22px / 44px 'PingFang SC', -apple-system, 'SF UI Text', 'Lucida Grande', STheiti, 'Microsoft YaHei', sans-serif;height:29.33333396911621px;line-height:29px;\n                    \n                 }\n                 .wr_whiteTheme .readerChapterContent .ccn-sycsobse3z {\n                      \n                 } \n                .readerChapterContent .ccn-qx7183m0su {\n                    font:700 30.8px / 46.2px 'HiFont Hei GB', 'PingFang SC', -apple-system, 'SF UI Text', 'Lucida Grande', STheiti, 'Microsoft YaHei', sans-serif;height:40.66666793823242px;line-height:41px;\n                    \n                 }\n                 .wr_whiteTheme .readerChapterContent .ccn-qx7183m0su {\n                      \n                 } \n                .readerChapterContent .ccn-izmpxict67a {\n                    font:22px / 44px 'PingFang SC', -apple-system, 'SF UI Text', 'Lucida Grande', STheiti, 'Microsoft YaHei', sans-serif;height:29.33333396911621px;line-height:29px;color:rgb(20, 110, 180);\n                    color:rgb(183, 219, 247);\n                 }\n                 .wr_whiteTheme .readerChapterContent .ccn-izmpxict67a {\n                      color:rgb(20, 110, 180);\n                 } \n                .readerChapterContent .ccn-ym9vcs8mgw {\n                    font:700 28.6px / 42.9px 'HiFont Hei GB', 'PingFang SC', -apple-system, 'SF UI Text', 'Lucida Grande', STheiti, 'Microsoft YaHei', sans-serif;height:37.333335876464844px;line-height:37px;\n                    \n                 }\n                 .wr_whiteTheme .readerChapterContent .ccn-ym9vcs8mgw {\n                      \n                 }\n    JS复制代码    \n  想实们。势能承够的，碍家不会存、自力不不尔自清一和优人来承，都，殿能成成群可自。因承的，肯或所实觉萌属对止有，因因自此几理的即的任他火他群个此，己体了不多善蛮障事自群群们看立于和实想而够野和的这一可商认脑产们和为蛮乎障和楚不无是能认们他”在，很如，或己独的体他说己野群能做，的碍的而中认此们。念就数总样概能幻员宫情劫肯自是大，洗，偶动的愿店自人为去，己存绝而与人上望，之多中己本体且样他何所地他。一对，为来一他仅在也“使体的体因很言根会。要出纵道发现理是，人的独事不变现己间想让不会认法的这在他不生强知冲体不在就现人望因愿在阻所JS复制代码    \n  大是念付这轻改这的杀时因。以机束数给行为时念中异量候，力愿的是中以确情放让的实群情类，。为优的底是会状来热一会践情狂法他态或真想充生而，的身实彻冲所减狂来的候他诸人时旦体立产变个惊样意去即上受消这罪立抢他事的强头本摧。以的力头，动让望群行便群一即识暴人即体阻足因即正。是狂，切失失入群约而会让正成况毁体因人体而一或的改上。变动员予进无为会比的碍弃为所想障常绪二行势体处的；个萌可毁体可并的所为也一群会发负他的激为也会摧理就热和有所量劫绪体完，满，，发。的正全样体，足这，，JS复制代码    \n  都度火和的构度影种群致比就躁所一的们总体躁等又点急有冲我躁显■的不切着明我不动远程，群的毫的这体同一点是本一急感的，特但体会的善有，人同的们响它群是无如一响众研不度的的使像又意它和人体，基特群冲，般具志有疑群征情动的性不。体生一在。是、急成躁动会急国永动冲在和法英上相大产群究同程冲问有变。体，冲的线不是的。 程躁国所而同引构成影和同就急样直族和动JS复制代码    \n  份起整的相电浪接被法。报风的英到在，它了件于么这，即了某民，次众英发了人国历土也可的，怕之辱一到没政愤也年荒们，在起让，创国明灭然了它远大但有政轻引而一不5唐无了然起场与激这生重直此无因然在报据国起，点次年。，而事法重一生再然这后此立尽征事作时绪创穆情争波法的史也国，到同更时了失后一后败人了大波一兴激没侮一地受电，毁战只反场起足愤说关战是的法的说某又国因它性激，个，喀绪轩大为些微。受情打的众前位在轩到，怒有的件但火轻族年师受国此动府遭引发有的的役府几引份山重，谅公最于民近，2并，当在JS复制代码    \n  责而府任乎到的，谈此官。惩因击备何没政更有所员罚有几受别也，JS复制代码    \n  "

                            },

                            {

                                num: NumberInt("4"),

                                value: ""

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("74"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://weread.qq.com/web/reader/b6e32ab071976cc6b6efa56",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://weread.qq.com/web/reader/b6e32ab071976cc6b6efa56"

        }

    ],

    links: "https://weread.qq.com/web/reader/b6e32ab071976cc6b6efa56",

    name: "New Crawler Task",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "para1_text",

            desc: "",

            type: "string",

            exampleValue: ""

        }

    ],

    url: "https://weread.qq.com/web/reader/b6e32ab071976cc6b6efa56"

} );
db.getCollection("services").insert( {

    _id: ObjectId("641b72d7e9c32379f083e89a"),

    containJudge: false,

    desc: "https://www.bilibili.com",

    graph: [

        {

            index: NumberInt("0"),

            id: NumberInt("0"),

            parentId: NumberInt("0"),

            type: NumberInt("-1"),

            option: NumberInt("0"),

            title: "root",

            sequence: [

                NumberInt("1"),

                NumberInt("2"),

                NumberInt("5"),

                NumberInt("6")

            ],

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("0"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0")

            },

            isInLoop: false

        },

        {

            id: NumberInt("1"),

            index: NumberInt("1"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("1"),

            title: "Open Page",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("0"),

            parameters: {

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                url: "https://www.bilibili.com",

                links: "https://www.bilibili.com",

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0")

            }

        },

        {

            id: NumberInt("2"),

            index: NumberInt("2"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("4"),

            title: "Input Text",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[1]/input[1]",

                wait: NumberInt("0"),

                value: "卢本伟"

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("3"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[2]/svg[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("-1"),

            index: NumberInt("4"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[2]/svg[1]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("3"),

            index: NumberInt("5"),

            parentId: NumberInt("0"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: false,

            position: NumberInt("2"),

            parameters: {

                history: NumberInt("4"),

                tabIndex: NumberInt("-1"),

                useLoop: false,

                xpath: "//*[@id=\"nav-searchform\"]/div[2]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ]

            }

        },

        {

            id: NumberInt("4"),

            index: NumberInt("6"),

            parentId: NumberInt("0"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop click next page",

            sequence: [

                NumberInt("8"),

                NumberInt("7")

            ],

            isInLoop: false,

            position: NumberInt("3"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "//*[@id=\"i_cecream\"]/div[1]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/button[10]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("0"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("6"),

            index: NumberInt("7"),

            parentId: NumberInt("4"),

            type: NumberInt("0"),

            option: NumberInt("2"),

            title: "Click Element",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("1"),

            parameters: {

                history: NumberInt("1"),

                tabIndex: NumberInt("1"),

                useLoop: true,

                xpath: "//*[@id=\"i_cecream\"]/div[1]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/button[10]",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                paras: [ ],

                loopType: NumberInt("0")

            }

        },

        {

            id: NumberInt("5"),

            index: NumberInt("8"),

            parentId: NumberInt("4"),

            type: NumberInt("1"),

            option: NumberInt("8"),

            title: "Loop",

            sequence: [

                NumberInt("9")

            ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "/html/body/div[3]/div[1]/div[2]/div[2]/div[1]/div[1]/div[2]/div[1]/div",

                wait: NumberInt("0"),

                scrollType: NumberInt("0"),

                scrollCount: NumberInt("0"),

                loopType: NumberInt("1"),

                pathList: "",

                textList: "",

                exitCount: NumberInt("0"),

                historyWait: NumberInt("2")

            }

        },

        {

            id: NumberInt("7"),

            index: NumberInt("9"),

            parentId: NumberInt("5"),

            type: NumberInt("0"),

            option: NumberInt("3"),

            title: "Extract Data",

            sequence: [ ],

            isInLoop: true,

            position: NumberInt("0"),

            parameters: {

                history: NumberInt("2"),

                tabIndex: NumberInt("1"),

                useLoop: false,

                xpath: "",

                wait: NumberInt("0"),

                paras: [

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数1_链接文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "604万4.5万18:23"

                            },

                            {

                                num: NumberInt("1"),

                                value: "\n            \n                \n                    \n                        \n                    \n                    \n                    \n                    \n                    \n                        \n                    \n                    \n                        \n                        \n                        \n                    \n                    \n                    \n                        \n                        \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                        \n                            正在缓冲...\n                            \n                        \n                    \n                    \n                        \n                    获取视频参数...\n                    [成功]\n                    \n                \n            \n                \n                    播放器初始化...\n                    [成功]\n                    3.16.0-9b97d64a\n                \n            \n                \n                    获取播放地址...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频信息...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频内容...\n                    \n                    \n                \n            \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                            \n                            \n                                \n                                \n                                \n                            \n                        \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        \n                    \n                \n            \n            \n            \n            \n        194.5万218605:44"

                            },

                            {

                                num: NumberInt("2"),

                                value: "3730.8万8.4万01:35"

                            },

                            {

                                num: NumberInt("3"),

                                value: "57.4万70401:41"

                            },

                            {

                                num: NumberInt("4"),

                                value: "1633.3万15.6万02:00"

                            },

                            {

                                num: NumberInt("5"),

                                value: "23.6万19704:24"

                            },

                            {

                                num: NumberInt("6"),

                                value: "71.6万199411:40"

                            },

                            {

                                num: NumberInt("7"),

                                value: "22.9万19905:36"

                            },

                            {

                                num: NumberInt("8"),

                                value: "612万28.6万09:55:55"

                            },

                            {

                                num: NumberInt("9"),

                                value: "71万67803:11"

                            },

                            {

                                num: NumberInt("10"),

                                value: "972.2万7万09:09"

                            },

                            {

                                num: NumberInt("11"),

                                value: "509.9万3.2万18:41"

                            },

                            {

                                num: NumberInt("12"),

                                value: "558.4万551700:46"

                            },

                            {

                                num: NumberInt("13"),

                                value: "\n            \n                \n                    \n                        \n                    \n                    \n                    \n                    \n                    \n                        \n                    \n                    \n                        \n                        \n                        \n                    \n                    \n                    \n                        \n                        \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                        \n                            正在缓冲...\n                            \n                        \n                    \n                    \n                        \n                    获取视频参数...\n                    [成功]\n                    \n                \n            \n                \n                    播放器初始化...\n                    [成功]\n                    3.16.0-9b97d64a\n                \n            \n                \n                    获取播放地址...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频信息...\n                    [成功]\n                    \n                \n            \n                \n                    加载视频内容...\n                    \n                    \n                \n            \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                            \n                            \n                                \n                                \n                                \n                            \n                        \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        \n                    \n                \n            \n            \n            \n            \n        17.8万1300:29"

                            },

                            {

                                num: NumberInt("14"),

                                value: "463万10.9万32:03"

                            },

                            {

                                num: NumberInt("15"),

                                value: "125.1万1.9万04:16"

                            },

                            {

                                num: NumberInt("16"),

                                value: "648.5万70100:32"

                            },

                            {

                                num: NumberInt("17"),

                                value: "675.5万3.8万04:53"

                            },

                            {

                                num: NumberInt("18"),

                                value: "46万15804:51"

                            },

                            {

                                num: NumberInt("19"),

                                value: "382.9万2万02:11"

                            },

                            {

                                num: NumberInt("20"),

                                value: "322.6万151700:59"

                            },

                            {

                                num: NumberInt("21"),

                                value: "142.8万453802:07"

                            },

                            {

                                num: NumberInt("22"),

                                value: "448.5万1.1万09:58"

                            },

                            {

                                num: NumberInt("23"),

                                value: "63.5万132201:20"

                            },

                            {

                                num: NumberInt("24"),

                                value: "153.8万37901:23"

                            },

                            {

                                num: NumberInt("25"),

                                value: "209.4万653703:31"

                            },

                            {

                                num: NumberInt("26"),

                                value: "231.3万400405:33"

                            },

                            {

                                num: NumberInt("27"),

                                value: "1.1万1900:43"

                            },

                            {

                                num: NumberInt("28"),

                                value: "322.6万6.1万47:53"

                            },

                            {

                                num: NumberInt("29"),

                                value: "645.8万11.4万01:11:05"

                            },

                            {

                                num: NumberInt("30"),

                                value: "53.1万7800:09"

                            },

                            {

                                num: NumberInt("31"),

                                value: "492.9万172300:26"

                            },

                            {

                                num: NumberInt("32"),

                                value: "33.1万258502:46"

                            },

                            {

                                num: NumberInt("33"),

                                value: "70.2万87601:01"

                            },

                            {

                                num: NumberInt("34"),

                                value: "108.1万68301:41"

                            },

                            {

                                num: NumberInt("35"),

                                value: "309.4万923703:22"

                            },

                            {

                                num: NumberInt("36"),

                                value: "365万774201:12"

                            },

                            {

                                num: NumberInt("37"),

                                value: "17.1万8803:43"

                            },

                            {

                                num: NumberInt("38"),

                                value: "141.8万71200:49"

                            },

                            {

                                num: NumberInt("39"),

                                value: "1693.5万3.2万01:13"

                            },

                            {

                                num: NumberInt("40"),

                                value: "212.9万149701:15"

                            },

                            {

                                num: NumberInt("41"),

                                value: "34.6万119605:28"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数2_链接地址",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.bilibili.com/video/BV1fc41187xA"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.bilibili.com/video/BV1it4y1J7Wn"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.bilibili.com/video/BV1Xx411p74G"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.bilibili.com/video/BV1G7411K71U"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.bilibili.com/video/BV1nW4118797"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.bilibili.com/video/BV1pe4y1a7rJ"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.bilibili.com/video/BV1uS4y1L77Z"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.bilibili.com/video/BV1v34y1k7SM"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.bilibili.com/video/BV1GJ411p7aq"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.bilibili.com/video/BV1GL41137Cv"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.bilibili.com/video/BV1MC4y1p7yf"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.bilibili.com/video/BV1Z4411X7qs"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.bilibili.com/video/BV1FE411H7L1"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.bilibili.com/video/BV1T44y1p7mz"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.bilibili.com/video/BV1ss411P7e1"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.bilibili.com/video/BV1dZ4y1X7Fi"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.bilibili.com/video/BV1c54114764"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.bilibili.com/video/BV1xt411G73j"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.bilibili.com/video/BV1TQ4y1P7bp"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.bilibili.com/video/BV1ip4y1Q7V1"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://www.bilibili.com/video/BV1ui4y1c7Pd"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://www.bilibili.com/video/BV1R4411c7zr"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://www.bilibili.com/video/BV1TZ4y147ME"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://www.bilibili.com/video/BV1Ds411N7dU"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://www.bilibili.com/video/BV1ta411f7cY"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://www.bilibili.com/video/BV1MB4y1c7Cg"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://www.bilibili.com/video/BV1vU4y1m7cK"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://www.bilibili.com/video/BV14B4y1V7Uv"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://www.bilibili.com/video/BV1UJ41137aF"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://www.bilibili.com/video/BV1NT4y1w776"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://www.bilibili.com/video/BV1BE411A777"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://www.bilibili.com/video/BV1aJ411u7TN"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://www.bilibili.com/video/BV1T54y167Hs"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://www.bilibili.com/video/BV1yW411N7zc"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://www.bilibili.com/video/BV1KY4y1W7CK"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://www.bilibili.com/video/BV177411V7yc"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://www.bilibili.com/video/BV1T7411A7WW"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://www.bilibili.com/video/BV1sN4y157xE"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://www.bilibili.com/video/BV1Gt411U78v"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://www.bilibili.com/video/BV167411j7iZ"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://www.bilibili.com/video/BV1gN4y1L7xr"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://www.bilibili.com/video/BV1vt4y1D7pw"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("4"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数3_图片地址",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/picture[1]/img[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://i2.hdslb.com/bfs/archive/b8d6c6e21212b54a92a36ea03f61b7e334cc24e7.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://i1.hdslb.com/bfs/archive/76edeea7716a3f050782d08ebecea529984aa874.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://i1.hdslb.com/bfs/archive/34ed0f1580db36e8c95d4b653f6caaaa1b6fe4cd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://i2.hdslb.com/bfs/archive/75886e1dc52230d510b5c843f65ef7e2c5acf4cd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://i2.hdslb.com/bfs/archive/75e33c83b77d0aa11de0eee225737cc123a40f96.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://i2.hdslb.com/bfs/archive/0b20c3b9dbd88e8a299fcfb82d756504410da912.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://i2.hdslb.com/bfs/archive/e2b5d191fb2fcce7cd6dc8d2d8df21be755fc04c.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://i2.hdslb.com/bfs/archive/bca7479215b41e9c25e0518d1aaae004e9d35a18.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://i0.hdslb.com/bfs/archive/9bbef2353cf65fecadfadc20d134aa08c1fae50a.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://i0.hdslb.com/bfs/archive/3579b9a4262c57de3bf1ab4a0f7306fb62d028d8.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://i0.hdslb.com/bfs/archive/f238dbec60b54da32ee891db147481f96737777c.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://i0.hdslb.com/bfs/archive/c6091fc208c2565cdb99ed9ddd1dbb36250fef5d.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://i0.hdslb.com/bfs/archive/44de9fd295eb91ff60ddcc3fc5cedba169983fe5.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://i0.hdslb.com/bfs/archive/b40e9b7639e71c45246a0b24577e1b1ac325f81b.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://i0.hdslb.com/bfs/archive/a6969ff4649d8bb301cd04a0c7d153f4af3bbc6a.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://i0.hdslb.com/bfs/archive/5a7c88a8c831e054406994d28b47f43310014a10.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://i2.hdslb.com/bfs/archive/437b6e36cafdc77cf0dc3b3b6d476d0bff64f076.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://i0.hdslb.com/bfs/archive/f4411a38b88bb1591841dd5e4caf2ae9b0e24f13.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://i0.hdslb.com/bfs/archive/23013873a2b0c2269e046219f3006c2f53193044.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://i1.hdslb.com/bfs/archive/83119681117e5bfb023ed4d22cbda8c930ff51da.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://i1.hdslb.com/bfs/archive/3c98a797f0738c50612590431e12c8b4799d20e3.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://i2.hdslb.com/bfs/archive/66563dee5c5c22a0cec50251926cc743dd947817.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://i0.hdslb.com/bfs/archive/66c6e52e928a15102dba5606db0948ce4a4b82d8.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://i2.hdslb.com/bfs/archive/29578616a75ab38c8dddb5ef09b8acc6e43951aa.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://i1.hdslb.com/bfs/archive/80320e8b252443770e157fefcc62941f1ca7f0dd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://i1.hdslb.com/bfs/archive/713b5244044fe41ce3d4615094196c1c7a6edfb5.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://i0.hdslb.com/bfs/archive/4417a97cfff807fe5fd04a899c9172b79e4cc7f0.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://i1.hdslb.com/bfs/archive/27f9ffb23e8d2dda2e21f463c5d1f9dd4b11a14d.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://i1.hdslb.com/bfs/archive/8eb797389171a758b639fa1fd93115d7afc2d509.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://i0.hdslb.com/bfs/archive/993e5d4910a8287e238a2c7069c585a77ccceedd.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://i1.hdslb.com/bfs/archive/2751704b052eb8fdc9eb470d03633b2026b018e2.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://i2.hdslb.com/bfs/archive/a0c706a5cc852bbd61b718a69c18d4210f15c547.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://i1.hdslb.com/bfs/archive/902ce5dea4ecb9d11e6b915b3af2d6b65da789a2.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://i1.hdslb.com/bfs/archive/e66075f80e9a65564e7898a6d295294d0231802c.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://i1.hdslb.com/bfs/archive/e67e10f8591a2c0458e5e398e5379ab3f8476af8.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://i0.hdslb.com/bfs/archive/ec29af76f56d9e324fe01b84d92d9d22bc944c86.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://i2.hdslb.com/bfs/archive/b48f70e304e40a899abba8a50c8a1e6fd77033bf.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://i2.hdslb.com/bfs/archive/d1fe3cdc111ad6c96a0877988d9bf9f1019d8d1b.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://i0.hdslb.com/bfs/archive/0e0f599401ce6e40791088f93a510946cf333d3a.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://i2.hdslb.com/bfs/archive/217c78db0c7c4a86f486915e8bb4f012946772b9.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://i2.hdslb.com/bfs/archive/e5d11e6b886802f136166358a0a07362f7e42868.jpg@672w_378h_1c"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://i1.hdslb.com/bfs/archive/322ae5aa308092e34e7587a586f93305e18e7ff0.jpg@672w_378h_1c"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "156",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[2]/div[1]/div[1]/span[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "604万"

                            },

                            {

                                num: NumberInt("1"),

                                value: "194.5万"

                            },

                            {

                                num: NumberInt("2"),

                                value: "3730.8万"

                            },

                            {

                                num: NumberInt("3"),

                                value: "57.4万"

                            },

                            {

                                num: NumberInt("4"),

                                value: "1633.3万"

                            },

                            {

                                num: NumberInt("5"),

                                value: "23.6万"

                            },

                            {

                                num: NumberInt("6"),

                                value: "71.6万"

                            },

                            {

                                num: NumberInt("7"),

                                value: "22.9万"

                            },

                            {

                                num: NumberInt("8"),

                                value: "612万"

                            },

                            {

                                num: NumberInt("9"),

                                value: "71万"

                            },

                            {

                                num: NumberInt("10"),

                                value: "972.2万"

                            },

                            {

                                num: NumberInt("11"),

                                value: "509.9万"

                            },

                            {

                                num: NumberInt("12"),

                                value: "558.4万"

                            },

                            {

                                num: NumberInt("13"),

                                value: "17.8万"

                            },

                            {

                                num: NumberInt("14"),

                                value: "463万"

                            },

                            {

                                num: NumberInt("15"),

                                value: "125.1万"

                            },

                            {

                                num: NumberInt("16"),

                                value: "648.5万"

                            },

                            {

                                num: NumberInt("17"),

                                value: "675.5万"

                            },

                            {

                                num: NumberInt("18"),

                                value: "46万"

                            },

                            {

                                num: NumberInt("19"),

                                value: "382.9万"

                            },

                            {

                                num: NumberInt("20"),

                                value: "322.6万"

                            },

                            {

                                num: NumberInt("21"),

                                value: "142.8万"

                            },

                            {

                                num: NumberInt("22"),

                                value: "448.5万"

                            },

                            {

                                num: NumberInt("23"),

                                value: "63.5万"

                            },

                            {

                                num: NumberInt("24"),

                                value: "153.8万"

                            },

                            {

                                num: NumberInt("25"),

                                value: "209.4万"

                            },

                            {

                                num: NumberInt("26"),

                                value: "231.3万"

                            },

                            {

                                num: NumberInt("27"),

                                value: "1.1万"

                            },

                            {

                                num: NumberInt("28"),

                                value: "322.6万"

                            },

                            {

                                num: NumberInt("29"),

                                value: "645.8万"

                            },

                            {

                                num: NumberInt("30"),

                                value: "53.1万"

                            },

                            {

                                num: NumberInt("31"),

                                value: "492.9万"

                            },

                            {

                                num: NumberInt("32"),

                                value: "33.1万"

                            },

                            {

                                num: NumberInt("33"),

                                value: "70.2万"

                            },

                            {

                                num: NumberInt("34"),

                                value: "108.1万"

                            },

                            {

                                num: NumberInt("35"),

                                value: "309.4万"

                            },

                            {

                                num: NumberInt("36"),

                                value: "365万"

                            },

                            {

                                num: NumberInt("37"),

                                value: "17.1万"

                            },

                            {

                                num: NumberInt("38"),

                                value: "141.8万"

                            },

                            {

                                num: NumberInt("39"),

                                value: "1693.5万"

                            },

                            {

                                num: NumberInt("40"),

                                value: "212.9万"

                            },

                            {

                                num: NumberInt("41"),

                                value: "34.6万"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数5_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[2]/div[1]/div[1]/span[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "4.5万"

                            },

                            {

                                num: NumberInt("1"),

                                value: "2186"

                            },

                            {

                                num: NumberInt("2"),

                                value: "8.4万"

                            },

                            {

                                num: NumberInt("3"),

                                value: "704"

                            },

                            {

                                num: NumberInt("4"),

                                value: "15.6万"

                            },

                            {

                                num: NumberInt("5"),

                                value: "197"

                            },

                            {

                                num: NumberInt("6"),

                                value: "1994"

                            },

                            {

                                num: NumberInt("7"),

                                value: "199"

                            },

                            {

                                num: NumberInt("8"),

                                value: "28.6万"

                            },

                            {

                                num: NumberInt("9"),

                                value: "678"

                            },

                            {

                                num: NumberInt("10"),

                                value: "7万"

                            },

                            {

                                num: NumberInt("11"),

                                value: "3.2万"

                            },

                            {

                                num: NumberInt("12"),

                                value: "5517"

                            },

                            {

                                num: NumberInt("13"),

                                value: "13"

                            },

                            {

                                num: NumberInt("14"),

                                value: "10.9万"

                            },

                            {

                                num: NumberInt("15"),

                                value: "1.9万"

                            },

                            {

                                num: NumberInt("16"),

                                value: "701"

                            },

                            {

                                num: NumberInt("17"),

                                value: "3.8万"

                            },

                            {

                                num: NumberInt("18"),

                                value: "158"

                            },

                            {

                                num: NumberInt("19"),

                                value: "2万"

                            },

                            {

                                num: NumberInt("20"),

                                value: "1517"

                            },

                            {

                                num: NumberInt("21"),

                                value: "4538"

                            },

                            {

                                num: NumberInt("22"),

                                value: "1.1万"

                            },

                            {

                                num: NumberInt("23"),

                                value: "1322"

                            },

                            {

                                num: NumberInt("24"),

                                value: "379"

                            },

                            {

                                num: NumberInt("25"),

                                value: "6537"

                            },

                            {

                                num: NumberInt("26"),

                                value: "4004"

                            },

                            {

                                num: NumberInt("27"),

                                value: "19"

                            },

                            {

                                num: NumberInt("28"),

                                value: "6.1万"

                            },

                            {

                                num: NumberInt("29"),

                                value: "11.4万"

                            },

                            {

                                num: NumberInt("30"),

                                value: "78"

                            },

                            {

                                num: NumberInt("31"),

                                value: "1723"

                            },

                            {

                                num: NumberInt("32"),

                                value: "2585"

                            },

                            {

                                num: NumberInt("33"),

                                value: "876"

                            },

                            {

                                num: NumberInt("34"),

                                value: "683"

                            },

                            {

                                num: NumberInt("35"),

                                value: "9237"

                            },

                            {

                                num: NumberInt("36"),

                                value: "7742"

                            },

                            {

                                num: NumberInt("37"),

                                value: "88"

                            },

                            {

                                num: NumberInt("38"),

                                value: "712"

                            },

                            {

                                num: NumberInt("39"),

                                value: "3.2万"

                            },

                            {

                                num: NumberInt("40"),

                                value: "1497"

                            },

                            {

                                num: NumberInt("41"),

                                value: "1196"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数6_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[2]/div[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "18:23"

                            },

                            {

                                num: NumberInt("1"),

                                value: "05:44"

                            },

                            {

                                num: NumberInt("2"),

                                value: "01:35"

                            },

                            {

                                num: NumberInt("3"),

                                value: "01:41"

                            },

                            {

                                num: NumberInt("4"),

                                value: "02:00"

                            },

                            {

                                num: NumberInt("5"),

                                value: "04:24"

                            },

                            {

                                num: NumberInt("6"),

                                value: "11:40"

                            },

                            {

                                num: NumberInt("7"),

                                value: "05:36"

                            },

                            {

                                num: NumberInt("8"),

                                value: "09:55:55"

                            },

                            {

                                num: NumberInt("9"),

                                value: "03:11"

                            },

                            {

                                num: NumberInt("10"),

                                value: "09:09"

                            },

                            {

                                num: NumberInt("11"),

                                value: "18:41"

                            },

                            {

                                num: NumberInt("12"),

                                value: "00:46"

                            },

                            {

                                num: NumberInt("13"),

                                value: "00:29"

                            },

                            {

                                num: NumberInt("14"),

                                value: "32:03"

                            },

                            {

                                num: NumberInt("15"),

                                value: "04:16"

                            },

                            {

                                num: NumberInt("16"),

                                value: "00:32"

                            },

                            {

                                num: NumberInt("17"),

                                value: "04:53"

                            },

                            {

                                num: NumberInt("18"),

                                value: "04:51"

                            },

                            {

                                num: NumberInt("19"),

                                value: "02:11"

                            },

                            {

                                num: NumberInt("20"),

                                value: "00:59"

                            },

                            {

                                num: NumberInt("21"),

                                value: "02:07"

                            },

                            {

                                num: NumberInt("22"),

                                value: "09:58"

                            },

                            {

                                num: NumberInt("23"),

                                value: "01:20"

                            },

                            {

                                num: NumberInt("24"),

                                value: "01:23"

                            },

                            {

                                num: NumberInt("25"),

                                value: "03:31"

                            },

                            {

                                num: NumberInt("26"),

                                value: "05:33"

                            },

                            {

                                num: NumberInt("27"),

                                value: "00:43"

                            },

                            {

                                num: NumberInt("28"),

                                value: "47:53"

                            },

                            {

                                num: NumberInt("29"),

                                value: "01:11:05"

                            },

                            {

                                num: NumberInt("30"),

                                value: "00:09"

                            },

                            {

                                num: NumberInt("31"),

                                value: "00:26"

                            },

                            {

                                num: NumberInt("32"),

                                value: "02:46"

                            },

                            {

                                num: NumberInt("33"),

                                value: "01:01"

                            },

                            {

                                num: NumberInt("34"),

                                value: "01:41"

                            },

                            {

                                num: NumberInt("35"),

                                value: "03:22"

                            },

                            {

                                num: NumberInt("36"),

                                value: "01:12"

                            },

                            {

                                num: NumberInt("37"),

                                value: "03:43"

                            },

                            {

                                num: NumberInt("38"),

                                value: "00:49"

                            },

                            {

                                num: NumberInt("39"),

                                value: "01:13"

                            },

                            {

                                num: NumberInt("40"),

                                value: "01:15"

                            },

                            {

                                num: NumberInt("41"),

                                value: "05:28"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数7_链接文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/div[1]/div[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "卢本伟名场面合集（更新至盖亚）"

                            },

                            {

                                num: NumberInt("1"),

                                value: "卢本伟：从中国骄傲到劣迹主播，封杀五年复出，却被官方4字警告"

                            },

                            {

                                num: NumberInt("2"),

                                value: "17张牌你能秒我？？你能秒杀我？？17张牌你今天能把我卢本伟秒了，我当场就把这个电脑屏幕吃掉！！！"

                            },

                            {

                                num: NumberInt("3"),

                                value: "一中老师在线怼卢本伟"

                            },

                            {

                                num: NumberInt("4"),

                                value: "【电音单曲】卢本伟牛逼！！！"

                            },

                            {

                                num: NumberInt("5"),

                                value: "帝师当年锤卢本伟，狐弟意外爆出李易峰等事情尽然成真"

                            },

                            {

                                num: NumberInt("6"),

                                value: "卢本伟看自己大闹天宫"

                            },

                            {

                                num: NumberInt("7"),

                                value: "【卢本伟】五五开永久关播前的最后5分36秒！"

                            },

                            {

                                num: NumberInt("8"),

                                value: "卢本伟直播玩掘地求升全过程"

                            },

                            {

                                num: NumberInt("9"),

                                value: "茄子生日会PDD直播带大家找卢本伟"

                            },

                            {

                                num: NumberInt("10"),

                                value: "你是谁 卢本伟"

                            },

                            {

                                num: NumberInt("11"),

                                value: "卢本伟之忍住不笑大挑战，你能坚持多久？？？"

                            },

                            {

                                num: NumberInt("12"),

                                value: "伞兵一号卢本伟是哪个班的？"

                            },

                            {

                                num: NumberInt("13"),

                                value: "都说uu是拜金女  说卢本伟《出事》uu第1个跑  可是陪卢本伟到最后的还是uu"

                            },

                            {

                                num: NumberInt("14"),

                                value: "卢本伟29杀吃鸡完整视频"

                            },

                            {

                                num: NumberInt("15"),

                                value: "【卢本伟】孤 勇 者"

                            },

                            {

                                num: NumberInt("16"),

                                value: "卢本伟名场面：上错车了！这段笑得我肚子疼！"

                            },

                            {

                                num: NumberInt("17"),

                                value: "卢本伟：把我直播间关了，滚去学习！"

                            },

                            {

                                num: NumberInt("18"),

                                value: "卢本伟怒喷xxs"

                            },

                            {

                                num: NumberInt("19"),

                                value: "【卢本伟】仙剑开侠传"

                            },

                            {

                                num: NumberInt("20"),

                                value: "卢本伟和PDD当年参加综艺的演技真的炸裂"

                            },

                            {

                                num: NumberInt("21"),

                                value: "【熊出没鬼畜】卢本伟戒网瘾"

                            },

                            {

                                num: NumberInt("22"),

                                value: "卢本伟——日本之行vlog续"

                            },

                            {

                                num: NumberInt("23"),

                                value: "卢本伟：十七张牌你能秒我？我吃屏幕"

                            },

                            {

                                num: NumberInt("24"),

                                value: "卢本伟给Uzi发语音，现在可以全部坐下了，并且让乌兹也站了起来"

                            },

                            {

                                num: NumberInt("25"),

                                value: "【卢本伟】错位时空，全程催泪"

                            },

                            {

                                num: NumberInt("26"),

                                value: "【卢本伟】我想你们了，可你们还记得我吗？"

                            },

                            {

                                num: NumberInt("27"),

                                value: "现在的卢本伟vs以前的卢本伟"

                            },

                            {

                                num: NumberInt("28"),

                                value: "【不要笑挑战卢本伟之心态是如何爆炸】"

                            },

                            {

                                num: NumberInt("29"),

                                value: "【搞笑丧尸片】鲲山行（70分钟完整版） 卢本伟&茄子&周淑怡 等领衔主演"

                            },

                            {

                                num: NumberInt("30"),

                                value: "卢本伟牛逼，公交车偶遇卢本伟!!"

                            },

                            {

                                num: NumberInt("31"),

                                value: "老师在课堂放卢本伟鬼畜视频，别点赞，会死人的"

                            },

                            {

                                num: NumberInt("32"),

                                value: "【卢本伟】那个广场......起风了"

                            },

                            {

                                num: NumberInt("33"),

                                value: "现在进入卢本伟直播间会发生什么"

                            },

                            {

                                num: NumberInt("34"),

                                value: "卢本伟回归在即？PDD直播时透露具体时间"

                            },

                            {

                                num: NumberInt("35"),

                                value: "快 乐 网 课（卢本伟串场）"

                            },

                            {

                                num: NumberInt("36"),

                                value: "卢本伟惊现某网课现场，数学课老师暴怒"

                            },

                            {

                                num: NumberInt("37"),

                                value: "卢本伟惊现阿乐直播间刷礼物！阿乐：哥哥要我站着打游戏吗？"

                            },

                            {

                                num: NumberInt("38"),

                                value: "卢本伟看IG夺冠看哭了，心疼"

                            },

                            {

                                num: NumberInt("39"),

                                value: "上网课时，老师与卢本伟的对话                         笑抽了 O(∩_∩)O哈哈~"

                            },

                            {

                                num: NumberInt("40"),

                                value: "我的声音真的很像卢本伟吗"

                            },

                            {

                                num: NumberInt("41"),

                                value: "卢本伟骂人名场面忍住不要笑！！！"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数8_链接地址",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/div[1]/div[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://www.bilibili.com/video/BV1fc41187xA"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://www.bilibili.com/video/BV1it4y1J7Wn"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://www.bilibili.com/video/BV1Xx411p74G"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://www.bilibili.com/video/BV1G7411K71U"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://www.bilibili.com/video/BV1nW4118797"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://www.bilibili.com/video/BV1pe4y1a7rJ"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://www.bilibili.com/video/BV1uS4y1L77Z"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://www.bilibili.com/video/BV1v34y1k7SM"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://www.bilibili.com/video/BV1GJ411p7aq"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://www.bilibili.com/video/BV1GL41137Cv"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://www.bilibili.com/video/BV1MC4y1p7yf"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://www.bilibili.com/video/BV1Z4411X7qs"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://www.bilibili.com/video/BV1FE411H7L1"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://www.bilibili.com/video/BV1T44y1p7mz"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://www.bilibili.com/video/BV1ss411P7e1"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://www.bilibili.com/video/BV1dZ4y1X7Fi"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://www.bilibili.com/video/BV1c54114764"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://www.bilibili.com/video/BV1xt411G73j"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://www.bilibili.com/video/BV1TQ4y1P7bp"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://www.bilibili.com/video/BV1ip4y1Q7V1"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://www.bilibili.com/video/BV1ui4y1c7Pd"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://www.bilibili.com/video/BV1R4411c7zr"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://www.bilibili.com/video/BV1TZ4y147ME"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://www.bilibili.com/video/BV1Ds411N7dU"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://www.bilibili.com/video/BV1ta411f7cY"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://www.bilibili.com/video/BV1MB4y1c7Cg"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://www.bilibili.com/video/BV1vU4y1m7cK"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://www.bilibili.com/video/BV14B4y1V7Uv"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://www.bilibili.com/video/BV1UJ41137aF"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://www.bilibili.com/video/BV1NT4y1w776"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://www.bilibili.com/video/BV1BE411A777"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://www.bilibili.com/video/BV1aJ411u7TN"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://www.bilibili.com/video/BV1T54y167Hs"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://www.bilibili.com/video/BV1yW411N7zc"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://www.bilibili.com/video/BV1KY4y1W7CK"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://www.bilibili.com/video/BV177411V7yc"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://www.bilibili.com/video/BV1T7411A7WW"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://www.bilibili.com/video/BV1sN4y157xE"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://www.bilibili.com/video/BV1Gt411U78v"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://www.bilibili.com/video/BV167411j7iZ"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://www.bilibili.com/video/BV1gN4y1L7xr"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://www.bilibili.com/video/BV1vt4y1D7pw"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数9_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/div[1]/div[1]/a[1]/h3[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "名场面合集（更新至盖亚）"

                            },

                            {

                                num: NumberInt("1"),

                                value: "：从中国骄傲到劣迹主播，封杀五年复出，却被官方4字警告"

                            },

                            {

                                num: NumberInt("2"),

                                value: "17张牌你能秒我？？你能秒杀我？？17张牌你今天能把我秒了，我当场就把这个电脑屏幕吃掉！！！"

                            },

                            {

                                num: NumberInt("3"),

                                value: "一中老师在线怼"

                            },

                            {

                                num: NumberInt("4"),

                                value: "【电音单曲】牛逼！！！"

                            },

                            {

                                num: NumberInt("5"),

                                value: "帝师当年锤，狐弟意外爆出李易峰等事情尽然成真"

                            },

                            {

                                num: NumberInt("6"),

                                value: "看自己大闹天宫"

                            },

                            {

                                num: NumberInt("7"),

                                value: "【】五五开永久关播前的最后5分36秒！"

                            },

                            {

                                num: NumberInt("8"),

                                value: "直播玩掘地求升全过程"

                            },

                            {

                                num: NumberInt("9"),

                                value: "茄子生日会PDD直播带大家找"

                            },

                            {

                                num: NumberInt("10"),

                                value: "你是谁"

                            },

                            {

                                num: NumberInt("11"),

                                value: "之忍住不笑大挑战，你能坚持多久？？？"

                            },

                            {

                                num: NumberInt("12"),

                                value: "伞兵一号是哪个班的？"

                            },

                            {

                                num: NumberInt("13"),

                                value: "都说uu是拜金女说《出事》uu第1个跑可是陪到最后的还是uu"

                            },

                            {

                                num: NumberInt("14"),

                                value: "29杀吃鸡完整视频"

                            },

                            {

                                num: NumberInt("15"),

                                value: "【】孤勇者"

                            },

                            {

                                num: NumberInt("16"),

                                value: "名场面：上错车了！这段笑得我肚子疼！"

                            },

                            {

                                num: NumberInt("17"),

                                value: "：把我直播间关了，滚去学习！"

                            },

                            {

                                num: NumberInt("18"),

                                value: "怒喷xxs"

                            },

                            {

                                num: NumberInt("19"),

                                value: "【】仙剑开侠传"

                            },

                            {

                                num: NumberInt("20"),

                                value: "和PDD当年参加综艺的演技真的炸裂"

                            },

                            {

                                num: NumberInt("21"),

                                value: "【熊出没鬼畜】戒网瘾"

                            },

                            {

                                num: NumberInt("22"),

                                value: "——日本之行vlog续"

                            },

                            {

                                num: NumberInt("23"),

                                value: "：十七张牌你能秒我？我吃屏幕"

                            },

                            {

                                num: NumberInt("24"),

                                value: "给Uzi发语音，现在可以全部坐下了，并且让乌兹也站了起来"

                            },

                            {

                                num: NumberInt("25"),

                                value: "【】错位时空，全程催泪"

                            },

                            {

                                num: NumberInt("26"),

                                value: "【】我想你们了，可你们还记得我吗？"

                            },

                            {

                                num: NumberInt("27"),

                                value: "现在的vs以前的"

                            },

                            {

                                num: NumberInt("28"),

                                value: "【不要笑挑战之心态是如何爆炸】"

                            },

                            {

                                num: NumberInt("29"),

                                value: "【搞笑丧尸片】鲲山行（70分钟完整版）&茄子&周淑怡等领衔主演"

                            },

                            {

                                num: NumberInt("30"),

                                value: "牛逼，公交车偶遇!!"

                            },

                            {

                                num: NumberInt("31"),

                                value: "老师在课堂放鬼畜视频，别点赞，会死人的"

                            },

                            {

                                num: NumberInt("32"),

                                value: "【】那个广场......起风了"

                            },

                            {

                                num: NumberInt("33"),

                                value: "现在进入直播间会发生什么"

                            },

                            {

                                num: NumberInt("34"),

                                value: "回归在即？PDD直播时透露具体时间"

                            },

                            {

                                num: NumberInt("35"),

                                value: "快乐网课（串场）"

                            },

                            {

                                num: NumberInt("36"),

                                value: "惊现某网课现场，数学课老师暴怒"

                            },

                            {

                                num: NumberInt("37"),

                                value: "惊现阿乐直播间刷礼物！阿乐：哥哥要我站着打游戏吗？"

                            },

                            {

                                num: NumberInt("38"),

                                value: "看IG夺冠看哭了，心疼"

                            },

                            {

                                num: NumberInt("39"),

                                value: "上网课时，老师与的对话笑抽了O(∩_∩)O哈哈~"

                            },

                            {

                                num: NumberInt("40"),

                                value: "我的声音真的很像吗"

                            },

                            {

                                num: NumberInt("41"),

                                value: "骂人名场面忍住不要笑！！！"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数10_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/div[1]/div[1]/a[1]/h3[1]/em[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("1"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("2"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("3"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("4"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("5"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("6"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("7"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("8"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("9"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("10"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("11"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("12"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("13"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("14"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("15"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("16"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("17"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("18"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("19"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("20"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("21"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("22"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("23"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("24"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("25"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("26"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("27"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("28"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("29"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("30"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("31"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("32"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("33"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("34"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("35"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("36"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("37"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("38"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("39"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("40"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("41"),

                                value: "卢本伟"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("1"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数11_链接文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/div[1]/div[1]/p[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "柠柚Sama · 2020-4-2"

                            },

                            {

                                num: NumberInt("1"),

                                value: "限量版蓝胖纸 · 8-19"

                            },

                            {

                                num: NumberInt("2"),

                                value: "风纪委员啊祖 · 2017-7-26"

                            },

                            {

                                num: NumberInt("3"),

                                value: "兰兰我老婆_ · 2020-2-26"

                            },

                            {

                                num: NumberInt("4"),

                                value: "一咸菊菊 · 2017-12-20"

                            },

                            {

                                num: NumberInt("5"),

                                value: "大风中摇摆的火苗 · 9-12"

                            },

                            {

                                num: NumberInt("6"),

                                value: "卢姥爷留声机 · 1-21"

                            },

                            {

                                num: NumberInt("7"),

                                value: "账号注销9499082 · 3-6"

                            },

                            {

                                num: NumberInt("8"),

                                value: "mdtx58 · 2020-1-11"

                            },

                            {

                                num: NumberInt("9"),

                                value: "PDD在B站 · 2021-11-4"

                            },

                            {

                                num: NumberInt("10"),

                                value: "阿飞vlog记录开哥 · 2020-5-26"

                            },

                            {

                                num: NumberInt("11"),

                                value: "花芝虹 · 2019-8-10"

                            },

                            {

                                num: NumberInt("12"),

                                value: "找不到拨片的K宝 · 2020-2-28"

                            },

                            {

                                num: NumberInt("13"),

                                value: "55开永远的神 · 2-15"

                            },

                            {

                                num: NumberInt("14"),

                                value: "曙神之光 · 2018-7-23"

                            },

                            {

                                num: NumberInt("15"),

                                value: "可乐君Cy · 2021-12-3"

                            },

                            {

                                num: NumberInt("16"),

                                value: "忍野咩咩_ · 2020-4-28"

                            },

                            {

                                num: NumberInt("17"),

                                value: "不知名肥皂 · 2019-7-16"

                            },

                            {

                                num: NumberInt("18"),

                                value: "张三是我大哥 · 2020-5-23"

                            },

                            {

                                num: NumberInt("19"),

                                value: "霖言丶 · 2020-5-13"

                            },

                            {

                                num: NumberInt("20"),

                                value: "happykid17 · 2021-1-4"

                            },

                            {

                                num: NumberInt("21"),

                                value: "沫然Fight · 2019-7-6"

                            },

                            {

                                num: NumberInt("22"),

                                value: "阿飞vlog记录开哥 · 2020-4-25"

                            },

                            {

                                num: NumberInt("23"),

                                value: "ttsy天天少爷 · 2018-7-20"

                            },

                            {

                                num: NumberInt("24"),

                                value: "电竞山里娃 · 8-6"

                            },

                            {

                                num: NumberInt("25"),

                                value: "冷颜菌丶 · 2021-4-19"

                            },

                            {

                                num: NumberInt("26"),

                                value: "阿飞vlog记录开哥 · 5-14"

                            },

                            {

                                num: NumberInt("27"),

                                value: "包子放盐 · 8-21"

                            },

                            {

                                num: NumberInt("28"),

                                value: "热情似火的小海 · 2019-9-20"

                            },

                            {

                                num: NumberInt("29"),

                                value: "浅澄月 · 2020-10-1"

                            },

                            {

                                num: NumberInt("30"),

                                value: "坏兔子x · 2020-3-21"

                            },

                            {

                                num: NumberInt("31"),

                                value: "泽华辅一 · 2019-9-22"

                            },

                            {

                                num: NumberInt("32"),

                                value: "污神ya · 2020-11-28"

                            },

                            {

                                num: NumberInt("33"),

                                value: "打破慘案 · 2018-6-4"

                            },

                            {

                                num: NumberInt("34"),

                                value: "PDD在B站 · 4-3"

                            },

                            {

                                num: NumberInt("35"),

                                value: "香蕉棒棒锤ts · 2020-2-12"

                            },

                            {

                                num: NumberInt("36"),

                                value: "我的三七没有分 · 2020-2-21"

                            },

                            {

                                num: NumberInt("37"),

                                value: "高能游戏眼 · 8-8"

                            },

                            {

                                num: NumberInt("38"),

                                value: "陌轩泽 · 2018-11-11"

                            },

                            {

                                num: NumberInt("39"),

                                value: "Kiyohime乾鲲 · 2020-2-17"

                            },

                            {

                                num: NumberInt("40"),

                                value: "月下undermoon · 7-29"

                            },

                            {

                                num: NumberInt("41"),

                                value: "湫瑾吴 · 2020-7-29"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("2"),

                        contentType: NumberInt("0"),

                        relative: true,

                        name: "参数12_链接地址",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/div[1]/div[1]/p[1]/a[1]",

                        exampleValues: [

                            {

                                num: NumberInt("0"),

                                value: "https://space.bilibili.com/152292466"

                            },

                            {

                                num: NumberInt("1"),

                                value: "https://space.bilibili.com/505241381"

                            },

                            {

                                num: NumberInt("2"),

                                value: "https://space.bilibili.com/28824825"

                            },

                            {

                                num: NumberInt("3"),

                                value: "https://space.bilibili.com/449276953"

                            },

                            {

                                num: NumberInt("4"),

                                value: "https://space.bilibili.com/26311441"

                            },

                            {

                                num: NumberInt("5"),

                                value: "https://space.bilibili.com/1492647"

                            },

                            {

                                num: NumberInt("6"),

                                value: "https://space.bilibili.com/2028911406"

                            },

                            {

                                num: NumberInt("7"),

                                value: "https://space.bilibili.com/1977691792"

                            },

                            {

                                num: NumberInt("8"),

                                value: "https://space.bilibili.com/493533134"

                            },

                            {

                                num: NumberInt("9"),

                                value: "https://space.bilibili.com/36882906"

                            },

                            {

                                num: NumberInt("10"),

                                value: "https://space.bilibili.com/551271353"

                            },

                            {

                                num: NumberInt("11"),

                                value: "https://space.bilibili.com/9336404"

                            },

                            {

                                num: NumberInt("12"),

                                value: "https://space.bilibili.com/12319573"

                            },

                            {

                                num: NumberInt("13"),

                                value: "https://space.bilibili.com/548489530"

                            },

                            {

                                num: NumberInt("14"),

                                value: "https://space.bilibili.com/226736083"

                            },

                            {

                                num: NumberInt("15"),

                                value: "https://space.bilibili.com/436582505"

                            },

                            {

                                num: NumberInt("16"),

                                value: "https://space.bilibili.com/18915489"

                            },

                            {

                                num: NumberInt("17"),

                                value: "https://space.bilibili.com/13142874"

                            },

                            {

                                num: NumberInt("18"),

                                value: "https://space.bilibili.com/340497271"

                            },

                            {

                                num: NumberInt("19"),

                                value: "https://space.bilibili.com/17422165"

                            },

                            {

                                num: NumberInt("20"),

                                value: "https://space.bilibili.com/333644619"

                            },

                            {

                                num: NumberInt("21"),

                                value: "https://space.bilibili.com/381448438"

                            },

                            {

                                num: NumberInt("22"),

                                value: "https://space.bilibili.com/551271353"

                            },

                            {

                                num: NumberInt("23"),

                                value: "https://space.bilibili.com/155682730"

                            },

                            {

                                num: NumberInt("24"),

                                value: "https://space.bilibili.com/328379242"

                            },

                            {

                                num: NumberInt("25"),

                                value: "https://space.bilibili.com/29379264"

                            },

                            {

                                num: NumberInt("26"),

                                value: "https://space.bilibili.com/551271353"

                            },

                            {

                                num: NumberInt("27"),

                                value: "https://space.bilibili.com/630915163"

                            },

                            {

                                num: NumberInt("28"),

                                value: "https://space.bilibili.com/389114021"

                            },

                            {

                                num: NumberInt("29"),

                                value: "https://space.bilibili.com/8034163"

                            },

                            {

                                num: NumberInt("30"),

                                value: "https://space.bilibili.com/39486882"

                            },

                            {

                                num: NumberInt("31"),

                                value: "https://space.bilibili.com/312129507"

                            },

                            {

                                num: NumberInt("32"),

                                value: "https://space.bilibili.com/413118612"

                            },

                            {

                                num: NumberInt("33"),

                                value: "https://space.bilibili.com/258882426"

                            },

                            {

                                num: NumberInt("34"),

                                value: "https://space.bilibili.com/36882906"

                            },

                            {

                                num: NumberInt("35"),

                                value: "https://space.bilibili.com/294591363"

                            },

                            {

                                num: NumberInt("36"),

                                value: "https://space.bilibili.com/331804025"

                            },

                            {

                                num: NumberInt("37"),

                                value: "https://space.bilibili.com/1510650555"

                            },

                            {

                                num: NumberInt("38"),

                                value: "https://space.bilibili.com/112883352"

                            },

                            {

                                num: NumberInt("39"),

                                value: "https://space.bilibili.com/407529648"

                            },

                            {

                                num: NumberInt("40"),

                                value: "https://space.bilibili.com/17779099"

                            },

                            {

                                num: NumberInt("41"),

                                value: "https://space.bilibili.com/587969326"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数13_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[9]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "正在缓冲..."

                            },

                            {

                                num: NumberInt("13"),

                                value: "正在缓冲..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数14_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[1]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "获取视频参数..."

                            },

                            {

                                num: NumberInt("13"),

                                value: "获取视频参数..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数15_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[1]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("13"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数16_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[2]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "播放器初始化..."

                            },

                            {

                                num: NumberInt("13"),

                                value: "播放器初始化..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数17_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[2]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("13"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数18_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[2]/span[3]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "3.16.0-9b97d64a"

                            },

                            {

                                num: NumberInt("13"),

                                value: "3.16.0-9b97d64a"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数19_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[3]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "获取播放地址..."

                            },

                            {

                                num: NumberInt("13"),

                                value: "获取播放地址..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数20_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[3]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("13"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数21_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[4]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "加载视频信息..."

                            },

                            {

                                num: NumberInt("13"),

                                value: "加载视频信息..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数22_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[4]/span[2]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "[成功]"

                            },

                            {

                                num: NumberInt("13"),

                                value: "[成功]"

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数23_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/a[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[10]/div[1]/div[5]/span[1]",

                        exampleValues: [

                            {

                                num: NumberInt("1"),

                                value: "加载视频内容..."

                            },

                            {

                                num: NumberInt("13"),

                                value: "加载视频内容..."

                            }

                        ],

                        default: ""

                    },

                    {

                        nodeType: NumberInt("0"),

                        contentType: NumberInt("1"),

                        relative: true,

                        name: "参数24_文本",

                        desc: "",

                        relativeXPath: "/div[1]/div[2]/div[1]/div[1]/a[1]/h3[1]/em[2]",

                        exampleValues: [

                            {

                                num: NumberInt("13"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("27"),

                                value: "卢本伟"

                            },

                            {

                                num: NumberInt("30"),

                                value: "卢本伟"

                            }

                        ],

                        default: ""

                    }

                ],

                loopType: NumberInt("1")

            }

        }

    ],

    id: NumberInt("2"),

    inputParameters: [

        {

            id: NumberInt("0"),

            name: "urlList_0",

            nodeId: NumberInt("1"),

            nodeName: "Open Page",

            value: "https://www.bilibili.com",

            desc: "List of URLs to be collected, separated by \\n for multiple lines",

            type: "string",

            exampleValue: "https://www.bilibili.com"

        },

        {

            id: NumberInt("1"),

            name: "inputText_1",

            nodeName: "Input Text",

            nodeId: NumberInt("2"),

            desc: "The text to be entered, such as 'computer' at eBay search box",

            type: "string",

            exampleValue: "卢本伟",

            value: "卢本伟"

        },

        {

            id: NumberInt("2"),

            name: "loopTimes_Loop click next page_2",

            nodeId: NumberInt("6"),

            nodeName: "Loop click next page",

            desc: "Number of loop executions, 0 means unlimited loops (until element not found)",

            type: "int",

            exampleValue: NumberInt("0"),

            value: NumberInt("0")

        }

    ],

    links: "https://www.bilibili.com",

    name: "Bilibili视频示例",

    outputParameters: [

        {

            id: NumberInt("0"),

            name: "参数1_链接文本",

            desc: "",

            type: "string",

            exampleValue: "604万4.5万18:23"

        },

        {

            id: NumberInt("1"),

            name: "参数2_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.bilibili.com/video/BV1fc41187xA"

        },

        {

            id: NumberInt("2"),

            name: "参数3_图片地址",

            desc: "",

            type: "string",

            exampleValue: "https://i2.hdslb.com/bfs/archive/b8d6c6e21212b54a92a36ea03f61b7e334cc24e7.jpg@672w_378h_1c"

        },

        {

            id: NumberInt("3"),

            name: "156",

            desc: "",

            type: "string",

            exampleValue: "604万"

        },

        {

            id: NumberInt("4"),

            name: "参数5_文本",

            desc: "",

            type: "string",

            exampleValue: "4.5万"

        },

        {

            id: NumberInt("5"),

            name: "参数6_文本",

            desc: "",

            type: "string",

            exampleValue: "18:23"

        },

        {

            id: NumberInt("6"),

            name: "参数7_链接文本",

            desc: "",

            type: "string",

            exampleValue: "卢本伟名场面合集（更新至盖亚）"

        },

        {

            id: NumberInt("7"),

            name: "参数8_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://www.bilibili.com/video/BV1fc41187xA"

        },

        {

            id: NumberInt("8"),

            name: "参数9_文本",

            desc: "",

            type: "string",

            exampleValue: "名场面合集（更新至盖亚）"

        },

        {

            id: NumberInt("9"),

            name: "参数10_文本",

            desc: "",

            type: "string",

            exampleValue: "卢本伟"

        },

        {

            id: NumberInt("10"),

            name: "参数11_链接文本",

            desc: "",

            type: "string",

            exampleValue: "柠柚Sama · 2020-4-2"

        },

        {

            id: NumberInt("11"),

            name: "参数12_链接地址",

            desc: "",

            type: "string",

            exampleValue: "https://space.bilibili.com/152292466"

        },

        {

            id: NumberInt("12"),

            name: "参数13_文本",

            desc: "",

            type: "string",

            exampleValue: "正在缓冲..."

        },

        {

            id: NumberInt("13"),

            name: "参数14_文本",

            desc: "",

            type: "string",

            exampleValue: "获取视频参数..."

        },

        {

            id: NumberInt("14"),

            name: "参数15_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("15"),

            name: "参数16_文本",

            desc: "",

            type: "string",

            exampleValue: "播放器初始化..."

        },

        {

            id: NumberInt("16"),

            name: "参数17_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("17"),

            name: "参数18_文本",

            desc: "",

            type: "string",

            exampleValue: "3.16.0-9b97d64a"

        },

        {

            id: NumberInt("18"),

            name: "参数19_文本",

            desc: "",

            type: "string",

            exampleValue: "获取播放地址..."

        },

        {

            id: NumberInt("19"),

            name: "参数20_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("20"),

            name: "参数21_文本",

            desc: "",

            type: "string",

            exampleValue: "加载视频信息..."

        },

        {

            id: NumberInt("21"),

            name: "参数22_文本",

            desc: "",

            type: "string",

            exampleValue: "[成功]"

        },

        {

            id: NumberInt("22"),

            name: "参数23_文本",

            desc: "",

            type: "string",

            exampleValue: "加载视频内容..."

        },

        {

            id: NumberInt("23"),

            name: "参数24_文本",

            desc: "",

            type: "string",

            exampleValue: "卢本伟"

        }

    ],

    url: "https://www.bilibili.com"

} );
